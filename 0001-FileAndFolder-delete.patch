From c8aa9e857c492d9ffb7fd05bf0a0c0394f29f157 Mon Sep 17 00:00:00 2001
From: hayashi <hayashi@nds-osk.co.jp>
Date: Tue, 15 Feb 2022 15:53:07 +0900
Subject: [PATCH] FileAndFolder-delete

---
 .settings/CodeGenerator/cgprojectDatas.datas  |    0
 .settings/IORegisterSetting.xml               |    7 -
 .settings/org.eclipse.cdt.core.prefs          |  177 -
 .settings/org.eclipse.cdt.ui.prefs            |    3 -
 CMSIS/DSP_Lib/Include/arm_common_tables.h     |  121 -
 CMSIS/DSP_Lib/Include/arm_const_structs.h     |   66 -
 CMSIS/DSP_Lib/Include/arm_math.h              | 7157 -----------------
 Commissioning.h                               |  131 -
 .../Include/r_spi_cmsis_api.h.bak             |  296 -
 .../Device/CMSIS_Driver/Src/subdir.mk         |   25 -
 .../Device/Driver/Src/r_adc/subdir.mk         |   19 -
 .../Device/Driver/Src/r_dmac/subdir.mk        |   19 -
 .../Device/Driver/Src/r_dtc/subdir.mk         |   19 -
 .../Device/Driver/Src/r_ehc/subdir.mk         |   19 -
 .../Device/Driver/Src/r_flash/subdir.mk       |   22 -
 .../Device/Driver/Src/r_gdt/subdir.mk         |   19 -
 .../Device/Driver/Src/r_lpm/subdir.mk         |   19 -
 .../Device/Driver/Src/r_pmip/subdir.mk        |   19 -
 .../Device/Driver/Src/r_smip/subdir.mk        |   19 -
 .../Device/Driver/Src/r_system/subdir.mk      |   19 -
 HardwareDebug/Device/subdir.mk                |   25 -
 HardwareDebug/Flash Debug/Obj/subdir.mk       |   83 -
 HardwareDebug/Resource/subdir.mk              |   25 -
 HardwareDebug/boards/mcu/RE01_256KB/subdir.mk |   19 -
 HardwareDebug/boards/mcu/subdir.mk            |   19 -
 .../boards/rtk70e0118c00000bj/subdir.mk       |   47 -
 HardwareDebug/mac/region/subdir.mk            |   52 -
 HardwareDebug/mac/subdir.mk                   |   40 -
 HardwareDebug/makefile                        |  230 -
 HardwareDebug/makefile.init                   |   13 -
 HardwareDebug/objects.mk                      |    8 -
 HardwareDebug/radio/subdir.mk                 |   19 -
 HardwareDebug/radio/sx126x/subdir.mk          |   19 -
 HardwareDebug/script/subdir.mk                |   11 -
 HardwareDebug/sources.mk                      |   78 -
 HardwareDebug/subdir.mk                       |   43 -
 HardwareDebug/system/crypto/subdir.mk         |   25 -
 HardwareDebug/system/subdir.mk                |   40 -
 Resource/bitmap_charge_data.c                 |  572 --
 Resource/bitmap_opening_data.c                |  572 --
 Resource/bitmap_shutdown_data.c               |  572 --
 Resource/resource.h                           |   76 -
 Resource/sensor_data_screen.h                 |  412 -
 agt0_timer.c                                  |  156 -
 agt0_timer.h                                  |   33 -
 agt1.c                                        |  145 -
 agt1.h                                        |   31 -
 boards/adc-board.h                            |   58 -
 boards/board.h                                |  125 -
 boards/board_uart.h                           |   42 -
 boards/delay-board.h                          |   48 -
 boards/gpio-board.h                           |  103 -
 boards/i2c-board.h                            |  149 -
 boards/mcu/RE01_256KB/pinName-board.h         |   40 -
 boards/mcu/RE01_256KB/r_rtc.c                 |  524 --
 boards/mcu/RE01_256KB/r_rtc.h                 |  107 -
 boards/mcu/utilities.c                        |   92 -
 boards/rtc-board.h                            |  203 -
 boards/rtk70e0118c00000bj/board-config.h      |   86 -
 boards/rtk70e0118c00000bj/board.c             |  498 --
 boards/rtk70e0118c00000bj/delay-board.c       |   40 -
 boards/rtk70e0118c00000bj/gpio-board.c        |  289 -
 boards/rtk70e0118c00000bj/i2c-board.c         |  123 -
 boards/rtk70e0118c00000bj/lpm-board.c         |  243 -
 boards/rtk70e0118c00000bj/lpm-board.h         |  152 -
 boards/rtk70e0118c00000bj/pinName-ioe.h       |   26 -
 boards/rtk70e0118c00000bj/rtc-board.c         |  572 --
 .../rtk70e015dc00001bj-board.c                |  268 -
 boards/rtk70e0118c00000bj/spi-board.c         |  103 -
 boards/rtk70e0118c00000bj/uart-board.c        |  304 -
 boards/spi-board.h                            |   39 -
 boards/sx126x-board.h                         |  182 -
 boards/uart-board.h                           |  108 -
 boards/uart-usb-board.h                       |  102 -
 boards/utilities.h                            |  178 -
 error.h                                       |   32 -
 lcd.c                                         |  676 --
 lcd.h                                         |   62 -
 lvd_lvdbat.c                                  |  588 --
 lvd_lvdbat.h                                  |   94 -
 mac/LoRaMac.c                                 | 4820 -----------
 mac/LoRaMac.h                                 | 2749 -------
 mac/LoRaMacAdr.c                              |  130 -
 mac/LoRaMacAdr.h                              |  113 -
 mac/LoRaMacClassB.c                           | 1765 ----
 mac/LoRaMacClassB.h                           |  539 --
 mac/LoRaMacClassBConfig.h                     |  124 -
 mac/LoRaMacCommands.c                         |  649 --
 mac/LoRaMacCommands.h                         |  236 -
 mac/LoRaMacConfirmQueue.c                     |  345 -
 mac/LoRaMacConfirmQueue.h                     |  204 -
 mac/LoRaMacCrypto.c                           | 1675 ----
 mac/LoRaMacCrypto.h                           |  329 -
 mac/LoRaMacHeaderTypes.h                      |  195 -
 mac/LoRaMacMessageTypes.h                     |  336 -
 mac/LoRaMacParser.c                           |  118 -
 mac/LoRaMacParser.h                           |   95 -
 mac/LoRaMacSerializer.c                       |  183 -
 mac/LoRaMacSerializer.h                       |  110 -
 mac/LoRaMacTest.h                             |   60 -
 mac/LoRaMacTypes.h                            |  678 --
 mac/region/Region.c                           | 1086 ---
 mac/region/Region.h                           | 1714 ----
 mac/region/RegionAS923.c                      | 1039 ---
 mac/region/RegionAS923.h                      |  548 --
 mac/region/RegionAU915.c                      |  969 ---
 mac/region/RegionAU915.h                      |  535 --
 mac/region/RegionCN470.c                      |  779 --
 mac/region/RegionCN470.h                      |  498 --
 mac/region/RegionCN779.c                      |  973 ---
 mac/region/RegionCN779.h                      |  512 --
 mac/region/RegionCommon.c                     |  471 --
 mac/region/RegionCommon.h                     |  526 --
 mac/region/RegionEU433.c                      |  973 ---
 mac/region/RegionEU433.h                      |  513 --
 mac/region/RegionEU868.c                      | 1007 ---
 mac/region/RegionEU868.h                      |  540 --
 mac/region/RegionIN865.c                      |  992 ---
 mac/region/RegionIN865.h                      |  515 --
 mac/region/RegionKR920.c                      |  994 ---
 mac/region/RegionKR920.h                      |  525 --
 mac/region/RegionRU864.c                      |  966 ---
 mac/region/RegionRU864.h                      |  498 --
 mac/region/RegionUS915.c                      | 1093 ---
 mac/region/RegionUS915.c.bak                  | 1088 ---
 mac/region/RegionUS915.h                      |  507 --
 mac/secure-element.h                          |  240 -
 main.h                                        |  426 -
 mip_display.c                                 |  293 -
 mip_display.h                                 |   61 -
 r01an5753_re_lora.dep                         | 1210 ---
 r01an5753_re_lora.elf.jlink                   |   39 -
 r01an5753_re_lora.elf.launch                  |  117 -
 r01an5753_re_lora.ewd                         | 1489 ----
 r01an5753_re_lora.ewp                         | 1791 -----
 r01an5753_re_lora.ewt                         | 2134 -----
 r01an5753_re_lora.eww                         |    7 -
 radio/radio.c                                 | 1213 ---
 radio/radio.h                                 |  386 -
 radio/sx126x/sx126x.c                         |  843 --
 radio/sx126x/sx126x.h                         | 1154 ---
 sensors.c                                     |   73 -
 sensors.h                                     |   87 -
 sys_lpm.c                                     |  125 -
 sys_lpm.h                                     |   31 -
 system/adc.c                                  |   57 -
 system/adc.h                                  |   70 -
 system/crypto/aes.c                           |  933 ---
 system/crypto/aes.h                           |  168 -
 system/crypto/cmac.c                          |  161 -
 system/crypto/cmac.h                          |   66 -
 system/crypto/soft-se.c                       |  498 --
 system/delay.c                                |   34 -
 system/delay.h                                |   50 -
 system/fifo.c                                 |   66 -
 system/fifo.h                                 |   97 -
 system/gpio.c                                 |   62 -
 system/gpio.h                                 |  193 -
 system/i2c.c                                  |  153 -
 system/i2c.h                                  |  121 -
 system/spi.h                                  |  109 -
 system/systime.c                              |  351 -
 system/systime.h                              |  169 -
 system/timer.c                                |  386 -
 system/timer.h                                |  159 -
 system/uart.c                                 |   64 -
 system/uart.h                                 |  195 -
 167 files changed, 68992 deletions(-)
 delete mode 100644 .settings/CodeGenerator/cgprojectDatas.datas
 delete mode 100644 .settings/IORegisterSetting.xml
 delete mode 100644 .settings/org.eclipse.cdt.core.prefs
 delete mode 100644 .settings/org.eclipse.cdt.ui.prefs
 delete mode 100644 CMSIS/DSP_Lib/Include/arm_common_tables.h
 delete mode 100644 CMSIS/DSP_Lib/Include/arm_const_structs.h
 delete mode 100644 CMSIS/DSP_Lib/Include/arm_math.h
 delete mode 100644 Commissioning.h
 delete mode 100644 Device/CMSIS_Driver/Include/r_spi_cmsis_api.h.bak
 delete mode 100644 HardwareDebug/Device/CMSIS_Driver/Src/subdir.mk
 delete mode 100644 HardwareDebug/Device/Driver/Src/r_adc/subdir.mk
 delete mode 100644 HardwareDebug/Device/Driver/Src/r_dmac/subdir.mk
 delete mode 100644 HardwareDebug/Device/Driver/Src/r_dtc/subdir.mk
 delete mode 100644 HardwareDebug/Device/Driver/Src/r_ehc/subdir.mk
 delete mode 100644 HardwareDebug/Device/Driver/Src/r_flash/subdir.mk
 delete mode 100644 HardwareDebug/Device/Driver/Src/r_gdt/subdir.mk
 delete mode 100644 HardwareDebug/Device/Driver/Src/r_lpm/subdir.mk
 delete mode 100644 HardwareDebug/Device/Driver/Src/r_pmip/subdir.mk
 delete mode 100644 HardwareDebug/Device/Driver/Src/r_smip/subdir.mk
 delete mode 100644 HardwareDebug/Device/Driver/Src/r_system/subdir.mk
 delete mode 100644 HardwareDebug/Device/subdir.mk
 delete mode 100644 HardwareDebug/Flash Debug/Obj/subdir.mk
 delete mode 100644 HardwareDebug/Resource/subdir.mk
 delete mode 100644 HardwareDebug/boards/mcu/RE01_256KB/subdir.mk
 delete mode 100644 HardwareDebug/boards/mcu/subdir.mk
 delete mode 100644 HardwareDebug/boards/rtk70e0118c00000bj/subdir.mk
 delete mode 100644 HardwareDebug/mac/region/subdir.mk
 delete mode 100644 HardwareDebug/mac/subdir.mk
 delete mode 100644 HardwareDebug/makefile
 delete mode 100644 HardwareDebug/makefile.init
 delete mode 100644 HardwareDebug/objects.mk
 delete mode 100644 HardwareDebug/radio/subdir.mk
 delete mode 100644 HardwareDebug/radio/sx126x/subdir.mk
 delete mode 100644 HardwareDebug/script/subdir.mk
 delete mode 100644 HardwareDebug/sources.mk
 delete mode 100644 HardwareDebug/subdir.mk
 delete mode 100644 HardwareDebug/system/crypto/subdir.mk
 delete mode 100644 HardwareDebug/system/subdir.mk
 delete mode 100644 Resource/bitmap_charge_data.c
 delete mode 100644 Resource/bitmap_opening_data.c
 delete mode 100644 Resource/bitmap_shutdown_data.c
 delete mode 100644 Resource/resource.h
 delete mode 100644 Resource/sensor_data_screen.h
 delete mode 100644 agt0_timer.c
 delete mode 100644 agt0_timer.h
 delete mode 100644 agt1.c
 delete mode 100644 agt1.h
 delete mode 100644 boards/adc-board.h
 delete mode 100644 boards/board.h
 delete mode 100644 boards/board_uart.h
 delete mode 100644 boards/delay-board.h
 delete mode 100644 boards/gpio-board.h
 delete mode 100644 boards/i2c-board.h
 delete mode 100644 boards/mcu/RE01_256KB/pinName-board.h
 delete mode 100644 boards/mcu/RE01_256KB/r_rtc.c
 delete mode 100644 boards/mcu/RE01_256KB/r_rtc.h
 delete mode 100644 boards/mcu/utilities.c
 delete mode 100644 boards/rtc-board.h
 delete mode 100644 boards/rtk70e0118c00000bj/board-config.h
 delete mode 100644 boards/rtk70e0118c00000bj/board.c
 delete mode 100644 boards/rtk70e0118c00000bj/delay-board.c
 delete mode 100644 boards/rtk70e0118c00000bj/gpio-board.c
 delete mode 100644 boards/rtk70e0118c00000bj/i2c-board.c
 delete mode 100644 boards/rtk70e0118c00000bj/lpm-board.c
 delete mode 100644 boards/rtk70e0118c00000bj/lpm-board.h
 delete mode 100644 boards/rtk70e0118c00000bj/pinName-ioe.h
 delete mode 100644 boards/rtk70e0118c00000bj/rtc-board.c
 delete mode 100644 boards/rtk70e0118c00000bj/rtk70e015dc00001bj-board.c
 delete mode 100644 boards/rtk70e0118c00000bj/spi-board.c
 delete mode 100644 boards/rtk70e0118c00000bj/uart-board.c
 delete mode 100644 boards/spi-board.h
 delete mode 100644 boards/sx126x-board.h
 delete mode 100644 boards/uart-board.h
 delete mode 100644 boards/uart-usb-board.h
 delete mode 100644 boards/utilities.h
 delete mode 100644 error.h
 delete mode 100644 lcd.c
 delete mode 100644 lcd.h
 delete mode 100644 lvd_lvdbat.c
 delete mode 100644 lvd_lvdbat.h
 delete mode 100644 mac/LoRaMac.c
 delete mode 100644 mac/LoRaMac.h
 delete mode 100644 mac/LoRaMacAdr.c
 delete mode 100644 mac/LoRaMacAdr.h
 delete mode 100644 mac/LoRaMacClassB.c
 delete mode 100644 mac/LoRaMacClassB.h
 delete mode 100644 mac/LoRaMacClassBConfig.h
 delete mode 100644 mac/LoRaMacCommands.c
 delete mode 100644 mac/LoRaMacCommands.h
 delete mode 100644 mac/LoRaMacConfirmQueue.c
 delete mode 100644 mac/LoRaMacConfirmQueue.h
 delete mode 100644 mac/LoRaMacCrypto.c
 delete mode 100644 mac/LoRaMacCrypto.h
 delete mode 100644 mac/LoRaMacHeaderTypes.h
 delete mode 100644 mac/LoRaMacMessageTypes.h
 delete mode 100644 mac/LoRaMacParser.c
 delete mode 100644 mac/LoRaMacParser.h
 delete mode 100644 mac/LoRaMacSerializer.c
 delete mode 100644 mac/LoRaMacSerializer.h
 delete mode 100644 mac/LoRaMacTest.h
 delete mode 100644 mac/LoRaMacTypes.h
 delete mode 100644 mac/region/Region.c
 delete mode 100644 mac/region/Region.h
 delete mode 100644 mac/region/RegionAS923.c
 delete mode 100644 mac/region/RegionAS923.h
 delete mode 100644 mac/region/RegionAU915.c
 delete mode 100644 mac/region/RegionAU915.h
 delete mode 100644 mac/region/RegionCN470.c
 delete mode 100644 mac/region/RegionCN470.h
 delete mode 100644 mac/region/RegionCN779.c
 delete mode 100644 mac/region/RegionCN779.h
 delete mode 100644 mac/region/RegionCommon.c
 delete mode 100644 mac/region/RegionCommon.h
 delete mode 100644 mac/region/RegionEU433.c
 delete mode 100644 mac/region/RegionEU433.h
 delete mode 100644 mac/region/RegionEU868.c
 delete mode 100644 mac/region/RegionEU868.h
 delete mode 100644 mac/region/RegionIN865.c
 delete mode 100644 mac/region/RegionIN865.h
 delete mode 100644 mac/region/RegionKR920.c
 delete mode 100644 mac/region/RegionKR920.h
 delete mode 100644 mac/region/RegionRU864.c
 delete mode 100644 mac/region/RegionRU864.h
 delete mode 100644 mac/region/RegionUS915.c
 delete mode 100644 mac/region/RegionUS915.c.bak
 delete mode 100644 mac/region/RegionUS915.h
 delete mode 100644 mac/secure-element.h
 delete mode 100644 main.h
 delete mode 100644 mip_display.c
 delete mode 100644 mip_display.h
 delete mode 100644 r01an5753_re_lora.dep
 delete mode 100644 r01an5753_re_lora.elf.jlink
 delete mode 100644 r01an5753_re_lora.elf.launch
 delete mode 100644 r01an5753_re_lora.ewd
 delete mode 100644 r01an5753_re_lora.ewp
 delete mode 100644 r01an5753_re_lora.ewt
 delete mode 100644 r01an5753_re_lora.eww
 delete mode 100644 radio/radio.c
 delete mode 100644 radio/radio.h
 delete mode 100644 radio/sx126x/sx126x.c
 delete mode 100644 radio/sx126x/sx126x.h
 delete mode 100644 sensors.c
 delete mode 100644 sensors.h
 delete mode 100644 sys_lpm.c
 delete mode 100644 sys_lpm.h
 delete mode 100644 system/adc.c
 delete mode 100644 system/adc.h
 delete mode 100644 system/crypto/aes.c
 delete mode 100644 system/crypto/aes.h
 delete mode 100644 system/crypto/cmac.c
 delete mode 100644 system/crypto/cmac.h
 delete mode 100644 system/crypto/soft-se.c
 delete mode 100644 system/delay.c
 delete mode 100644 system/delay.h
 delete mode 100644 system/fifo.c
 delete mode 100644 system/fifo.h
 delete mode 100644 system/gpio.c
 delete mode 100644 system/gpio.h
 delete mode 100644 system/i2c.c
 delete mode 100644 system/i2c.h
 delete mode 100644 system/spi.h
 delete mode 100644 system/systime.c
 delete mode 100644 system/systime.h
 delete mode 100644 system/timer.c
 delete mode 100644 system/timer.h
 delete mode 100644 system/uart.c
 delete mode 100644 system/uart.h

diff --git a/.settings/CodeGenerator/cgprojectDatas.datas b/.settings/CodeGenerator/cgprojectDatas.datas
index e69de29..421376d 100644
--- a/.settings/CodeGenerator/cgprojectDatas.datas
+++ b/.settings/CodeGenerator/cgprojectDatas.datas
@@ -0,0 +1 @@
+dummy

diff --git a/.settings/CodeGenerator/cgprojectDatas.datas b/.settings/CodeGenerator/cgprojectDatas.datas
deleted file mode 100644
index 421376d..0000000
--- a/.settings/CodeGenerator/cgprojectDatas.datas
+++ /dev/null
@@ -1 +0,0 @@
-dummy


diff --git a/.settings/IORegisterSetting.xml b/.settings/IORegisterSetting.xml
deleted file mode 100644
index 649464b..0000000
--- a/.settings/IORegisterSetting.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<Configs>
-    <History>
-        <Keyword>HOCOCR</Keyword>
-        <Keyword>PFS</Keyword>
-    </History>
-</Configs>
diff --git a/.settings/org.eclipse.cdt.core.prefs b/.settings/org.eclipse.cdt.core.prefs
deleted file mode 100644
index 6261486..0000000
--- a/.settings/org.eclipse.cdt.core.prefs
+++ /dev/null
@@ -1,177 +0,0 @@
-doxygen/doxygen_new_line_after_brief=true
-doxygen/doxygen_use_brief_tag=false
-doxygen/doxygen_use_javadoc_tags=true
-doxygen/doxygen_use_pre_tag=false
-doxygen/doxygen_use_structural_commands=false
-eclipse.preferences.version=1
-org.eclipse.cdt.core.formatter.align_composite_type_declarators=false
-org.eclipse.cdt.core.formatter.alignment_for_arguments_in_method_invocation=18
-org.eclipse.cdt.core.formatter.alignment_for_assignment=16
-org.eclipse.cdt.core.formatter.alignment_for_base_clause_in_type_declaration=82
-org.eclipse.cdt.core.formatter.alignment_for_binary_expression=16
-org.eclipse.cdt.core.formatter.alignment_for_compact_if=0
-org.eclipse.cdt.core.formatter.alignment_for_conditional_expression=82
-org.eclipse.cdt.core.formatter.alignment_for_conditional_expression_chain=18
-org.eclipse.cdt.core.formatter.alignment_for_constructor_initializer_list=0
-org.eclipse.cdt.core.formatter.alignment_for_declarator_list=16
-org.eclipse.cdt.core.formatter.alignment_for_enumerator_list=48
-org.eclipse.cdt.core.formatter.alignment_for_expression_list=0
-org.eclipse.cdt.core.formatter.alignment_for_expressions_in_array_initializer=82
-org.eclipse.cdt.core.formatter.alignment_for_member_access=0
-org.eclipse.cdt.core.formatter.alignment_for_overloaded_left_shift_chain=16
-org.eclipse.cdt.core.formatter.alignment_for_parameters_in_method_declaration=16
-org.eclipse.cdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
-org.eclipse.cdt.core.formatter.brace_position_for_array_initializer=next_line
-org.eclipse.cdt.core.formatter.brace_position_for_block=next_line
-org.eclipse.cdt.core.formatter.brace_position_for_block_in_case=next_line
-org.eclipse.cdt.core.formatter.brace_position_for_method_declaration=next_line
-org.eclipse.cdt.core.formatter.brace_position_for_namespace_declaration=next_line
-org.eclipse.cdt.core.formatter.brace_position_for_switch=next_line
-org.eclipse.cdt.core.formatter.brace_position_for_type_declaration=next_line
-org.eclipse.cdt.core.formatter.comment.line_up_line_comment_in_blocks_on_first_column=false
-org.eclipse.cdt.core.formatter.comment.min_distance_between_code_and_line_comment=1
-org.eclipse.cdt.core.formatter.comment.never_indent_line_comments_on_first_column=true
-org.eclipse.cdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=true
-org.eclipse.cdt.core.formatter.compact_else_if=true
-org.eclipse.cdt.core.formatter.continuation_indentation=2
-org.eclipse.cdt.core.formatter.continuation_indentation_for_array_initializer=2
-org.eclipse.cdt.core.formatter.format_guardian_clause_on_one_line=false
-org.eclipse.cdt.core.formatter.indent_access_specifier_compare_to_type_header=false
-org.eclipse.cdt.core.formatter.indent_access_specifier_extra_spaces=0
-org.eclipse.cdt.core.formatter.indent_body_declarations_compare_to_access_specifier=true
-org.eclipse.cdt.core.formatter.indent_body_declarations_compare_to_namespace_header=false
-org.eclipse.cdt.core.formatter.indent_breaks_compare_to_cases=false
-org.eclipse.cdt.core.formatter.indent_declaration_compare_to_template_header=false
-org.eclipse.cdt.core.formatter.indent_empty_lines=false
-org.eclipse.cdt.core.formatter.indent_preprocessor_directives=false
-org.eclipse.cdt.core.formatter.indent_statements_compare_to_block=true
-org.eclipse.cdt.core.formatter.indent_statements_compare_to_body=true
-org.eclipse.cdt.core.formatter.indent_switchstatements_compare_to_cases=true
-org.eclipse.cdt.core.formatter.indent_switchstatements_compare_to_switch=true
-org.eclipse.cdt.core.formatter.indentation.size=4
-org.eclipse.cdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
-org.eclipse.cdt.core.formatter.insert_new_line_after_template_declaration=do not insert
-org.eclipse.cdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
-org.eclipse.cdt.core.formatter.insert_new_line_before_catch_in_try_statement=insert
-org.eclipse.cdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
-org.eclipse.cdt.core.formatter.insert_new_line_before_colon_in_constructor_initializer_list=do not insert
-org.eclipse.cdt.core.formatter.insert_new_line_before_else_in_if_statement=insert
-org.eclipse.cdt.core.formatter.insert_new_line_before_identifier_in_function_declaration=do not insert
-org.eclipse.cdt.core.formatter.insert_new_line_before_while_in_do_statement=insert
-org.eclipse.cdt.core.formatter.insert_new_line_in_empty_block=insert
-org.eclipse.cdt.core.formatter.insert_space_after_assignment_operator=insert
-org.eclipse.cdt.core.formatter.insert_space_after_binary_operator=insert
-org.eclipse.cdt.core.formatter.insert_space_after_closing_angle_bracket_in_template_arguments=insert
-org.eclipse.cdt.core.formatter.insert_space_after_closing_angle_bracket_in_template_parameters=insert
-org.eclipse.cdt.core.formatter.insert_space_after_closing_brace_in_block=insert
-org.eclipse.cdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
-org.eclipse.cdt.core.formatter.insert_space_after_colon_in_base_clause=insert
-org.eclipse.cdt.core.formatter.insert_space_after_colon_in_case=insert
-org.eclipse.cdt.core.formatter.insert_space_after_colon_in_conditional=insert
-org.eclipse.cdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_base_types=insert
-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_declarator_list=insert
-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_expression_list=insert
-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_template_arguments=insert
-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_template_parameters=insert
-org.eclipse.cdt.core.formatter.insert_space_after_opening_angle_bracket_in_template_arguments=do not insert
-org.eclipse.cdt.core.formatter.insert_space_after_opening_angle_bracket_in_template_parameters=do not insert
-org.eclipse.cdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
-org.eclipse.cdt.core.formatter.insert_space_after_opening_bracket=do not insert
-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_exception_specification=do not insert
-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
-org.eclipse.cdt.core.formatter.insert_space_after_postfix_operator=do not insert
-org.eclipse.cdt.core.formatter.insert_space_after_prefix_operator=do not insert
-org.eclipse.cdt.core.formatter.insert_space_after_question_in_conditional=insert
-org.eclipse.cdt.core.formatter.insert_space_after_semicolon_in_for=insert
-org.eclipse.cdt.core.formatter.insert_space_after_unary_operator=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_assignment_operator=insert
-org.eclipse.cdt.core.formatter.insert_space_before_binary_operator=insert
-org.eclipse.cdt.core.formatter.insert_space_before_closing_angle_bracket_in_template_arguments=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_closing_angle_bracket_in_template_parameters=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
-org.eclipse.cdt.core.formatter.insert_space_before_closing_bracket=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_exception_specification=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_colon_in_base_clause=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_colon_in_case=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_colon_in_conditional=insert
-org.eclipse.cdt.core.formatter.insert_space_before_colon_in_default=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_base_types=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_declarator_list=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_expression_list=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_template_arguments=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_template_parameters=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_declarator_in_cast=insert
-org.eclipse.cdt.core.formatter.insert_space_before_declarator_in_method_declaration=insert
-org.eclipse.cdt.core.formatter.insert_space_before_declarator_list=insert
-org.eclipse.cdt.core.formatter.insert_space_before_identifier_in_declarator_list=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_opening_angle_bracket_in_template_arguments=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_opening_angle_bracket_in_template_parameters=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
-org.eclipse.cdt.core.formatter.insert_space_before_opening_brace_in_block=insert
-org.eclipse.cdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
-org.eclipse.cdt.core.formatter.insert_space_before_opening_brace_in_namespace_declaration=insert
-org.eclipse.cdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
-org.eclipse.cdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
-org.eclipse.cdt.core.formatter.insert_space_before_opening_bracket=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
-org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_exception_specification=insert
-org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_for=insert
-org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_if=insert
-org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=insert
-org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
-org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_while=insert
-org.eclipse.cdt.core.formatter.insert_space_before_postfix_operator=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_prefix_operator=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_question_in_conditional=insert
-org.eclipse.cdt.core.formatter.insert_space_before_semicolon=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
-org.eclipse.cdt.core.formatter.insert_space_before_unary_operator=do not insert
-org.eclipse.cdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
-org.eclipse.cdt.core.formatter.insert_space_between_empty_brackets=do not insert
-org.eclipse.cdt.core.formatter.insert_space_between_empty_parens_in_exception_specification=do not insert
-org.eclipse.cdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
-org.eclipse.cdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
-org.eclipse.cdt.core.formatter.insert_space_between_pointer_operators_in_declaration=do not insert
-org.eclipse.cdt.core.formatter.insert_space_between_pointer_operators_in_expression=do not insert
-org.eclipse.cdt.core.formatter.join_wrapped_lines=true
-org.eclipse.cdt.core.formatter.keep_else_statement_on_same_line=false
-org.eclipse.cdt.core.formatter.keep_empty_array_initializer_on_one_line=false
-org.eclipse.cdt.core.formatter.keep_imple_if_on_one_line=false
-org.eclipse.cdt.core.formatter.keep_then_statement_on_same_line=false
-org.eclipse.cdt.core.formatter.lineSplit=120
-org.eclipse.cdt.core.formatter.number_of_empty_lines_to_preserve=1
-org.eclipse.cdt.core.formatter.put_empty_statement_on_new_line=true
-org.eclipse.cdt.core.formatter.tabulation.char=space
-org.eclipse.cdt.core.formatter.tabulation.size=4
-org.eclipse.cdt.core.formatter.use_tabs_only_for_leading_indentations=false
diff --git a/.settings/org.eclipse.cdt.ui.prefs b/.settings/org.eclipse.cdt.ui.prefs
deleted file mode 100644
index a00fb60..0000000
--- a/.settings/org.eclipse.cdt.ui.prefs
+++ /dev/null
@@ -1,3 +0,0 @@
-eclipse.preferences.version=1
-formatter_profile=Renesas Coding Standards v4.00
-formatter_settings_version=1
diff --git a/CMSIS/DSP_Lib/Include/arm_common_tables.h b/CMSIS/DSP_Lib/Include/arm_common_tables.h
deleted file mode 100644
index 233f623..0000000
--- a/CMSIS/DSP_Lib/Include/arm_common_tables.h
+++ /dev/null
@@ -1,121 +0,0 @@
-/* ----------------------------------------------------------------------
- * Project:      CMSIS DSP Library
- * Title:        arm_common_tables.h
- * Description:  Extern declaration for common tables
- *
- * $Date:        27. January 2017
- * $Revision:    V.1.5.1
- *
- * Target Processor: Cortex-M cores
- * -------------------------------------------------------------------- */
-/*
- * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
- *
- * SPDX-License-Identifier: Apache-2.0
- *
- * Licensed under the Apache License, Version 2.0 (the License); you may
- * not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS, WITHOUT
- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#ifndef _ARM_COMMON_TABLES_H
-#define _ARM_COMMON_TABLES_H
-
-#include "arm_math.h"
-
-extern const uint16_t armBitRevTable[1024];
-extern const q15_t armRecipTableQ15[64];
-extern const q31_t armRecipTableQ31[64];
-extern const float32_t twiddleCoef_16[32];
-extern const float32_t twiddleCoef_32[64];
-extern const float32_t twiddleCoef_64[128];
-extern const float32_t twiddleCoef_128[256];
-extern const float32_t twiddleCoef_256[512];
-extern const float32_t twiddleCoef_512[1024];
-extern const float32_t twiddleCoef_1024[2048];
-extern const float32_t twiddleCoef_2048[4096];
-extern const float32_t twiddleCoef_4096[8192];
-#define twiddleCoef twiddleCoef_4096
-extern const q31_t twiddleCoef_16_q31[24];
-extern const q31_t twiddleCoef_32_q31[48];
-extern const q31_t twiddleCoef_64_q31[96];
-extern const q31_t twiddleCoef_128_q31[192];
-extern const q31_t twiddleCoef_256_q31[384];
-extern const q31_t twiddleCoef_512_q31[768];
-extern const q31_t twiddleCoef_1024_q31[1536];
-extern const q31_t twiddleCoef_2048_q31[3072];
-extern const q31_t twiddleCoef_4096_q31[6144];
-extern const q15_t twiddleCoef_16_q15[24];
-extern const q15_t twiddleCoef_32_q15[48];
-extern const q15_t twiddleCoef_64_q15[96];
-extern const q15_t twiddleCoef_128_q15[192];
-extern const q15_t twiddleCoef_256_q15[384];
-extern const q15_t twiddleCoef_512_q15[768];
-extern const q15_t twiddleCoef_1024_q15[1536];
-extern const q15_t twiddleCoef_2048_q15[3072];
-extern const q15_t twiddleCoef_4096_q15[6144];
-extern const float32_t twiddleCoef_rfft_32[32];
-extern const float32_t twiddleCoef_rfft_64[64];
-extern const float32_t twiddleCoef_rfft_128[128];
-extern const float32_t twiddleCoef_rfft_256[256];
-extern const float32_t twiddleCoef_rfft_512[512];
-extern const float32_t twiddleCoef_rfft_1024[1024];
-extern const float32_t twiddleCoef_rfft_2048[2048];
-extern const float32_t twiddleCoef_rfft_4096[4096];
-
-/* floating-point bit reversal tables */
-#define ARMBITREVINDEXTABLE_16_TABLE_LENGTH ((uint16_t)20)
-#define ARMBITREVINDEXTABLE_32_TABLE_LENGTH ((uint16_t)48)
-#define ARMBITREVINDEXTABLE_64_TABLE_LENGTH ((uint16_t)56)
-#define ARMBITREVINDEXTABLE_128_TABLE_LENGTH ((uint16_t)208)
-#define ARMBITREVINDEXTABLE_256_TABLE_LENGTH ((uint16_t)440)
-#define ARMBITREVINDEXTABLE_512_TABLE_LENGTH ((uint16_t)448)
-#define ARMBITREVINDEXTABLE_1024_TABLE_LENGTH ((uint16_t)1800)
-#define ARMBITREVINDEXTABLE_2048_TABLE_LENGTH ((uint16_t)3808)
-#define ARMBITREVINDEXTABLE_4096_TABLE_LENGTH ((uint16_t)4032)
-
-extern const uint16_t armBitRevIndexTable16[ARMBITREVINDEXTABLE_16_TABLE_LENGTH];
-extern const uint16_t armBitRevIndexTable32[ARMBITREVINDEXTABLE_32_TABLE_LENGTH];
-extern const uint16_t armBitRevIndexTable64[ARMBITREVINDEXTABLE_64_TABLE_LENGTH];
-extern const uint16_t armBitRevIndexTable128[ARMBITREVINDEXTABLE_128_TABLE_LENGTH];
-extern const uint16_t armBitRevIndexTable256[ARMBITREVINDEXTABLE_256_TABLE_LENGTH];
-extern const uint16_t armBitRevIndexTable512[ARMBITREVINDEXTABLE_512_TABLE_LENGTH];
-extern const uint16_t armBitRevIndexTable1024[ARMBITREVINDEXTABLE_1024_TABLE_LENGTH];
-extern const uint16_t armBitRevIndexTable2048[ARMBITREVINDEXTABLE_2048_TABLE_LENGTH];
-extern const uint16_t armBitRevIndexTable4096[ARMBITREVINDEXTABLE_4096_TABLE_LENGTH];
-
-/* fixed-point bit reversal tables */
-#define ARMBITREVINDEXTABLE_FIXED_16_TABLE_LENGTH ((uint16_t)12)
-#define ARMBITREVINDEXTABLE_FIXED_32_TABLE_LENGTH ((uint16_t)24)
-#define ARMBITREVINDEXTABLE_FIXED_64_TABLE_LENGTH ((uint16_t)56)
-#define ARMBITREVINDEXTABLE_FIXED_128_TABLE_LENGTH ((uint16_t)112)
-#define ARMBITREVINDEXTABLE_FIXED_256_TABLE_LENGTH ((uint16_t)240)
-#define ARMBITREVINDEXTABLE_FIXED_512_TABLE_LENGTH ((uint16_t)480)
-#define ARMBITREVINDEXTABLE_FIXED_1024_TABLE_LENGTH ((uint16_t)992)
-#define ARMBITREVINDEXTABLE_FIXED_2048_TABLE_LENGTH ((uint16_t)1984)
-#define ARMBITREVINDEXTABLE_FIXED_4096_TABLE_LENGTH ((uint16_t)4032)
-
-extern const uint16_t armBitRevIndexTable_fixed_16[ARMBITREVINDEXTABLE_FIXED_16_TABLE_LENGTH];
-extern const uint16_t armBitRevIndexTable_fixed_32[ARMBITREVINDEXTABLE_FIXED_32_TABLE_LENGTH];
-extern const uint16_t armBitRevIndexTable_fixed_64[ARMBITREVINDEXTABLE_FIXED_64_TABLE_LENGTH];
-extern const uint16_t armBitRevIndexTable_fixed_128[ARMBITREVINDEXTABLE_FIXED_128_TABLE_LENGTH];
-extern const uint16_t armBitRevIndexTable_fixed_256[ARMBITREVINDEXTABLE_FIXED_256_TABLE_LENGTH];
-extern const uint16_t armBitRevIndexTable_fixed_512[ARMBITREVINDEXTABLE_FIXED_512_TABLE_LENGTH];
-extern const uint16_t armBitRevIndexTable_fixed_1024[ARMBITREVINDEXTABLE_FIXED_1024_TABLE_LENGTH];
-extern const uint16_t armBitRevIndexTable_fixed_2048[ARMBITREVINDEXTABLE_FIXED_2048_TABLE_LENGTH];
-extern const uint16_t armBitRevIndexTable_fixed_4096[ARMBITREVINDEXTABLE_FIXED_4096_TABLE_LENGTH];
-
-/* Tables for Fast Math Sine and Cosine */
-extern const float32_t sinTable_f32[FAST_MATH_TABLE_SIZE + 1];
-extern const q31_t sinTable_q31[FAST_MATH_TABLE_SIZE + 1];
-extern const q15_t sinTable_q15[FAST_MATH_TABLE_SIZE + 1];
-
-#endif /*  ARM_COMMON_TABLES_H */
diff --git a/CMSIS/DSP_Lib/Include/arm_const_structs.h b/CMSIS/DSP_Lib/Include/arm_const_structs.h
deleted file mode 100644
index 677073e..0000000
--- a/CMSIS/DSP_Lib/Include/arm_const_structs.h
+++ /dev/null
@@ -1,66 +0,0 @@
-/* ----------------------------------------------------------------------
- * Project:      CMSIS DSP Library
- * Title:        arm_const_structs.h
- * Description:  Constant structs that are initialized for user convenience.
- *               For example, some can be given as arguments to the arm_cfft_f32() function.
- *
- * $Date:        27. January 2017
- * $Revision:    V.1.5.1
- *
- * Target Processor: Cortex-M cores
- * -------------------------------------------------------------------- */
-/*
- * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
- *
- * SPDX-License-Identifier: Apache-2.0
- *
- * Licensed under the Apache License, Version 2.0 (the License); you may
- * not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS, WITHOUT
- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#ifndef _ARM_CONST_STRUCTS_H
-#define _ARM_CONST_STRUCTS_H
-
-#include "arm_math.h"
-#include "arm_common_tables.h"
-
-   extern const arm_cfft_instance_f32 arm_cfft_sR_f32_len16;
-   extern const arm_cfft_instance_f32 arm_cfft_sR_f32_len32;
-   extern const arm_cfft_instance_f32 arm_cfft_sR_f32_len64;
-   extern const arm_cfft_instance_f32 arm_cfft_sR_f32_len128;
-   extern const arm_cfft_instance_f32 arm_cfft_sR_f32_len256;
-   extern const arm_cfft_instance_f32 arm_cfft_sR_f32_len512;
-   extern const arm_cfft_instance_f32 arm_cfft_sR_f32_len1024;
-   extern const arm_cfft_instance_f32 arm_cfft_sR_f32_len2048;
-   extern const arm_cfft_instance_f32 arm_cfft_sR_f32_len4096;
-
-   extern const arm_cfft_instance_q31 arm_cfft_sR_q31_len16;
-   extern const arm_cfft_instance_q31 arm_cfft_sR_q31_len32;
-   extern const arm_cfft_instance_q31 arm_cfft_sR_q31_len64;
-   extern const arm_cfft_instance_q31 arm_cfft_sR_q31_len128;
-   extern const arm_cfft_instance_q31 arm_cfft_sR_q31_len256;
-   extern const arm_cfft_instance_q31 arm_cfft_sR_q31_len512;
-   extern const arm_cfft_instance_q31 arm_cfft_sR_q31_len1024;
-   extern const arm_cfft_instance_q31 arm_cfft_sR_q31_len2048;
-   extern const arm_cfft_instance_q31 arm_cfft_sR_q31_len4096;
-
-   extern const arm_cfft_instance_q15 arm_cfft_sR_q15_len16;
-   extern const arm_cfft_instance_q15 arm_cfft_sR_q15_len32;
-   extern const arm_cfft_instance_q15 arm_cfft_sR_q15_len64;
-   extern const arm_cfft_instance_q15 arm_cfft_sR_q15_len128;
-   extern const arm_cfft_instance_q15 arm_cfft_sR_q15_len256;
-   extern const arm_cfft_instance_q15 arm_cfft_sR_q15_len512;
-   extern const arm_cfft_instance_q15 arm_cfft_sR_q15_len1024;
-   extern const arm_cfft_instance_q15 arm_cfft_sR_q15_len2048;
-   extern const arm_cfft_instance_q15 arm_cfft_sR_q15_len4096;
-
-#endif
diff --git a/CMSIS/DSP_Lib/Include/arm_math.h b/CMSIS/DSP_Lib/Include/arm_math.h
deleted file mode 100644
index 997aeae..0000000
--- a/CMSIS/DSP_Lib/Include/arm_math.h
+++ /dev/null
@@ -1,7157 +0,0 @@
-/******************************************************************************
- * @file     arm_math.h
- * @brief    Public header file for CMSIS DSP LibraryU
- * @version  V1.5.3
- * @date     10. January 2018
- ******************************************************************************/
-/*
- * Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved.
- *
- * SPDX-License-Identifier: Apache-2.0
- *
- * Licensed under the Apache License, Version 2.0 (the License); you may
- * not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS, WITHOUT
- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-/**
-   \mainpage CMSIS DSP Software Library
-   *
-   * Introduction
-   * ------------
-   *
-   * This user manual describes the CMSIS DSP software library,
-   * a suite of common signal processing functions for use on Cortex-M processor based devices.
-   *
-   * The library is divided into a number of functions each covering a specific category:
-   * - Basic math functions
-   * - Fast math functions
-   * - Complex math functions
-   * - Filters
-   * - Matrix functions
-   * - Transforms
-   * - Motor control functions
-   * - Statistical functions
-   * - Support functions
-   * - Interpolation functions
-   *
-   * The library has separate functions for operating on 8-bit integers, 16-bit integers,
-   * 32-bit integer and 32-bit floating-point values.
-   *
-   * Using the Library
-   * ------------
-   *
-   * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> folder.
-   * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
-   * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
-   * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
-   * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on)
-   * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
-   * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
-   * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
-   * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
-   * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
-   * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
-   * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
-   * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
-   * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
-   * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
-   * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
-   * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
-   * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point Unit)
-   * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
-   * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precision Floating Point Unit)
-   *
-   * The library functions are declared in the public file <code>arm_math.h</code> which is placed in the <code>Include</code> folder.
-   * Simply include this file and link the appropriate library in the application and begin calling the library functions. The Library supports single
-   * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endian. Same header file will be used for floating point unit(FPU) variants.
-   * Define the appropriate preprocessor macro ARM_MATH_CM7 or ARM_MATH_CM4 or ARM_MATH_CM3 or
-   * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
-   * For Armv8-M cores define preprocessor macro ARM_MATH_ARMV8MBL or ARM_MATH_ARMV8MML.
-   * Set preprocessor macro __DSP_PRESENT if Armv8-M Mainline core supports DSP instructions.
-   * 
-   *
-   * Examples
-   * --------
-   *
-   * The library ships with a number of examples which demonstrate how to use the library functions.
-   *
-   * Toolchain Support
-   * ------------
-   *
-   * The library has been developed and tested with MDK version 5.14.0.0
-   * The library is being tested in GCC and IAR toolchains and updates on this activity will be made available shortly.
-   *
-   * Building the Library
-   * ------------
-   *
-   * The library installer contains a project file to rebuild libraries on MDK toolchain in the <code>CMSIS\\DSP_Lib\\Source\\ARM</code> folder.
-   * - arm_cortexM_math.uvprojx
-   *
-   *
-   * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecting a specific target, and defining the optional preprocessor macros detailed above.
-   *
-   * Preprocessor Macros
-   * ------------
-   *
-   * Each library project have different preprocessor macros.
-   *
-   * - UNALIGNED_SUPPORT_DISABLE:
-   *
-   * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory access
-   *
-   * - ARM_MATH_BIG_ENDIAN:
-   *
-   * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default library builds for little endian targets.
-   *
-   * - ARM_MATH_MATRIX_CHECK:
-   *
-   * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
-   *
-   * - ARM_MATH_ROUNDING:
-   *
-   * Define macro ARM_MATH_ROUNDING for rounding on support functions
-   *
-   * - ARM_MATH_CMx:
-   *
-   * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for building library on Cortex-M3 target
-   * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building library on Cortex-M0+ target, and
-   * ARM_MATH_CM7 for building the library on cortex-M7.
-   *
-   * - ARM_MATH_ARMV8MxL:
-   *
-   * Define macro ARM_MATH_ARMV8MBL for building the library on Armv8-M Baseline target, ARM_MATH_ARMV8MML for building library
-   * on Armv8-M Mainline target.
-   *
-   * - __FPU_PRESENT:
-   *
-   * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro for floating point libraries.
-   *
-   * - __DSP_PRESENT:
-   *
-   * Initialize macro __DSP_PRESENT = 1 when Armv8-M Mainline core supports DSP instructions.
-   *
-   * <hr>
-   * CMSIS-DSP in ARM::CMSIS Pack
-   * -----------------------------
-   *
-   * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directories:
-   * |File/Folder                   |Content                                                                 |
-   * |------------------------------|------------------------------------------------------------------------|
-   * |\b CMSIS\\Documentation\\DSP  | This documentation                                                     |
-   * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                               |
-   * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library functions      |
-   * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                                |
-   *
-   * <hr>
-   * Revision History of CMSIS-DSP
-   * ------------
-   * Please refer to \ref ChangeLog_pg.
-   *
-   * Copyright Notice
-   * ------------
-   *
-   * Copyright (C) 2010-2015 Arm Limited. All rights reserved.
-   */
-
-
-/**
- * @defgroup groupMath Basic Math Functions
- */
-
-/**
- * @defgroup groupFastMath Fast Math Functions
- * This set of functions provides a fast approximation to sine, cosine, and square root.
- * As compared to most of the other functions in the CMSIS math library, the fast math functions
- * operate on individual values and not arrays.
- * There are separate functions for Q15, Q31, and floating-point data.
- *
- */
-
-/**
- * @defgroup groupCmplxMath Complex Math Functions
- * This set of functions operates on complex data vectors.
- * The data in the complex arrays is stored in an interleaved fashion
- * (real, imag, real, imag, ...).
- * In the API functions, the number of samples in a complex array refers
- * to the number of complex values; the array contains twice this number of
- * real values.
- */
-
-/**
- * @defgroup groupFilters Filtering Functions
- */
-
-/**
- * @defgroup groupMatrix Matrix Functions
- *
- * This set of functions provides basic matrix math operations.
- * The functions operate on matrix data structures.  For example,
- * the type
- * definition for the floating-point matrix structure is shown
- * below:
- * <pre>
- *     typedef struct
- *     {
- *       uint16_t numRows;     // number of rows of the matrix.
- *       uint16_t numCols;     // number of columns of the matrix.
- *       float32_t *pData;     // points to the data of the matrix.
- *     } arm_matrix_instance_f32;
- * </pre>
- * There are similar definitions for Q15 and Q31 data types.
- *
- * The structure specifies the size of the matrix and then points to
- * an array of data.  The array is of size <code>numRows X numCols</code>
- * and the values are arranged in row order.  That is, the
- * matrix element (i, j) is stored at:
- * <pre>
- *     pData[i*numCols + j]
- * </pre>
- *
- * \par Init Functions
- * There is an associated initialization function for each type of matrix
- * data structure.
- * The initialization function sets the values of the internal structure fields.
- * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
- * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
- *
- * \par
- * Use of the initialization function is optional. However, if initialization function is used
- * then the instance structure cannot be placed into a const data section.
- * To place the instance structure in a const data
- * section, manually initialize the data structure.  For example:
- * <pre>
- * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
- * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
- * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
- * </pre>
- * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
- * specifies the number of columns, and <code>pData</code> points to the
- * data array.
- *
- * \par Size Checking
- * By default all of the matrix functions perform size checking on the input and
- * output matrices. For example, the matrix addition function verifies that the
- * two input matrices and the output matrix all have the same number of rows and
- * columns. If the size check fails the functions return:
- * <pre>
- *     ARM_MATH_SIZE_MISMATCH
- * </pre>
- * Otherwise the functions return
- * <pre>
- *     ARM_MATH_SUCCESS
- * </pre>
- * There is some overhead associated with this matrix size checking.
- * The matrix size checking is enabled via the \#define
- * <pre>
- *     ARM_MATH_MATRIX_CHECK
- * </pre>
- * within the library project settings.  By default this macro is defined
- * and size checking is enabled. By changing the project settings and
- * undefining this macro size checking is eliminated and the functions
- * run a bit faster. With size checking disabled the functions always
- * return <code>ARM_MATH_SUCCESS</code>.
- */
-
-/**
- * @defgroup groupTransforms Transform Functions
- */
-
-/**
- * @defgroup groupController Controller Functions
- */
-
-/**
- * @defgroup groupStats Statistics Functions
- */
-/**
- * @defgroup groupSupport Support Functions
- */
-
-/**
- * @defgroup groupInterpolation Interpolation Functions
- * These functions perform 1- and 2-dimensional interpolation of data.
- * Linear interpolation is used for 1-dimensional data and
- * bilinear interpolation is used for 2-dimensional data.
- */
-
-/**
- * @defgroup groupExamples Examples
- */
-#ifndef _ARM_MATH_H
-#define _ARM_MATH_H
-
-/* Compiler specific diagnostic adjustment */
-#if   defined ( __CC_ARM )
-
-#elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
-
-#elif defined ( __GNUC__ )
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wsign-conversion"
-#pragma GCC diagnostic ignored "-Wconversion"
-#pragma GCC diagnostic ignored "-Wunused-parameter"
-
-#elif defined ( __ICCARM__ )
-
-#elif defined ( __TI_ARM__ )
-
-#elif defined ( __CSMC__ )
-
-#elif defined ( __TASKING__ )
-
-#else
-  #error Unknown compiler
-#endif
-
-
-#define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
-
-#if defined(ARM_MATH_CM7)
-  #include "core_cm7.h"
-  #define ARM_MATH_DSP
-#elif defined (ARM_MATH_CM4)
-  #include "core_cm4.h"
-  #define ARM_MATH_DSP
-#elif defined (ARM_MATH_CM3)
-  #include "core_cm3.h"
-#elif defined (ARM_MATH_CM0)
-  #include "core_cm0.h"
-  #define ARM_MATH_CM0_FAMILY
-#elif defined (ARM_MATH_CM0PLUS)
-  #include "core_cm0plus.h"
-  #define ARM_MATH_CM0_FAMILY
-#elif defined (ARM_MATH_ARMV8MBL)
-  #include "core_armv8mbl.h"
-  #define ARM_MATH_CM0_FAMILY
-#elif defined (ARM_MATH_ARMV8MML)
-  #include "core_armv8mml.h"
-  #if (defined (__DSP_PRESENT) && (__DSP_PRESENT == 1))
-    #define ARM_MATH_DSP
-  #endif
-#else
-  #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_CM0PLUS, ARM_MATH_CM0, ARM_MATH_ARMV8MBL, ARM_MATH_ARMV8MML"
-#endif
-
-#undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
-#include "string.h"
-#include "math.h"
-#ifdef   __cplusplus
-extern "C"
-{
-#endif
-
-
-  /**
-   * @brief Macros required for reciprocal calculation in Normalized LMS
-   */
-
-#define DELTA_Q31          (0x100)
-#define DELTA_Q15          0x5
-#define INDEX_MASK         0x0000003F
-#ifndef PI
-  #define PI               3.14159265358979f
-#endif
-
-  /**
-   * @brief Macros required for SINE and COSINE Fast math approximations
-   */
-
-#define FAST_MATH_TABLE_SIZE  512
-#define FAST_MATH_Q31_SHIFT   (32 - 10)
-#define FAST_MATH_Q15_SHIFT   (16 - 10)
-#define CONTROLLER_Q31_SHIFT  (32 - 9)
-#define TABLE_SPACING_Q31     0x400000
-#define TABLE_SPACING_Q15     0x80
-
-  /**
-   * @brief Macros required for SINE and COSINE Controller functions
-   */
-  /* 1.31(q31) Fixed value of 2/360 */
-  /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
-#define INPUT_SPACING         0xB60B61
-
-  /**
-   * @brief Macro for Unaligned Support
-   */
-#ifndef UNALIGNED_SUPPORT_DISABLE
-    #define ALIGN4
-#else
-  #if defined  (__GNUC__)
-    #define ALIGN4 __attribute__((aligned(4)))
-  #else
-    #define ALIGN4 __align(4)
-  #endif
-#endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
-
-  /**
-   * @brief Error status returned by some functions in the library.
-   */
-
-  typedef enum
-  {
-    ARM_MATH_SUCCESS = 0,                /**< No error */
-    ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
-    ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
-    ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation. */
-    ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
-    ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is singular and cannot be inverted. */
-    ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
-  } arm_status;
-
-  /**
-   * @brief 8-bit fractional data type in 1.7 format.
-   */
-  typedef int8_t q7_t;
-
-  /**
-   * @brief 16-bit fractional data type in 1.15 format.
-   */
-  typedef int16_t q15_t;
-
-  /**
-   * @brief 32-bit fractional data type in 1.31 format.
-   */
-  typedef int32_t q31_t;
-
-  /**
-   * @brief 64-bit fractional data type in 1.63 format.
-   */
-  typedef int64_t q63_t;
-
-  /**
-   * @brief 32-bit floating-point type definition.
-   */
-  typedef float float32_t;
-
-  /**
-   * @brief 64-bit floating-point type definition.
-   */
-  typedef double float64_t;
-
-  /**
-   * @brief definition to read/write two 16 bit values.
-   */
-#if   defined ( __CC_ARM )
-  #define __SIMD32_TYPE int32_t __packed
-  #define CMSIS_UNUSED __attribute__((unused))
-  #define CMSIS_INLINE __attribute__((always_inline))
-
-#elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
-  #define __SIMD32_TYPE int32_t
-  #define CMSIS_UNUSED __attribute__((unused))
-  #define CMSIS_INLINE __attribute__((always_inline))
-
-#elif defined ( __GNUC__ )
-  #define __SIMD32_TYPE int32_t
-  #define CMSIS_UNUSED __attribute__((unused))
-  #define CMSIS_INLINE __attribute__((always_inline))
-
-#elif defined ( __ICCARM__ )
-  #define __SIMD32_TYPE int32_t __packed
-  #define CMSIS_UNUSED
-  #define CMSIS_INLINE
-
-#elif defined ( __TI_ARM__ )
-  #define __SIMD32_TYPE int32_t
-  #define CMSIS_UNUSED __attribute__((unused))
-  #define CMSIS_INLINE
-
-#elif defined ( __CSMC__ )
-  #define __SIMD32_TYPE int32_t
-  #define CMSIS_UNUSED
-  #define CMSIS_INLINE
-
-#elif defined ( __TASKING__ )
-  #define __SIMD32_TYPE __unaligned int32_t
-  #define CMSIS_UNUSED
-  #define CMSIS_INLINE
-
-#else
-  #error Unknown compiler
-#endif
-
-#define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
-#define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
-#define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
-#define __SIMD64(addr)        (*(int64_t **) & (addr))
-
-#if !defined (ARM_MATH_DSP)
-  /**
-   * @brief definition to pack two 16 bit values.
-   */
-#define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
-                                    (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
-#define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
-                                    (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
-
-#endif /* !defined (ARM_MATH_DSP) */
-
-   /**
-   * @brief definition to pack four 8 bit values.
-   */
-#ifndef ARM_MATH_BIG_ENDIAN
-
-#define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
-                                (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
-                                (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
-                                (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
-#else
-
-#define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
-                                (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
-                                (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
-                                (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
-
-#endif
-
-
-  /**
-   * @brief Clips Q63 to Q31 values.
-   */
-  CMSIS_INLINE __STATIC_INLINE q31_t clip_q63_to_q31(
-  q63_t x)
-  {
-    return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
-      ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
-  }
-
-  /**
-   * @brief Clips Q63 to Q15 values.
-   */
-  CMSIS_INLINE __STATIC_INLINE q15_t clip_q63_to_q15(
-  q63_t x)
-  {
-    return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
-      ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
-  }
-
-  /**
-   * @brief Clips Q31 to Q7 values.
-   */
-  CMSIS_INLINE __STATIC_INLINE q7_t clip_q31_to_q7(
-  q31_t x)
-  {
-    return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
-      ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
-  }
-
-  /**
-   * @brief Clips Q31 to Q15 values.
-   */
-  CMSIS_INLINE __STATIC_INLINE q15_t clip_q31_to_q15(
-  q31_t x)
-  {
-    return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
-      ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
-  }
-
-  /**
-   * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
-   */
-
-  CMSIS_INLINE __STATIC_INLINE q63_t mult32x64(
-  q63_t x,
-  q31_t y)
-  {
-    return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
-            (((q63_t) (x >> 32) * y)));
-  }
-
-  /**
-   * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
-   */
-
-  CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q31(
-  q31_t in,
-  q31_t * dst,
-  q31_t * pRecipTable)
-  {
-    q31_t out;
-    uint32_t tempVal;
-    uint32_t index, i;
-    uint32_t signBits;
-
-    if (in > 0)
-    {
-      signBits = ((uint32_t) (__CLZ( in) - 1));
-    }
-    else
-    {
-      signBits = ((uint32_t) (__CLZ(-in) - 1));
-    }
-
-    /* Convert input sample to 1.31 format */
-    in = (in << signBits);
-
-    /* calculation of index for initial approximated Val */
-    index = (uint32_t)(in >> 24);
-    index = (index & INDEX_MASK);
-
-    /* 1.31 with exp 1 */
-    out = pRecipTable[index];
-
-    /* calculation of reciprocal value */
-    /* running approximation for two iterations */
-    for (i = 0U; i < 2U; i++)
-    {
-      tempVal = (uint32_t) (((q63_t) in * out) >> 31);
-      tempVal = 0x7FFFFFFFu - tempVal;
-      /*      1.31 with exp 1 */
-      /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
-      out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
-    }
-
-    /* write output */
-    *dst = out;
-
-    /* return num of signbits of out = 1/in value */
-    return (signBits + 1U);
-  }
-
-
-  /**
-   * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
-   */
-  CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q15(
-  q15_t in,
-  q15_t * dst,
-  q15_t * pRecipTable)
-  {
-    q15_t out = 0;
-    uint32_t tempVal = 0;
-    uint32_t index = 0, i = 0;
-    uint32_t signBits = 0;
-
-    if (in > 0)
-    {
-      signBits = ((uint32_t)(__CLZ( in) - 17));
-    }
-    else
-    {
-      signBits = ((uint32_t)(__CLZ(-in) - 17));
-    }
-
-    /* Convert input sample to 1.15 format */
-    in = (in << signBits);
-
-    /* calculation of index for initial approximated Val */
-    index = (uint32_t)(in >>  8);
-    index = (index & INDEX_MASK);
-
-    /*      1.15 with exp 1  */
-    out = pRecipTable[index];
-
-    /* calculation of reciprocal value */
-    /* running approximation for two iterations */
-    for (i = 0U; i < 2U; i++)
-    {
-      tempVal = (uint32_t) (((q31_t) in * out) >> 15);
-      tempVal = 0x7FFFu - tempVal;
-      /*      1.15 with exp 1 */
-      out = (q15_t) (((q31_t) out * tempVal) >> 14);
-      /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
-    }
-
-    /* write output */
-    *dst = out;
-
-    /* return num of signbits of out = 1/in value */
-    return (signBits + 1);
-  }
-
-
-/*
- * @brief C custom defined intrinsic function for M3 and M0 processors
- */
-#if !defined (ARM_MATH_DSP)
-
-  /*
-   * @brief C custom defined QADD8 for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint32_t __QADD8(
-  uint32_t x,
-  uint32_t y)
-  {
-    q31_t r, s, t, u;
-
-    r = __SSAT(((((q31_t)x << 24) >> 24) + (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
-    s = __SSAT(((((q31_t)x << 16) >> 24) + (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
-    t = __SSAT(((((q31_t)x <<  8) >> 24) + (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
-    u = __SSAT(((((q31_t)x      ) >> 24) + (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
-
-    return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
-  }
-
-
-  /*
-   * @brief C custom defined QSUB8 for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB8(
-  uint32_t x,
-  uint32_t y)
-  {
-    q31_t r, s, t, u;
-
-    r = __SSAT(((((q31_t)x << 24) >> 24) - (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
-    s = __SSAT(((((q31_t)x << 16) >> 24) - (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
-    t = __SSAT(((((q31_t)x <<  8) >> 24) - (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
-    u = __SSAT(((((q31_t)x      ) >> 24) - (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
-
-    return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
-  }
-
-
-  /*
-   * @brief C custom defined QADD16 for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint32_t __QADD16(
-  uint32_t x,
-  uint32_t y)
-  {
-/*  q31_t r,     s;  without initialisation 'arm_offset_q15 test' fails  but 'intrinsic' tests pass! for armCC */
-    q31_t r = 0, s = 0;
-
-    r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
-    s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
-
-    return ((uint32_t)((s << 16) | (r      )));
-  }
-
-
-  /*
-   * @brief C custom defined SHADD16 for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint32_t __SHADD16(
-  uint32_t x,
-  uint32_t y)
-  {
-    q31_t r, s;
-
-    r = (((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
-    s = (((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
-
-    return ((uint32_t)((s << 16) | (r      )));
-  }
-
-
-  /*
-   * @brief C custom defined QSUB16 for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB16(
-  uint32_t x,
-  uint32_t y)
-  {
-    q31_t r, s;
-
-    r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
-    s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
-
-    return ((uint32_t)((s << 16) | (r      )));
-  }
-
-
-  /*
-   * @brief C custom defined SHSUB16 for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint32_t __SHSUB16(
-  uint32_t x,
-  uint32_t y)
-  {
-    q31_t r, s;
-
-    r = (((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
-    s = (((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
-
-    return ((uint32_t)((s << 16) | (r      )));
-  }
-
-
-  /*
-   * @brief C custom defined QASX for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint32_t __QASX(
-  uint32_t x,
-  uint32_t y)
-  {
-    q31_t r, s;
-
-    r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
-    s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
-
-    return ((uint32_t)((s << 16) | (r      )));
-  }
-
-
-  /*
-   * @brief C custom defined SHASX for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint32_t __SHASX(
-  uint32_t x,
-  uint32_t y)
-  {
-    q31_t r, s;
-
-    r = (((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
-    s = (((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
-
-    return ((uint32_t)((s << 16) | (r      )));
-  }
-
-
-  /*
-   * @brief C custom defined QSAX for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint32_t __QSAX(
-  uint32_t x,
-  uint32_t y)
-  {
-    q31_t r, s;
-
-    r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
-    s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
-
-    return ((uint32_t)((s << 16) | (r      )));
-  }
-
-
-  /*
-   * @brief C custom defined SHSAX for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint32_t __SHSAX(
-  uint32_t x,
-  uint32_t y)
-  {
-    q31_t r, s;
-
-    r = (((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
-    s = (((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
-
-    return ((uint32_t)((s << 16) | (r      )));
-  }
-
-
-  /*
-   * @brief C custom defined SMUSDX for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint32_t __SMUSDX(
-  uint32_t x,
-  uint32_t y)
-  {
-    return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
-                       ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
-  }
-
-  /*
-   * @brief C custom defined SMUADX for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint32_t __SMUADX(
-  uint32_t x,
-  uint32_t y)
-  {
-    return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
-                       ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
-  }
-
-
-  /*
-   * @brief C custom defined QADD for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE int32_t __QADD(
-  int32_t x,
-  int32_t y)
-  {
-    return ((int32_t)(clip_q63_to_q31((q63_t)x + (q31_t)y)));
-  }
-
-
-  /*
-   * @brief C custom defined QSUB for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE int32_t __QSUB(
-  int32_t x,
-  int32_t y)
-  {
-    return ((int32_t)(clip_q63_to_q31((q63_t)x - (q31_t)y)));
-  }
-
-
-  /*
-   * @brief C custom defined SMLAD for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint32_t __SMLAD(
-  uint32_t x,
-  uint32_t y,
-  uint32_t sum)
-  {
-    return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
-                       ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
-                       ( ((q31_t)sum    )                                  )   ));
-  }
-
-
-  /*
-   * @brief C custom defined SMLADX for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint32_t __SMLADX(
-  uint32_t x,
-  uint32_t y,
-  uint32_t sum)
-  {
-    return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
-                       ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
-                       ( ((q31_t)sum    )                                  )   ));
-  }
-
-
-  /*
-   * @brief C custom defined SMLSDX for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint32_t __SMLSDX(
-  uint32_t x,
-  uint32_t y,
-  uint32_t sum)
-  {
-    return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
-                       ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
-                       ( ((q31_t)sum    )                                  )   ));
-  }
-
-
-  /*
-   * @brief C custom defined SMLALD for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint64_t __SMLALD(
-  uint32_t x,
-  uint32_t y,
-  uint64_t sum)
-  {
-/*  return (sum + ((q15_t) (x >> 16) * (q15_t) (y >> 16)) + ((q15_t) x * (q15_t) y)); */
-    return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
-                       ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
-                       ( ((q63_t)sum    )                                  )   ));
-  }
-
-
-  /*
-   * @brief C custom defined SMLALDX for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint64_t __SMLALDX(
-  uint32_t x,
-  uint32_t y,
-  uint64_t sum)
-  {
-/*  return (sum + ((q15_t) (x >> 16) * (q15_t) y)) + ((q15_t) x * (q15_t) (y >> 16)); */
-    return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
-                       ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
-                       ( ((q63_t)sum    )                                  )   ));
-  }
-
-
-  /*
-   * @brief C custom defined SMUAD for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint32_t __SMUAD(
-  uint32_t x,
-  uint32_t y)
-  {
-    return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
-                       ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
-  }
-
-
-  /*
-   * @brief C custom defined SMUSD for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint32_t __SMUSD(
-  uint32_t x,
-  uint32_t y)
-  {
-    return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) -
-                       ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
-  }
-
-
-  /*
-   * @brief C custom defined SXTB16 for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE uint32_t __SXTB16(
-  uint32_t x)
-  {
-    return ((uint32_t)(((((q31_t)x << 24) >> 24) & (q31_t)0x0000FFFF) |
-                       ((((q31_t)x <<  8) >>  8) & (q31_t)0xFFFF0000)  ));
-  }
-
-  /*
-   * @brief C custom defined SMMLA for M3 and M0 processors
-   */
-  CMSIS_INLINE __STATIC_INLINE int32_t __SMMLA(
-  int32_t x,
-  int32_t y,
-  int32_t sum)
-  {
-    return (sum + (int32_t) (((int64_t) x * y) >> 32));
-  }
-
-#endif /* !defined (ARM_MATH_DSP) */
-
-
-  /**
-   * @brief Instance structure for the Q7 FIR filter.
-   */
-  typedef struct
-  {
-    uint16_t numTaps;        /**< number of filter coefficients in the filter. */
-    q7_t *pState;            /**< points to the state variable array. The array is of length numTaps+blockSize-1. */
-    q7_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.*/
-  } arm_fir_instance_q7;
-
-  /**
-   * @brief Instance structure for the Q15 FIR filter.
-   */
-  typedef struct
-  {
-    uint16_t numTaps;         /**< number of filter coefficients in the filter. */
-    q15_t *pState;            /**< points to the state variable array. The array is of length numTaps+blockSize-1. */
-    q15_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.*/
-  } arm_fir_instance_q15;
-
-  /**
-   * @brief Instance structure for the Q31 FIR filter.
-   */
-  typedef struct
-  {
-    uint16_t numTaps;         /**< number of filter coefficients in the filter. */
-    q31_t *pState;            /**< points to the state variable array. The array is of length numTaps+blockSize-1. */
-    q31_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps. */
-  } arm_fir_instance_q31;
-
-  /**
-   * @brief Instance structure for the floating-point FIR filter.
-   */
-  typedef struct
-  {
-    uint16_t numTaps;     /**< number of filter coefficients in the filter. */
-    float32_t *pState;    /**< points to the state variable array. The array is of length numTaps+blockSize-1. */
-    float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTaps. */
-  } arm_fir_instance_f32;
-
-
-  /**
-   * @brief Processing function for the Q7 FIR filter.
-   * @param[in]  S          points to an instance of the Q7 FIR filter structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_fir_q7(
-  const arm_fir_instance_q7 * S,
-  q7_t * pSrc,
-  q7_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Initialization function for the Q7 FIR filter.
-   * @param[in,out] S          points to an instance of the Q7 FIR structure.
-   * @param[in]     numTaps    Number of filter coefficients in the filter.
-   * @param[in]     pCoeffs    points to the filter coefficients.
-   * @param[in]     pState     points to the state buffer.
-   * @param[in]     blockSize  number of samples that are processed.
-   */
-  void arm_fir_init_q7(
-  arm_fir_instance_q7 * S,
-  uint16_t numTaps,
-  q7_t * pCoeffs,
-  q7_t * pState,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Processing function for the Q15 FIR filter.
-   * @param[in]  S          points to an instance of the Q15 FIR structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_fir_q15(
-  const arm_fir_instance_q15 * S,
-  q15_t * pSrc,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Processing function for the fast Q15 FIR filter for Cortex-M3 and Cortex-M4.
-   * @param[in]  S          points to an instance of the Q15 FIR filter structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_fir_fast_q15(
-  const arm_fir_instance_q15 * S,
-  q15_t * pSrc,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Initialization function for the Q15 FIR filter.
-   * @param[in,out] S          points to an instance of the Q15 FIR filter structure.
-   * @param[in]     numTaps    Number of filter coefficients in the filter. Must be even and greater than or equal to 4.
-   * @param[in]     pCoeffs    points to the filter coefficients.
-   * @param[in]     pState     points to the state buffer.
-   * @param[in]     blockSize  number of samples that are processed at a time.
-   * @return The function returns ARM_MATH_SUCCESS if initialization was successful or ARM_MATH_ARGUMENT_ERROR if
-   * <code>numTaps</code> is not a supported value.
-   */
-  arm_status arm_fir_init_q15(
-  arm_fir_instance_q15 * S,
-  uint16_t numTaps,
-  q15_t * pCoeffs,
-  q15_t * pState,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Processing function for the Q31 FIR filter.
-   * @param[in]  S          points to an instance of the Q31 FIR filter structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_fir_q31(
-  const arm_fir_instance_q31 * S,
-  q31_t * pSrc,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Processing function for the fast Q31 FIR filter for Cortex-M3 and Cortex-M4.
-   * @param[in]  S          points to an instance of the Q31 FIR structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_fir_fast_q31(
-  const arm_fir_instance_q31 * S,
-  q31_t * pSrc,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Initialization function for the Q31 FIR filter.
-   * @param[in,out] S          points to an instance of the Q31 FIR structure.
-   * @param[in]     numTaps    Number of filter coefficients in the filter.
-   * @param[in]     pCoeffs    points to the filter coefficients.
-   * @param[in]     pState     points to the state buffer.
-   * @param[in]     blockSize  number of samples that are processed at a time.
-   */
-  void arm_fir_init_q31(
-  arm_fir_instance_q31 * S,
-  uint16_t numTaps,
-  q31_t * pCoeffs,
-  q31_t * pState,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Processing function for the floating-point FIR filter.
-   * @param[in]  S          points to an instance of the floating-point FIR structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_fir_f32(
-  const arm_fir_instance_f32 * S,
-  float32_t * pSrc,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Initialization function for the floating-point FIR filter.
-   * @param[in,out] S          points to an instance of the floating-point FIR filter structure.
-   * @param[in]     numTaps    Number of filter coefficients in the filter.
-   * @param[in]     pCoeffs    points to the filter coefficients.
-   * @param[in]     pState     points to the state buffer.
-   * @param[in]     blockSize  number of samples that are processed at a time.
-   */
-  void arm_fir_init_f32(
-  arm_fir_instance_f32 * S,
-  uint16_t numTaps,
-  float32_t * pCoeffs,
-  float32_t * pState,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Instance structure for the Q15 Biquad cascade filter.
-   */
-  typedef struct
-  {
-    int8_t numStages;        /**< number of 2nd order stages in the filter.  Overall order is 2*numStages. */
-    q15_t *pState;           /**< Points to the array of state coefficients.  The array is of length 4*numStages. */
-    q15_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of length 5*numStages. */
-    int8_t postShift;        /**< Additional shift, in bits, applied to each output sample. */
-  } arm_biquad_casd_df1_inst_q15;
-
-  /**
-   * @brief Instance structure for the Q31 Biquad cascade filter.
-   */
-  typedef struct
-  {
-    uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is 2*numStages. */
-    q31_t *pState;           /**< Points to the array of state coefficients.  The array is of length 4*numStages. */
-    q31_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of length 5*numStages. */
-    uint8_t postShift;       /**< Additional shift, in bits, applied to each output sample. */
-  } arm_biquad_casd_df1_inst_q31;
-
-  /**
-   * @brief Instance structure for the floating-point Biquad cascade filter.
-   */
-  typedef struct
-  {
-    uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is 2*numStages. */
-    float32_t *pState;       /**< Points to the array of state coefficients.  The array is of length 4*numStages. */
-    float32_t *pCoeffs;      /**< Points to the array of coefficients.  The array is of length 5*numStages. */
-  } arm_biquad_casd_df1_inst_f32;
-
-
-  /**
-   * @brief Processing function for the Q15 Biquad cascade filter.
-   * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_biquad_cascade_df1_q15(
-  const arm_biquad_casd_df1_inst_q15 * S,
-  q15_t * pSrc,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Initialization function for the Q15 Biquad cascade filter.
-   * @param[in,out] S          points to an instance of the Q15 Biquad cascade structure.
-   * @param[in]     numStages  number of 2nd order stages in the filter.
-   * @param[in]     pCoeffs    points to the filter coefficients.
-   * @param[in]     pState     points to the state buffer.
-   * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficients format
-   */
-  void arm_biquad_cascade_df1_init_q15(
-  arm_biquad_casd_df1_inst_q15 * S,
-  uint8_t numStages,
-  q15_t * pCoeffs,
-  q15_t * pState,
-  int8_t postShift);
-
-
-  /**
-   * @brief Fast but less precise processing function for the Q15 Biquad cascade filter for Cortex-M3 and Cortex-M4.
-   * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_biquad_cascade_df1_fast_q15(
-  const arm_biquad_casd_df1_inst_q15 * S,
-  q15_t * pSrc,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Processing function for the Q31 Biquad cascade filter
-   * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_biquad_cascade_df1_q31(
-  const arm_biquad_casd_df1_inst_q31 * S,
-  q31_t * pSrc,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Fast but less precise processing function for the Q31 Biquad cascade filter for Cortex-M3 and Cortex-M4.
-   * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_biquad_cascade_df1_fast_q31(
-  const arm_biquad_casd_df1_inst_q31 * S,
-  q31_t * pSrc,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Initialization function for the Q31 Biquad cascade filter.
-   * @param[in,out] S          points to an instance of the Q31 Biquad cascade structure.
-   * @param[in]     numStages  number of 2nd order stages in the filter.
-   * @param[in]     pCoeffs    points to the filter coefficients.
-   * @param[in]     pState     points to the state buffer.
-   * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficients format
-   */
-  void arm_biquad_cascade_df1_init_q31(
-  arm_biquad_casd_df1_inst_q31 * S,
-  uint8_t numStages,
-  q31_t * pCoeffs,
-  q31_t * pState,
-  int8_t postShift);
-
-
-  /**
-   * @brief Processing function for the floating-point Biquad cascade filter.
-   * @param[in]  S          points to an instance of the floating-point Biquad cascade structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_biquad_cascade_df1_f32(
-  const arm_biquad_casd_df1_inst_f32 * S,
-  float32_t * pSrc,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Initialization function for the floating-point Biquad cascade filter.
-   * @param[in,out] S          points to an instance of the floating-point Biquad cascade structure.
-   * @param[in]     numStages  number of 2nd order stages in the filter.
-   * @param[in]     pCoeffs    points to the filter coefficients.
-   * @param[in]     pState     points to the state buffer.
-   */
-  void arm_biquad_cascade_df1_init_f32(
-  arm_biquad_casd_df1_inst_f32 * S,
-  uint8_t numStages,
-  float32_t * pCoeffs,
-  float32_t * pState);
-
-
-  /**
-   * @brief Instance structure for the floating-point matrix structure.
-   */
-  typedef struct
-  {
-    uint16_t numRows;     /**< number of rows of the matrix.     */
-    uint16_t numCols;     /**< number of columns of the matrix.  */
-    float32_t *pData;     /**< points to the data of the matrix. */
-  } arm_matrix_instance_f32;
-
-
-  /**
-   * @brief Instance structure for the floating-point matrix structure.
-   */
-  typedef struct
-  {
-    uint16_t numRows;     /**< number of rows of the matrix.     */
-    uint16_t numCols;     /**< number of columns of the matrix.  */
-    float64_t *pData;     /**< points to the data of the matrix. */
-  } arm_matrix_instance_f64;
-
-  /**
-   * @brief Instance structure for the Q15 matrix structure.
-   */
-  typedef struct
-  {
-    uint16_t numRows;     /**< number of rows of the matrix.     */
-    uint16_t numCols;     /**< number of columns of the matrix.  */
-    q15_t *pData;         /**< points to the data of the matrix. */
-  } arm_matrix_instance_q15;
-
-  /**
-   * @brief Instance structure for the Q31 matrix structure.
-   */
-  typedef struct
-  {
-    uint16_t numRows;     /**< number of rows of the matrix.     */
-    uint16_t numCols;     /**< number of columns of the matrix.  */
-    q31_t *pData;         /**< points to the data of the matrix. */
-  } arm_matrix_instance_q31;
-
-
-  /**
-   * @brief Floating-point matrix addition.
-   * @param[in]  pSrcA  points to the first input matrix structure
-   * @param[in]  pSrcB  points to the second input matrix structure
-   * @param[out] pDst   points to output matrix structure
-   * @return     The function returns either
-   * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_add_f32(
-  const arm_matrix_instance_f32 * pSrcA,
-  const arm_matrix_instance_f32 * pSrcB,
-  arm_matrix_instance_f32 * pDst);
-
-
-  /**
-   * @brief Q15 matrix addition.
-   * @param[in]   pSrcA  points to the first input matrix structure
-   * @param[in]   pSrcB  points to the second input matrix structure
-   * @param[out]  pDst   points to output matrix structure
-   * @return     The function returns either
-   * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_add_q15(
-  const arm_matrix_instance_q15 * pSrcA,
-  const arm_matrix_instance_q15 * pSrcB,
-  arm_matrix_instance_q15 * pDst);
-
-
-  /**
-   * @brief Q31 matrix addition.
-   * @param[in]  pSrcA  points to the first input matrix structure
-   * @param[in]  pSrcB  points to the second input matrix structure
-   * @param[out] pDst   points to output matrix structure
-   * @return     The function returns either
-   * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_add_q31(
-  const arm_matrix_instance_q31 * pSrcA,
-  const arm_matrix_instance_q31 * pSrcB,
-  arm_matrix_instance_q31 * pDst);
-
-
-  /**
-   * @brief Floating-point, complex, matrix multiplication.
-   * @param[in]  pSrcA  points to the first input matrix structure
-   * @param[in]  pSrcB  points to the second input matrix structure
-   * @param[out] pDst   points to output matrix structure
-   * @return     The function returns either
-   * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_cmplx_mult_f32(
-  const arm_matrix_instance_f32 * pSrcA,
-  const arm_matrix_instance_f32 * pSrcB,
-  arm_matrix_instance_f32 * pDst);
-
-
-  /**
-   * @brief Q15, complex,  matrix multiplication.
-   * @param[in]  pSrcA  points to the first input matrix structure
-   * @param[in]  pSrcB  points to the second input matrix structure
-   * @param[out] pDst   points to output matrix structure
-   * @return     The function returns either
-   * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_cmplx_mult_q15(
-  const arm_matrix_instance_q15 * pSrcA,
-  const arm_matrix_instance_q15 * pSrcB,
-  arm_matrix_instance_q15 * pDst,
-  q15_t * pScratch);
-
-
-  /**
-   * @brief Q31, complex, matrix multiplication.
-   * @param[in]  pSrcA  points to the first input matrix structure
-   * @param[in]  pSrcB  points to the second input matrix structure
-   * @param[out] pDst   points to output matrix structure
-   * @return     The function returns either
-   * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_cmplx_mult_q31(
-  const arm_matrix_instance_q31 * pSrcA,
-  const arm_matrix_instance_q31 * pSrcB,
-  arm_matrix_instance_q31 * pDst);
-
-
-  /**
-   * @brief Floating-point matrix transpose.
-   * @param[in]  pSrc  points to the input matrix
-   * @param[out] pDst  points to the output matrix
-   * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
-   * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_trans_f32(
-  const arm_matrix_instance_f32 * pSrc,
-  arm_matrix_instance_f32 * pDst);
-
-
-  /**
-   * @brief Q15 matrix transpose.
-   * @param[in]  pSrc  points to the input matrix
-   * @param[out] pDst  points to the output matrix
-   * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
-   * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_trans_q15(
-  const arm_matrix_instance_q15 * pSrc,
-  arm_matrix_instance_q15 * pDst);
-
-
-  /**
-   * @brief Q31 matrix transpose.
-   * @param[in]  pSrc  points to the input matrix
-   * @param[out] pDst  points to the output matrix
-   * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
-   * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_trans_q31(
-  const arm_matrix_instance_q31 * pSrc,
-  arm_matrix_instance_q31 * pDst);
-
-
-  /**
-   * @brief Floating-point matrix multiplication
-   * @param[in]  pSrcA  points to the first input matrix structure
-   * @param[in]  pSrcB  points to the second input matrix structure
-   * @param[out] pDst   points to output matrix structure
-   * @return     The function returns either
-   * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_mult_f32(
-  const arm_matrix_instance_f32 * pSrcA,
-  const arm_matrix_instance_f32 * pSrcB,
-  arm_matrix_instance_f32 * pDst);
-
-
-  /**
-   * @brief Q15 matrix multiplication
-   * @param[in]  pSrcA   points to the first input matrix structure
-   * @param[in]  pSrcB   points to the second input matrix structure
-   * @param[out] pDst    points to output matrix structure
-   * @param[in]  pState  points to the array for storing intermediate results
-   * @return     The function returns either
-   * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_mult_q15(
-  const arm_matrix_instance_q15 * pSrcA,
-  const arm_matrix_instance_q15 * pSrcB,
-  arm_matrix_instance_q15 * pDst,
-  q15_t * pState);
-
-
-  /**
-   * @brief Q15 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
-   * @param[in]  pSrcA   points to the first input matrix structure
-   * @param[in]  pSrcB   points to the second input matrix structure
-   * @param[out] pDst    points to output matrix structure
-   * @param[in]  pState  points to the array for storing intermediate results
-   * @return     The function returns either
-   * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_mult_fast_q15(
-  const arm_matrix_instance_q15 * pSrcA,
-  const arm_matrix_instance_q15 * pSrcB,
-  arm_matrix_instance_q15 * pDst,
-  q15_t * pState);
-
-
-  /**
-   * @brief Q31 matrix multiplication
-   * @param[in]  pSrcA  points to the first input matrix structure
-   * @param[in]  pSrcB  points to the second input matrix structure
-   * @param[out] pDst   points to output matrix structure
-   * @return     The function returns either
-   * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_mult_q31(
-  const arm_matrix_instance_q31 * pSrcA,
-  const arm_matrix_instance_q31 * pSrcB,
-  arm_matrix_instance_q31 * pDst);
-
-
-  /**
-   * @brief Q31 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
-   * @param[in]  pSrcA  points to the first input matrix structure
-   * @param[in]  pSrcB  points to the second input matrix structure
-   * @param[out] pDst   points to output matrix structure
-   * @return     The function returns either
-   * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_mult_fast_q31(
-  const arm_matrix_instance_q31 * pSrcA,
-  const arm_matrix_instance_q31 * pSrcB,
-  arm_matrix_instance_q31 * pDst);
-
-
-  /**
-   * @brief Floating-point matrix subtraction
-   * @param[in]  pSrcA  points to the first input matrix structure
-   * @param[in]  pSrcB  points to the second input matrix structure
-   * @param[out] pDst   points to output matrix structure
-   * @return     The function returns either
-   * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_sub_f32(
-  const arm_matrix_instance_f32 * pSrcA,
-  const arm_matrix_instance_f32 * pSrcB,
-  arm_matrix_instance_f32 * pDst);
-
-
-  /**
-   * @brief Q15 matrix subtraction
-   * @param[in]  pSrcA  points to the first input matrix structure
-   * @param[in]  pSrcB  points to the second input matrix structure
-   * @param[out] pDst   points to output matrix structure
-   * @return     The function returns either
-   * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_sub_q15(
-  const arm_matrix_instance_q15 * pSrcA,
-  const arm_matrix_instance_q15 * pSrcB,
-  arm_matrix_instance_q15 * pDst);
-
-
-  /**
-   * @brief Q31 matrix subtraction
-   * @param[in]  pSrcA  points to the first input matrix structure
-   * @param[in]  pSrcB  points to the second input matrix structure
-   * @param[out] pDst   points to output matrix structure
-   * @return     The function returns either
-   * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_sub_q31(
-  const arm_matrix_instance_q31 * pSrcA,
-  const arm_matrix_instance_q31 * pSrcB,
-  arm_matrix_instance_q31 * pDst);
-
-
-  /**
-   * @brief Floating-point matrix scaling.
-   * @param[in]  pSrc   points to the input matrix
-   * @param[in]  scale  scale factor
-   * @param[out] pDst   points to the output matrix
-   * @return     The function returns either
-   * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_scale_f32(
-  const arm_matrix_instance_f32 * pSrc,
-  float32_t scale,
-  arm_matrix_instance_f32 * pDst);
-
-
-  /**
-   * @brief Q15 matrix scaling.
-   * @param[in]  pSrc        points to input matrix
-   * @param[in]  scaleFract  fractional portion of the scale factor
-   * @param[in]  shift       number of bits to shift the result by
-   * @param[out] pDst        points to output matrix
-   * @return     The function returns either
-   * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_scale_q15(
-  const arm_matrix_instance_q15 * pSrc,
-  q15_t scaleFract,
-  int32_t shift,
-  arm_matrix_instance_q15 * pDst);
-
-
-  /**
-   * @brief Q31 matrix scaling.
-   * @param[in]  pSrc        points to input matrix
-   * @param[in]  scaleFract  fractional portion of the scale factor
-   * @param[in]  shift       number of bits to shift the result by
-   * @param[out] pDst        points to output matrix structure
-   * @return     The function returns either
-   * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
-   */
-  arm_status arm_mat_scale_q31(
-  const arm_matrix_instance_q31 * pSrc,
-  q31_t scaleFract,
-  int32_t shift,
-  arm_matrix_instance_q31 * pDst);
-
-
-  /**
-   * @brief  Q31 matrix initialization.
-   * @param[in,out] S         points to an instance of the floating-point matrix structure.
-   * @param[in]     nRows     number of rows in the matrix.
-   * @param[in]     nColumns  number of columns in the matrix.
-   * @param[in]     pData     points to the matrix data array.
-   */
-  void arm_mat_init_q31(
-  arm_matrix_instance_q31 * S,
-  uint16_t nRows,
-  uint16_t nColumns,
-  q31_t * pData);
-
-
-  /**
-   * @brief  Q15 matrix initialization.
-   * @param[in,out] S         points to an instance of the floating-point matrix structure.
-   * @param[in]     nRows     number of rows in the matrix.
-   * @param[in]     nColumns  number of columns in the matrix.
-   * @param[in]     pData     points to the matrix data array.
-   */
-  void arm_mat_init_q15(
-  arm_matrix_instance_q15 * S,
-  uint16_t nRows,
-  uint16_t nColumns,
-  q15_t * pData);
-
-
-  /**
-   * @brief  Floating-point matrix initialization.
-   * @param[in,out] S         points to an instance of the floating-point matrix structure.
-   * @param[in]     nRows     number of rows in the matrix.
-   * @param[in]     nColumns  number of columns in the matrix.
-   * @param[in]     pData     points to the matrix data array.
-   */
-  void arm_mat_init_f32(
-  arm_matrix_instance_f32 * S,
-  uint16_t nRows,
-  uint16_t nColumns,
-  float32_t * pData);
-
-
-
-  /**
-   * @brief Instance structure for the Q15 PID Control.
-   */
-  typedef struct
-  {
-    q15_t A0;           /**< The derived gain, A0 = Kp + Ki + Kd . */
-#if !defined (ARM_MATH_DSP)
-    q15_t A1;
-    q15_t A2;
-#else
-    q31_t A1;           /**< The derived gain A1 = -Kp - 2Kd | Kd.*/
-#endif
-    q15_t state[3];     /**< The state array of length 3. */
-    q15_t Kp;           /**< The proportional gain. */
-    q15_t Ki;           /**< The integral gain. */
-    q15_t Kd;           /**< The derivative gain. */
-  } arm_pid_instance_q15;
-
-  /**
-   * @brief Instance structure for the Q31 PID Control.
-   */
-  typedef struct
-  {
-    q31_t A0;            /**< The derived gain, A0 = Kp + Ki + Kd . */
-    q31_t A1;            /**< The derived gain, A1 = -Kp - 2Kd. */
-    q31_t A2;            /**< The derived gain, A2 = Kd . */
-    q31_t state[3];      /**< The state array of length 3. */
-    q31_t Kp;            /**< The proportional gain. */
-    q31_t Ki;            /**< The integral gain. */
-    q31_t Kd;            /**< The derivative gain. */
-  } arm_pid_instance_q31;
-
-  /**
-   * @brief Instance structure for the floating-point PID Control.
-   */
-  typedef struct
-  {
-    float32_t A0;          /**< The derived gain, A0 = Kp + Ki + Kd . */
-    float32_t A1;          /**< The derived gain, A1 = -Kp - 2Kd. */
-    float32_t A2;          /**< The derived gain, A2 = Kd . */
-    float32_t state[3];    /**< The state array of length 3. */
-    float32_t Kp;          /**< The proportional gain. */
-    float32_t Ki;          /**< The integral gain. */
-    float32_t Kd;          /**< The derivative gain. */
-  } arm_pid_instance_f32;
-
-
-
-  /**
-   * @brief  Initialization function for the floating-point PID Control.
-   * @param[in,out] S               points to an instance of the PID structure.
-   * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the state.
-   */
-  void arm_pid_init_f32(
-  arm_pid_instance_f32 * S,
-  int32_t resetStateFlag);
-
-
-  /**
-   * @brief  Reset function for the floating-point PID Control.
-   * @param[in,out] S  is an instance of the floating-point PID Control structure
-   */
-  void arm_pid_reset_f32(
-  arm_pid_instance_f32 * S);
-
-
-  /**
-   * @brief  Initialization function for the Q31 PID Control.
-   * @param[in,out] S               points to an instance of the Q15 PID structure.
-   * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the state.
-   */
-  void arm_pid_init_q31(
-  arm_pid_instance_q31 * S,
-  int32_t resetStateFlag);
-
-
-  /**
-   * @brief  Reset function for the Q31 PID Control.
-   * @param[in,out] S   points to an instance of the Q31 PID Control structure
-   */
-
-  void arm_pid_reset_q31(
-  arm_pid_instance_q31 * S);
-
-
-  /**
-   * @brief  Initialization function for the Q15 PID Control.
-   * @param[in,out] S               points to an instance of the Q15 PID structure.
-   * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the state.
-   */
-  void arm_pid_init_q15(
-  arm_pid_instance_q15 * S,
-  int32_t resetStateFlag);
-
-
-  /**
-   * @brief  Reset function for the Q15 PID Control.
-   * @param[in,out] S  points to an instance of the q15 PID Control structure
-   */
-  void arm_pid_reset_q15(
-  arm_pid_instance_q15 * S);
-
-
-  /**
-   * @brief Instance structure for the floating-point Linear Interpolate function.
-   */
-  typedef struct
-  {
-    uint32_t nValues;           /**< nValues */
-    float32_t x1;               /**< x1 */
-    float32_t xSpacing;         /**< xSpacing */
-    float32_t *pYData;          /**< pointer to the table of Y values */
-  } arm_linear_interp_instance_f32;
-
-  /**
-   * @brief Instance structure for the floating-point bilinear interpolation function.
-   */
-  typedef struct
-  {
-    uint16_t numRows;   /**< number of rows in the data table. */
-    uint16_t numCols;   /**< number of columns in the data table. */
-    float32_t *pData;   /**< points to the data table. */
-  } arm_bilinear_interp_instance_f32;
-
-   /**
-   * @brief Instance structure for the Q31 bilinear interpolation function.
-   */
-  typedef struct
-  {
-    uint16_t numRows;   /**< number of rows in the data table. */
-    uint16_t numCols;   /**< number of columns in the data table. */
-    q31_t *pData;       /**< points to the data table. */
-  } arm_bilinear_interp_instance_q31;
-
-   /**
-   * @brief Instance structure for the Q15 bilinear interpolation function.
-   */
-  typedef struct
-  {
-    uint16_t numRows;   /**< number of rows in the data table. */
-    uint16_t numCols;   /**< number of columns in the data table. */
-    q15_t *pData;       /**< points to the data table. */
-  } arm_bilinear_interp_instance_q15;
-
-   /**
-   * @brief Instance structure for the Q15 bilinear interpolation function.
-   */
-  typedef struct
-  {
-    uint16_t numRows;   /**< number of rows in the data table. */
-    uint16_t numCols;   /**< number of columns in the data table. */
-    q7_t *pData;        /**< points to the data table. */
-  } arm_bilinear_interp_instance_q7;
-
-
-  /**
-   * @brief Q7 vector multiplication.
-   * @param[in]  pSrcA      points to the first input vector
-   * @param[in]  pSrcB      points to the second input vector
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in each vector
-   */
-  void arm_mult_q7(
-  q7_t * pSrcA,
-  q7_t * pSrcB,
-  q7_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Q15 vector multiplication.
-   * @param[in]  pSrcA      points to the first input vector
-   * @param[in]  pSrcB      points to the second input vector
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in each vector
-   */
-  void arm_mult_q15(
-  q15_t * pSrcA,
-  q15_t * pSrcB,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Q31 vector multiplication.
-   * @param[in]  pSrcA      points to the first input vector
-   * @param[in]  pSrcB      points to the second input vector
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in each vector
-   */
-  void arm_mult_q31(
-  q31_t * pSrcA,
-  q31_t * pSrcB,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Floating-point vector multiplication.
-   * @param[in]  pSrcA      points to the first input vector
-   * @param[in]  pSrcB      points to the second input vector
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in each vector
-   */
-  void arm_mult_f32(
-  float32_t * pSrcA,
-  float32_t * pSrcB,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Instance structure for the Q15 CFFT/CIFFT function.
-   */
-  typedef struct
-  {
-    uint16_t fftLen;                 /**< length of the FFT. */
-    uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFlag=1) transform. */
-    uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReverseFlag=0) bit reversal of output. */
-    q15_t *pTwiddle;                 /**< points to the Sin twiddle factor table. */
-    uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
-    uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table. */
-    uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs with the same bit reversal table. */
-  } arm_cfft_radix2_instance_q15;
-
-/* Deprecated */
-  arm_status arm_cfft_radix2_init_q15(
-  arm_cfft_radix2_instance_q15 * S,
-  uint16_t fftLen,
-  uint8_t ifftFlag,
-  uint8_t bitReverseFlag);
-
-/* Deprecated */
-  void arm_cfft_radix2_q15(
-  const arm_cfft_radix2_instance_q15 * S,
-  q15_t * pSrc);
-
-
-  /**
-   * @brief Instance structure for the Q15 CFFT/CIFFT function.
-   */
-  typedef struct
-  {
-    uint16_t fftLen;                 /**< length of the FFT. */
-    uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFlag=1) transform. */
-    uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReverseFlag=0) bit reversal of output. */
-    q15_t *pTwiddle;                 /**< points to the twiddle factor table. */
-    uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
-    uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table. */
-    uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs with the same bit reversal table. */
-  } arm_cfft_radix4_instance_q15;
-
-/* Deprecated */
-  arm_status arm_cfft_radix4_init_q15(
-  arm_cfft_radix4_instance_q15 * S,
-  uint16_t fftLen,
-  uint8_t ifftFlag,
-  uint8_t bitReverseFlag);
-
-/* Deprecated */
-  void arm_cfft_radix4_q15(
-  const arm_cfft_radix4_instance_q15 * S,
-  q15_t * pSrc);
-
-  /**
-   * @brief Instance structure for the Radix-2 Q31 CFFT/CIFFT function.
-   */
-  typedef struct
-  {
-    uint16_t fftLen;                 /**< length of the FFT. */
-    uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFlag=1) transform. */
-    uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReverseFlag=0) bit reversal of output. */
-    q31_t *pTwiddle;                 /**< points to the Twiddle factor table. */
-    uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
-    uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table. */
-    uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs with the same bit reversal table. */
-  } arm_cfft_radix2_instance_q31;
-
-/* Deprecated */
-  arm_status arm_cfft_radix2_init_q31(
-  arm_cfft_radix2_instance_q31 * S,
-  uint16_t fftLen,
-  uint8_t ifftFlag,
-  uint8_t bitReverseFlag);
-
-/* Deprecated */
-  void arm_cfft_radix2_q31(
-  const arm_cfft_radix2_instance_q31 * S,
-  q31_t * pSrc);
-
-  /**
-   * @brief Instance structure for the Q31 CFFT/CIFFT function.
-   */
-  typedef struct
-  {
-    uint16_t fftLen;                 /**< length of the FFT. */
-    uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFlag=1) transform. */
-    uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReverseFlag=0) bit reversal of output. */
-    q31_t *pTwiddle;                 /**< points to the twiddle factor table. */
-    uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
-    uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table. */
-    uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs with the same bit reversal table. */
-  } arm_cfft_radix4_instance_q31;
-
-/* Deprecated */
-  void arm_cfft_radix4_q31(
-  const arm_cfft_radix4_instance_q31 * S,
-  q31_t * pSrc);
-
-/* Deprecated */
-  arm_status arm_cfft_radix4_init_q31(
-  arm_cfft_radix4_instance_q31 * S,
-  uint16_t fftLen,
-  uint8_t ifftFlag,
-  uint8_t bitReverseFlag);
-
-  /**
-   * @brief Instance structure for the floating-point CFFT/CIFFT function.
-   */
-  typedef struct
-  {
-    uint16_t fftLen;                   /**< length of the FFT. */
-    uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse (ifftFlag=1) transform. */
-    uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables (bitReverseFlag=0) bit reversal of output. */
-    float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
-    uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
-    uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table. */
-    uint16_t bitRevFactor;             /**< bit reversal modifier that supports different size FFTs with the same bit reversal table. */
-    float32_t onebyfftLen;             /**< value of 1/fftLen. */
-  } arm_cfft_radix2_instance_f32;
-
-/* Deprecated */
-  arm_status arm_cfft_radix2_init_f32(
-  arm_cfft_radix2_instance_f32 * S,
-  uint16_t fftLen,
-  uint8_t ifftFlag,
-  uint8_t bitReverseFlag);
-
-/* Deprecated */
-  void arm_cfft_radix2_f32(
-  const arm_cfft_radix2_instance_f32 * S,
-  float32_t * pSrc);
-
-  /**
-   * @brief Instance structure for the floating-point CFFT/CIFFT function.
-   */
-  typedef struct
-  {
-    uint16_t fftLen;                   /**< length of the FFT. */
-    uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse (ifftFlag=1) transform. */
-    uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables (bitReverseFlag=0) bit reversal of output. */
-    float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
-    uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
-    uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table. */
-    uint16_t bitRevFactor;             /**< bit reversal modifier that supports different size FFTs with the same bit reversal table. */
-    float32_t onebyfftLen;             /**< value of 1/fftLen. */
-  } arm_cfft_radix4_instance_f32;
-
-/* Deprecated */
-  arm_status arm_cfft_radix4_init_f32(
-  arm_cfft_radix4_instance_f32 * S,
-  uint16_t fftLen,
-  uint8_t ifftFlag,
-  uint8_t bitReverseFlag);
-
-/* Deprecated */
-  void arm_cfft_radix4_f32(
-  const arm_cfft_radix4_instance_f32 * S,
-  float32_t * pSrc);
-
-  /**
-   * @brief Instance structure for the fixed-point CFFT/CIFFT function.
-   */
-  typedef struct
-  {
-    uint16_t fftLen;                   /**< length of the FFT. */
-    const q15_t *pTwiddle;             /**< points to the Twiddle factor table. */
-    const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
-    uint16_t bitRevLength;             /**< bit reversal table length. */
-  } arm_cfft_instance_q15;
-
-void arm_cfft_q15(
-    const arm_cfft_instance_q15 * S,
-    q15_t * p1,
-    uint8_t ifftFlag,
-    uint8_t bitReverseFlag);
-
-  /**
-   * @brief Instance structure for the fixed-point CFFT/CIFFT function.
-   */
-  typedef struct
-  {
-    uint16_t fftLen;                   /**< length of the FFT. */
-    const q31_t *pTwiddle;             /**< points to the Twiddle factor table. */
-    const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
-    uint16_t bitRevLength;             /**< bit reversal table length. */
-  } arm_cfft_instance_q31;
-
-void arm_cfft_q31(
-    const arm_cfft_instance_q31 * S,
-    q31_t * p1,
-    uint8_t ifftFlag,
-    uint8_t bitReverseFlag);
-
-  /**
-   * @brief Instance structure for the floating-point CFFT/CIFFT function.
-   */
-  typedef struct
-  {
-    uint16_t fftLen;                   /**< length of the FFT. */
-    const float32_t *pTwiddle;         /**< points to the Twiddle factor table. */
-    const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
-    uint16_t bitRevLength;             /**< bit reversal table length. */
-  } arm_cfft_instance_f32;
-
-  void arm_cfft_f32(
-  const arm_cfft_instance_f32 * S,
-  float32_t * p1,
-  uint8_t ifftFlag,
-  uint8_t bitReverseFlag);
-
-  /**
-   * @brief Instance structure for the Q15 RFFT/RIFFT function.
-   */
-  typedef struct
-  {
-    uint32_t fftLenReal;                      /**< length of the real FFT. */
-    uint8_t ifftFlagR;                        /**< flag that selects forward (ifftFlagR=0) or inverse (ifftFlagR=1) transform. */
-    uint8_t bitReverseFlagR;                  /**< flag that enables (bitReverseFlagR=1) or disables (bitReverseFlagR=0) bit reversal of output. */
-    uint32_t twidCoefRModifier;               /**< twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table. */
-    q15_t *pTwiddleAReal;                     /**< points to the real twiddle factor table. */
-    q15_t *pTwiddleBReal;                     /**< points to the imag twiddle factor table. */
-    const arm_cfft_instance_q15 *pCfft;       /**< points to the complex FFT instance. */
-  } arm_rfft_instance_q15;
-
-  arm_status arm_rfft_init_q15(
-  arm_rfft_instance_q15 * S,
-  uint32_t fftLenReal,
-  uint32_t ifftFlagR,
-  uint32_t bitReverseFlag);
-
-  void arm_rfft_q15(
-  const arm_rfft_instance_q15 * S,
-  q15_t * pSrc,
-  q15_t * pDst);
-
-  /**
-   * @brief Instance structure for the Q31 RFFT/RIFFT function.
-   */
-  typedef struct
-  {
-    uint32_t fftLenReal;                        /**< length of the real FFT. */
-    uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) or inverse (ifftFlagR=1) transform. */
-    uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or disables (bitReverseFlagR=0) bit reversal of output. */
-    uint32_t twidCoefRModifier;                 /**< twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table. */
-    q31_t *pTwiddleAReal;                       /**< points to the real twiddle factor table. */
-    q31_t *pTwiddleBReal;                       /**< points to the imag twiddle factor table. */
-    const arm_cfft_instance_q31 *pCfft;         /**< points to the complex FFT instance. */
-  } arm_rfft_instance_q31;
-
-  arm_status arm_rfft_init_q31(
-  arm_rfft_instance_q31 * S,
-  uint32_t fftLenReal,
-  uint32_t ifftFlagR,
-  uint32_t bitReverseFlag);
-
-  void arm_rfft_q31(
-  const arm_rfft_instance_q31 * S,
-  q31_t * pSrc,
-  q31_t * pDst);
-
-  /**
-   * @brief Instance structure for the floating-point RFFT/RIFFT function.
-   */
-  typedef struct
-  {
-    uint32_t fftLenReal;                        /**< length of the real FFT. */
-    uint16_t fftLenBy2;                         /**< length of the complex FFT. */
-    uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) or inverse (ifftFlagR=1) transform. */
-    uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or disables (bitReverseFlagR=0) bit reversal of output. */
-    uint32_t twidCoefRModifier;                     /**< twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table. */
-    float32_t *pTwiddleAReal;                   /**< points to the real twiddle factor table. */
-    float32_t *pTwiddleBReal;                   /**< points to the imag twiddle factor table. */
-    arm_cfft_radix4_instance_f32 *pCfft;        /**< points to the complex FFT instance. */
-  } arm_rfft_instance_f32;
-
-  arm_status arm_rfft_init_f32(
-  arm_rfft_instance_f32 * S,
-  arm_cfft_radix4_instance_f32 * S_CFFT,
-  uint32_t fftLenReal,
-  uint32_t ifftFlagR,
-  uint32_t bitReverseFlag);
-
-  void arm_rfft_f32(
-  const arm_rfft_instance_f32 * S,
-  float32_t * pSrc,
-  float32_t * pDst);
-
-  /**
-   * @brief Instance structure for the floating-point RFFT/RIFFT function.
-   */
-typedef struct
-  {
-    arm_cfft_instance_f32 Sint;      /**< Internal CFFT structure. */
-    uint16_t fftLenRFFT;             /**< length of the real sequence */
-    float32_t * pTwiddleRFFT;        /**< Twiddle factors real stage  */
-  } arm_rfft_fast_instance_f32 ;
-
-arm_status arm_rfft_fast_init_f32 (
-   arm_rfft_fast_instance_f32 * S,
-   uint16_t fftLen);
-
-void arm_rfft_fast_f32(
-  arm_rfft_fast_instance_f32 * S,
-  float32_t * p, float32_t * pOut,
-  uint8_t ifftFlag);
-
-  /**
-   * @brief Instance structure for the floating-point DCT4/IDCT4 function.
-   */
-  typedef struct
-  {
-    uint16_t N;                          /**< length of the DCT4. */
-    uint16_t Nby2;                       /**< half of the length of the DCT4. */
-    float32_t normalize;                 /**< normalizing factor. */
-    float32_t *pTwiddle;                 /**< points to the twiddle factor table. */
-    float32_t *pCosFactor;               /**< points to the cosFactor table. */
-    arm_rfft_instance_f32 *pRfft;        /**< points to the real FFT instance. */
-    arm_cfft_radix4_instance_f32 *pCfft; /**< points to the complex FFT instance. */
-  } arm_dct4_instance_f32;
-
-
-  /**
-   * @brief  Initialization function for the floating-point DCT4/IDCT4.
-   * @param[in,out] S          points to an instance of floating-point DCT4/IDCT4 structure.
-   * @param[in]     S_RFFT     points to an instance of floating-point RFFT/RIFFT structure.
-   * @param[in]     S_CFFT     points to an instance of floating-point CFFT/CIFFT structure.
-   * @param[in]     N          length of the DCT4.
-   * @param[in]     Nby2       half of the length of the DCT4.
-   * @param[in]     normalize  normalizing factor.
-   * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_ARGUMENT_ERROR if <code>fftLenReal</code> is not a supported transform length.
-   */
-  arm_status arm_dct4_init_f32(
-  arm_dct4_instance_f32 * S,
-  arm_rfft_instance_f32 * S_RFFT,
-  arm_cfft_radix4_instance_f32 * S_CFFT,
-  uint16_t N,
-  uint16_t Nby2,
-  float32_t normalize);
-
-
-  /**
-   * @brief Processing function for the floating-point DCT4/IDCT4.
-   * @param[in]     S              points to an instance of the floating-point DCT4/IDCT4 structure.
-   * @param[in]     pState         points to state buffer.
-   * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
-   */
-  void arm_dct4_f32(
-  const arm_dct4_instance_f32 * S,
-  float32_t * pState,
-  float32_t * pInlineBuffer);
-
-
-  /**
-   * @brief Instance structure for the Q31 DCT4/IDCT4 function.
-   */
-  typedef struct
-  {
-    uint16_t N;                          /**< length of the DCT4. */
-    uint16_t Nby2;                       /**< half of the length of the DCT4. */
-    q31_t normalize;                     /**< normalizing factor. */
-    q31_t *pTwiddle;                     /**< points to the twiddle factor table. */
-    q31_t *pCosFactor;                   /**< points to the cosFactor table. */
-    arm_rfft_instance_q31 *pRfft;        /**< points to the real FFT instance. */
-    arm_cfft_radix4_instance_q31 *pCfft; /**< points to the complex FFT instance. */
-  } arm_dct4_instance_q31;
-
-
-  /**
-   * @brief  Initialization function for the Q31 DCT4/IDCT4.
-   * @param[in,out] S          points to an instance of Q31 DCT4/IDCT4 structure.
-   * @param[in]     S_RFFT     points to an instance of Q31 RFFT/RIFFT structure
-   * @param[in]     S_CFFT     points to an instance of Q31 CFFT/CIFFT structure
-   * @param[in]     N          length of the DCT4.
-   * @param[in]     Nby2       half of the length of the DCT4.
-   * @param[in]     normalize  normalizing factor.
-   * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_ARGUMENT_ERROR if <code>N</code> is not a supported transform length.
-   */
-  arm_status arm_dct4_init_q31(
-  arm_dct4_instance_q31 * S,
-  arm_rfft_instance_q31 * S_RFFT,
-  arm_cfft_radix4_instance_q31 * S_CFFT,
-  uint16_t N,
-  uint16_t Nby2,
-  q31_t normalize);
-
-
-  /**
-   * @brief Processing function for the Q31 DCT4/IDCT4.
-   * @param[in]     S              points to an instance of the Q31 DCT4 structure.
-   * @param[in]     pState         points to state buffer.
-   * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
-   */
-  void arm_dct4_q31(
-  const arm_dct4_instance_q31 * S,
-  q31_t * pState,
-  q31_t * pInlineBuffer);
-
-
-  /**
-   * @brief Instance structure for the Q15 DCT4/IDCT4 function.
-   */
-  typedef struct
-  {
-    uint16_t N;                          /**< length of the DCT4. */
-    uint16_t Nby2;                       /**< half of the length of the DCT4. */
-    q15_t normalize;                     /**< normalizing factor. */
-    q15_t *pTwiddle;                     /**< points to the twiddle factor table. */
-    q15_t *pCosFactor;                   /**< points to the cosFactor table. */
-    arm_rfft_instance_q15 *pRfft;        /**< points to the real FFT instance. */
-    arm_cfft_radix4_instance_q15 *pCfft; /**< points to the complex FFT instance. */
-  } arm_dct4_instance_q15;
-
-
-  /**
-   * @brief  Initialization function for the Q15 DCT4/IDCT4.
-   * @param[in,out] S          points to an instance of Q15 DCT4/IDCT4 structure.
-   * @param[in]     S_RFFT     points to an instance of Q15 RFFT/RIFFT structure.
-   * @param[in]     S_CFFT     points to an instance of Q15 CFFT/CIFFT structure.
-   * @param[in]     N          length of the DCT4.
-   * @param[in]     Nby2       half of the length of the DCT4.
-   * @param[in]     normalize  normalizing factor.
-   * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_ARGUMENT_ERROR if <code>N</code> is not a supported transform length.
-   */
-  arm_status arm_dct4_init_q15(
-  arm_dct4_instance_q15 * S,
-  arm_rfft_instance_q15 * S_RFFT,
-  arm_cfft_radix4_instance_q15 * S_CFFT,
-  uint16_t N,
-  uint16_t Nby2,
-  q15_t normalize);
-
-
-  /**
-   * @brief Processing function for the Q15 DCT4/IDCT4.
-   * @param[in]     S              points to an instance of the Q15 DCT4 structure.
-   * @param[in]     pState         points to state buffer.
-   * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
-   */
-  void arm_dct4_q15(
-  const arm_dct4_instance_q15 * S,
-  q15_t * pState,
-  q15_t * pInlineBuffer);
-
-
-  /**
-   * @brief Floating-point vector addition.
-   * @param[in]  pSrcA      points to the first input vector
-   * @param[in]  pSrcB      points to the second input vector
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in each vector
-   */
-  void arm_add_f32(
-  float32_t * pSrcA,
-  float32_t * pSrcB,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Q7 vector addition.
-   * @param[in]  pSrcA      points to the first input vector
-   * @param[in]  pSrcB      points to the second input vector
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in each vector
-   */
-  void arm_add_q7(
-  q7_t * pSrcA,
-  q7_t * pSrcB,
-  q7_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Q15 vector addition.
-   * @param[in]  pSrcA      points to the first input vector
-   * @param[in]  pSrcB      points to the second input vector
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in each vector
-   */
-  void arm_add_q15(
-  q15_t * pSrcA,
-  q15_t * pSrcB,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Q31 vector addition.
-   * @param[in]  pSrcA      points to the first input vector
-   * @param[in]  pSrcB      points to the second input vector
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in each vector
-   */
-  void arm_add_q31(
-  q31_t * pSrcA,
-  q31_t * pSrcB,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Floating-point vector subtraction.
-   * @param[in]  pSrcA      points to the first input vector
-   * @param[in]  pSrcB      points to the second input vector
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in each vector
-   */
-  void arm_sub_f32(
-  float32_t * pSrcA,
-  float32_t * pSrcB,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Q7 vector subtraction.
-   * @param[in]  pSrcA      points to the first input vector
-   * @param[in]  pSrcB      points to the second input vector
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in each vector
-   */
-  void arm_sub_q7(
-  q7_t * pSrcA,
-  q7_t * pSrcB,
-  q7_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Q15 vector subtraction.
-   * @param[in]  pSrcA      points to the first input vector
-   * @param[in]  pSrcB      points to the second input vector
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in each vector
-   */
-  void arm_sub_q15(
-  q15_t * pSrcA,
-  q15_t * pSrcB,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Q31 vector subtraction.
-   * @param[in]  pSrcA      points to the first input vector
-   * @param[in]  pSrcB      points to the second input vector
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in each vector
-   */
-  void arm_sub_q31(
-  q31_t * pSrcA,
-  q31_t * pSrcB,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Multiplies a floating-point vector by a scalar.
-   * @param[in]  pSrc       points to the input vector
-   * @param[in]  scale      scale factor to be applied
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in the vector
-   */
-  void arm_scale_f32(
-  float32_t * pSrc,
-  float32_t scale,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Multiplies a Q7 vector by a scalar.
-   * @param[in]  pSrc        points to the input vector
-   * @param[in]  scaleFract  fractional portion of the scale value
-   * @param[in]  shift       number of bits to shift the result by
-   * @param[out] pDst        points to the output vector
-   * @param[in]  blockSize   number of samples in the vector
-   */
-  void arm_scale_q7(
-  q7_t * pSrc,
-  q7_t scaleFract,
-  int8_t shift,
-  q7_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Multiplies a Q15 vector by a scalar.
-   * @param[in]  pSrc        points to the input vector
-   * @param[in]  scaleFract  fractional portion of the scale value
-   * @param[in]  shift       number of bits to shift the result by
-   * @param[out] pDst        points to the output vector
-   * @param[in]  blockSize   number of samples in the vector
-   */
-  void arm_scale_q15(
-  q15_t * pSrc,
-  q15_t scaleFract,
-  int8_t shift,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Multiplies a Q31 vector by a scalar.
-   * @param[in]  pSrc        points to the input vector
-   * @param[in]  scaleFract  fractional portion of the scale value
-   * @param[in]  shift       number of bits to shift the result by
-   * @param[out] pDst        points to the output vector
-   * @param[in]  blockSize   number of samples in the vector
-   */
-  void arm_scale_q31(
-  q31_t * pSrc,
-  q31_t scaleFract,
-  int8_t shift,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Q7 vector absolute value.
-   * @param[in]  pSrc       points to the input buffer
-   * @param[out] pDst       points to the output buffer
-   * @param[in]  blockSize  number of samples in each vector
-   */
-  void arm_abs_q7(
-  q7_t * pSrc,
-  q7_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Floating-point vector absolute value.
-   * @param[in]  pSrc       points to the input buffer
-   * @param[out] pDst       points to the output buffer
-   * @param[in]  blockSize  number of samples in each vector
-   */
-  void arm_abs_f32(
-  float32_t * pSrc,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Q15 vector absolute value.
-   * @param[in]  pSrc       points to the input buffer
-   * @param[out] pDst       points to the output buffer
-   * @param[in]  blockSize  number of samples in each vector
-   */
-  void arm_abs_q15(
-  q15_t * pSrc,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Q31 vector absolute value.
-   * @param[in]  pSrc       points to the input buffer
-   * @param[out] pDst       points to the output buffer
-   * @param[in]  blockSize  number of samples in each vector
-   */
-  void arm_abs_q31(
-  q31_t * pSrc,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Dot product of floating-point vectors.
-   * @param[in]  pSrcA      points to the first input vector
-   * @param[in]  pSrcB      points to the second input vector
-   * @param[in]  blockSize  number of samples in each vector
-   * @param[out] result     output result returned here
-   */
-  void arm_dot_prod_f32(
-  float32_t * pSrcA,
-  float32_t * pSrcB,
-  uint32_t blockSize,
-  float32_t * result);
-
-
-  /**
-   * @brief Dot product of Q7 vectors.
-   * @param[in]  pSrcA      points to the first input vector
-   * @param[in]  pSrcB      points to the second input vector
-   * @param[in]  blockSize  number of samples in each vector
-   * @param[out] result     output result returned here
-   */
-  void arm_dot_prod_q7(
-  q7_t * pSrcA,
-  q7_t * pSrcB,
-  uint32_t blockSize,
-  q31_t * result);
-
-
-  /**
-   * @brief Dot product of Q15 vectors.
-   * @param[in]  pSrcA      points to the first input vector
-   * @param[in]  pSrcB      points to the second input vector
-   * @param[in]  blockSize  number of samples in each vector
-   * @param[out] result     output result returned here
-   */
-  void arm_dot_prod_q15(
-  q15_t * pSrcA,
-  q15_t * pSrcB,
-  uint32_t blockSize,
-  q63_t * result);
-
-
-  /**
-   * @brief Dot product of Q31 vectors.
-   * @param[in]  pSrcA      points to the first input vector
-   * @param[in]  pSrcB      points to the second input vector
-   * @param[in]  blockSize  number of samples in each vector
-   * @param[out] result     output result returned here
-   */
-  void arm_dot_prod_q31(
-  q31_t * pSrcA,
-  q31_t * pSrcB,
-  uint32_t blockSize,
-  q63_t * result);
-
-
-  /**
-   * @brief  Shifts the elements of a Q7 vector a specified number of bits.
-   * @param[in]  pSrc       points to the input vector
-   * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative value shifts right.
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in the vector
-   */
-  void arm_shift_q7(
-  q7_t * pSrc,
-  int8_t shiftBits,
-  q7_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Shifts the elements of a Q15 vector a specified number of bits.
-   * @param[in]  pSrc       points to the input vector
-   * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative value shifts right.
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in the vector
-   */
-  void arm_shift_q15(
-  q15_t * pSrc,
-  int8_t shiftBits,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Shifts the elements of a Q31 vector a specified number of bits.
-   * @param[in]  pSrc       points to the input vector
-   * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative value shifts right.
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in the vector
-   */
-  void arm_shift_q31(
-  q31_t * pSrc,
-  int8_t shiftBits,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Adds a constant offset to a floating-point vector.
-   * @param[in]  pSrc       points to the input vector
-   * @param[in]  offset     is the offset to be added
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in the vector
-   */
-  void arm_offset_f32(
-  float32_t * pSrc,
-  float32_t offset,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Adds a constant offset to a Q7 vector.
-   * @param[in]  pSrc       points to the input vector
-   * @param[in]  offset     is the offset to be added
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in the vector
-   */
-  void arm_offset_q7(
-  q7_t * pSrc,
-  q7_t offset,
-  q7_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Adds a constant offset to a Q15 vector.
-   * @param[in]  pSrc       points to the input vector
-   * @param[in]  offset     is the offset to be added
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in the vector
-   */
-  void arm_offset_q15(
-  q15_t * pSrc,
-  q15_t offset,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Adds a constant offset to a Q31 vector.
-   * @param[in]  pSrc       points to the input vector
-   * @param[in]  offset     is the offset to be added
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in the vector
-   */
-  void arm_offset_q31(
-  q31_t * pSrc,
-  q31_t offset,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Negates the elements of a floating-point vector.
-   * @param[in]  pSrc       points to the input vector
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in the vector
-   */
-  void arm_negate_f32(
-  float32_t * pSrc,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Negates the elements of a Q7 vector.
-   * @param[in]  pSrc       points to the input vector
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in the vector
-   */
-  void arm_negate_q7(
-  q7_t * pSrc,
-  q7_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Negates the elements of a Q15 vector.
-   * @param[in]  pSrc       points to the input vector
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in the vector
-   */
-  void arm_negate_q15(
-  q15_t * pSrc,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Negates the elements of a Q31 vector.
-   * @param[in]  pSrc       points to the input vector
-   * @param[out] pDst       points to the output vector
-   * @param[in]  blockSize  number of samples in the vector
-   */
-  void arm_negate_q31(
-  q31_t * pSrc,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Copies the elements of a floating-point vector.
-   * @param[in]  pSrc       input pointer
-   * @param[out] pDst       output pointer
-   * @param[in]  blockSize  number of samples to process
-   */
-  void arm_copy_f32(
-  float32_t * pSrc,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Copies the elements of a Q7 vector.
-   * @param[in]  pSrc       input pointer
-   * @param[out] pDst       output pointer
-   * @param[in]  blockSize  number of samples to process
-   */
-  void arm_copy_q7(
-  q7_t * pSrc,
-  q7_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Copies the elements of a Q15 vector.
-   * @param[in]  pSrc       input pointer
-   * @param[out] pDst       output pointer
-   * @param[in]  blockSize  number of samples to process
-   */
-  void arm_copy_q15(
-  q15_t * pSrc,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Copies the elements of a Q31 vector.
-   * @param[in]  pSrc       input pointer
-   * @param[out] pDst       output pointer
-   * @param[in]  blockSize  number of samples to process
-   */
-  void arm_copy_q31(
-  q31_t * pSrc,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Fills a constant value into a floating-point vector.
-   * @param[in]  value      input value to be filled
-   * @param[out] pDst       output pointer
-   * @param[in]  blockSize  number of samples to process
-   */
-  void arm_fill_f32(
-  float32_t value,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Fills a constant value into a Q7 vector.
-   * @param[in]  value      input value to be filled
-   * @param[out] pDst       output pointer
-   * @param[in]  blockSize  number of samples to process
-   */
-  void arm_fill_q7(
-  q7_t value,
-  q7_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Fills a constant value into a Q15 vector.
-   * @param[in]  value      input value to be filled
-   * @param[out] pDst       output pointer
-   * @param[in]  blockSize  number of samples to process
-   */
-  void arm_fill_q15(
-  q15_t value,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Fills a constant value into a Q31 vector.
-   * @param[in]  value      input value to be filled
-   * @param[out] pDst       output pointer
-   * @param[in]  blockSize  number of samples to process
-   */
-  void arm_fill_q31(
-  q31_t value,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-/**
- * @brief Convolution of floating-point sequences.
- * @param[in]  pSrcA    points to the first input sequence.
- * @param[in]  srcALen  length of the first input sequence.
- * @param[in]  pSrcB    points to the second input sequence.
- * @param[in]  srcBLen  length of the second input sequence.
- * @param[out] pDst     points to the location where the output result is written.  Length srcALen+srcBLen-1.
- */
-  void arm_conv_f32(
-  float32_t * pSrcA,
-  uint32_t srcALen,
-  float32_t * pSrcB,
-  uint32_t srcBLen,
-  float32_t * pDst);
-
-
-  /**
-   * @brief Convolution of Q15 sequences.
-   * @param[in]  pSrcA      points to the first input sequence.
-   * @param[in]  srcALen    length of the first input sequence.
-   * @param[in]  pSrcB      points to the second input sequence.
-   * @param[in]  srcBLen    length of the second input sequence.
-   * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
-   * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, srcBLen) - 2.
-   * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
-   */
-  void arm_conv_opt_q15(
-  q15_t * pSrcA,
-  uint32_t srcALen,
-  q15_t * pSrcB,
-  uint32_t srcBLen,
-  q15_t * pDst,
-  q15_t * pScratch1,
-  q15_t * pScratch2);
-
-
-/**
- * @brief Convolution of Q15 sequences.
- * @param[in]  pSrcA    points to the first input sequence.
- * @param[in]  srcALen  length of the first input sequence.
- * @param[in]  pSrcB    points to the second input sequence.
- * @param[in]  srcBLen  length of the second input sequence.
- * @param[out] pDst     points to the location where the output result is written.  Length srcALen+srcBLen-1.
- */
-  void arm_conv_q15(
-  q15_t * pSrcA,
-  uint32_t srcALen,
-  q15_t * pSrcB,
-  uint32_t srcBLen,
-  q15_t * pDst);
-
-
-  /**
-   * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
-   * @param[in]  pSrcA    points to the first input sequence.
-   * @param[in]  srcALen  length of the first input sequence.
-   * @param[in]  pSrcB    points to the second input sequence.
-   * @param[in]  srcBLen  length of the second input sequence.
-   * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
-   */
-  void arm_conv_fast_q15(
-          q15_t * pSrcA,
-          uint32_t srcALen,
-          q15_t * pSrcB,
-          uint32_t srcBLen,
-          q15_t * pDst);
-
-
-  /**
-   * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
-   * @param[in]  pSrcA      points to the first input sequence.
-   * @param[in]  srcALen    length of the first input sequence.
-   * @param[in]  pSrcB      points to the second input sequence.
-   * @param[in]  srcBLen    length of the second input sequence.
-   * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
-   * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, srcBLen) - 2.
-   * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
-   */
-  void arm_conv_fast_opt_q15(
-  q15_t * pSrcA,
-  uint32_t srcALen,
-  q15_t * pSrcB,
-  uint32_t srcBLen,
-  q15_t * pDst,
-  q15_t * pScratch1,
-  q15_t * pScratch2);
-
-
-  /**
-   * @brief Convolution of Q31 sequences.
-   * @param[in]  pSrcA    points to the first input sequence.
-   * @param[in]  srcALen  length of the first input sequence.
-   * @param[in]  pSrcB    points to the second input sequence.
-   * @param[in]  srcBLen  length of the second input sequence.
-   * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
-   */
-  void arm_conv_q31(
-  q31_t * pSrcA,
-  uint32_t srcALen,
-  q31_t * pSrcB,
-  uint32_t srcBLen,
-  q31_t * pDst);
-
-
-  /**
-   * @brief Convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
-   * @param[in]  pSrcA    points to the first input sequence.
-   * @param[in]  srcALen  length of the first input sequence.
-   * @param[in]  pSrcB    points to the second input sequence.
-   * @param[in]  srcBLen  length of the second input sequence.
-   * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
-   */
-  void arm_conv_fast_q31(
-  q31_t * pSrcA,
-  uint32_t srcALen,
-  q31_t * pSrcB,
-  uint32_t srcBLen,
-  q31_t * pDst);
-
-
-    /**
-   * @brief Convolution of Q7 sequences.
-   * @param[in]  pSrcA      points to the first input sequence.
-   * @param[in]  srcALen    length of the first input sequence.
-   * @param[in]  pSrcB      points to the second input sequence.
-   * @param[in]  srcBLen    length of the second input sequence.
-   * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
-   * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) + 2*min(srcALen, srcBLen) - 2.
-   * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
-   */
-  void arm_conv_opt_q7(
-  q7_t * pSrcA,
-  uint32_t srcALen,
-  q7_t * pSrcB,
-  uint32_t srcBLen,
-  q7_t * pDst,
-  q15_t * pScratch1,
-  q15_t * pScratch2);
-
-
-  /**
-   * @brief Convolution of Q7 sequences.
-   * @param[in]  pSrcA    points to the first input sequence.
-   * @param[in]  srcALen  length of the first input sequence.
-   * @param[in]  pSrcB    points to the second input sequence.
-   * @param[in]  srcBLen  length of the second input sequence.
-   * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
-   */
-  void arm_conv_q7(
-  q7_t * pSrcA,
-  uint32_t srcALen,
-  q7_t * pSrcB,
-  uint32_t srcBLen,
-  q7_t * pDst);
-
-
-  /**
-   * @brief Partial convolution of floating-point sequences.
-   * @param[in]  pSrcA       points to the first input sequence.
-   * @param[in]  srcALen     length of the first input sequence.
-   * @param[in]  pSrcB       points to the second input sequence.
-   * @param[in]  srcBLen     length of the second input sequence.
-   * @param[out] pDst        points to the block of output data
-   * @param[in]  firstIndex  is the first output sample to start with.
-   * @param[in]  numPoints   is the number of output points to be computed.
-   * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2].
-   */
-  arm_status arm_conv_partial_f32(
-  float32_t * pSrcA,
-  uint32_t srcALen,
-  float32_t * pSrcB,
-  uint32_t srcBLen,
-  float32_t * pDst,
-  uint32_t firstIndex,
-  uint32_t numPoints);
-
-
-  /**
-   * @brief Partial convolution of Q15 sequences.
-   * @param[in]  pSrcA       points to the first input sequence.
-   * @param[in]  srcALen     length of the first input sequence.
-   * @param[in]  pSrcB       points to the second input sequence.
-   * @param[in]  srcBLen     length of the second input sequence.
-   * @param[out] pDst        points to the block of output data
-   * @param[in]  firstIndex  is the first output sample to start with.
-   * @param[in]  numPoints   is the number of output points to be computed.
-   * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, srcBLen) - 2.
-   * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
-   * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2].
-   */
-  arm_status arm_conv_partial_opt_q15(
-  q15_t * pSrcA,
-  uint32_t srcALen,
-  q15_t * pSrcB,
-  uint32_t srcBLen,
-  q15_t * pDst,
-  uint32_t firstIndex,
-  uint32_t numPoints,
-  q15_t * pScratch1,
-  q15_t * pScratch2);
-
-
-  /**
-   * @brief Partial convolution of Q15 sequences.
-   * @param[in]  pSrcA       points to the first input sequence.
-   * @param[in]  srcALen     length of the first input sequence.
-   * @param[in]  pSrcB       points to the second input sequence.
-   * @param[in]  srcBLen     length of the second input sequence.
-   * @param[out] pDst        points to the block of output data
-   * @param[in]  firstIndex  is the first output sample to start with.
-   * @param[in]  numPoints   is the number of output points to be computed.
-   * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2].
-   */
-  arm_status arm_conv_partial_q15(
-  q15_t * pSrcA,
-  uint32_t srcALen,
-  q15_t * pSrcB,
-  uint32_t srcBLen,
-  q15_t * pDst,
-  uint32_t firstIndex,
-  uint32_t numPoints);
-
-
-  /**
-   * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
-   * @param[in]  pSrcA       points to the first input sequence.
-   * @param[in]  srcALen     length of the first input sequence.
-   * @param[in]  pSrcB       points to the second input sequence.
-   * @param[in]  srcBLen     length of the second input sequence.
-   * @param[out] pDst        points to the block of output data
-   * @param[in]  firstIndex  is the first output sample to start with.
-   * @param[in]  numPoints   is the number of output points to be computed.
-   * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2].
-   */
-  arm_status arm_conv_partial_fast_q15(
-  q15_t * pSrcA,
-  uint32_t srcALen,
-  q15_t * pSrcB,
-  uint32_t srcBLen,
-  q15_t * pDst,
-  uint32_t firstIndex,
-  uint32_t numPoints);
-
-
-  /**
-   * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
-   * @param[in]  pSrcA       points to the first input sequence.
-   * @param[in]  srcALen     length of the first input sequence.
-   * @param[in]  pSrcB       points to the second input sequence.
-   * @param[in]  srcBLen     length of the second input sequence.
-   * @param[out] pDst        points to the block of output data
-   * @param[in]  firstIndex  is the first output sample to start with.
-   * @param[in]  numPoints   is the number of output points to be computed.
-   * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, srcBLen) - 2.
-   * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
-   * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2].
-   */
-  arm_status arm_conv_partial_fast_opt_q15(
-  q15_t * pSrcA,
-  uint32_t srcALen,
-  q15_t * pSrcB,
-  uint32_t srcBLen,
-  q15_t * pDst,
-  uint32_t firstIndex,
-  uint32_t numPoints,
-  q15_t * pScratch1,
-  q15_t * pScratch2);
-
-
-  /**
-   * @brief Partial convolution of Q31 sequences.
-   * @param[in]  pSrcA       points to the first input sequence.
-   * @param[in]  srcALen     length of the first input sequence.
-   * @param[in]  pSrcB       points to the second input sequence.
-   * @param[in]  srcBLen     length of the second input sequence.
-   * @param[out] pDst        points to the block of output data
-   * @param[in]  firstIndex  is the first output sample to start with.
-   * @param[in]  numPoints   is the number of output points to be computed.
-   * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2].
-   */
-  arm_status arm_conv_partial_q31(
-  q31_t * pSrcA,
-  uint32_t srcALen,
-  q31_t * pSrcB,
-  uint32_t srcBLen,
-  q31_t * pDst,
-  uint32_t firstIndex,
-  uint32_t numPoints);
-
-
-  /**
-   * @brief Partial convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
-   * @param[in]  pSrcA       points to the first input sequence.
-   * @param[in]  srcALen     length of the first input sequence.
-   * @param[in]  pSrcB       points to the second input sequence.
-   * @param[in]  srcBLen     length of the second input sequence.
-   * @param[out] pDst        points to the block of output data
-   * @param[in]  firstIndex  is the first output sample to start with.
-   * @param[in]  numPoints   is the number of output points to be computed.
-   * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2].
-   */
-  arm_status arm_conv_partial_fast_q31(
-  q31_t * pSrcA,
-  uint32_t srcALen,
-  q31_t * pSrcB,
-  uint32_t srcBLen,
-  q31_t * pDst,
-  uint32_t firstIndex,
-  uint32_t numPoints);
-
-
-  /**
-   * @brief Partial convolution of Q7 sequences
-   * @param[in]  pSrcA       points to the first input sequence.
-   * @param[in]  srcALen     length of the first input sequence.
-   * @param[in]  pSrcB       points to the second input sequence.
-   * @param[in]  srcBLen     length of the second input sequence.
-   * @param[out] pDst        points to the block of output data
-   * @param[in]  firstIndex  is the first output sample to start with.
-   * @param[in]  numPoints   is the number of output points to be computed.
-   * @param[in]  pScratch1   points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) + 2*min(srcALen, srcBLen) - 2.
-   * @param[in]  pScratch2   points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
-   * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2].
-   */
-  arm_status arm_conv_partial_opt_q7(
-  q7_t * pSrcA,
-  uint32_t srcALen,
-  q7_t * pSrcB,
-  uint32_t srcBLen,
-  q7_t * pDst,
-  uint32_t firstIndex,
-  uint32_t numPoints,
-  q15_t * pScratch1,
-  q15_t * pScratch2);
-
-
-/**
-   * @brief Partial convolution of Q7 sequences.
-   * @param[in]  pSrcA       points to the first input sequence.
-   * @param[in]  srcALen     length of the first input sequence.
-   * @param[in]  pSrcB       points to the second input sequence.
-   * @param[in]  srcBLen     length of the second input sequence.
-   * @param[out] pDst        points to the block of output data
-   * @param[in]  firstIndex  is the first output sample to start with.
-   * @param[in]  numPoints   is the number of output points to be computed.
-   * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2].
-   */
-  arm_status arm_conv_partial_q7(
-  q7_t * pSrcA,
-  uint32_t srcALen,
-  q7_t * pSrcB,
-  uint32_t srcBLen,
-  q7_t * pDst,
-  uint32_t firstIndex,
-  uint32_t numPoints);
-
-
-  /**
-   * @brief Instance structure for the Q15 FIR decimator.
-   */
-  typedef struct
-  {
-    uint8_t M;                  /**< decimation factor. */
-    uint16_t numTaps;           /**< number of coefficients in the filter. */
-    q15_t *pCoeffs;             /**< points to the coefficient array. The array is of length numTaps.*/
-    q15_t *pState;              /**< points to the state variable array. The array is of length numTaps+blockSize-1. */
-  } arm_fir_decimate_instance_q15;
-
-  /**
-   * @brief Instance structure for the Q31 FIR decimator.
-   */
-  typedef struct
-  {
-    uint8_t M;                  /**< decimation factor. */
-    uint16_t numTaps;           /**< number of coefficients in the filter. */
-    q31_t *pCoeffs;             /**< points to the coefficient array. The array is of length numTaps.*/
-    q31_t *pState;              /**< points to the state variable array. The array is of length numTaps+blockSize-1. */
-  } arm_fir_decimate_instance_q31;
-
-  /**
-   * @brief Instance structure for the floating-point FIR decimator.
-   */
-  typedef struct
-  {
-    uint8_t M;                  /**< decimation factor. */
-    uint16_t numTaps;           /**< number of coefficients in the filter. */
-    float32_t *pCoeffs;         /**< points to the coefficient array. The array is of length numTaps.*/
-    float32_t *pState;          /**< points to the state variable array. The array is of length numTaps+blockSize-1. */
-  } arm_fir_decimate_instance_f32;
-
-
-  /**
-   * @brief Processing function for the floating-point FIR decimator.
-   * @param[in]  S          points to an instance of the floating-point FIR decimator structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data
-   * @param[in]  blockSize  number of input samples to process per call.
-   */
-  void arm_fir_decimate_f32(
-  const arm_fir_decimate_instance_f32 * S,
-  float32_t * pSrc,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Initialization function for the floating-point FIR decimator.
-   * @param[in,out] S          points to an instance of the floating-point FIR decimator structure.
-   * @param[in]     numTaps    number of coefficients in the filter.
-   * @param[in]     M          decimation factor.
-   * @param[in]     pCoeffs    points to the filter coefficients.
-   * @param[in]     pState     points to the state buffer.
-   * @param[in]     blockSize  number of input samples to process per call.
-   * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_LENGTH_ERROR if
-   * <code>blockSize</code> is not a multiple of <code>M</code>.
-   */
-  arm_status arm_fir_decimate_init_f32(
-  arm_fir_decimate_instance_f32 * S,
-  uint16_t numTaps,
-  uint8_t M,
-  float32_t * pCoeffs,
-  float32_t * pState,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Processing function for the Q15 FIR decimator.
-   * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data
-   * @param[in]  blockSize  number of input samples to process per call.
-   */
-  void arm_fir_decimate_q15(
-  const arm_fir_decimate_instance_q15 * S,
-  q15_t * pSrc,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Processing function for the Q15 FIR decimator (fast variant) for Cortex-M3 and Cortex-M4.
-   * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data
-   * @param[in]  blockSize  number of input samples to process per call.
-   */
-  void arm_fir_decimate_fast_q15(
-  const arm_fir_decimate_instance_q15 * S,
-  q15_t * pSrc,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Initialization function for the Q15 FIR decimator.
-   * @param[in,out] S          points to an instance of the Q15 FIR decimator structure.
-   * @param[in]     numTaps    number of coefficients in the filter.
-   * @param[in]     M          decimation factor.
-   * @param[in]     pCoeffs    points to the filter coefficients.
-   * @param[in]     pState     points to the state buffer.
-   * @param[in]     blockSize  number of input samples to process per call.
-   * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_LENGTH_ERROR if
-   * <code>blockSize</code> is not a multiple of <code>M</code>.
-   */
-  arm_status arm_fir_decimate_init_q15(
-  arm_fir_decimate_instance_q15 * S,
-  uint16_t numTaps,
-  uint8_t M,
-  q15_t * pCoeffs,
-  q15_t * pState,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Processing function for the Q31 FIR decimator.
-   * @param[in]  S     points to an instance of the Q31 FIR decimator structure.
-   * @param[in]  pSrc  points to the block of input data.
-   * @param[out] pDst  points to the block of output data
-   * @param[in] blockSize number of input samples to process per call.
-   */
-  void arm_fir_decimate_q31(
-  const arm_fir_decimate_instance_q31 * S,
-  q31_t * pSrc,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-  /**
-   * @brief Processing function for the Q31 FIR decimator (fast variant) for Cortex-M3 and Cortex-M4.
-   * @param[in]  S          points to an instance of the Q31 FIR decimator structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data
-   * @param[in]  blockSize  number of input samples to process per call.
-   */
-  void arm_fir_decimate_fast_q31(
-  arm_fir_decimate_instance_q31 * S,
-  q31_t * pSrc,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Initialization function for the Q31 FIR decimator.
-   * @param[in,out] S          points to an instance of the Q31 FIR decimator structure.
-   * @param[in]     numTaps    number of coefficients in the filter.
-   * @param[in]     M          decimation factor.
-   * @param[in]     pCoeffs    points to the filter coefficients.
-   * @param[in]     pState     points to the state buffer.
-   * @param[in]     blockSize  number of input samples to process per call.
-   * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_LENGTH_ERROR if
-   * <code>blockSize</code> is not a multiple of <code>M</code>.
-   */
-  arm_status arm_fir_decimate_init_q31(
-  arm_fir_decimate_instance_q31 * S,
-  uint16_t numTaps,
-  uint8_t M,
-  q31_t * pCoeffs,
-  q31_t * pState,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Instance structure for the Q15 FIR interpolator.
-   */
-  typedef struct
-  {
-    uint8_t L;                      /**< upsample factor. */
-    uint16_t phaseLength;           /**< length of each polyphase filter component. */
-    q15_t *pCoeffs;                 /**< points to the coefficient array. The array is of length L*phaseLength. */
-    q15_t *pState;                  /**< points to the state variable array. The array is of length blockSize+phaseLength-1. */
-  } arm_fir_interpolate_instance_q15;
-
-  /**
-   * @brief Instance structure for the Q31 FIR interpolator.
-   */
-  typedef struct
-  {
-    uint8_t L;                      /**< upsample factor. */
-    uint16_t phaseLength;           /**< length of each polyphase filter component. */
-    q31_t *pCoeffs;                 /**< points to the coefficient array. The array is of length L*phaseLength. */
-    q31_t *pState;                  /**< points to the state variable array. The array is of length blockSize+phaseLength-1. */
-  } arm_fir_interpolate_instance_q31;
-
-  /**
-   * @brief Instance structure for the floating-point FIR interpolator.
-   */
-  typedef struct
-  {
-    uint8_t L;                     /**< upsample factor. */
-    uint16_t phaseLength;          /**< length of each polyphase filter component. */
-    float32_t *pCoeffs;            /**< points to the coefficient array. The array is of length L*phaseLength. */
-    float32_t *pState;             /**< points to the state variable array. The array is of length phaseLength+numTaps-1. */
-  } arm_fir_interpolate_instance_f32;
-
-
-  /**
-   * @brief Processing function for the Q15 FIR interpolator.
-   * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data.
-   * @param[in]  blockSize  number of input samples to process per call.
-   */
-  void arm_fir_interpolate_q15(
-  const arm_fir_interpolate_instance_q15 * S,
-  q15_t * pSrc,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Initialization function for the Q15 FIR interpolator.
-   * @param[in,out] S          points to an instance of the Q15 FIR interpolator structure.
-   * @param[in]     L          upsample factor.
-   * @param[in]     numTaps    number of filter coefficients in the filter.
-   * @param[in]     pCoeffs    points to the filter coefficient buffer.
-   * @param[in]     pState     points to the state buffer.
-   * @param[in]     blockSize  number of input samples to process per call.
-   * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_LENGTH_ERROR if
-   * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</code>.
-   */
-  arm_status arm_fir_interpolate_init_q15(
-  arm_fir_interpolate_instance_q15 * S,
-  uint8_t L,
-  uint16_t numTaps,
-  q15_t * pCoeffs,
-  q15_t * pState,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Processing function for the Q31 FIR interpolator.
-   * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data.
-   * @param[in]  blockSize  number of input samples to process per call.
-   */
-  void arm_fir_interpolate_q31(
-  const arm_fir_interpolate_instance_q31 * S,
-  q31_t * pSrc,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Initialization function for the Q31 FIR interpolator.
-   * @param[in,out] S          points to an instance of the Q31 FIR interpolator structure.
-   * @param[in]     L          upsample factor.
-   * @param[in]     numTaps    number of filter coefficients in the filter.
-   * @param[in]     pCoeffs    points to the filter coefficient buffer.
-   * @param[in]     pState     points to the state buffer.
-   * @param[in]     blockSize  number of input samples to process per call.
-   * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_LENGTH_ERROR if
-   * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</code>.
-   */
-  arm_status arm_fir_interpolate_init_q31(
-  arm_fir_interpolate_instance_q31 * S,
-  uint8_t L,
-  uint16_t numTaps,
-  q31_t * pCoeffs,
-  q31_t * pState,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Processing function for the floating-point FIR interpolator.
-   * @param[in]  S          points to an instance of the floating-point FIR interpolator structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data.
-   * @param[in]  blockSize  number of input samples to process per call.
-   */
-  void arm_fir_interpolate_f32(
-  const arm_fir_interpolate_instance_f32 * S,
-  float32_t * pSrc,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Initialization function for the floating-point FIR interpolator.
-   * @param[in,out] S          points to an instance of the floating-point FIR interpolator structure.
-   * @param[in]     L          upsample factor.
-   * @param[in]     numTaps    number of filter coefficients in the filter.
-   * @param[in]     pCoeffs    points to the filter coefficient buffer.
-   * @param[in]     pState     points to the state buffer.
-   * @param[in]     blockSize  number of input samples to process per call.
-   * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_LENGTH_ERROR if
-   * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</code>.
-   */
-  arm_status arm_fir_interpolate_init_f32(
-  arm_fir_interpolate_instance_f32 * S,
-  uint8_t L,
-  uint16_t numTaps,
-  float32_t * pCoeffs,
-  float32_t * pState,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Instance structure for the high precision Q31 Biquad cascade filter.
-   */
-  typedef struct
-  {
-    uint8_t numStages;       /**< number of 2nd order stages in the filter.  Overall order is 2*numStages. */
-    q63_t *pState;           /**< points to the array of state coefficients.  The array is of length 4*numStages. */
-    q31_t *pCoeffs;          /**< points to the array of coefficients.  The array is of length 5*numStages. */
-    uint8_t postShift;       /**< additional shift, in bits, applied to each output sample. */
-  } arm_biquad_cas_df1_32x64_ins_q31;
-
-
-  /**
-   * @param[in]  S          points to an instance of the high precision Q31 Biquad cascade filter structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_biquad_cas_df1_32x64_q31(
-  const arm_biquad_cas_df1_32x64_ins_q31 * S,
-  q31_t * pSrc,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @param[in,out] S          points to an instance of the high precision Q31 Biquad cascade filter structure.
-   * @param[in]     numStages  number of 2nd order stages in the filter.
-   * @param[in]     pCoeffs    points to the filter coefficients.
-   * @param[in]     pState     points to the state buffer.
-   * @param[in]     postShift  shift to be applied to the output. Varies according to the coefficients format
-   */
-  void arm_biquad_cas_df1_32x64_init_q31(
-  arm_biquad_cas_df1_32x64_ins_q31 * S,
-  uint8_t numStages,
-  q31_t * pCoeffs,
-  q63_t * pState,
-  uint8_t postShift);
-
-
-  /**
-   * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filter.
-   */
-  typedef struct
-  {
-    uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*numStages. */
-    float32_t *pState;         /**< points to the array of state coefficients.  The array is of length 2*numStages. */
-    float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*numStages. */
-  } arm_biquad_cascade_df2T_instance_f32;
-
-  /**
-   * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filter.
-   */
-  typedef struct
-  {
-    uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*numStages. */
-    float32_t *pState;         /**< points to the array of state coefficients.  The array is of length 4*numStages. */
-    float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*numStages. */
-  } arm_biquad_cascade_stereo_df2T_instance_f32;
-
-  /**
-   * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filter.
-   */
-  typedef struct
-  {
-    uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*numStages. */
-    float64_t *pState;         /**< points to the array of state coefficients.  The array is of length 2*numStages. */
-    float64_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*numStages. */
-  } arm_biquad_cascade_df2T_instance_f64;
-
-
-  /**
-   * @brief Processing function for the floating-point transposed direct form II Biquad cascade filter.
-   * @param[in]  S          points to an instance of the filter data structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_biquad_cascade_df2T_f32(
-  const arm_biquad_cascade_df2T_instance_f32 * S,
-  float32_t * pSrc,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Processing function for the floating-point transposed direct form II Biquad cascade filter. 2 channels
-   * @param[in]  S          points to an instance of the filter data structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_biquad_cascade_stereo_df2T_f32(
-  const arm_biquad_cascade_stereo_df2T_instance_f32 * S,
-  float32_t * pSrc,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Processing function for the floating-point transposed direct form II Biquad cascade filter.
-   * @param[in]  S          points to an instance of the filter data structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_biquad_cascade_df2T_f64(
-  const arm_biquad_cascade_df2T_instance_f64 * S,
-  float64_t * pSrc,
-  float64_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Initialization function for the floating-point transposed direct form II Biquad cascade filter.
-   * @param[in,out] S          points to an instance of the filter data structure.
-   * @param[in]     numStages  number of 2nd order stages in the filter.
-   * @param[in]     pCoeffs    points to the filter coefficients.
-   * @param[in]     pState     points to the state buffer.
-   */
-  void arm_biquad_cascade_df2T_init_f32(
-  arm_biquad_cascade_df2T_instance_f32 * S,
-  uint8_t numStages,
-  float32_t * pCoeffs,
-  float32_t * pState);
-
-
-  /**
-   * @brief  Initialization function for the floating-point transposed direct form II Biquad cascade filter.
-   * @param[in,out] S          points to an instance of the filter data structure.
-   * @param[in]     numStages  number of 2nd order stages in the filter.
-   * @param[in]     pCoeffs    points to the filter coefficients.
-   * @param[in]     pState     points to the state buffer.
-   */
-  void arm_biquad_cascade_stereo_df2T_init_f32(
-  arm_biquad_cascade_stereo_df2T_instance_f32 * S,
-  uint8_t numStages,
-  float32_t * pCoeffs,
-  float32_t * pState);
-
-
-  /**
-   * @brief  Initialization function for the floating-point transposed direct form II Biquad cascade filter.
-   * @param[in,out] S          points to an instance of the filter data structure.
-   * @param[in]     numStages  number of 2nd order stages in the filter.
-   * @param[in]     pCoeffs    points to the filter coefficients.
-   * @param[in]     pState     points to the state buffer.
-   */
-  void arm_biquad_cascade_df2T_init_f64(
-  arm_biquad_cascade_df2T_instance_f64 * S,
-  uint8_t numStages,
-  float64_t * pCoeffs,
-  float64_t * pState);
-
-
-  /**
-   * @brief Instance structure for the Q15 FIR lattice filter.
-   */
-  typedef struct
-  {
-    uint16_t numStages;                  /**< number of filter stages. */
-    q15_t *pState;                       /**< points to the state variable array. The array is of length numStages. */
-    q15_t *pCoeffs;                      /**< points to the coefficient array. The array is of length numStages. */
-  } arm_fir_lattice_instance_q15;
-
-  /**
-   * @brief Instance structure for the Q31 FIR lattice filter.
-   */
-  typedef struct
-  {
-    uint16_t numStages;                  /**< number of filter stages. */
-    q31_t *pState;                       /**< points to the state variable array. The array is of length numStages. */
-    q31_t *pCoeffs;                      /**< points to the coefficient array. The array is of length numStages. */
-  } arm_fir_lattice_instance_q31;
-
-  /**
-   * @brief Instance structure for the floating-point FIR lattice filter.
-   */
-  typedef struct
-  {
-    uint16_t numStages;                  /**< number of filter stages. */
-    float32_t *pState;                   /**< points to the state variable array. The array is of length numStages. */
-    float32_t *pCoeffs;                  /**< points to the coefficient array. The array is of length numStages. */
-  } arm_fir_lattice_instance_f32;
-
-
-  /**
-   * @brief Initialization function for the Q15 FIR lattice filter.
-   * @param[in] S          points to an instance of the Q15 FIR lattice structure.
-   * @param[in] numStages  number of filter stages.
-   * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
-   * @param[in] pState     points to the state buffer.  The array is of length numStages.
-   */
-  void arm_fir_lattice_init_q15(
-  arm_fir_lattice_instance_q15 * S,
-  uint16_t numStages,
-  q15_t * pCoeffs,
-  q15_t * pState);
-
-
-  /**
-   * @brief Processing function for the Q15 FIR lattice filter.
-   * @param[in]  S          points to an instance of the Q15 FIR lattice structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_fir_lattice_q15(
-  const arm_fir_lattice_instance_q15 * S,
-  q15_t * pSrc,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Initialization function for the Q31 FIR lattice filter.
-   * @param[in] S          points to an instance of the Q31 FIR lattice structure.
-   * @param[in] numStages  number of filter stages.
-   * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
-   * @param[in] pState     points to the state buffer.   The array is of length numStages.
-   */
-  void arm_fir_lattice_init_q31(
-  arm_fir_lattice_instance_q31 * S,
-  uint16_t numStages,
-  q31_t * pCoeffs,
-  q31_t * pState);
-
-
-  /**
-   * @brief Processing function for the Q31 FIR lattice filter.
-   * @param[in]  S          points to an instance of the Q31 FIR lattice structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_fir_lattice_q31(
-  const arm_fir_lattice_instance_q31 * S,
-  q31_t * pSrc,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-/**
- * @brief Initialization function for the floating-point FIR lattice filter.
- * @param[in] S          points to an instance of the floating-point FIR lattice structure.
- * @param[in] numStages  number of filter stages.
- * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
- * @param[in] pState     points to the state buffer.  The array is of length numStages.
- */
-  void arm_fir_lattice_init_f32(
-  arm_fir_lattice_instance_f32 * S,
-  uint16_t numStages,
-  float32_t * pCoeffs,
-  float32_t * pState);
-
-
-  /**
-   * @brief Processing function for the floating-point FIR lattice filter.
-   * @param[in]  S          points to an instance of the floating-point FIR lattice structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_fir_lattice_f32(
-  const arm_fir_lattice_instance_f32 * S,
-  float32_t * pSrc,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Instance structure for the Q15 IIR lattice filter.
-   */
-  typedef struct
-  {
-    uint16_t numStages;                  /**< number of stages in the filter. */
-    q15_t *pState;                       /**< points to the state variable array. The array is of length numStages+blockSize. */
-    q15_t *pkCoeffs;                     /**< points to the reflection coefficient array. The array is of length numStages. */
-    q15_t *pvCoeffs;                     /**< points to the ladder coefficient array. The array is of length numStages+1. */
-  } arm_iir_lattice_instance_q15;
-
-  /**
-   * @brief Instance structure for the Q31 IIR lattice filter.
-   */
-  typedef struct
-  {
-    uint16_t numStages;                  /**< number of stages in the filter. */
-    q31_t *pState;                       /**< points to the state variable array. The array is of length numStages+blockSize. */
-    q31_t *pkCoeffs;                     /**< points to the reflection coefficient array. The array is of length numStages. */
-    q31_t *pvCoeffs;                     /**< points to the ladder coefficient array. The array is of length numStages+1. */
-  } arm_iir_lattice_instance_q31;
-
-  /**
-   * @brief Instance structure for the floating-point IIR lattice filter.
-   */
-  typedef struct
-  {
-    uint16_t numStages;                  /**< number of stages in the filter. */
-    float32_t *pState;                   /**< points to the state variable array. The array is of length numStages+blockSize. */
-    float32_t *pkCoeffs;                 /**< points to the reflection coefficient array. The array is of length numStages. */
-    float32_t *pvCoeffs;                 /**< points to the ladder coefficient array. The array is of length numStages+1. */
-  } arm_iir_lattice_instance_f32;
-
-
-  /**
-   * @brief Processing function for the floating-point IIR lattice filter.
-   * @param[in]  S          points to an instance of the floating-point IIR lattice structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_iir_lattice_f32(
-  const arm_iir_lattice_instance_f32 * S,
-  float32_t * pSrc,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Initialization function for the floating-point IIR lattice filter.
-   * @param[in] S          points to an instance of the floating-point IIR lattice structure.
-   * @param[in] numStages  number of stages in the filter.
-   * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length numStages.
-   * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStages+1.
-   * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize-1.
-   * @param[in] blockSize  number of samples to process.
-   */
-  void arm_iir_lattice_init_f32(
-  arm_iir_lattice_instance_f32 * S,
-  uint16_t numStages,
-  float32_t * pkCoeffs,
-  float32_t * pvCoeffs,
-  float32_t * pState,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Processing function for the Q31 IIR lattice filter.
-   * @param[in]  S          points to an instance of the Q31 IIR lattice structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_iir_lattice_q31(
-  const arm_iir_lattice_instance_q31 * S,
-  q31_t * pSrc,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Initialization function for the Q31 IIR lattice filter.
-   * @param[in] S          points to an instance of the Q31 IIR lattice structure.
-   * @param[in] numStages  number of stages in the filter.
-   * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length numStages.
-   * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStages+1.
-   * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize.
-   * @param[in] blockSize  number of samples to process.
-   */
-  void arm_iir_lattice_init_q31(
-  arm_iir_lattice_instance_q31 * S,
-  uint16_t numStages,
-  q31_t * pkCoeffs,
-  q31_t * pvCoeffs,
-  q31_t * pState,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Processing function for the Q15 IIR lattice filter.
-   * @param[in]  S          points to an instance of the Q15 IIR lattice structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[out] pDst       points to the block of output data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_iir_lattice_q15(
-  const arm_iir_lattice_instance_q15 * S,
-  q15_t * pSrc,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-/**
- * @brief Initialization function for the Q15 IIR lattice filter.
- * @param[in] S          points to an instance of the fixed-point Q15 IIR lattice structure.
- * @param[in] numStages  number of stages in the filter.
- * @param[in] pkCoeffs   points to reflection coefficient buffer.  The array is of length numStages.
- * @param[in] pvCoeffs   points to ladder coefficient buffer.  The array is of length numStages+1.
- * @param[in] pState     points to state buffer.  The array is of length numStages+blockSize.
- * @param[in] blockSize  number of samples to process per call.
- */
-  void arm_iir_lattice_init_q15(
-  arm_iir_lattice_instance_q15 * S,
-  uint16_t numStages,
-  q15_t * pkCoeffs,
-  q15_t * pvCoeffs,
-  q15_t * pState,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Instance structure for the floating-point LMS filter.
-   */
-  typedef struct
-  {
-    uint16_t numTaps;    /**< number of coefficients in the filter. */
-    float32_t *pState;   /**< points to the state variable array. The array is of length numTaps+blockSize-1. */
-    float32_t *pCoeffs;  /**< points to the coefficient array. The array is of length numTaps. */
-    float32_t mu;        /**< step size that controls filter coefficient updates. */
-  } arm_lms_instance_f32;
-
-
-  /**
-   * @brief Processing function for floating-point LMS filter.
-   * @param[in]  S          points to an instance of the floating-point LMS filter structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[in]  pRef       points to the block of reference data.
-   * @param[out] pOut       points to the block of output data.
-   * @param[out] pErr       points to the block of error data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_lms_f32(
-  const arm_lms_instance_f32 * S,
-  float32_t * pSrc,
-  float32_t * pRef,
-  float32_t * pOut,
-  float32_t * pErr,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Initialization function for floating-point LMS filter.
-   * @param[in] S          points to an instance of the floating-point LMS filter structure.
-   * @param[in] numTaps    number of filter coefficients.
-   * @param[in] pCoeffs    points to the coefficient buffer.
-   * @param[in] pState     points to state buffer.
-   * @param[in] mu         step size that controls filter coefficient updates.
-   * @param[in] blockSize  number of samples to process.
-   */
-  void arm_lms_init_f32(
-  arm_lms_instance_f32 * S,
-  uint16_t numTaps,
-  float32_t * pCoeffs,
-  float32_t * pState,
-  float32_t mu,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Instance structure for the Q15 LMS filter.
-   */
-  typedef struct
-  {
-    uint16_t numTaps;    /**< number of coefficients in the filter. */
-    q15_t *pState;       /**< points to the state variable array. The array is of length numTaps+blockSize-1. */
-    q15_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps. */
-    q15_t mu;            /**< step size that controls filter coefficient updates. */
-    uint32_t postShift;  /**< bit shift applied to coefficients. */
-  } arm_lms_instance_q15;
-
-
-  /**
-   * @brief Initialization function for the Q15 LMS filter.
-   * @param[in] S          points to an instance of the Q15 LMS filter structure.
-   * @param[in] numTaps    number of filter coefficients.
-   * @param[in] pCoeffs    points to the coefficient buffer.
-   * @param[in] pState     points to the state buffer.
-   * @param[in] mu         step size that controls filter coefficient updates.
-   * @param[in] blockSize  number of samples to process.
-   * @param[in] postShift  bit shift applied to coefficients.
-   */
-  void arm_lms_init_q15(
-  arm_lms_instance_q15 * S,
-  uint16_t numTaps,
-  q15_t * pCoeffs,
-  q15_t * pState,
-  q15_t mu,
-  uint32_t blockSize,
-  uint32_t postShift);
-
-
-  /**
-   * @brief Processing function for Q15 LMS filter.
-   * @param[in]  S          points to an instance of the Q15 LMS filter structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[in]  pRef       points to the block of reference data.
-   * @param[out] pOut       points to the block of output data.
-   * @param[out] pErr       points to the block of error data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_lms_q15(
-  const arm_lms_instance_q15 * S,
-  q15_t * pSrc,
-  q15_t * pRef,
-  q15_t * pOut,
-  q15_t * pErr,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Instance structure for the Q31 LMS filter.
-   */
-  typedef struct
-  {
-    uint16_t numTaps;    /**< number of coefficients in the filter. */
-    q31_t *pState;       /**< points to the state variable array. The array is of length numTaps+blockSize-1. */
-    q31_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps. */
-    q31_t mu;            /**< step size that controls filter coefficient updates. */
-    uint32_t postShift;  /**< bit shift applied to coefficients. */
-  } arm_lms_instance_q31;
-
-
-  /**
-   * @brief Processing function for Q31 LMS filter.
-   * @param[in]  S          points to an instance of the Q15 LMS filter structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[in]  pRef       points to the block of reference data.
-   * @param[out] pOut       points to the block of output data.
-   * @param[out] pErr       points to the block of error data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_lms_q31(
-  const arm_lms_instance_q31 * S,
-  q31_t * pSrc,
-  q31_t * pRef,
-  q31_t * pOut,
-  q31_t * pErr,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Initialization function for Q31 LMS filter.
-   * @param[in] S          points to an instance of the Q31 LMS filter structure.
-   * @param[in] numTaps    number of filter coefficients.
-   * @param[in] pCoeffs    points to coefficient buffer.
-   * @param[in] pState     points to state buffer.
-   * @param[in] mu         step size that controls filter coefficient updates.
-   * @param[in] blockSize  number of samples to process.
-   * @param[in] postShift  bit shift applied to coefficients.
-   */
-  void arm_lms_init_q31(
-  arm_lms_instance_q31 * S,
-  uint16_t numTaps,
-  q31_t * pCoeffs,
-  q31_t * pState,
-  q31_t mu,
-  uint32_t blockSize,
-  uint32_t postShift);
-
-
-  /**
-   * @brief Instance structure for the floating-point normalized LMS filter.
-   */
-  typedef struct
-  {
-    uint16_t numTaps;     /**< number of coefficients in the filter. */
-    float32_t *pState;    /**< points to the state variable array. The array is of length numTaps+blockSize-1. */
-    float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTaps. */
-    float32_t mu;         /**< step size that control filter coefficient updates. */
-    float32_t energy;     /**< saves previous frame energy. */
-    float32_t x0;         /**< saves previous input sample. */
-  } arm_lms_norm_instance_f32;
-
-
-  /**
-   * @brief Processing function for floating-point normalized LMS filter.
-   * @param[in]  S          points to an instance of the floating-point normalized LMS filter structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[in]  pRef       points to the block of reference data.
-   * @param[out] pOut       points to the block of output data.
-   * @param[out] pErr       points to the block of error data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_lms_norm_f32(
-  arm_lms_norm_instance_f32 * S,
-  float32_t * pSrc,
-  float32_t * pRef,
-  float32_t * pOut,
-  float32_t * pErr,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Initialization function for floating-point normalized LMS filter.
-   * @param[in] S          points to an instance of the floating-point LMS filter structure.
-   * @param[in] numTaps    number of filter coefficients.
-   * @param[in] pCoeffs    points to coefficient buffer.
-   * @param[in] pState     points to state buffer.
-   * @param[in] mu         step size that controls filter coefficient updates.
-   * @param[in] blockSize  number of samples to process.
-   */
-  void arm_lms_norm_init_f32(
-  arm_lms_norm_instance_f32 * S,
-  uint16_t numTaps,
-  float32_t * pCoeffs,
-  float32_t * pState,
-  float32_t mu,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Instance structure for the Q31 normalized LMS filter.
-   */
-  typedef struct
-  {
-    uint16_t numTaps;     /**< number of coefficients in the filter. */
-    q31_t *pState;        /**< points to the state variable array. The array is of length numTaps+blockSize-1. */
-    q31_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTaps. */
-    q31_t mu;             /**< step size that controls filter coefficient updates. */
-    uint8_t postShift;    /**< bit shift applied to coefficients. */
-    q31_t *recipTable;    /**< points to the reciprocal initial value table. */
-    q31_t energy;         /**< saves previous frame energy. */
-    q31_t x0;             /**< saves previous input sample. */
-  } arm_lms_norm_instance_q31;
-
-
-  /**
-   * @brief Processing function for Q31 normalized LMS filter.
-   * @param[in]  S          points to an instance of the Q31 normalized LMS filter structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[in]  pRef       points to the block of reference data.
-   * @param[out] pOut       points to the block of output data.
-   * @param[out] pErr       points to the block of error data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_lms_norm_q31(
-  arm_lms_norm_instance_q31 * S,
-  q31_t * pSrc,
-  q31_t * pRef,
-  q31_t * pOut,
-  q31_t * pErr,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Initialization function for Q31 normalized LMS filter.
-   * @param[in] S          points to an instance of the Q31 normalized LMS filter structure.
-   * @param[in] numTaps    number of filter coefficients.
-   * @param[in] pCoeffs    points to coefficient buffer.
-   * @param[in] pState     points to state buffer.
-   * @param[in] mu         step size that controls filter coefficient updates.
-   * @param[in] blockSize  number of samples to process.
-   * @param[in] postShift  bit shift applied to coefficients.
-   */
-  void arm_lms_norm_init_q31(
-  arm_lms_norm_instance_q31 * S,
-  uint16_t numTaps,
-  q31_t * pCoeffs,
-  q31_t * pState,
-  q31_t mu,
-  uint32_t blockSize,
-  uint8_t postShift);
-
-
-  /**
-   * @brief Instance structure for the Q15 normalized LMS filter.
-   */
-  typedef struct
-  {
-    uint16_t numTaps;     /**< Number of coefficients in the filter. */
-    q15_t *pState;        /**< points to the state variable array. The array is of length numTaps+blockSize-1. */
-    q15_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTaps. */
-    q15_t mu;             /**< step size that controls filter coefficient updates. */
-    uint8_t postShift;    /**< bit shift applied to coefficients. */
-    q15_t *recipTable;    /**< Points to the reciprocal initial value table. */
-    q15_t energy;         /**< saves previous frame energy. */
-    q15_t x0;             /**< saves previous input sample. */
-  } arm_lms_norm_instance_q15;
-
-
-  /**
-   * @brief Processing function for Q15 normalized LMS filter.
-   * @param[in]  S          points to an instance of the Q15 normalized LMS filter structure.
-   * @param[in]  pSrc       points to the block of input data.
-   * @param[in]  pRef       points to the block of reference data.
-   * @param[out] pOut       points to the block of output data.
-   * @param[out] pErr       points to the block of error data.
-   * @param[in]  blockSize  number of samples to process.
-   */
-  void arm_lms_norm_q15(
-  arm_lms_norm_instance_q15 * S,
-  q15_t * pSrc,
-  q15_t * pRef,
-  q15_t * pOut,
-  q15_t * pErr,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Initialization function for Q15 normalized LMS filter.
-   * @param[in] S          points to an instance of the Q15 normalized LMS filter structure.
-   * @param[in] numTaps    number of filter coefficients.
-   * @param[in] pCoeffs    points to coefficient buffer.
-   * @param[in] pState     points to state buffer.
-   * @param[in] mu         step size that controls filter coefficient updates.
-   * @param[in] blockSize  number of samples to process.
-   * @param[in] postShift  bit shift applied to coefficients.
-   */
-  void arm_lms_norm_init_q15(
-  arm_lms_norm_instance_q15 * S,
-  uint16_t numTaps,
-  q15_t * pCoeffs,
-  q15_t * pState,
-  q15_t mu,
-  uint32_t blockSize,
-  uint8_t postShift);
-
-
-  /**
-   * @brief Correlation of floating-point sequences.
-   * @param[in]  pSrcA    points to the first input sequence.
-   * @param[in]  srcALen  length of the first input sequence.
-   * @param[in]  pSrcB    points to the second input sequence.
-   * @param[in]  srcBLen  length of the second input sequence.
-   * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
-   */
-  void arm_correlate_f32(
-  float32_t * pSrcA,
-  uint32_t srcALen,
-  float32_t * pSrcB,
-  uint32_t srcBLen,
-  float32_t * pDst);
-
-
-   /**
-   * @brief Correlation of Q15 sequences
-   * @param[in]  pSrcA     points to the first input sequence.
-   * @param[in]  srcALen   length of the first input sequence.
-   * @param[in]  pSrcB     points to the second input sequence.
-   * @param[in]  srcBLen   length of the second input sequence.
-   * @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
-   * @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, srcBLen) - 2.
-   */
-  void arm_correlate_opt_q15(
-  q15_t * pSrcA,
-  uint32_t srcALen,
-  q15_t * pSrcB,
-  uint32_t srcBLen,
-  q15_t * pDst,
-  q15_t * pScratch);
-
-
-  /**
-   * @brief Correlation of Q15 sequences.
-   * @param[in]  pSrcA    points to the first input sequence.
-   * @param[in]  srcALen  length of the first input sequence.
-   * @param[in]  pSrcB    points to the second input sequence.
-   * @param[in]  srcBLen  length of the second input sequence.
-   * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
-   */
-
-  void arm_correlate_q15(
-  q15_t * pSrcA,
-  uint32_t srcALen,
-  q15_t * pSrcB,
-  uint32_t srcBLen,
-  q15_t * pDst);
-
-
-  /**
-   * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
-   * @param[in]  pSrcA    points to the first input sequence.
-   * @param[in]  srcALen  length of the first input sequence.
-   * @param[in]  pSrcB    points to the second input sequence.
-   * @param[in]  srcBLen  length of the second input sequence.
-   * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
-   */
-
-  void arm_correlate_fast_q15(
-  q15_t * pSrcA,
-  uint32_t srcALen,
-  q15_t * pSrcB,
-  uint32_t srcBLen,
-  q15_t * pDst);
-
-
-  /**
-   * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
-   * @param[in]  pSrcA     points to the first input sequence.
-   * @param[in]  srcALen   length of the first input sequence.
-   * @param[in]  pSrcB     points to the second input sequence.
-   * @param[in]  srcBLen   length of the second input sequence.
-   * @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
-   * @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, srcBLen) - 2.
-   */
-  void arm_correlate_fast_opt_q15(
-  q15_t * pSrcA,
-  uint32_t srcALen,
-  q15_t * pSrcB,
-  uint32_t srcBLen,
-  q15_t * pDst,
-  q15_t * pScratch);
-
-
-  /**
-   * @brief Correlation of Q31 sequences.
-   * @param[in]  pSrcA    points to the first input sequence.
-   * @param[in]  srcALen  length of the first input sequence.
-   * @param[in]  pSrcB    points to the second input sequence.
-   * @param[in]  srcBLen  length of the second input sequence.
-   * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
-   */
-  void arm_correlate_q31(
-  q31_t * pSrcA,
-  uint32_t srcALen,
-  q31_t * pSrcB,
-  uint32_t srcBLen,
-  q31_t * pDst);
-
-
-  /**
-   * @brief Correlation of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
-   * @param[in]  pSrcA    points to the first input sequence.
-   * @param[in]  srcALen  length of the first input sequence.
-   * @param[in]  pSrcB    points to the second input sequence.
-   * @param[in]  srcBLen  length of the second input sequence.
-   * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
-   */
-  void arm_correlate_fast_q31(
-  q31_t * pSrcA,
-  uint32_t srcALen,
-  q31_t * pSrcB,
-  uint32_t srcBLen,
-  q31_t * pDst);
-
-
- /**
-   * @brief Correlation of Q7 sequences.
-   * @param[in]  pSrcA      points to the first input sequence.
-   * @param[in]  srcALen    length of the first input sequence.
-   * @param[in]  pSrcB      points to the second input sequence.
-   * @param[in]  srcBLen    length of the second input sequence.
-   * @param[out] pDst       points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
-   * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) + 2*min(srcALen, srcBLen) - 2.
-   * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
-   */
-  void arm_correlate_opt_q7(
-  q7_t * pSrcA,
-  uint32_t srcALen,
-  q7_t * pSrcB,
-  uint32_t srcBLen,
-  q7_t * pDst,
-  q15_t * pScratch1,
-  q15_t * pScratch2);
-
-
-  /**
-   * @brief Correlation of Q7 sequences.
-   * @param[in]  pSrcA    points to the first input sequence.
-   * @param[in]  srcALen  length of the first input sequence.
-   * @param[in]  pSrcB    points to the second input sequence.
-   * @param[in]  srcBLen  length of the second input sequence.
-   * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
-   */
-  void arm_correlate_q7(
-  q7_t * pSrcA,
-  uint32_t srcALen,
-  q7_t * pSrcB,
-  uint32_t srcBLen,
-  q7_t * pDst);
-
-
-  /**
-   * @brief Instance structure for the floating-point sparse FIR filter.
-   */
-  typedef struct
-  {
-    uint16_t numTaps;             /**< number of coefficients in the filter. */
-    uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the state buffer. */
-    float32_t *pState;            /**< points to the state buffer array. The array is of length maxDelay+blockSize-1. */
-    float32_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.*/
-    uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
-    int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length numTaps. */
-  } arm_fir_sparse_instance_f32;
-
-  /**
-   * @brief Instance structure for the Q31 sparse FIR filter.
-   */
-  typedef struct
-  {
-    uint16_t numTaps;             /**< number of coefficients in the filter. */
-    uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the state buffer. */
-    q31_t *pState;                /**< points to the state buffer array. The array is of length maxDelay+blockSize-1. */
-    q31_t *pCoeffs;               /**< points to the coefficient array. The array is of length numTaps.*/
-    uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
-    int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length numTaps. */
-  } arm_fir_sparse_instance_q31;
-
-  /**
-   * @brief Instance structure for the Q15 sparse FIR filter.
-   */
-  typedef struct
-  {
-    uint16_t numTaps;             /**< number of coefficients in the filter. */
-    uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the state buffer. */
-    q15_t *pState;                /**< points to the state buffer array. The array is of length maxDelay+blockSize-1. */
-    q15_t *pCoeffs;               /**< points to the coefficient array. The array is of length numTaps.*/
-    uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
-    int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length numTaps. */
-  } arm_fir_sparse_instance_q15;
-
-  /**
-   * @brief Instance structure for the Q7 sparse FIR filter.
-   */
-  typedef struct
-  {
-    uint16_t numTaps;             /**< number of coefficients in the filter. */
-    uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the state buffer. */
-    q7_t *pState;                 /**< points to the state buffer array. The array is of length maxDelay+blockSize-1. */
-    q7_t *pCoeffs;                /**< points to the coefficient array. The array is of length numTaps.*/
-    uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
-    int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length numTaps. */
-  } arm_fir_sparse_instance_q7;
-
-
-  /**
-   * @brief Processing function for the floating-point sparse FIR filter.
-   * @param[in]  S           points to an instance of the floating-point sparse FIR structure.
-   * @param[in]  pSrc        points to the block of input data.
-   * @param[out] pDst        points to the block of output data
-   * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
-   * @param[in]  blockSize   number of input samples to process per call.
-   */
-  void arm_fir_sparse_f32(
-  arm_fir_sparse_instance_f32 * S,
-  float32_t * pSrc,
-  float32_t * pDst,
-  float32_t * pScratchIn,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Initialization function for the floating-point sparse FIR filter.
-   * @param[in,out] S          points to an instance of the floating-point sparse FIR structure.
-   * @param[in]     numTaps    number of nonzero coefficients in the filter.
-   * @param[in]     pCoeffs    points to the array of filter coefficients.
-   * @param[in]     pState     points to the state buffer.
-   * @param[in]     pTapDelay  points to the array of offset times.
-   * @param[in]     maxDelay   maximum offset time supported.
-   * @param[in]     blockSize  number of samples that will be processed per block.
-   */
-  void arm_fir_sparse_init_f32(
-  arm_fir_sparse_instance_f32 * S,
-  uint16_t numTaps,
-  float32_t * pCoeffs,
-  float32_t * pState,
-  int32_t * pTapDelay,
-  uint16_t maxDelay,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Processing function for the Q31 sparse FIR filter.
-   * @param[in]  S           points to an instance of the Q31 sparse FIR structure.
-   * @param[in]  pSrc        points to the block of input data.
-   * @param[out] pDst        points to the block of output data
-   * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
-   * @param[in]  blockSize   number of input samples to process per call.
-   */
-  void arm_fir_sparse_q31(
-  arm_fir_sparse_instance_q31 * S,
-  q31_t * pSrc,
-  q31_t * pDst,
-  q31_t * pScratchIn,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Initialization function for the Q31 sparse FIR filter.
-   * @param[in,out] S          points to an instance of the Q31 sparse FIR structure.
-   * @param[in]     numTaps    number of nonzero coefficients in the filter.
-   * @param[in]     pCoeffs    points to the array of filter coefficients.
-   * @param[in]     pState     points to the state buffer.
-   * @param[in]     pTapDelay  points to the array of offset times.
-   * @param[in]     maxDelay   maximum offset time supported.
-   * @param[in]     blockSize  number of samples that will be processed per block.
-   */
-  void arm_fir_sparse_init_q31(
-  arm_fir_sparse_instance_q31 * S,
-  uint16_t numTaps,
-  q31_t * pCoeffs,
-  q31_t * pState,
-  int32_t * pTapDelay,
-  uint16_t maxDelay,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Processing function for the Q15 sparse FIR filter.
-   * @param[in]  S            points to an instance of the Q15 sparse FIR structure.
-   * @param[in]  pSrc         points to the block of input data.
-   * @param[out] pDst         points to the block of output data
-   * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
-   * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
-   * @param[in]  blockSize    number of input samples to process per call.
-   */
-  void arm_fir_sparse_q15(
-  arm_fir_sparse_instance_q15 * S,
-  q15_t * pSrc,
-  q15_t * pDst,
-  q15_t * pScratchIn,
-  q31_t * pScratchOut,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Initialization function for the Q15 sparse FIR filter.
-   * @param[in,out] S          points to an instance of the Q15 sparse FIR structure.
-   * @param[in]     numTaps    number of nonzero coefficients in the filter.
-   * @param[in]     pCoeffs    points to the array of filter coefficients.
-   * @param[in]     pState     points to the state buffer.
-   * @param[in]     pTapDelay  points to the array of offset times.
-   * @param[in]     maxDelay   maximum offset time supported.
-   * @param[in]     blockSize  number of samples that will be processed per block.
-   */
-  void arm_fir_sparse_init_q15(
-  arm_fir_sparse_instance_q15 * S,
-  uint16_t numTaps,
-  q15_t * pCoeffs,
-  q15_t * pState,
-  int32_t * pTapDelay,
-  uint16_t maxDelay,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Processing function for the Q7 sparse FIR filter.
-   * @param[in]  S            points to an instance of the Q7 sparse FIR structure.
-   * @param[in]  pSrc         points to the block of input data.
-   * @param[out] pDst         points to the block of output data
-   * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
-   * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
-   * @param[in]  blockSize    number of input samples to process per call.
-   */
-  void arm_fir_sparse_q7(
-  arm_fir_sparse_instance_q7 * S,
-  q7_t * pSrc,
-  q7_t * pDst,
-  q7_t * pScratchIn,
-  q31_t * pScratchOut,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Initialization function for the Q7 sparse FIR filter.
-   * @param[in,out] S          points to an instance of the Q7 sparse FIR structure.
-   * @param[in]     numTaps    number of nonzero coefficients in the filter.
-   * @param[in]     pCoeffs    points to the array of filter coefficients.
-   * @param[in]     pState     points to the state buffer.
-   * @param[in]     pTapDelay  points to the array of offset times.
-   * @param[in]     maxDelay   maximum offset time supported.
-   * @param[in]     blockSize  number of samples that will be processed per block.
-   */
-  void arm_fir_sparse_init_q7(
-  arm_fir_sparse_instance_q7 * S,
-  uint16_t numTaps,
-  q7_t * pCoeffs,
-  q7_t * pState,
-  int32_t * pTapDelay,
-  uint16_t maxDelay,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Floating-point sin_cos function.
-   * @param[in]  theta   input value in degrees
-   * @param[out] pSinVal  points to the processed sine output.
-   * @param[out] pCosVal  points to the processed cos output.
-   */
-  void arm_sin_cos_f32(
-  float32_t theta,
-  float32_t * pSinVal,
-  float32_t * pCosVal);
-
-
-  /**
-   * @brief  Q31 sin_cos function.
-   * @param[in]  theta    scaled input value in degrees
-   * @param[out] pSinVal  points to the processed sine output.
-   * @param[out] pCosVal  points to the processed cosine output.
-   */
-  void arm_sin_cos_q31(
-  q31_t theta,
-  q31_t * pSinVal,
-  q31_t * pCosVal);
-
-
-  /**
-   * @brief  Floating-point complex conjugate.
-   * @param[in]  pSrc        points to the input vector
-   * @param[out] pDst        points to the output vector
-   * @param[in]  numSamples  number of complex samples in each vector
-   */
-  void arm_cmplx_conj_f32(
-  float32_t * pSrc,
-  float32_t * pDst,
-  uint32_t numSamples);
-
-  /**
-   * @brief  Q31 complex conjugate.
-   * @param[in]  pSrc        points to the input vector
-   * @param[out] pDst        points to the output vector
-   * @param[in]  numSamples  number of complex samples in each vector
-   */
-  void arm_cmplx_conj_q31(
-  q31_t * pSrc,
-  q31_t * pDst,
-  uint32_t numSamples);
-
-
-  /**
-   * @brief  Q15 complex conjugate.
-   * @param[in]  pSrc        points to the input vector
-   * @param[out] pDst        points to the output vector
-   * @param[in]  numSamples  number of complex samples in each vector
-   */
-  void arm_cmplx_conj_q15(
-  q15_t * pSrc,
-  q15_t * pDst,
-  uint32_t numSamples);
-
-
-  /**
-   * @brief  Floating-point complex magnitude squared
-   * @param[in]  pSrc        points to the complex input vector
-   * @param[out] pDst        points to the real output vector
-   * @param[in]  numSamples  number of complex samples in the input vector
-   */
-  void arm_cmplx_mag_squared_f32(
-  float32_t * pSrc,
-  float32_t * pDst,
-  uint32_t numSamples);
-
-
-  /**
-   * @brief  Q31 complex magnitude squared
-   * @param[in]  pSrc        points to the complex input vector
-   * @param[out] pDst        points to the real output vector
-   * @param[in]  numSamples  number of complex samples in the input vector
-   */
-  void arm_cmplx_mag_squared_q31(
-  q31_t * pSrc,
-  q31_t * pDst,
-  uint32_t numSamples);
-
-
-  /**
-   * @brief  Q15 complex magnitude squared
-   * @param[in]  pSrc        points to the complex input vector
-   * @param[out] pDst        points to the real output vector
-   * @param[in]  numSamples  number of complex samples in the input vector
-   */
-  void arm_cmplx_mag_squared_q15(
-  q15_t * pSrc,
-  q15_t * pDst,
-  uint32_t numSamples);
-
-
- /**
-   * @ingroup groupController
-   */
-
-  /**
-   * @defgroup PID PID Motor Control
-   *
-   * A Proportional Integral Derivative (PID) controller is a generic feedback control
-   * loop mechanism widely used in industrial control systems.
-   * A PID controller is the most commonly used type of feedback controller.
-   *
-   * This set of functions implements (PID) controllers
-   * for Q15, Q31, and floating-point data types.  The functions operate on a single sample
-   * of data and each call to the function returns a single processed value.
-   * <code>S</code> points to an instance of the PID control data structure.  <code>in</code>
-   * is the input sample value. The functions return the output value.
-   *
-   * \par Algorithm:
-   * <pre>
-   *    y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]
-   *    A0 = Kp + Ki + Kd
-   *    A1 = (-Kp ) - (2 * Kd )
-   *    A2 = Kd  </pre>
-   *
-   * \par
-   * where \c Kp is proportional constant, \c Ki is Integral constant and \c Kd is Derivative constant
-   *
-   * \par
-   * \image html PID.gif "Proportional Integral Derivative Controller"
-   *
-   * \par
-   * The PID controller calculates an "error" value as the difference between
-   * the measured output and the reference input.
-   * The controller attempts to minimize the error by adjusting the process control inputs.
-   * The proportional value determines the reaction to the current error,
-   * the integral value determines the reaction based on the sum of recent errors,
-   * and the derivative value determines the reaction based on the rate at which the error has been changing.
-   *
-   * \par Instance Structure
-   * The Gains A0, A1, A2 and state variables for a PID controller are stored together in an instance data structure.
-   * A separate instance structure must be defined for each PID Controller.
-   * There are separate instance structure declarations for each of the 3 supported data types.
-   *
-   * \par Reset Functions
-   * There is also an associated reset function for each data type which clears the state array.
-   *
-   * \par Initialization Functions
-   * There is also an associated initialization function for each data type.
-   * The initialization function performs the following operations:
-   * - Initializes the Gains A0, A1, A2 from Kp,Ki, Kd gains.
-   * - Zeros out the values in the state buffer.
-   *
-   * \par
-   * Instance structure cannot be placed into a const data section and it is recommended to use the initialization function.
-   *
-   * \par Fixed-Point Behavior
-   * Care must be taken when using the fixed-point versions of the PID Controller functions.
-   * In particular, the overflow and saturation behavior of the accumulator used in each function must be considered.
-   * Refer to the function specific documentation below for usage guidelines.
-   */
-
-  /**
-   * @addtogroup PID
-   * @{
-   */
-
-  /**
-   * @brief  Process function for the floating-point PID Control.
-   * @param[in,out] S   is an instance of the floating-point PID Control structure
-   * @param[in]     in  input sample to process
-   * @return out processed output sample.
-   */
-  CMSIS_INLINE __STATIC_INLINE float32_t arm_pid_f32(
-  arm_pid_instance_f32 * S,
-  float32_t in)
-  {
-    float32_t out;
-
-    /* y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]  */
-    out = (S->A0 * in) +
-      (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
-
-    /* Update state */
-    S->state[1] = S->state[0];
-    S->state[0] = in;
-    S->state[2] = out;
-
-    /* return to application */
-    return (out);
-
-  }
-
-  /**
-   * @brief  Process function for the Q31 PID Control.
-   * @param[in,out] S  points to an instance of the Q31 PID Control structure
-   * @param[in]     in  input sample to process
-   * @return out processed output sample.
-   *
-   * <b>Scaling and Overflow Behavior:</b>
-   * \par
-   * The function is implemented using an internal 64-bit accumulator.
-   * The accumulator has a 2.62 format and maintains full precision of the intermediate multiplication results but provides only a single guard bit.
-   * Thus, if the accumulator result overflows it wraps around rather than clip.
-   * In order to avoid overflows completely the input signal must be scaled down by 2 bits as there are four additions.
-   * After all multiply-accumulates are performed, the 2.62 accumulator is truncated to 1.32 format and then saturated to 1.31 format.
-   */
-  CMSIS_INLINE __STATIC_INLINE q31_t arm_pid_q31(
-  arm_pid_instance_q31 * S,
-  q31_t in)
-  {
-    q63_t acc;
-    q31_t out;
-
-    /* acc = A0 * x[n]  */
-    acc = (q63_t) S->A0 * in;
-
-    /* acc += A1 * x[n-1] */
-    acc += (q63_t) S->A1 * S->state[0];
-
-    /* acc += A2 * x[n-2]  */
-    acc += (q63_t) S->A2 * S->state[1];
-
-    /* convert output to 1.31 format to add y[n-1] */
-    out = (q31_t) (acc >> 31U);
-
-    /* out += y[n-1] */
-    out += S->state[2];
-
-    /* Update state */
-    S->state[1] = S->state[0];
-    S->state[0] = in;
-    S->state[2] = out;
-
-    /* return to application */
-    return (out);
-  }
-
-
-  /**
-   * @brief  Process function for the Q15 PID Control.
-   * @param[in,out] S   points to an instance of the Q15 PID Control structure
-   * @param[in]     in  input sample to process
-   * @return out processed output sample.
-   *
-   * <b>Scaling and Overflow Behavior:</b>
-   * \par
-   * The function is implemented using a 64-bit internal accumulator.
-   * Both Gains and state variables are represented in 1.15 format and multiplications yield a 2.30 result.
-   * The 2.30 intermediate results are accumulated in a 64-bit accumulator in 34.30 format.
-   * There is no risk of internal overflow with this approach and the full precision of intermediate multiplications is preserved.
-   * After all additions have been performed, the accumulator is truncated to 34.15 format by discarding low 15 bits.
-   * Lastly, the accumulator is saturated to yield a result in 1.15 format.
-   */
-  CMSIS_INLINE __STATIC_INLINE q15_t arm_pid_q15(
-  arm_pid_instance_q15 * S,
-  q15_t in)
-  {
-    q63_t acc;
-    q15_t out;
-
-#if defined (ARM_MATH_DSP)
-    __SIMD32_TYPE *vstate;
-
-    /* Implementation of PID controller */
-
-    /* acc = A0 * x[n]  */
-    acc = (q31_t) __SMUAD((uint32_t)S->A0, (uint32_t)in);
-
-    /* acc += A1 * x[n-1] + A2 * x[n-2]  */
-    vstate = __SIMD32_CONST(S->state);
-    acc = (q63_t)__SMLALD((uint32_t)S->A1, (uint32_t)*vstate, (uint64_t)acc);
-#else
-    /* acc = A0 * x[n]  */
-    acc = ((q31_t) S->A0) * in;
-
-    /* acc += A1 * x[n-1] + A2 * x[n-2]  */
-    acc += (q31_t) S->A1 * S->state[0];
-    acc += (q31_t) S->A2 * S->state[1];
-#endif
-
-    /* acc += y[n-1] */
-    acc += (q31_t) S->state[2] << 15;
-
-    /* saturate the output */
-    out = (q15_t) (__SSAT((acc >> 15), 16));
-
-    /* Update state */
-    S->state[1] = S->state[0];
-    S->state[0] = in;
-    S->state[2] = out;
-
-    /* return to application */
-    return (out);
-  }
-
-  /**
-   * @} end of PID group
-   */
-
-
-  /**
-   * @brief Floating-point matrix inverse.
-   * @param[in]  src   points to the instance of the input floating-point matrix structure.
-   * @param[out] dst   points to the instance of the output floating-point matrix structure.
-   * @return The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match.
-   * If the input matrix is singular (does not have an inverse), then the algorithm terminates and returns error status ARM_MATH_SINGULAR.
-   */
-  arm_status arm_mat_inverse_f32(
-  const arm_matrix_instance_f32 * src,
-  arm_matrix_instance_f32 * dst);
-
-
-  /**
-   * @brief Floating-point matrix inverse.
-   * @param[in]  src   points to the instance of the input floating-point matrix structure.
-   * @param[out] dst   points to the instance of the output floating-point matrix structure.
-   * @return The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match.
-   * If the input matrix is singular (does not have an inverse), then the algorithm terminates and returns error status ARM_MATH_SINGULAR.
-   */
-  arm_status arm_mat_inverse_f64(
-  const arm_matrix_instance_f64 * src,
-  arm_matrix_instance_f64 * dst);
-
-
-
-  /**
-   * @ingroup groupController
-   */
-
-  /**
-   * @defgroup clarke Vector Clarke Transform
-   * Forward Clarke transform converts the instantaneous stator phases into a two-coordinate time invariant vector.
-   * Generally the Clarke transform uses three-phase currents <code>Ia, Ib and Ic</code> to calculate currents
-   * in the two-phase orthogonal stator axis <code>Ialpha</code> and <code>Ibeta</code>.
-   * When <code>Ialpha</code> is superposed with <code>Ia</code> as shown in the figure below
-   * \image html clarke.gif Stator current space vector and its components in (a,b).
-   * and <code>Ia + Ib + Ic = 0</code>, in this condition <code>Ialpha</code> and <code>Ibeta</code>
-   * can be calculated using only <code>Ia</code> and <code>Ib</code>.
-   *
-   * The function operates on a single sample of data and each call to the function returns the processed output.
-   * The library provides separate functions for Q31 and floating-point data types.
-   * \par Algorithm
-   * \image html clarkeFormula.gif
-   * where <code>Ia</code> and <code>Ib</code> are the instantaneous stator phases and
-   * <code>pIalpha</code> and <code>pIbeta</code> are the two coordinates of time invariant vector.
-   * \par Fixed-Point Behavior
-   * Care must be taken when using the Q31 version of the Clarke transform.
-   * In particular, the overflow and saturation behavior of the accumulator used must be considered.
-   * Refer to the function specific documentation below for usage guidelines.
-   */
-
-  /**
-   * @addtogroup clarke
-   * @{
-   */
-
-  /**
-   *
-   * @brief  Floating-point Clarke transform
-   * @param[in]  Ia       input three-phase coordinate <code>a</code>
-   * @param[in]  Ib       input three-phase coordinate <code>b</code>
-   * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
-   * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
-   */
-  CMSIS_INLINE __STATIC_INLINE void arm_clarke_f32(
-  float32_t Ia,
-  float32_t Ib,
-  float32_t * pIalpha,
-  float32_t * pIbeta)
-  {
-    /* Calculate pIalpha using the equation, pIalpha = Ia */
-    *pIalpha = Ia;
-
-    /* Calculate pIbeta using the equation, pIbeta = (1/sqrt(3)) * Ia + (2/sqrt(3)) * Ib */
-    *pIbeta = ((float32_t) 0.57735026919 * Ia + (float32_t) 1.15470053838 * Ib);
-  }
-
-
-  /**
-   * @brief  Clarke transform for Q31 version
-   * @param[in]  Ia       input three-phase coordinate <code>a</code>
-   * @param[in]  Ib       input three-phase coordinate <code>b</code>
-   * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
-   * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
-   *
-   * <b>Scaling and Overflow Behavior:</b>
-   * \par
-   * The function is implemented using an internal 32-bit accumulator.
-   * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multiplication in 2.62 format.
-   * There is saturation on the addition, hence there is no risk of overflow.
-   */
-  CMSIS_INLINE __STATIC_INLINE void arm_clarke_q31(
-  q31_t Ia,
-  q31_t Ib,
-  q31_t * pIalpha,
-  q31_t * pIbeta)
-  {
-    q31_t product1, product2;                    /* Temporary variables used to store intermediate results */
-
-    /* Calculating pIalpha from Ia by equation pIalpha = Ia */
-    *pIalpha = Ia;
-
-    /* Intermediate product is calculated by (1/(sqrt(3)) * Ia) */
-    product1 = (q31_t) (((q63_t) Ia * 0x24F34E8B) >> 30);
-
-    /* Intermediate product is calculated by (2/sqrt(3) * Ib) */
-    product2 = (q31_t) (((q63_t) Ib * 0x49E69D16) >> 30);
-
-    /* pIbeta is calculated by adding the intermediate products */
-    *pIbeta = __QADD(product1, product2);
-  }
-
-  /**
-   * @} end of clarke group
-   */
-
-  /**
-   * @brief  Converts the elements of the Q7 vector to Q31 vector.
-   * @param[in]  pSrc       input pointer
-   * @param[out] pDst       output pointer
-   * @param[in]  blockSize  number of samples to process
-   */
-  void arm_q7_to_q31(
-  q7_t * pSrc,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-
-  /**
-   * @ingroup groupController
-   */
-
-  /**
-   * @defgroup inv_clarke Vector Inverse Clarke Transform
-   * Inverse Clarke transform converts the two-coordinate time invariant vector into instantaneous stator phases.
-   *
-   * The function operates on a single sample of data and each call to the function returns the processed output.
-   * The library provides separate functions for Q31 and floating-point data types.
-   * \par Algorithm
-   * \image html clarkeInvFormula.gif
-   * where <code>pIa</code> and <code>pIb</code> are the instantaneous stator phases and
-   * <code>Ialpha</code> and <code>Ibeta</code> are the two coordinates of time invariant vector.
-   * \par Fixed-Point Behavior
-   * Care must be taken when using the Q31 version of the Clarke transform.
-   * In particular, the overflow and saturation behavior of the accumulator used must be considered.
-   * Refer to the function specific documentation below for usage guidelines.
-   */
-
-  /**
-   * @addtogroup inv_clarke
-   * @{
-   */
-
-   /**
-   * @brief  Floating-point Inverse Clarke transform
-   * @param[in]  Ialpha  input two-phase orthogonal vector axis alpha
-   * @param[in]  Ibeta   input two-phase orthogonal vector axis beta
-   * @param[out] pIa     points to output three-phase coordinate <code>a</code>
-   * @param[out] pIb     points to output three-phase coordinate <code>b</code>
-   */
-  CMSIS_INLINE __STATIC_INLINE void arm_inv_clarke_f32(
-  float32_t Ialpha,
-  float32_t Ibeta,
-  float32_t * pIa,
-  float32_t * pIb)
-  {
-    /* Calculating pIa from Ialpha by equation pIa = Ialpha */
-    *pIa = Ialpha;
-
-    /* Calculating pIb from Ialpha and Ibeta by equation pIb = -(1/2) * Ialpha + (sqrt(3)/2) * Ibeta */
-    *pIb = -0.5f * Ialpha + 0.8660254039f * Ibeta;
-  }
-
-
-  /**
-   * @brief  Inverse Clarke transform for Q31 version
-   * @param[in]  Ialpha  input two-phase orthogonal vector axis alpha
-   * @param[in]  Ibeta   input two-phase orthogonal vector axis beta
-   * @param[out] pIa     points to output three-phase coordinate <code>a</code>
-   * @param[out] pIb     points to output three-phase coordinate <code>b</code>
-   *
-   * <b>Scaling and Overflow Behavior:</b>
-   * \par
-   * The function is implemented using an internal 32-bit accumulator.
-   * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multiplication in 2.62 format.
-   * There is saturation on the subtraction, hence there is no risk of overflow.
-   */
-  CMSIS_INLINE __STATIC_INLINE void arm_inv_clarke_q31(
-  q31_t Ialpha,
-  q31_t Ibeta,
-  q31_t * pIa,
-  q31_t * pIb)
-  {
-    q31_t product1, product2;                    /* Temporary variables used to store intermediate results */
-
-    /* Calculating pIa from Ialpha by equation pIa = Ialpha */
-    *pIa = Ialpha;
-
-    /* Intermediate product is calculated by (1/(2*sqrt(3)) * Ia) */
-    product1 = (q31_t) (((q63_t) (Ialpha) * (0x40000000)) >> 31);
-
-    /* Intermediate product is calculated by (1/sqrt(3) * pIb) */
-    product2 = (q31_t) (((q63_t) (Ibeta) * (0x6ED9EBA1)) >> 31);
-
-    /* pIb is calculated by subtracting the products */
-    *pIb = __QSUB(product2, product1);
-  }
-
-  /**
-   * @} end of inv_clarke group
-   */
-
-  /**
-   * @brief  Converts the elements of the Q7 vector to Q15 vector.
-   * @param[in]  pSrc       input pointer
-   * @param[out] pDst       output pointer
-   * @param[in]  blockSize  number of samples to process
-   */
-  void arm_q7_to_q15(
-  q7_t * pSrc,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-
-  /**
-   * @ingroup groupController
-   */
-
-  /**
-   * @defgroup park Vector Park Transform
-   *
-   * Forward Park transform converts the input two-coordinate vector to flux and torque components.
-   * The Park transform can be used to realize the transformation of the <code>Ialpha</code> and the <code>Ibeta</code> currents
-   * from the stationary to the moving reference frame and control the spatial relationship between
-   * the stator vector current and rotor flux vector.
-   * If we consider the d axis aligned with the rotor flux, the diagram below shows the
-   * current vector and the relationship from the two reference frames:
-   * \image html park.gif "Stator current space vector and its component in (a,b) and in the d,q rotating reference frame"
-   *
-   * The function operates on a single sample of data and each call to the function returns the processed output.
-   * The library provides separate functions for Q31 and floating-point data types.
-   * \par Algorithm
-   * \image html parkFormula.gif
-   * where <code>Ialpha</code> and <code>Ibeta</code> are the stator vector components,
-   * <code>pId</code> and <code>pIq</code> are rotor vector components and <code>cosVal</code> and <code>sinVal</code> are the
-   * cosine and sine values of theta (rotor flux position).
-   * \par Fixed-Point Behavior
-   * Care must be taken when using the Q31 version of the Park transform.
-   * In particular, the overflow and saturation behavior of the accumulator used must be considered.
-   * Refer to the function specific documentation below for usage guidelines.
-   */
-
-  /**
-   * @addtogroup park
-   * @{
-   */
-
-  /**
-   * @brief Floating-point Park transform
-   * @param[in]  Ialpha  input two-phase vector coordinate alpha
-   * @param[in]  Ibeta   input two-phase vector coordinate beta
-   * @param[out] pId     points to output   rotor reference frame d
-   * @param[out] pIq     points to output   rotor reference frame q
-   * @param[in]  sinVal  sine value of rotation angle theta
-   * @param[in]  cosVal  cosine value of rotation angle theta
-   *
-   * The function implements the forward Park transform.
-   *
-   */
-  CMSIS_INLINE __STATIC_INLINE void arm_park_f32(
-  float32_t Ialpha,
-  float32_t Ibeta,
-  float32_t * pId,
-  float32_t * pIq,
-  float32_t sinVal,
-  float32_t cosVal)
-  {
-    /* Calculate pId using the equation, pId = Ialpha * cosVal + Ibeta * sinVal */
-    *pId = Ialpha * cosVal + Ibeta * sinVal;
-
-    /* Calculate pIq using the equation, pIq = - Ialpha * sinVal + Ibeta * cosVal */
-    *pIq = -Ialpha * sinVal + Ibeta * cosVal;
-  }
-
-
-  /**
-   * @brief  Park transform for Q31 version
-   * @param[in]  Ialpha  input two-phase vector coordinate alpha
-   * @param[in]  Ibeta   input two-phase vector coordinate beta
-   * @param[out] pId     points to output rotor reference frame d
-   * @param[out] pIq     points to output rotor reference frame q
-   * @param[in]  sinVal  sine value of rotation angle theta
-   * @param[in]  cosVal  cosine value of rotation angle theta
-   *
-   * <b>Scaling and Overflow Behavior:</b>
-   * \par
-   * The function is implemented using an internal 32-bit accumulator.
-   * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multiplication in 2.62 format.
-   * There is saturation on the addition and subtraction, hence there is no risk of overflow.
-   */
-  CMSIS_INLINE __STATIC_INLINE void arm_park_q31(
-  q31_t Ialpha,
-  q31_t Ibeta,
-  q31_t * pId,
-  q31_t * pIq,
-  q31_t sinVal,
-  q31_t cosVal)
-  {
-    q31_t product1, product2;                    /* Temporary variables used to store intermediate results */
-    q31_t product3, product4;                    /* Temporary variables used to store intermediate results */
-
-    /* Intermediate product is calculated by (Ialpha * cosVal) */
-    product1 = (q31_t) (((q63_t) (Ialpha) * (cosVal)) >> 31);
-
-    /* Intermediate product is calculated by (Ibeta * sinVal) */
-    product2 = (q31_t) (((q63_t) (Ibeta) * (sinVal)) >> 31);
-
-
-    /* Intermediate product is calculated by (Ialpha * sinVal) */
-    product3 = (q31_t) (((q63_t) (Ialpha) * (sinVal)) >> 31);
-
-    /* Intermediate product is calculated by (Ibeta * cosVal) */
-    product4 = (q31_t) (((q63_t) (Ibeta) * (cosVal)) >> 31);
-
-    /* Calculate pId by adding the two intermediate products 1 and 2 */
-    *pId = __QADD(product1, product2);
-
-    /* Calculate pIq by subtracting the two intermediate products 3 from 4 */
-    *pIq = __QSUB(product4, product3);
-  }
-
-  /**
-   * @} end of park group
-   */
-
-  /**
-   * @brief  Converts the elements of the Q7 vector to floating-point vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[out] pDst       is output pointer
-   * @param[in]  blockSize  is the number of samples to process
-   */
-  void arm_q7_to_float(
-  q7_t * pSrc,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @ingroup groupController
-   */
-
-  /**
-   * @defgroup inv_park Vector Inverse Park transform
-   * Inverse Park transform converts the input flux and torque components to two-coordinate vector.
-   *
-   * The function operates on a single sample of data and each call to the function returns the processed output.
-   * The library provides separate functions for Q31 and floating-point data types.
-   * \par Algorithm
-   * \image html parkInvFormula.gif
-   * where <code>pIalpha</code> and <code>pIbeta</code> are the stator vector components,
-   * <code>Id</code> and <code>Iq</code> are rotor vector components and <code>cosVal</code> and <code>sinVal</code> are the
-   * cosine and sine values of theta (rotor flux position).
-   * \par Fixed-Point Behavior
-   * Care must be taken when using the Q31 version of the Park transform.
-   * In particular, the overflow and saturation behavior of the accumulator used must be considered.
-   * Refer to the function specific documentation below for usage guidelines.
-   */
-
-  /**
-   * @addtogroup inv_park
-   * @{
-   */
-
-   /**
-   * @brief  Floating-point Inverse Park transform
-   * @param[in]  Id       input coordinate of rotor reference frame d
-   * @param[in]  Iq       input coordinate of rotor reference frame q
-   * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
-   * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
-   * @param[in]  sinVal   sine value of rotation angle theta
-   * @param[in]  cosVal   cosine value of rotation angle theta
-   */
-  CMSIS_INLINE __STATIC_INLINE void arm_inv_park_f32(
-  float32_t Id,
-  float32_t Iq,
-  float32_t * pIalpha,
-  float32_t * pIbeta,
-  float32_t sinVal,
-  float32_t cosVal)
-  {
-    /* Calculate pIalpha using the equation, pIalpha = Id * cosVal - Iq * sinVal */
-    *pIalpha = Id * cosVal - Iq * sinVal;
-
-    /* Calculate pIbeta using the equation, pIbeta = Id * sinVal + Iq * cosVal */
-    *pIbeta = Id * sinVal + Iq * cosVal;
-  }
-
-
-  /**
-   * @brief  Inverse Park transform for   Q31 version
-   * @param[in]  Id       input coordinate of rotor reference frame d
-   * @param[in]  Iq       input coordinate of rotor reference frame q
-   * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
-   * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
-   * @param[in]  sinVal   sine value of rotation angle theta
-   * @param[in]  cosVal   cosine value of rotation angle theta
-   *
-   * <b>Scaling and Overflow Behavior:</b>
-   * \par
-   * The function is implemented using an internal 32-bit accumulator.
-   * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multiplication in 2.62 format.
-   * There is saturation on the addition, hence there is no risk of overflow.
-   */
-  CMSIS_INLINE __STATIC_INLINE void arm_inv_park_q31(
-  q31_t Id,
-  q31_t Iq,
-  q31_t * pIalpha,
-  q31_t * pIbeta,
-  q31_t sinVal,
-  q31_t cosVal)
-  {
-    q31_t product1, product2;                    /* Temporary variables used to store intermediate results */
-    q31_t product3, product4;                    /* Temporary variables used to store intermediate results */
-
-    /* Intermediate product is calculated by (Id * cosVal) */
-    product1 = (q31_t) (((q63_t) (Id) * (cosVal)) >> 31);
-
-    /* Intermediate product is calculated by (Iq * sinVal) */
-    product2 = (q31_t) (((q63_t) (Iq) * (sinVal)) >> 31);
-
-
-    /* Intermediate product is calculated by (Id * sinVal) */
-    product3 = (q31_t) (((q63_t) (Id) * (sinVal)) >> 31);
-
-    /* Intermediate product is calculated by (Iq * cosVal) */
-    product4 = (q31_t) (((q63_t) (Iq) * (cosVal)) >> 31);
-
-    /* Calculate pIalpha by using the two intermediate products 1 and 2 */
-    *pIalpha = __QSUB(product1, product2);
-
-    /* Calculate pIbeta by using the two intermediate products 3 and 4 */
-    *pIbeta = __QADD(product4, product3);
-  }
-
-  /**
-   * @} end of Inverse park group
-   */
-
-
-  /**
-   * @brief  Converts the elements of the Q31 vector to floating-point vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[out] pDst       is output pointer
-   * @param[in]  blockSize  is the number of samples to process
-   */
-  void arm_q31_to_float(
-  q31_t * pSrc,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-  /**
-   * @ingroup groupInterpolation
-   */
-
-  /**
-   * @defgroup LinearInterpolate Linear Interpolation
-   *
-   * Linear interpolation is a method of curve fitting using linear polynomials.
-   * Linear interpolation works by effectively drawing a straight line between two neighboring samples and returning the appropriate point along that line
-   *
-   * \par
-   * \image html LinearInterp.gif "Linear interpolation"
-   *
-   * \par
-   * A  Linear Interpolate function calculates an output value(y), for the input(x)
-   * using linear interpolation of the input values x0, x1( nearest input values) and the output values y0 and y1(nearest output values)
-   *
-   * \par Algorithm:
-   * <pre>
-   *       y = y0 + (x - x0) * ((y1 - y0)/(x1-x0))
-   *       where x0, x1 are nearest values of input x
-   *             y0, y1 are nearest values to output y
-   * </pre>
-   *
-   * \par
-   * This set of functions implements Linear interpolation process
-   * for Q7, Q15, Q31, and floating-point data types.  The functions operate on a single
-   * sample of data and each call to the function returns a single processed value.
-   * <code>S</code> points to an instance of the Linear Interpolate function data structure.
-   * <code>x</code> is the input sample value. The functions returns the output value.
-   *
-   * \par
-   * if x is outside of the table boundary, Linear interpolation returns first value of the table
-   * if x is below input range and returns last value of table if x is above range.
-   */
-
-  /**
-   * @addtogroup LinearInterpolate
-   * @{
-   */
-
-  /**
-   * @brief  Process function for the floating-point Linear Interpolation Function.
-   * @param[in,out] S  is an instance of the floating-point Linear Interpolation structure
-   * @param[in]     x  input sample to process
-   * @return y processed output sample.
-   *
-   */
-  CMSIS_INLINE __STATIC_INLINE float32_t arm_linear_interp_f32(
-  arm_linear_interp_instance_f32 * S,
-  float32_t x)
-  {
-    float32_t y;
-    float32_t x0, x1;                            /* Nearest input values */
-    float32_t y0, y1;                            /* Nearest output values */
-    float32_t xSpacing = S->xSpacing;            /* spacing between input values */
-    int32_t i;                                   /* Index variable */
-    float32_t *pYData = S->pYData;               /* pointer to output table */
-
-    /* Calculation of index */
-    i = (int32_t) ((x - S->x1) / xSpacing);
-
-    if (i < 0)
-    {
-      /* Iniatilize output for below specified range as least output value of table */
-      y = pYData[0];
-    }
-    else if ((uint32_t)i >= S->nValues)
-    {
-      /* Iniatilize output for above specified range as last output value of table */
-      y = pYData[S->nValues - 1];
-    }
-    else
-    {
-      /* Calculation of nearest input values */
-      x0 = S->x1 +  i      * xSpacing;
-      x1 = S->x1 + (i + 1) * xSpacing;
-
-      /* Read of nearest output values */
-      y0 = pYData[i];
-      y1 = pYData[i + 1];
-
-      /* Calculation of output */
-      y = y0 + (x - x0) * ((y1 - y0) / (x1 - x0));
-
-    }
-
-    /* returns output value */
-    return (y);
-  }
-
-
-   /**
-   *
-   * @brief  Process function for the Q31 Linear Interpolation Function.
-   * @param[in] pYData   pointer to Q31 Linear Interpolation table
-   * @param[in] x        input sample to process
-   * @param[in] nValues  number of table values
-   * @return y processed output sample.
-   *
-   * \par
-   * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 bits for fractional part.
-   * This function can support maximum of table size 2^12.
-   *
-   */
-  CMSIS_INLINE __STATIC_INLINE q31_t arm_linear_interp_q31(
-  q31_t * pYData,
-  q31_t x,
-  uint32_t nValues)
-  {
-    q31_t y;                                     /* output */
-    q31_t y0, y1;                                /* Nearest output values */
-    q31_t fract;                                 /* fractional part */
-    int32_t index;                               /* Index to read nearest output values */
-
-    /* Input is in 12.20 format */
-    /* 12 bits for the table index */
-    /* Index value calculation */
-    index = ((x & (q31_t)0xFFF00000) >> 20);
-
-    if (index >= (int32_t)(nValues - 1))
-    {
-      return (pYData[nValues - 1]);
-    }
-    else if (index < 0)
-    {
-      return (pYData[0]);
-    }
-    else
-    {
-      /* 20 bits for the fractional part */
-      /* shift left by 11 to keep fract in 1.31 format */
-      fract = (x & 0x000FFFFF) << 11;
-
-      /* Read two nearest output values from the index in 1.31(q31) format */
-      y0 = pYData[index];
-      y1 = pYData[index + 1];
-
-      /* Calculation of y0 * (1-fract) and y is in 2.30 format */
-      y = ((q31_t) ((q63_t) y0 * (0x7FFFFFFF - fract) >> 32));
-
-      /* Calculation of y0 * (1-fract) + y1 *fract and y is in 2.30 format */
-      y += ((q31_t) (((q63_t) y1 * fract) >> 32));
-
-      /* Convert y to 1.31 format */
-      return (y << 1U);
-    }
-  }
-
-
-  /**
-   *
-   * @brief  Process function for the Q15 Linear Interpolation Function.
-   * @param[in] pYData   pointer to Q15 Linear Interpolation table
-   * @param[in] x        input sample to process
-   * @param[in] nValues  number of table values
-   * @return y processed output sample.
-   *
-   * \par
-   * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 bits for fractional part.
-   * This function can support maximum of table size 2^12.
-   *
-   */
-  CMSIS_INLINE __STATIC_INLINE q15_t arm_linear_interp_q15(
-  q15_t * pYData,
-  q31_t x,
-  uint32_t nValues)
-  {
-    q63_t y;                                     /* output */
-    q15_t y0, y1;                                /* Nearest output values */
-    q31_t fract;                                 /* fractional part */
-    int32_t index;                               /* Index to read nearest output values */
-
-    /* Input is in 12.20 format */
-    /* 12 bits for the table index */
-    /* Index value calculation */
-    index = ((x & (int32_t)0xFFF00000) >> 20);
-
-    if (index >= (int32_t)(nValues - 1))
-    {
-      return (pYData[nValues - 1]);
-    }
-    else if (index < 0)
-    {
-      return (pYData[0]);
-    }
-    else
-    {
-      /* 20 bits for the fractional part */
-      /* fract is in 12.20 format */
-      fract = (x & 0x000FFFFF);
-
-      /* Read two nearest output values from the index */
-      y0 = pYData[index];
-      y1 = pYData[index + 1];
-
-      /* Calculation of y0 * (1-fract) and y is in 13.35 format */
-      y = ((q63_t) y0 * (0xFFFFF - fract));
-
-      /* Calculation of (y0 * (1-fract) + y1 * fract) and y is in 13.35 format */
-      y += ((q63_t) y1 * (fract));
-
-      /* convert y to 1.15 format */
-      return (q15_t) (y >> 20);
-    }
-  }
-
-
-  /**
-   *
-   * @brief  Process function for the Q7 Linear Interpolation Function.
-   * @param[in] pYData   pointer to Q7 Linear Interpolation table
-   * @param[in] x        input sample to process
-   * @param[in] nValues  number of table values
-   * @return y processed output sample.
-   *
-   * \par
-   * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 bits for fractional part.
-   * This function can support maximum of table size 2^12.
-   */
-  CMSIS_INLINE __STATIC_INLINE q7_t arm_linear_interp_q7(
-  q7_t * pYData,
-  q31_t x,
-  uint32_t nValues)
-  {
-    q31_t y;                                     /* output */
-    q7_t y0, y1;                                 /* Nearest output values */
-    q31_t fract;                                 /* fractional part */
-    uint32_t index;                              /* Index to read nearest output values */
-
-    /* Input is in 12.20 format */
-    /* 12 bits for the table index */
-    /* Index value calculation */
-    if (x < 0)
-    {
-      return (pYData[0]);
-    }
-    index = (x >> 20) & 0xfff;
-
-    if (index >= (nValues - 1))
-    {
-      return (pYData[nValues - 1]);
-    }
-    else
-    {
-      /* 20 bits for the fractional part */
-      /* fract is in 12.20 format */
-      fract = (x & 0x000FFFFF);
-
-      /* Read two nearest output values from the index and are in 1.7(q7) format */
-      y0 = pYData[index];
-      y1 = pYData[index + 1];
-
-      /* Calculation of y0 * (1-fract ) and y is in 13.27(q27) format */
-      y = ((y0 * (0xFFFFF - fract)));
-
-      /* Calculation of y1 * fract + y0 * (1-fract) and y is in 13.27(q27) format */
-      y += (y1 * fract);
-
-      /* convert y to 1.7(q7) format */
-      return (q7_t) (y >> 20);
-     }
-  }
-
-  /**
-   * @} end of LinearInterpolate group
-   */
-
-  /**
-   * @brief  Fast approximation to the trigonometric sine function for floating-point data.
-   * @param[in] x  input value in radians.
-   * @return  sin(x).
-   */
-  float32_t arm_sin_f32(
-  float32_t x);
-
-
-  /**
-   * @brief  Fast approximation to the trigonometric sine function for Q31 data.
-   * @param[in] x  Scaled input value in radians.
-   * @return  sin(x).
-   */
-  q31_t arm_sin_q31(
-  q31_t x);
-
-
-  /**
-   * @brief  Fast approximation to the trigonometric sine function for Q15 data.
-   * @param[in] x  Scaled input value in radians.
-   * @return  sin(x).
-   */
-  q15_t arm_sin_q15(
-  q15_t x);
-
-
-  /**
-   * @brief  Fast approximation to the trigonometric cosine function for floating-point data.
-   * @param[in] x  input value in radians.
-   * @return  cos(x).
-   */
-  float32_t arm_cos_f32(
-  float32_t x);
-
-
-  /**
-   * @brief Fast approximation to the trigonometric cosine function for Q31 data.
-   * @param[in] x  Scaled input value in radians.
-   * @return  cos(x).
-   */
-  q31_t arm_cos_q31(
-  q31_t x);
-
-
-  /**
-   * @brief  Fast approximation to the trigonometric cosine function for Q15 data.
-   * @param[in] x  Scaled input value in radians.
-   * @return  cos(x).
-   */
-  q15_t arm_cos_q15(
-  q15_t x);
-
-
-  /**
-   * @ingroup groupFastMath
-   */
-
-
-  /**
-   * @defgroup SQRT Square Root
-   *
-   * Computes the square root of a number.
-   * There are separate functions for Q15, Q31, and floating-point data types.
-   * The square root function is computed using the Newton-Raphson algorithm.
-   * This is an iterative algorithm of the form:
-   * <pre>
-   *      x1 = x0 - f(x0)/f'(x0)
-   * </pre>
-   * where <code>x1</code> is the current estimate,
-   * <code>x0</code> is the previous estimate, and
-   * <code>f'(x0)</code> is the derivative of <code>f()</code> evaluated at <code>x0</code>.
-   * For the square root function, the algorithm reduces to:
-   * <pre>
-   *     x0 = in/2                         [initial guess]
-   *     x1 = 1/2 * ( x0 + in / x0)        [each iteration]
-   * </pre>
-   */
-
-
-  /**
-   * @addtogroup SQRT
-   * @{
-   */
-
-  /**
-   * @brief  Floating-point square root function.
-   * @param[in]  in    input value.
-   * @param[out] pOut  square root of input value.
-   * @return The function returns ARM_MATH_SUCCESS if input value is positive value or ARM_MATH_ARGUMENT_ERROR if
-   * <code>in</code> is negative value and returns zero output for negative values.
-   */
-  CMSIS_INLINE __STATIC_INLINE arm_status arm_sqrt_f32(
-  float32_t in,
-  float32_t * pOut)
-  {
-    if (in >= 0.0f)
-    {
-
-#if   (__FPU_USED == 1) && defined ( __CC_ARM   )
-      *pOut = __sqrtf(in);
-#elif (__FPU_USED == 1) && (defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050))
-      *pOut = __builtin_sqrtf(in);
-#elif (__FPU_USED == 1) && defined(__GNUC__)
-      *pOut = __builtin_sqrtf(in);
-#elif (__FPU_USED == 1) && defined ( __ICCARM__ ) && (__VER__ >= 6040000)
-      __ASM("VSQRT.F32 %0,%1" : "=t"(*pOut) : "t"(in));
-#else
-      *pOut = sqrtf(in);
-#endif
-
-      return (ARM_MATH_SUCCESS);
-    }
-    else
-    {
-      *pOut = 0.0f;
-      return (ARM_MATH_ARGUMENT_ERROR);
-    }
-  }
-
-
-  /**
-   * @brief Q31 square root function.
-   * @param[in]  in    input value.  The range of the input value is [0 +1) or 0x00000000 to 0x7FFFFFFF.
-   * @param[out] pOut  square root of input value.
-   * @return The function returns ARM_MATH_SUCCESS if input value is positive value or ARM_MATH_ARGUMENT_ERROR if
-   * <code>in</code> is negative value and returns zero output for negative values.
-   */
-  arm_status arm_sqrt_q31(
-  q31_t in,
-  q31_t * pOut);
-
-
-  /**
-   * @brief  Q15 square root function.
-   * @param[in]  in    input value.  The range of the input value is [0 +1) or 0x0000 to 0x7FFF.
-   * @param[out] pOut  square root of input value.
-   * @return The function returns ARM_MATH_SUCCESS if input value is positive value or ARM_MATH_ARGUMENT_ERROR if
-   * <code>in</code> is negative value and returns zero output for negative values.
-   */
-  arm_status arm_sqrt_q15(
-  q15_t in,
-  q15_t * pOut);
-
-  /**
-   * @} end of SQRT group
-   */
-
-
-  /**
-   * @brief floating-point Circular write function.
-   */
-  CMSIS_INLINE __STATIC_INLINE void arm_circularWrite_f32(
-  int32_t * circBuffer,
-  int32_t L,
-  uint16_t * writeOffset,
-  int32_t bufferInc,
-  const int32_t * src,
-  int32_t srcInc,
-  uint32_t blockSize)
-  {
-    uint32_t i = 0U;
-    int32_t wOffset;
-
-    /* Copy the value of Index pointer that points
-     * to the current location where the input samples to be copied */
-    wOffset = *writeOffset;
-
-    /* Loop over the blockSize */
-    i = blockSize;
-
-    while (i > 0U)
-    {
-      /* copy the input sample to the circular buffer */
-      circBuffer[wOffset] = *src;
-
-      /* Update the input pointer */
-      src += srcInc;
-
-      /* Circularly update wOffset.  Watch out for positive and negative value */
-      wOffset += bufferInc;
-      if (wOffset >= L)
-        wOffset -= L;
-
-      /* Decrement the loop counter */
-      i--;
-    }
-
-    /* Update the index pointer */
-    *writeOffset = (uint16_t)wOffset;
-  }
-
-
-
-  /**
-   * @brief floating-point Circular Read function.
-   */
-  CMSIS_INLINE __STATIC_INLINE void arm_circularRead_f32(
-  int32_t * circBuffer,
-  int32_t L,
-  int32_t * readOffset,
-  int32_t bufferInc,
-  int32_t * dst,
-  int32_t * dst_base,
-  int32_t dst_length,
-  int32_t dstInc,
-  uint32_t blockSize)
-  {
-    uint32_t i = 0U;
-    int32_t rOffset, dst_end;
-
-    /* Copy the value of Index pointer that points
-     * to the current location from where the input samples to be read */
-    rOffset = *readOffset;
-    dst_end = (int32_t) (dst_base + dst_length);
-
-    /* Loop over the blockSize */
-    i = blockSize;
-
-    while (i > 0U)
-    {
-      /* copy the sample from the circular buffer to the destination buffer */
-      *dst = circBuffer[rOffset];
-
-      /* Update the input pointer */
-      dst += dstInc;
-
-      if (dst == (int32_t *) dst_end)
-      {
-        dst = dst_base;
-      }
-
-      /* Circularly update rOffset.  Watch out for positive and negative value  */
-      rOffset += bufferInc;
-
-      if (rOffset >= L)
-      {
-        rOffset -= L;
-      }
-
-      /* Decrement the loop counter */
-      i--;
-    }
-
-    /* Update the index pointer */
-    *readOffset = rOffset;
-  }
-
-
-  /**
-   * @brief Q15 Circular write function.
-   */
-  CMSIS_INLINE __STATIC_INLINE void arm_circularWrite_q15(
-  q15_t * circBuffer,
-  int32_t L,
-  uint16_t * writeOffset,
-  int32_t bufferInc,
-  const q15_t * src,
-  int32_t srcInc,
-  uint32_t blockSize)
-  {
-    uint32_t i = 0U;
-    int32_t wOffset;
-
-    /* Copy the value of Index pointer that points
-     * to the current location where the input samples to be copied */
-    wOffset = *writeOffset;
-
-    /* Loop over the blockSize */
-    i = blockSize;
-
-    while (i > 0U)
-    {
-      /* copy the input sample to the circular buffer */
-      circBuffer[wOffset] = *src;
-
-      /* Update the input pointer */
-      src += srcInc;
-
-      /* Circularly update wOffset.  Watch out for positive and negative value */
-      wOffset += bufferInc;
-      if (wOffset >= L)
-        wOffset -= L;
-
-      /* Decrement the loop counter */
-      i--;
-    }
-
-    /* Update the index pointer */
-    *writeOffset = (uint16_t)wOffset;
-  }
-
-
-  /**
-   * @brief Q15 Circular Read function.
-   */
-  CMSIS_INLINE __STATIC_INLINE void arm_circularRead_q15(
-  q15_t * circBuffer,
-  int32_t L,
-  int32_t * readOffset,
-  int32_t bufferInc,
-  q15_t * dst,
-  q15_t * dst_base,
-  int32_t dst_length,
-  int32_t dstInc,
-  uint32_t blockSize)
-  {
-    uint32_t i = 0;
-    int32_t rOffset, dst_end;
-
-    /* Copy the value of Index pointer that points
-     * to the current location from where the input samples to be read */
-    rOffset = *readOffset;
-
-    dst_end = (int32_t) (dst_base + dst_length);
-
-    /* Loop over the blockSize */
-    i = blockSize;
-
-    while (i > 0U)
-    {
-      /* copy the sample from the circular buffer to the destination buffer */
-      *dst = circBuffer[rOffset];
-
-      /* Update the input pointer */
-      dst += dstInc;
-
-      if (dst == (q15_t *) dst_end)
-      {
-        dst = dst_base;
-      }
-
-      /* Circularly update wOffset.  Watch out for positive and negative value */
-      rOffset += bufferInc;
-
-      if (rOffset >= L)
-      {
-        rOffset -= L;
-      }
-
-      /* Decrement the loop counter */
-      i--;
-    }
-
-    /* Update the index pointer */
-    *readOffset = rOffset;
-  }
-
-
-  /**
-   * @brief Q7 Circular write function.
-   */
-  CMSIS_INLINE __STATIC_INLINE void arm_circularWrite_q7(
-  q7_t * circBuffer,
-  int32_t L,
-  uint16_t * writeOffset,
-  int32_t bufferInc,
-  const q7_t * src,
-  int32_t srcInc,
-  uint32_t blockSize)
-  {
-    uint32_t i = 0U;
-    int32_t wOffset;
-
-    /* Copy the value of Index pointer that points
-     * to the current location where the input samples to be copied */
-    wOffset = *writeOffset;
-
-    /* Loop over the blockSize */
-    i = blockSize;
-
-    while (i > 0U)
-    {
-      /* copy the input sample to the circular buffer */
-      circBuffer[wOffset] = *src;
-
-      /* Update the input pointer */
-      src += srcInc;
-
-      /* Circularly update wOffset.  Watch out for positive and negative value */
-      wOffset += bufferInc;
-      if (wOffset >= L)
-        wOffset -= L;
-
-      /* Decrement the loop counter */
-      i--;
-    }
-
-    /* Update the index pointer */
-    *writeOffset = (uint16_t)wOffset;
-  }
-
-
-  /**
-   * @brief Q7 Circular Read function.
-   */
-  CMSIS_INLINE __STATIC_INLINE void arm_circularRead_q7(
-  q7_t * circBuffer,
-  int32_t L,
-  int32_t * readOffset,
-  int32_t bufferInc,
-  q7_t * dst,
-  q7_t * dst_base,
-  int32_t dst_length,
-  int32_t dstInc,
-  uint32_t blockSize)
-  {
-    uint32_t i = 0;
-    int32_t rOffset, dst_end;
-
-    /* Copy the value of Index pointer that points
-     * to the current location from where the input samples to be read */
-    rOffset = *readOffset;
-
-    dst_end = (int32_t) (dst_base + dst_length);
-
-    /* Loop over the blockSize */
-    i = blockSize;
-
-    while (i > 0U)
-    {
-      /* copy the sample from the circular buffer to the destination buffer */
-      *dst = circBuffer[rOffset];
-
-      /* Update the input pointer */
-      dst += dstInc;
-
-      if (dst == (q7_t *) dst_end)
-      {
-        dst = dst_base;
-      }
-
-      /* Circularly update rOffset.  Watch out for positive and negative value */
-      rOffset += bufferInc;
-
-      if (rOffset >= L)
-      {
-        rOffset -= L;
-      }
-
-      /* Decrement the loop counter */
-      i--;
-    }
-
-    /* Update the index pointer */
-    *readOffset = rOffset;
-  }
-
-
-  /**
-   * @brief  Sum of the squares of the elements of a Q31 vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output value.
-   */
-  void arm_power_q31(
-  q31_t * pSrc,
-  uint32_t blockSize,
-  q63_t * pResult);
-
-
-  /**
-   * @brief  Sum of the squares of the elements of a floating-point vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output value.
-   */
-  void arm_power_f32(
-  float32_t * pSrc,
-  uint32_t blockSize,
-  float32_t * pResult);
-
-
-  /**
-   * @brief  Sum of the squares of the elements of a Q15 vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output value.
-   */
-  void arm_power_q15(
-  q15_t * pSrc,
-  uint32_t blockSize,
-  q63_t * pResult);
-
-
-  /**
-   * @brief  Sum of the squares of the elements of a Q7 vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output value.
-   */
-  void arm_power_q7(
-  q7_t * pSrc,
-  uint32_t blockSize,
-  q31_t * pResult);
-
-
-  /**
-   * @brief  Mean value of a Q7 vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output value.
-   */
-  void arm_mean_q7(
-  q7_t * pSrc,
-  uint32_t blockSize,
-  q7_t * pResult);
-
-
-  /**
-   * @brief  Mean value of a Q15 vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output value.
-   */
-  void arm_mean_q15(
-  q15_t * pSrc,
-  uint32_t blockSize,
-  q15_t * pResult);
-
-
-  /**
-   * @brief  Mean value of a Q31 vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output value.
-   */
-  void arm_mean_q31(
-  q31_t * pSrc,
-  uint32_t blockSize,
-  q31_t * pResult);
-
-
-  /**
-   * @brief  Mean value of a floating-point vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output value.
-   */
-  void arm_mean_f32(
-  float32_t * pSrc,
-  uint32_t blockSize,
-  float32_t * pResult);
-
-
-  /**
-   * @brief  Variance of the elements of a floating-point vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output value.
-   */
-  void arm_var_f32(
-  float32_t * pSrc,
-  uint32_t blockSize,
-  float32_t * pResult);
-
-
-  /**
-   * @brief  Variance of the elements of a Q31 vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output value.
-   */
-  void arm_var_q31(
-  q31_t * pSrc,
-  uint32_t blockSize,
-  q31_t * pResult);
-
-
-  /**
-   * @brief  Variance of the elements of a Q15 vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output value.
-   */
-  void arm_var_q15(
-  q15_t * pSrc,
-  uint32_t blockSize,
-  q15_t * pResult);
-
-
-  /**
-   * @brief  Root Mean Square of the elements of a floating-point vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output value.
-   */
-  void arm_rms_f32(
-  float32_t * pSrc,
-  uint32_t blockSize,
-  float32_t * pResult);
-
-
-  /**
-   * @brief  Root Mean Square of the elements of a Q31 vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output value.
-   */
-  void arm_rms_q31(
-  q31_t * pSrc,
-  uint32_t blockSize,
-  q31_t * pResult);
-
-
-  /**
-   * @brief  Root Mean Square of the elements of a Q15 vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output value.
-   */
-  void arm_rms_q15(
-  q15_t * pSrc,
-  uint32_t blockSize,
-  q15_t * pResult);
-
-
-  /**
-   * @brief  Standard deviation of the elements of a floating-point vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output value.
-   */
-  void arm_std_f32(
-  float32_t * pSrc,
-  uint32_t blockSize,
-  float32_t * pResult);
-
-
-  /**
-   * @brief  Standard deviation of the elements of a Q31 vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output value.
-   */
-  void arm_std_q31(
-  q31_t * pSrc,
-  uint32_t blockSize,
-  q31_t * pResult);
-
-
-  /**
-   * @brief  Standard deviation of the elements of a Q15 vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output value.
-   */
-  void arm_std_q15(
-  q15_t * pSrc,
-  uint32_t blockSize,
-  q15_t * pResult);
-
-
-  /**
-   * @brief  Floating-point complex magnitude
-   * @param[in]  pSrc        points to the complex input vector
-   * @param[out] pDst        points to the real output vector
-   * @param[in]  numSamples  number of complex samples in the input vector
-   */
-  void arm_cmplx_mag_f32(
-  float32_t * pSrc,
-  float32_t * pDst,
-  uint32_t numSamples);
-
-
-  /**
-   * @brief  Q31 complex magnitude
-   * @param[in]  pSrc        points to the complex input vector
-   * @param[out] pDst        points to the real output vector
-   * @param[in]  numSamples  number of complex samples in the input vector
-   */
-  void arm_cmplx_mag_q31(
-  q31_t * pSrc,
-  q31_t * pDst,
-  uint32_t numSamples);
-
-
-  /**
-   * @brief  Q15 complex magnitude
-   * @param[in]  pSrc        points to the complex input vector
-   * @param[out] pDst        points to the real output vector
-   * @param[in]  numSamples  number of complex samples in the input vector
-   */
-  void arm_cmplx_mag_q15(
-  q15_t * pSrc,
-  q15_t * pDst,
-  uint32_t numSamples);
-
-
-  /**
-   * @brief  Q15 complex dot product
-   * @param[in]  pSrcA       points to the first input vector
-   * @param[in]  pSrcB       points to the second input vector
-   * @param[in]  numSamples  number of complex samples in each vector
-   * @param[out] realResult  real part of the result returned here
-   * @param[out] imagResult  imaginary part of the result returned here
-   */
-  void arm_cmplx_dot_prod_q15(
-  q15_t * pSrcA,
-  q15_t * pSrcB,
-  uint32_t numSamples,
-  q31_t * realResult,
-  q31_t * imagResult);
-
-
-  /**
-   * @brief  Q31 complex dot product
-   * @param[in]  pSrcA       points to the first input vector
-   * @param[in]  pSrcB       points to the second input vector
-   * @param[in]  numSamples  number of complex samples in each vector
-   * @param[out] realResult  real part of the result returned here
-   * @param[out] imagResult  imaginary part of the result returned here
-   */
-  void arm_cmplx_dot_prod_q31(
-  q31_t * pSrcA,
-  q31_t * pSrcB,
-  uint32_t numSamples,
-  q63_t * realResult,
-  q63_t * imagResult);
-
-
-  /**
-   * @brief  Floating-point complex dot product
-   * @param[in]  pSrcA       points to the first input vector
-   * @param[in]  pSrcB       points to the second input vector
-   * @param[in]  numSamples  number of complex samples in each vector
-   * @param[out] realResult  real part of the result returned here
-   * @param[out] imagResult  imaginary part of the result returned here
-   */
-  void arm_cmplx_dot_prod_f32(
-  float32_t * pSrcA,
-  float32_t * pSrcB,
-  uint32_t numSamples,
-  float32_t * realResult,
-  float32_t * imagResult);
-
-
-  /**
-   * @brief  Q15 complex-by-real multiplication
-   * @param[in]  pSrcCmplx   points to the complex input vector
-   * @param[in]  pSrcReal    points to the real input vector
-   * @param[out] pCmplxDst   points to the complex output vector
-   * @param[in]  numSamples  number of samples in each vector
-   */
-  void arm_cmplx_mult_real_q15(
-  q15_t * pSrcCmplx,
-  q15_t * pSrcReal,
-  q15_t * pCmplxDst,
-  uint32_t numSamples);
-
-
-  /**
-   * @brief  Q31 complex-by-real multiplication
-   * @param[in]  pSrcCmplx   points to the complex input vector
-   * @param[in]  pSrcReal    points to the real input vector
-   * @param[out] pCmplxDst   points to the complex output vector
-   * @param[in]  numSamples  number of samples in each vector
-   */
-  void arm_cmplx_mult_real_q31(
-  q31_t * pSrcCmplx,
-  q31_t * pSrcReal,
-  q31_t * pCmplxDst,
-  uint32_t numSamples);
-
-
-  /**
-   * @brief  Floating-point complex-by-real multiplication
-   * @param[in]  pSrcCmplx   points to the complex input vector
-   * @param[in]  pSrcReal    points to the real input vector
-   * @param[out] pCmplxDst   points to the complex output vector
-   * @param[in]  numSamples  number of samples in each vector
-   */
-  void arm_cmplx_mult_real_f32(
-  float32_t * pSrcCmplx,
-  float32_t * pSrcReal,
-  float32_t * pCmplxDst,
-  uint32_t numSamples);
-
-
-  /**
-   * @brief  Minimum value of a Q7 vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] result     is output pointer
-   * @param[in]  index      is the array index of the minimum value in the input buffer.
-   */
-  void arm_min_q7(
-  q7_t * pSrc,
-  uint32_t blockSize,
-  q7_t * result,
-  uint32_t * index);
-
-
-  /**
-   * @brief  Minimum value of a Q15 vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output pointer
-   * @param[in]  pIndex     is the array index of the minimum value in the input buffer.
-   */
-  void arm_min_q15(
-  q15_t * pSrc,
-  uint32_t blockSize,
-  q15_t * pResult,
-  uint32_t * pIndex);
-
-
-  /**
-   * @brief  Minimum value of a Q31 vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output pointer
-   * @param[out] pIndex     is the array index of the minimum value in the input buffer.
-   */
-  void arm_min_q31(
-  q31_t * pSrc,
-  uint32_t blockSize,
-  q31_t * pResult,
-  uint32_t * pIndex);
-
-
-  /**
-   * @brief  Minimum value of a floating-point vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[in]  blockSize  is the number of samples to process
-   * @param[out] pResult    is output pointer
-   * @param[out] pIndex     is the array index of the minimum value in the input buffer.
-   */
-  void arm_min_f32(
-  float32_t * pSrc,
-  uint32_t blockSize,
-  float32_t * pResult,
-  uint32_t * pIndex);
-
-
-/**
- * @brief Maximum value of a Q7 vector.
- * @param[in]  pSrc       points to the input buffer
- * @param[in]  blockSize  length of the input vector
- * @param[out] pResult    maximum value returned here
- * @param[out] pIndex     index of maximum value returned here
- */
-  void arm_max_q7(
-  q7_t * pSrc,
-  uint32_t blockSize,
-  q7_t * pResult,
-  uint32_t * pIndex);
-
-
-/**
- * @brief Maximum value of a Q15 vector.
- * @param[in]  pSrc       points to the input buffer
- * @param[in]  blockSize  length of the input vector
- * @param[out] pResult    maximum value returned here
- * @param[out] pIndex     index of maximum value returned here
- */
-  void arm_max_q15(
-  q15_t * pSrc,
-  uint32_t blockSize,
-  q15_t * pResult,
-  uint32_t * pIndex);
-
-
-/**
- * @brief Maximum value of a Q31 vector.
- * @param[in]  pSrc       points to the input buffer
- * @param[in]  blockSize  length of the input vector
- * @param[out] pResult    maximum value returned here
- * @param[out] pIndex     index of maximum value returned here
- */
-  void arm_max_q31(
-  q31_t * pSrc,
-  uint32_t blockSize,
-  q31_t * pResult,
-  uint32_t * pIndex);
-
-
-/**
- * @brief Maximum value of a floating-point vector.
- * @param[in]  pSrc       points to the input buffer
- * @param[in]  blockSize  length of the input vector
- * @param[out] pResult    maximum value returned here
- * @param[out] pIndex     index of maximum value returned here
- */
-  void arm_max_f32(
-  float32_t * pSrc,
-  uint32_t blockSize,
-  float32_t * pResult,
-  uint32_t * pIndex);
-
-
-  /**
-   * @brief  Q15 complex-by-complex multiplication
-   * @param[in]  pSrcA       points to the first input vector
-   * @param[in]  pSrcB       points to the second input vector
-   * @param[out] pDst        points to the output vector
-   * @param[in]  numSamples  number of complex samples in each vector
-   */
-  void arm_cmplx_mult_cmplx_q15(
-  q15_t * pSrcA,
-  q15_t * pSrcB,
-  q15_t * pDst,
-  uint32_t numSamples);
-
-
-  /**
-   * @brief  Q31 complex-by-complex multiplication
-   * @param[in]  pSrcA       points to the first input vector
-   * @param[in]  pSrcB       points to the second input vector
-   * @param[out] pDst        points to the output vector
-   * @param[in]  numSamples  number of complex samples in each vector
-   */
-  void arm_cmplx_mult_cmplx_q31(
-  q31_t * pSrcA,
-  q31_t * pSrcB,
-  q31_t * pDst,
-  uint32_t numSamples);
-
-
-  /**
-   * @brief  Floating-point complex-by-complex multiplication
-   * @param[in]  pSrcA       points to the first input vector
-   * @param[in]  pSrcB       points to the second input vector
-   * @param[out] pDst        points to the output vector
-   * @param[in]  numSamples  number of complex samples in each vector
-   */
-  void arm_cmplx_mult_cmplx_f32(
-  float32_t * pSrcA,
-  float32_t * pSrcB,
-  float32_t * pDst,
-  uint32_t numSamples);
-
-
-  /**
-   * @brief Converts the elements of the floating-point vector to Q31 vector.
-   * @param[in]  pSrc       points to the floating-point input vector
-   * @param[out] pDst       points to the Q31 output vector
-   * @param[in]  blockSize  length of the input vector
-   */
-  void arm_float_to_q31(
-  float32_t * pSrc,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Converts the elements of the floating-point vector to Q15 vector.
-   * @param[in]  pSrc       points to the floating-point input vector
-   * @param[out] pDst       points to the Q15 output vector
-   * @param[in]  blockSize  length of the input vector
-   */
-  void arm_float_to_q15(
-  float32_t * pSrc,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief Converts the elements of the floating-point vector to Q7 vector.
-   * @param[in]  pSrc       points to the floating-point input vector
-   * @param[out] pDst       points to the Q7 output vector
-   * @param[in]  blockSize  length of the input vector
-   */
-  void arm_float_to_q7(
-  float32_t * pSrc,
-  q7_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Converts the elements of the Q31 vector to Q15 vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[out] pDst       is output pointer
-   * @param[in]  blockSize  is the number of samples to process
-   */
-  void arm_q31_to_q15(
-  q31_t * pSrc,
-  q15_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Converts the elements of the Q31 vector to Q7 vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[out] pDst       is output pointer
-   * @param[in]  blockSize  is the number of samples to process
-   */
-  void arm_q31_to_q7(
-  q31_t * pSrc,
-  q7_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Converts the elements of the Q15 vector to floating-point vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[out] pDst       is output pointer
-   * @param[in]  blockSize  is the number of samples to process
-   */
-  void arm_q15_to_float(
-  q15_t * pSrc,
-  float32_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Converts the elements of the Q15 vector to Q31 vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[out] pDst       is output pointer
-   * @param[in]  blockSize  is the number of samples to process
-   */
-  void arm_q15_to_q31(
-  q15_t * pSrc,
-  q31_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @brief  Converts the elements of the Q15 vector to Q7 vector.
-   * @param[in]  pSrc       is input pointer
-   * @param[out] pDst       is output pointer
-   * @param[in]  blockSize  is the number of samples to process
-   */
-  void arm_q15_to_q7(
-  q15_t * pSrc,
-  q7_t * pDst,
-  uint32_t blockSize);
-
-
-  /**
-   * @ingroup groupInterpolation
-   */
-
-  /**
-   * @defgroup BilinearInterpolate Bilinear Interpolation
-   *
-   * Bilinear interpolation is an extension of linear interpolation applied to a two dimensional grid.
-   * The underlying function <code>f(x, y)</code> is sampled on a regular grid and the interpolation process
-   * determines values between the grid points.
-   * Bilinear interpolation is equivalent to two step linear interpolation, first in the x-dimension and then in the y-dimension.
-   * Bilinear interpolation is often used in image processing to rescale images.
-   * The CMSIS DSP library provides bilinear interpolation functions for Q7, Q15, Q31, and floating-point data types.
-   *
-   * <b>Algorithm</b>
-   * \par
-   * The instance structure used by the bilinear interpolation functions describes a two dimensional data table.
-   * For floating-point, the instance structure is defined as:
-   * <pre>
-   *   typedef struct
-   *   {
-   *     uint16_t numRows;
-   *     uint16_t numCols;
-   *     float32_t *pData;
-   * } arm_bilinear_interp_instance_f32;
-   * </pre>
-   *
-   * \par
-   * where <code>numRows</code> specifies the number of rows in the table;
-   * <code>numCols</code> specifies the number of columns in the table;
-   * and <code>pData</code> points to an array of size <code>numRows*numCols</code> values.
-   * The data table <code>pTable</code> is organized in row order and the supplied data values fall on integer indexes.
-   * That is, table element (x,y) is located at <code>pTable[x + y*numCols]</code> where x and y are integers.
-   *
-   * \par
-   * Let <code>(x, y)</code> specify the desired interpolation point.  Then define:
-   * <pre>
-   *     XF = floor(x)
-   *     YF = floor(y)
-   * </pre>
-   * \par
-   * The interpolated output point is computed as:
-   * <pre>
-   *  f(x, y) = f(XF, YF) * (1-(x-XF)) * (1-(y-YF))
-   *           + f(XF+1, YF) * (x-XF)*(1-(y-YF))
-   *           + f(XF, YF+1) * (1-(x-XF))*(y-YF)
-   *           + f(XF+1, YF+1) * (x-XF)*(y-YF)
-   * </pre>
-   * Note that the coordinates (x, y) contain integer and fractional components.
-   * The integer components specify which portion of the table to use while the
-   * fractional components control the interpolation processor.
-   *
-   * \par
-   * if (x,y) are outside of the table boundary, Bilinear interpolation returns zero output.
-   */
-
-  /**
-   * @addtogroup BilinearInterpolate
-   * @{
-   */
-
-
-  /**
-  *
-  * @brief  Floating-point bilinear interpolation.
-  * @param[in,out] S  points to an instance of the interpolation structure.
-  * @param[in]     X  interpolation coordinate.
-  * @param[in]     Y  interpolation coordinate.
-  * @return out interpolated value.
-  */
-  CMSIS_INLINE __STATIC_INLINE float32_t arm_bilinear_interp_f32(
-  const arm_bilinear_interp_instance_f32 * S,
-  float32_t X,
-  float32_t Y)
-  {
-    float32_t out;
-    float32_t f00, f01, f10, f11;
-    float32_t *pData = S->pData;
-    int32_t xIndex, yIndex, index;
-    float32_t xdiff, ydiff;
-    float32_t b1, b2, b3, b4;
-
-    xIndex = (int32_t) X;
-    yIndex = (int32_t) Y;
-
-    /* Care taken for table outside boundary */
-    /* Returns zero output when values are outside table boundary */
-    if (xIndex < 0 || xIndex > (S->numRows - 1) || yIndex < 0 || yIndex > (S->numCols - 1))
-    {
-      return (0);
-    }
-
-    /* Calculation of index for two nearest points in X-direction */
-    index = (xIndex - 1) + (yIndex - 1) * S->numCols;
-
-
-    /* Read two nearest points in X-direction */
-    f00 = pData[index];
-    f01 = pData[index + 1];
-
-    /* Calculation of index for two nearest points in Y-direction */
-    index = (xIndex - 1) + (yIndex) * S->numCols;
-
-
-    /* Read two nearest points in Y-direction */
-    f10 = pData[index];
-    f11 = pData[index + 1];
-
-    /* Calculation of intermediate values */
-    b1 = f00;
-    b2 = f01 - f00;
-    b3 = f10 - f00;
-    b4 = f00 - f01 - f10 + f11;
-
-    /* Calculation of fractional part in X */
-    xdiff = X - xIndex;
-
-    /* Calculation of fractional part in Y */
-    ydiff = Y - yIndex;
-
-    /* Calculation of bi-linear interpolated output */
-    out = b1 + b2 * xdiff + b3 * ydiff + b4 * xdiff * ydiff;
-
-    /* return to application */
-    return (out);
-  }
-
-
-  /**
-  *
-  * @brief  Q31 bilinear interpolation.
-  * @param[in,out] S  points to an instance of the interpolation structure.
-  * @param[in]     X  interpolation coordinate in 12.20 format.
-  * @param[in]     Y  interpolation coordinate in 12.20 format.
-  * @return out interpolated value.
-  */
-  CMSIS_INLINE __STATIC_INLINE q31_t arm_bilinear_interp_q31(
-  arm_bilinear_interp_instance_q31 * S,
-  q31_t X,
-  q31_t Y)
-  {
-    q31_t out;                                   /* Temporary output */
-    q31_t acc = 0;                               /* output */
-    q31_t xfract, yfract;                        /* X, Y fractional parts */
-    q31_t x1, x2, y1, y2;                        /* Nearest output values */
-    int32_t rI, cI;                              /* Row and column indices */
-    q31_t *pYData = S->pData;                    /* pointer to output table values */
-    uint32_t nCols = S->numCols;                 /* num of rows */
-
-    /* Input is in 12.20 format */
-    /* 12 bits for the table index */
-    /* Index value calculation */
-    rI = ((X & (q31_t)0xFFF00000) >> 20);
-
-    /* Input is in 12.20 format */
-    /* 12 bits for the table index */
-    /* Index value calculation */
-    cI = ((Y & (q31_t)0xFFF00000) >> 20);
-
-    /* Care taken for table outside boundary */
-    /* Returns zero output when values are outside table boundary */
-    if (rI < 0 || rI > (S->numRows - 1) || cI < 0 || cI > (S->numCols - 1))
-    {
-      return (0);
-    }
-
-    /* 20 bits for the fractional part */
-    /* shift left xfract by 11 to keep 1.31 format */
-    xfract = (X & 0x000FFFFF) << 11U;
-
-    /* Read two nearest output values from the index */
-    x1 = pYData[(rI) + (int32_t)nCols * (cI)    ];
-    x2 = pYData[(rI) + (int32_t)nCols * (cI) + 1];
-
-    /* 20 bits for the fractional part */
-    /* shift left yfract by 11 to keep 1.31 format */
-    yfract = (Y & 0x000FFFFF) << 11U;
-
-    /* Read two nearest output values from the index */
-    y1 = pYData[(rI) + (int32_t)nCols * (cI + 1)    ];
-    y2 = pYData[(rI) + (int32_t)nCols * (cI + 1) + 1];
-
-    /* Calculation of x1 * (1-xfract ) * (1-yfract) and acc is in 3.29(q29) format */
-    out = ((q31_t) (((q63_t) x1  * (0x7FFFFFFF - xfract)) >> 32));
-    acc = ((q31_t) (((q63_t) out * (0x7FFFFFFF - yfract)) >> 32));
-
-    /* x2 * (xfract) * (1-yfract)  in 3.29(q29) and adding to acc */
-    out = ((q31_t) ((q63_t) x2 * (0x7FFFFFFF - yfract) >> 32));
-    acc += ((q31_t) ((q63_t) out * (xfract) >> 32));
-
-    /* y1 * (1 - xfract) * (yfract)  in 3.29(q29) and adding to acc */
-    out = ((q31_t) ((q63_t) y1 * (0x7FFFFFFF - xfract) >> 32));
-    acc += ((q31_t) ((q63_t) out * (yfract) >> 32));
-
-    /* y2 * (xfract) * (yfract)  in 3.29(q29) and adding to acc */
-    out = ((q31_t) ((q63_t) y2 * (xfract) >> 32));
-    acc += ((q31_t) ((q63_t) out * (yfract) >> 32));
-
-    /* Convert acc to 1.31(q31) format */
-    return ((q31_t)(acc << 2));
-  }
-
-
-  /**
-  * @brief  Q15 bilinear interpolation.
-  * @param[in,out] S  points to an instance of the interpolation structure.
-  * @param[in]     X  interpolation coordinate in 12.20 format.
-  * @param[in]     Y  interpolation coordinate in 12.20 format.
-  * @return out interpolated value.
-  */
-  CMSIS_INLINE __STATIC_INLINE q15_t arm_bilinear_interp_q15(
-  arm_bilinear_interp_instance_q15 * S,
-  q31_t X,
-  q31_t Y)
-  {
-    q63_t acc = 0;                               /* output */
-    q31_t out;                                   /* Temporary output */
-    q15_t x1, x2, y1, y2;                        /* Nearest output values */
-    q31_t xfract, yfract;                        /* X, Y fractional parts */
-    int32_t rI, cI;                              /* Row and column indices */
-    q15_t *pYData = S->pData;                    /* pointer to output table values */
-    uint32_t nCols = S->numCols;                 /* num of rows */
-
-    /* Input is in 12.20 format */
-    /* 12 bits for the table index */
-    /* Index value calculation */
-    rI = ((X & (q31_t)0xFFF00000) >> 20);
-
-    /* Input is in 12.20 format */
-    /* 12 bits for the table index */
-    /* Index value calculation */
-    cI = ((Y & (q31_t)0xFFF00000) >> 20);
-
-    /* Care taken for table outside boundary */
-    /* Returns zero output when values are outside table boundary */
-    if (rI < 0 || rI > (S->numRows - 1) || cI < 0 || cI > (S->numCols - 1))
-    {
-      return (0);
-    }
-
-    /* 20 bits for the fractional part */
-    /* xfract should be in 12.20 format */
-    xfract = (X & 0x000FFFFF);
-
-    /* Read two nearest output values from the index */
-    x1 = pYData[((uint32_t)rI) + nCols * ((uint32_t)cI)    ];
-    x2 = pYData[((uint32_t)rI) + nCols * ((uint32_t)cI) + 1];
-
-    /* 20 bits for the fractional part */
-    /* yfract should be in 12.20 format */
-    yfract = (Y & 0x000FFFFF);
-
-    /* Read two nearest output values from the index */
-    y1 = pYData[((uint32_t)rI) + nCols * ((uint32_t)cI + 1)    ];
-    y2 = pYData[((uint32_t)rI) + nCols * ((uint32_t)cI + 1) + 1];
-
-    /* Calculation of x1 * (1-xfract ) * (1-yfract) and acc is in 13.51 format */
-
-    /* x1 is in 1.15(q15), xfract in 12.20 format and out is in 13.35 format */
-    /* convert 13.35 to 13.31 by right shifting  and out is in 1.31 */
-    out = (q31_t) (((q63_t) x1 * (0xFFFFF - xfract)) >> 4U);
-    acc = ((q63_t) out * (0xFFFFF - yfract));
-
-    /* x2 * (xfract) * (1-yfract)  in 1.51 and adding to acc */
-    out = (q31_t) (((q63_t) x2 * (0xFFFFF - yfract)) >> 4U);
-    acc += ((q63_t) out * (xfract));
-
-    /* y1 * (1 - xfract) * (yfract)  in 1.51 and adding to acc */
-    out = (q31_t) (((q63_t) y1 * (0xFFFFF - xfract)) >> 4U);
-    acc += ((q63_t) out * (yfract));
-
-    /* y2 * (xfract) * (yfract)  in 1.51 and adding to acc */
-    out = (q31_t) (((q63_t) y2 * (xfract)) >> 4U);
-    acc += ((q63_t) out * (yfract));
-
-    /* acc is in 13.51 format and down shift acc by 36 times */
-    /* Convert out to 1.15 format */
-    return ((q15_t)(acc >> 36));
-  }
-
-
-  /**
-  * @brief  Q7 bilinear interpolation.
-  * @param[in,out] S  points to an instance of the interpolation structure.
-  * @param[in]     X  interpolation coordinate in 12.20 format.
-  * @param[in]     Y  interpolation coordinate in 12.20 format.
-  * @return out interpolated value.
-  */
-  CMSIS_INLINE __STATIC_INLINE q7_t arm_bilinear_interp_q7(
-  arm_bilinear_interp_instance_q7 * S,
-  q31_t X,
-  q31_t Y)
-  {
-    q63_t acc = 0;                               /* output */
-    q31_t out;                                   /* Temporary output */
-    q31_t xfract, yfract;                        /* X, Y fractional parts */
-    q7_t x1, x2, y1, y2;                         /* Nearest output values */
-    int32_t rI, cI;                              /* Row and column indices */
-    q7_t *pYData = S->pData;                     /* pointer to output table values */
-    uint32_t nCols = S->numCols;                 /* num of rows */
-
-    /* Input is in 12.20 format */
-    /* 12 bits for the table index */
-    /* Index value calculation */
-    rI = ((X & (q31_t)0xFFF00000) >> 20);
-
-    /* Input is in 12.20 format */
-    /* 12 bits for the table index */
-    /* Index value calculation */
-    cI = ((Y & (q31_t)0xFFF00000) >> 20);
-
-    /* Care taken for table outside boundary */
-    /* Returns zero output when values are outside table boundary */
-    if (rI < 0 || rI > (S->numRows - 1) || cI < 0 || cI > (S->numCols - 1))
-    {
-      return (0);
-    }
-
-    /* 20 bits for the fractional part */
-    /* xfract should be in 12.20 format */
-    xfract = (X & (q31_t)0x000FFFFF);
-
-    /* Read two nearest output values from the index */
-    x1 = pYData[((uint32_t)rI) + nCols * ((uint32_t)cI)    ];
-    x2 = pYData[((uint32_t)rI) + nCols * ((uint32_t)cI) + 1];
-
-    /* 20 bits for the fractional part */
-    /* yfract should be in 12.20 format */
-    yfract = (Y & (q31_t)0x000FFFFF);
-
-    /* Read two nearest output values from the index */
-    y1 = pYData[((uint32_t)rI) + nCols * ((uint32_t)cI + 1)    ];
-    y2 = pYData[((uint32_t)rI) + nCols * ((uint32_t)cI + 1) + 1];
-
-    /* Calculation of x1 * (1-xfract ) * (1-yfract) and acc is in 16.47 format */
-    out = ((x1 * (0xFFFFF - xfract)));
-    acc = (((q63_t) out * (0xFFFFF - yfract)));
-
-    /* x2 * (xfract) * (1-yfract)  in 2.22 and adding to acc */
-    out = ((x2 * (0xFFFFF - yfract)));
-    acc += (((q63_t) out * (xfract)));
-
-    /* y1 * (1 - xfract) * (yfract)  in 2.22 and adding to acc */
-    out = ((y1 * (0xFFFFF - xfract)));
-    acc += (((q63_t) out * (yfract)));
-
-    /* y2 * (xfract) * (yfract)  in 2.22 and adding to acc */
-    out = ((y2 * (yfract)));
-    acc += (((q63_t) out * (xfract)));
-
-    /* acc in 16.47 format and down shift by 40 to convert to 1.7 format */
-    return ((q7_t)(acc >> 40));
-  }
-
-  /**
-   * @} end of BilinearInterpolate group
-   */
-
-
-/* SMMLAR */
-#define multAcc_32x32_keep32_R(a, x, y) \
-    a = (q31_t) (((((q63_t) a) << 32) + ((q63_t) x * y) + 0x80000000LL ) >> 32)
-
-/* SMMLSR */
-#define multSub_32x32_keep32_R(a, x, y) \
-    a = (q31_t) (((((q63_t) a) << 32) - ((q63_t) x * y) + 0x80000000LL ) >> 32)
-
-/* SMMULR */
-#define mult_32x32_keep32_R(a, x, y) \
-    a = (q31_t) (((q63_t) x * y + 0x80000000LL ) >> 32)
-
-/* SMMLA */
-#define multAcc_32x32_keep32(a, x, y) \
-    a += (q31_t) (((q63_t) x * y) >> 32)
-
-/* SMMLS */
-#define multSub_32x32_keep32(a, x, y) \
-    a -= (q31_t) (((q63_t) x * y) >> 32)
-
-/* SMMUL */
-#define mult_32x32_keep32(a, x, y) \
-    a = (q31_t) (((q63_t) x * y ) >> 32)
-
-
-#if   defined ( __CC_ARM )
-  /* Enter low optimization region - place directly above function definition */
-  #if defined( ARM_MATH_CM4 ) || defined( ARM_MATH_CM7)
-    #define LOW_OPTIMIZATION_ENTER \
-       _Pragma ("push")         \
-       _Pragma ("O1")
-  #else
-    #define LOW_OPTIMIZATION_ENTER
-  #endif
-
-  /* Exit low optimization region - place directly after end of function definition */
-  #if defined ( ARM_MATH_CM4 ) || defined ( ARM_MATH_CM7 )
-    #define LOW_OPTIMIZATION_EXIT \
-       _Pragma ("pop")
-  #else
-    #define LOW_OPTIMIZATION_EXIT
-  #endif
-
-  /* Enter low optimization region - place directly above function definition */
-  #define IAR_ONLY_LOW_OPTIMIZATION_ENTER
-
-  /* Exit low optimization region - place directly after end of function definition */
-  #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
-
-#elif defined (__ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
-  #define LOW_OPTIMIZATION_ENTER
-  #define LOW_OPTIMIZATION_EXIT
-  #define IAR_ONLY_LOW_OPTIMIZATION_ENTER
-  #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
-
-#elif defined ( __GNUC__ )
-  #define LOW_OPTIMIZATION_ENTER \
-       __attribute__(( optimize("-O1") ))
-  #define LOW_OPTIMIZATION_EXIT
-  #define IAR_ONLY_LOW_OPTIMIZATION_ENTER
-  #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
-
-#elif defined ( __ICCARM__ )
-  /* Enter low optimization region - place directly above function definition */
-  #if defined ( ARM_MATH_CM4 ) || defined ( ARM_MATH_CM7 )
-    #define LOW_OPTIMIZATION_ENTER \
-       _Pragma ("optimize=low")
-  #else
-    #define LOW_OPTIMIZATION_ENTER
-  #endif
-
-  /* Exit low optimization region - place directly after end of function definition */
-  #define LOW_OPTIMIZATION_EXIT
-
-  /* Enter low optimization region - place directly above function definition */
-  #if defined ( ARM_MATH_CM4 ) || defined ( ARM_MATH_CM7 )
-    #define IAR_ONLY_LOW_OPTIMIZATION_ENTER \
-       _Pragma ("optimize=low")
-  #else
-    #define IAR_ONLY_LOW_OPTIMIZATION_ENTER
-  #endif
-
-  /* Exit low optimization region - place directly after end of function definition */
-  #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
-
-#elif defined ( __TI_ARM__ )
-  #define LOW_OPTIMIZATION_ENTER
-  #define LOW_OPTIMIZATION_EXIT
-  #define IAR_ONLY_LOW_OPTIMIZATION_ENTER
-  #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
-
-#elif defined ( __CSMC__ )
-  #define LOW_OPTIMIZATION_ENTER
-  #define LOW_OPTIMIZATION_EXIT
-  #define IAR_ONLY_LOW_OPTIMIZATION_ENTER
-  #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
-
-#elif defined ( __TASKING__ )
-  #define LOW_OPTIMIZATION_ENTER
-  #define LOW_OPTIMIZATION_EXIT
-  #define IAR_ONLY_LOW_OPTIMIZATION_ENTER
-  #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
-
-#endif
-
-
-#ifdef   __cplusplus
-}
-#endif
-
-/* Compiler specific diagnostic adjustment */
-#if   defined ( __CC_ARM )
-
-#elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
-
-#elif defined ( __GNUC__ )
-#pragma GCC diagnostic pop
-
-#elif defined ( __ICCARM__ )
-
-#elif defined ( __TI_ARM__ )
-
-#elif defined ( __CSMC__ )
-
-#elif defined ( __TASKING__ )
-
-#else
-  #error Unknown compiler
-#endif
-
-#endif /* _ARM_MATH_H */
-
-/**
- *
- * End of file.
- */
diff --git a/Commissioning.h b/Commissioning.h
deleted file mode 100644
index c25640b..0000000
--- a/Commissioning.h
+++ /dev/null
@@ -1,131 +0,0 @@
-/*!
- * \file      Commissioning.h
- *
- * \brief     End device commissioning parameters
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __LORA_COMMISSIONING_H__
-#define __LORA_COMMISSIONING_H__
-
-/*!
- * When set to 1 the application uses the Over-the-Air activation procedure
- * When set to 0 the application uses the Personalization activation procedure
- */
-#define OVER_THE_AIR_ACTIVATION                            1
-
-/*!
- * When using ABP activation the MAC layer must know in advance to which server
- * version it will be connected.
- */
-#define ABP_ACTIVATION_LRWAN_VERSION_V10x                  0x01000300 // 1.0.3.0
-
-#define ABP_ACTIVATION_LRWAN_VERSION                       ABP_ACTIVATION_LRWAN_VERSION_V10x
-
-/*!
- * Indicates if the end-device is to be connected to a private or public network
- */
-#define LORAWAN_PUBLIC_NETWORK                              true
-
-/*!
- * IEEE Organizationally Unique Identifier ( OUI ) (big endian)
- * \remark This is unique to a company or organization
- */
-#define IEEE_OUI                                            0x00, 0x00, 0x00
-
-/*!
- * Mote device IEEE EUI (big endian)
- *
- * \remark In this application the value is automatically generated by calling
- *         BoardGetUniqueId function
- */
-/* The Device EUI below was obtained from TTN Console */
-#define LORAWAN_DEVICE_EUI                                  { 0x00, 0x27, 0x58, 0x36, 0x25, 0x7C, 0x92, 0x6E }//OTAA
-
-/*!
- * App/Join server IEEE EUI (big endian)
- */
-/* The Join EUI below is set to the same with the Application EUI which was obtained from TTN Console */
-#define LORAWAN_JOIN_EUI                                    { 0x70, 0xB3, 0xD5, 0x7E, 0xD0, 0x03, 0x65, 0x17 }
-
-/*!
- * Application IEEE EUI (big endian)
- */
-/* The Application EUI below was obtained from TTN Console */
-#define LORAWAN_APPLICATION_EUI                             { 0x70, 0xB3, 0xD5, 0x7E, 0xD0, 0x03, 0x65, 0x17 }
-
-/*!
- * Application root key
- * WARNING: NOT USED FOR 1.0.x DEVICES
- */
-#define LORAWAN_APP_KEY                                     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
-/*!
- * Application root key - Used to derive Multicast keys on 1.0.x devices.
- * WARNING: USED only FOR 1.0.x DEVICES
- */
-#define LORAWAN_GEN_APP_KEY                                 { 0xC7, 0x98, 0x86, 0x21, 0x57, 0x56, 0xB6, 0x62, 0xDC, 0xD2, 0xAB, 0x38, 0x8D, 0xAC, 0x2E, 0x04 }
-
-/*!
- * Network root key
- * WARNING: FOR 1.0.x DEVICES IT IS THE \ref LORAWAN_APP_KEY
- */
-/* The key below is the case for OTAA */
-#define LORAWAN_NWK_KEY                                     { 0xC7, 0x98, 0x86, 0x21, 0x57, 0x56, 0xB6, 0x62, 0xDC, 0xD2, 0xAB, 0x38, 0x8D, 0xAC, 0x2E, 0x04 }
-
-/*!
- * Current network ID
- */
-#define LORAWAN_NETWORK_ID                                  ( uint32_t )0
-
-/*!
- * Device address on the network (big endian)
- *
- * \remark In this application the value is automatically generated using
- *         a pseudo random generator seeded with a value derived from
- *         BoardUniqueId value if LORAWAN_DEVICE_ADDRESS is set to 0
- */
-/* The Device Address below was obtained from TTN Console for ABP activation */
-#define LORAWAN_DEVICE_ADDRESS                              ( uint32_t )0x2602261B
-
-/*!
- * Forwarding Network session integrity key
- * WARNING: NWK_S_KEY FOR 1.0.x DEVICES
- */
-/* The key below was obtained from TTN Console as a Network Session Key for ABP activation */
-#define LORAWAN_F_NWK_S_INT_KEY                             { 0x44, 0x3E, 0xDF, 0x23, 0xC2, 0xD2, 0x09, 0xD7, 0xFA, 0x1A, 0x29, 0xA3, 0xF6, 0x3B, 0xB2, 0x1E }
-
-/*!
- * Serving Network session integrity key
- * WARNING: NOT USED FOR 1.0.x DEVICES. MUST BE THE SAME AS \ref LORAWAN_F_NWK_S_INT_KEY
- */
-/* The key below was set to the same LORAWAN_F_NWK_S_INT_KEY as instructed above */
-#define LORAWAN_S_NWK_S_INT_KEY                             { 0x44, 0x3E, 0xDF, 0x23, 0xC2, 0xD2, 0x09, 0xD7, 0xFA, 0x1A, 0x29, 0xA3, 0xF6, 0x3B, 0xB2, 0x1E }
-
-/*!
- * Network session encryption key
- * WARNING: NOT USED FOR 1.0.x DEVICES. MUST BE THE SAME AS \ref LORAWAN_F_NWK_S_INT_KEY
- */
-/* The key below was set to the same LORAWAN_F_NWK_S_INT_KEY as instructed above */
-#define LORAWAN_NWK_S_ENC_KEY                               { 0x44, 0x3E, 0xDF, 0x23, 0xC2, 0xD2, 0x09, 0xD7, 0xFA, 0x1A, 0x29, 0xA3, 0xF6, 0x3B, 0xB2, 0x1E }
-
-/*!
- * Application session key
- */
-/* The key below was obtained from TTN Console as an App Session Key for ABP activation */
-#define LORAWAN_APP_S_KEY                                   { 0x25, 0x31, 0xE8, 0x5A, 0xB3, 0x71, 0xE2, 0xE2, 0x07, 0x83, 0x01, 0xC5, 0x65, 0x2E, 0x62, 0xBD }
-#endif // __LORA_COMMISSIONING_H__
diff --git a/Device/CMSIS_Driver/Include/r_spi_cmsis_api.h.bak b/Device/CMSIS_Driver/Include/r_spi_cmsis_api.h.bak
deleted file mode 100644
index fc95c32..0000000
--- a/Device/CMSIS_Driver/Include/r_spi_cmsis_api.h.bak
+++ /dev/null
@@ -1,296 +0,0 @@
-/**********************************************************************************************************************
-* DISCLAIMER
-* This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No 
-* other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all 
-* applicable laws, including copyright laws. 
-* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
-* THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, 
-* FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM 
-* EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES 
-* SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
-* SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
-* Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of 
-* this software. By using this software, you agree to the additional terms and conditions found by accessing the 
-* following link:
-* http://www.renesas.com/disclaimer 
-*
-* Copyright (C) 2018-2019 Renesas Electronics Corporation. All rights reserved.
-**********************************************************************************************************************/
-/**********************************************************************************************************************
-* File Name    : r_spi_cmsis.h
-* Version      : 0.40
-* Description  : CMSIS-Driver for SPI.
-**********************************************************************************************************************/
-/**********************************************************************************************************************
-* History : DD.MM.YYYY Version  Description
-*         : 20.09.2019 0.40     Based on RE01 1500KB
-**********************************************************************************************************************/
-
-/******************************************************************************************************************//**
- @ingroup grp_cmsis_drv_imp
- @defgroup grp_cmsis_drv_impl_spi CMSIS-Driver SPI Implementation
- @brief The SPI driver implementation for the CMSIS-Driver SPI interface to drive the SPI peripheral on RE Family.
-
- @section sec_cmsis_driver_spi_summary CMSIS-Driver SPI Summary
- This is the CMSIS-Driver SPI implementation which drives the SPI peripheral on RE Family via the CMSIS-Driver SPI
- interface.
- Use the instance @ref Driver_SPI0 to acccess to SPI peripheral channel 0. Do not use ARM_SPI_XXX APIs,
- or SPI0_XXX functions directly. For instance, when accessing the SPI channel 0, use the SPI Driver Instance 
- Driver_SPI0, which is an instance of 'Access Struct' @ref ARM_DRIVER_SPI for SPI channel 0.
- Following is a code example to open SPI channel 0 and power up the SPI peripheral.
- @code
- ...
-
- Driver_SPI0.Initialize();                  // Initialize the SPI channel 0
-
- Driver_SPI0.PowerControl(ARM_POWER_FULL);  // Power up the SPI peripheral
- ...
- @endcode
-
- @section CMSIS_Driver_SPI_Specific_Error_Code CMSIS-Driver SPI Specific Error Code
- See ARM_SPI_ERROR_XXX in Driver_SPI.h for the detail.
-
- @{
- *********************************************************************************************************************/
- /***********************************************************
-Includes <System Includes> , "Project Includes"
-***********************************************************/
-#include "RE01_256KB.h"
-#include "Driver_SPI.h"
-#include "Pin.h"
-#include "r_spi_cfg.h"
-#include "r_system_api.h"
-#include "r_system_cfg.h"
-#include "r_lpm_api.h"
-#include "r_dmac_api.h"
-#include "r_dtc_api.h"
-
-/******************************************************************************
- Macro definitions
-*****************************************************************************/
-#ifndef R_SPI_CMSIS_H
-#define R_SPI_CMSIS_H
-
-#define R_SPI0_ENABLE                         (1)       /*!< SPI ENABLE */
-#define R_SPI1_ENABLE                         (1)       /*!< SPI ENABLE */
-#define SPI_FLAG_INITIALIZED                  (1 << 0)  /*!< Initialization flag */
-#define SPI_FLAG_POWERED                      (1 << 1)  /*!< Started flag */
-#define SPI_FLAG_CONFIGURED                   (1 << 2)  /*!< Set flag */
-#define SPI_FLAG_MASTER_SEND_AVAILABLE        (1 << 3)  /*!< Master Send enable */
-#define SPI_FLAG_MASTER_RECEIVE_AVAILABLE     (1 << 4)  /*!< Master Receive enable */
-#define SPI_FLAG_SLAVE_SEND_AVAILABLE         (1 << 5)  /*!< Slave Send available */
-#define SPI_FLAG_SLAVE_RECEIVE_AVAILABLE      (1 << 6)  /*!< Slave Receive available */
-
-#define SPI_SPTI0_DMAC_SOURCE_ID   (0x9A)
-#define SPI_SPRI0_DMAC_SOURCE_ID   (0x99)
-#define SPI_SPTI1_DMAC_SOURCE_ID   (0x9F)
-#define SPI_SPRI1_DMAC_SOURCE_ID   (0x9E)
-
-/******************************************************************************
- Global Typedef definitions
-*****************************************************************************/
-/** @brief Transmission status */
-typedef struct  /* @suppress("Source line ordering") */
-{           
-    uint32_t                num;                /*!< Total number of transfer */
-    void                    *rx_buf;             /*!< Pointer to in data buffer */
-    const void              *tx_buf;             /*!< Pointer to out data buffer */
-    uint32_t                rx_cnt;             /*!< Number of data received */
-    uint32_t                tx_cnt;             /*!< Number of data sent */
-    uint32_t                tx_def_val;         /*!< Transmit default value */
-    uint8_t                 data_bits;          /*!< Number of data bytes */
-    uint8_t                 exec_state;         /*!< Transfer and/or Receive status  */
-} st_spi_transfer_info_t;          
-
-/** @brief SPI setting, structure confirmation structure */
-typedef struct 
-{           
-    ARM_SPI_SignalEvent_t   cb_event;           /*!< Event callback */
-    ARM_SPI_STATUS          status;             /*!< Status flags */
-    uint32_t                mode;               /*!< Current SSP mode */
-    uint32_t                bps;                /*!< Bus speed */
-    uint8_t                 flags;              /*!< SPI Driver flags */
-} st_spi_info_t;
-
-/** @brief Structure that stores channel information of SPI */
-typedef struct {            
-    volatile SPI0_Type      *reg;               /*!< Base pointer to SPI registers */
-    r_pinset_t              pin_set;            /*!< SPI pin set function */
-    r_pinclr_t              pin_clr;            /*!< SPI pin clear function */
-    volatile uint16_t       *ss_pin;            /*!< Pointer to SS port */
-    uint8_t                 ss_pin_pos;         /*!< Pointer to SS port position */
-    st_spi_info_t           *info;              /*!< SPI infomation */
-    st_spi_transfer_info_t  *xfer;              /*!< SPI transfer infomation */
-    e_system_mcu_lock_t     lock_id;            /*!< Module lock id */
-    e_lpm_mstp_t            mstp_id;            /*!< MSTP id */
-    IRQn_Type               spti_irq;           /*!< SPTI IRQ Number */
-    IRQn_Type               spri_irq;           /*!< SPRI RX IRQ Number */
-    IRQn_Type               spii_irq;           /*!< SPII IRQ Number */
-    IRQn_Type               spei_irq;           /*!< SPEI IRQ Number */
-    IRQn_Type               sptend_irq;         /*!< SPEI IRQ Number */
-    uint32_t                spti_iesr_val;      /*!< SPTI IESR value */
-    uint32_t                spri_iesr_val;      /*!< SPRI IESR value */
-    uint32_t                spii_iesr_val;      /*!< SPII IESR value */
-    uint32_t                spei_iesr_val;      /*!< SPEI IESR value */
-    uint32_t                sptend_iesr_val;    /*!< SPEI IESR value */
-    uint32_t                spti_priority;      /*!< SPTI priority level */
-    uint32_t                spri_priority;      /*!< SPRI priority level */
-    uint32_t                spii_priority;      /*!< SPII priority level */
-    uint32_t                spei_priority;      /*!< SPEI priority level */
-    uint32_t                sptend_priority;    /*!< SPEI priority level */
-    DRIVER_DMA              *tx_dma_drv;
-    uint16_t                tx_dma_source;
-    st_dma_transfer_data_t  *tx_dtc_info;
-    DRIVER_DMA              *rx_dma_drv;
-    uint16_t                rx_dma_source;
-    st_dma_transfer_data_t  *rx_dtc_info;
-    system_int_cb_t         spti_callback;      /*!< SPTI callback function address */
-    system_int_cb_t         spri_callback;      /*!< SPRI callback function address */
-    system_int_cb_t         spii_callback;      /*!< SPII callback function address */
-    system_int_cb_t         spei_callback;      /*!< SPEI callback function address */
-    system_int_cb_t         sptend_callback;    /*!< SPEI callback function address */
-} const st_spi_resources_t;
-
-/** @brief For SPI register stored value */
-typedef struct {
-    int32_t                 mode;               /*!< SPI running mode */
-    uint16_t                spcmd0;             /*!< SPCMD0 setting buffer */
-    uint8_t                 spcr;               /*!< SPCR setting buffer */
-    uint8_t                 spbr;               /*!< SPBR setting buffer */
-    uint8_t                 data_bits;          /*!< Data bit size */
-    uint32_t                bps;                /*!< Bitrate */
-} st_spi_reg_buf_t;
-
-/******************************************************************************
- Exported global functions (to be accessed by other files)
- *****************************************************************************/
-#if (SPI_CFG_ARM_SPI_GET_VERSION == SYSTEM_SECTION_RAM_FUNC)
-#define FUNC_LOCATION_ARM_SPI_GET_VERSION      __attribute__ ((section(".ramfunc"))) /* @suppress("Macro expansion") */
-#else
-#define FUNC_LOCATION_ARM_SPI_GET_VERSION
-#endif
-
-#if (SPI_CFG_ARM_SPI_GET_CAPABILITIES == SYSTEM_SECTION_RAM_FUNC)
-#define FUNC_LOCATION_ARM_SPI_GET_CAPABILITIES      __attribute__ ((section(".ramfunc"))) /* @suppress("Macro expansion") */
-#else
-#define FUNC_LOCATION_ARM_SPI_GET_CAPABILITIES
-#endif
-
-#if (SPI_CFG_ARM_SPI_INITIALIZE == SYSTEM_SECTION_RAM_FUNC)
-#define FUNC_LOCATION_ARM_SPI_INITIALIZE      __attribute__ ((section(".ramfunc"))) /* @suppress("Macro expansion") */
-#else
-#define FUNC_LOCATION_ARM_SPI_INITIALIZE
-#endif
-
-#if (SPI_CFG_ARM_SPI_UNINITIALIZE == SYSTEM_SECTION_RAM_FUNC)
-#define FUNC_LOCATION_ARM_SPI_UNINITIALIZE      __attribute__ ((section(".ramfunc"))) /* @suppress("Macro expansion") */
-#else
-#define FUNC_LOCATION_ARM_SPI_UNINITIALIZE
-#endif
-
-#if (SPI_CFG_ARM_SPI_POWERCONTROL == SYSTEM_SECTION_RAM_FUNC)
-#define FUNC_LOCATION_ARM_SPI_POWERCONTROL      __attribute__ ((section(".ramfunc"))) /* @suppress("Macro expansion") */
-#else
-#define FUNC_LOCATION_ARM_SPI_POWERCONTROL
-#endif
-
-#if (SPI_CFG_ARM_SPI_SEND == SYSTEM_SECTION_RAM_FUNC)
-#define FUNC_LOCATION_ARM_SPI_SEND      __attribute__ ((section(".ramfunc"))) /* @suppress("Macro expansion") */
-#else
-#define FUNC_LOCATION_ARM_SPI_SEND
-#endif
-
-#if (SPI_CFG_ARM_SPI_RECEIVE == SYSTEM_SECTION_RAM_FUNC)
-#define FUNC_LOCATION_ARM_SPI_RECEIVE      __attribute__ ((section(".ramfunc"))) /* @suppress("Macro expansion") */
-#else
-#define FUNC_LOCATION_ARM_SPI_RECEIVE
-#endif
-
-#if (SPI_CFG_ARM_SPI_TRANSFER == SYSTEM_SECTION_RAM_FUNC)
-#define FUNC_LOCATION_ARM_SPI_TRANSFER      __attribute__ ((section(".ramfunc"))) /* @suppress("Macro expansion") */
-#else
-#define FUNC_LOCATION_ARM_SPI_TRANSFER
-#endif
-
-#if (SPI_CFG_ARM_SPI_GET_DATACOUNT == SYSTEM_SECTION_RAM_FUNC)
-#define FUNC_LOCATION_ARM_SPI_GET_DATACOUNT      __attribute__ ((section(".ramfunc"))) /* @suppress("Macro expansion") */
-#else
-#define FUNC_LOCATION_ARM_SPI_GET_DATACOUNT
-#endif
-
-#if (SPI_CFG_ARM_SPI_CONTROL == SYSTEM_SECTION_RAM_FUNC)
-#define FUNC_LOCATION_ARM_SPI_CONTROL      __attribute__ ((section(".ramfunc"))) /* @suppress("Macro expansion") */
-#else
-#define FUNC_LOCATION_ARM_SPI_CONTROL
-#endif
-
-#if (SPI_CFG_ARM_SPI_GET_STATUS == SYSTEM_SECTION_RAM_FUNC)
-#define FUNC_LOCATION_ARM_SPI_GET_STATUS      __attribute__ ((section(".ramfunc"))) /* @suppress("Macro expansion") */
-#else
-#define FUNC_LOCATION_ARM_SPI_GET_STATUS
-#endif
-
-ARM_DRIVER_VERSION ARM_SPI_GetVersion(void) FUNC_LOCATION_ARM_SPI_GET_VERSION;
-ARM_SPI_CAPABILITIES ARM_SPI_GetCapabilities(void) FUNC_LOCATION_ARM_SPI_GET_CAPABILITIES;
-int32_t ARM_SPI_Initialize(ARM_SPI_SignalEvent_t cb_event, st_spi_resources_t * const p_spi) 
-                           FUNC_LOCATION_ARM_SPI_INITIALIZE;
-int32_t ARM_SPI_Uninitialize(st_spi_resources_t * const p_spi) FUNC_LOCATION_ARM_SPI_UNINITIALIZE;
-int32_t ARM_SPI_PowerControl(ARM_POWER_STATE state, st_spi_resources_t * const p_spi) 
-                             FUNC_LOCATION_ARM_SPI_POWERCONTROL;
-int32_t ARM_SPI_Send(void const * const p_data, uint32_t num, st_spi_resources_t * const p_spi) 
-                     FUNC_LOCATION_ARM_SPI_SEND;
-int32_t ARM_SPI_Receive(void const * const p_data, uint32_t num, st_spi_resources_t * const p_spi) 
-                        FUNC_LOCATION_ARM_SPI_RECEIVE;
-int32_t ARM_SPI_Transfer(void const * const p_data_out, void const * const p_data_in, uint32_t num,
-                         st_spi_resources_t * const p_spi) FUNC_LOCATION_ARM_SPI_TRANSFER;
-uint32_t ARM_SPI_GetDataCount(st_spi_resources_t const * const p_spi) FUNC_LOCATION_ARM_SPI_GET_DATACOUNT;
-int32_t ARM_SPI_Control(uint32_t control, uint32_t arg, st_spi_resources_t * const p_spi) 
-                        FUNC_LOCATION_ARM_SPI_CONTROL;
-ARM_SPI_STATUS ARM_SPI_GetStatus(st_spi_resources_t const * const p_spi) FUNC_LOCATION_ARM_SPI_GET_STATUS;
-
-/****************************************************************************************************************//**
- * @brief       Inline function to clear bits.
- * @param[in,out]   p_reg   Pointer to SPI register setting buffer
- * @param[in]       bit     Position of the bit to be clear.
- *******************************************************************************************************************/
-__STATIC_FORCEINLINE void spi_bit_clear_8(uint8_t * const p_reg, uint8_t bit) // @suppress("Function description comment")
-{
-  (*p_reg) &= (~(1 << bit));
-}/* End of function spi_bit_clear_8() */
-
-/****************************************************************************************************************//**
- * @brief       Inline function to set bits
- * @param[in,out]   p_reg      Pointer to SPI register setting buffer
- * @param[in]       bit        Position of the bit to be set.
- *******************************************************************************************************************/
-__STATIC_FORCEINLINE void spi_bit_set_8(uint8_t * const p_reg, uint8_t bit) // @suppress("Function description comment")
-{
-  (*p_reg) |= (1 << bit);
-}/* End of function spi_bit_set_8() */
-
-/****************************************************************************************************************//**
- * @brief       Inline function to clear bits.
- * @param[in,out]   p_reg   Pointer to SPI register setting buffer
- * @param[in]       bit     Position of the bit to be clear.
- *******************************************************************************************************************/
-__STATIC_FORCEINLINE void spi_bit_clear_16(uint16_t * const p_reg, uint8_t bit) // @suppress("Function description comment")
-{
-  (*p_reg) &= (~(1 << bit));
-}/* End of function spi_bit_clear_16() */
-
-/****************************************************************************************************************//**
- * @brief       Inline function to set bits
- * @param[in,out]   p_reg      Pointer to SPI register setting buffer
- * @param[in]       bit        Position of the bit to be set.
- *******************************************************************************************************************/
-__STATIC_FORCEINLINE void spi_bit_set_16(uint16_t * const p_reg, uint8_t bit) // @suppress("Function description comment")
-{
-  (*p_reg) |= (1 << bit);
-}/* End of function spi_bit_set_16() */
-
-#endif /* R_SPI_CMSIS_H */
-
-/******************************************************************************************************************//**
- * @} (end defgroup grp_cmsis_drv_impl_spi)
- *********************************************************************************************************************/
-/* End of file (r_spi_cmsis.h) */
diff --git a/HardwareDebug/Device/CMSIS_Driver/Src/subdir.mk b/HardwareDebug/Device/CMSIS_Driver/Src/subdir.mk
deleted file mode 100644
index 36a1643..0000000
--- a/HardwareDebug/Device/CMSIS_Driver/Src/subdir.mk
+++ /dev/null
@@ -1,25 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../Device/CMSIS_Driver/Src/r_i2c_cmsis_api.c \
-../Device/CMSIS_Driver/Src/r_spi_cmsis_api.c \
-../Device/CMSIS_Driver/Src/r_usart_cmsis_api.c 
-
-C_DEPS += \
-./Device/CMSIS_Driver/Src/r_i2c_cmsis_api.d \
-./Device/CMSIS_Driver/Src/r_spi_cmsis_api.d \
-./Device/CMSIS_Driver/Src/r_usart_cmsis_api.d 
-
-OBJS += \
-./Device/CMSIS_Driver/Src/r_i2c_cmsis_api.o \
-./Device/CMSIS_Driver/Src/r_spi_cmsis_api.o \
-./Device/CMSIS_Driver/Src/r_usart_cmsis_api.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-Device/CMSIS_Driver/Src/%.o: ../Device/CMSIS_Driver/Src/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/Device/Driver/Src/r_adc/subdir.mk b/HardwareDebug/Device/Driver/Src/r_adc/subdir.mk
deleted file mode 100644
index 2f3d318..0000000
--- a/HardwareDebug/Device/Driver/Src/r_adc/subdir.mk
+++ /dev/null
@@ -1,19 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../Device/Driver/Src/r_adc/r_adc_api.c 
-
-C_DEPS += \
-./Device/Driver/Src/r_adc/r_adc_api.d 
-
-OBJS += \
-./Device/Driver/Src/r_adc/r_adc_api.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-Device/Driver/Src/r_adc/%.o: ../Device/Driver/Src/r_adc/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/Device/Driver/Src/r_dmac/subdir.mk b/HardwareDebug/Device/Driver/Src/r_dmac/subdir.mk
deleted file mode 100644
index 5e65798..0000000
--- a/HardwareDebug/Device/Driver/Src/r_dmac/subdir.mk
+++ /dev/null
@@ -1,19 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../Device/Driver/Src/r_dmac/r_dmac_api.c 
-
-C_DEPS += \
-./Device/Driver/Src/r_dmac/r_dmac_api.d 
-
-OBJS += \
-./Device/Driver/Src/r_dmac/r_dmac_api.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-Device/Driver/Src/r_dmac/%.o: ../Device/Driver/Src/r_dmac/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/Device/Driver/Src/r_dtc/subdir.mk b/HardwareDebug/Device/Driver/Src/r_dtc/subdir.mk
deleted file mode 100644
index 4d339cf..0000000
--- a/HardwareDebug/Device/Driver/Src/r_dtc/subdir.mk
+++ /dev/null
@@ -1,19 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../Device/Driver/Src/r_dtc/r_dtc_api.c 
-
-C_DEPS += \
-./Device/Driver/Src/r_dtc/r_dtc_api.d 
-
-OBJS += \
-./Device/Driver/Src/r_dtc/r_dtc_api.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-Device/Driver/Src/r_dtc/%.o: ../Device/Driver/Src/r_dtc/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/Device/Driver/Src/r_ehc/subdir.mk b/HardwareDebug/Device/Driver/Src/r_ehc/subdir.mk
deleted file mode 100644
index f049687..0000000
--- a/HardwareDebug/Device/Driver/Src/r_ehc/subdir.mk
+++ /dev/null
@@ -1,19 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../Device/Driver/Src/r_ehc/r_ehc.c 
-
-C_DEPS += \
-./Device/Driver/Src/r_ehc/r_ehc.d 
-
-OBJS += \
-./Device/Driver/Src/r_ehc/r_ehc.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-Device/Driver/Src/r_ehc/%.o: ../Device/Driver/Src/r_ehc/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/Device/Driver/Src/r_flash/subdir.mk b/HardwareDebug/Device/Driver/Src/r_flash/subdir.mk
deleted file mode 100644
index df44a40..0000000
--- a/HardwareDebug/Device/Driver/Src/r_flash/subdir.mk
+++ /dev/null
@@ -1,22 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../Device/Driver/Src/r_flash/r_flash_api.c \
-../Device/Driver/Src/r_flash/r_flash_lowlevel.c 
-
-C_DEPS += \
-./Device/Driver/Src/r_flash/r_flash_api.d \
-./Device/Driver/Src/r_flash/r_flash_lowlevel.d 
-
-OBJS += \
-./Device/Driver/Src/r_flash/r_flash_api.o \
-./Device/Driver/Src/r_flash/r_flash_lowlevel.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-Device/Driver/Src/r_flash/%.o: ../Device/Driver/Src/r_flash/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/Device/Driver/Src/r_gdt/subdir.mk b/HardwareDebug/Device/Driver/Src/r_gdt/subdir.mk
deleted file mode 100644
index 2860367..0000000
--- a/HardwareDebug/Device/Driver/Src/r_gdt/subdir.mk
+++ /dev/null
@@ -1,19 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../Device/Driver/Src/r_gdt/r_gdt_api.c 
-
-C_DEPS += \
-./Device/Driver/Src/r_gdt/r_gdt_api.d 
-
-OBJS += \
-./Device/Driver/Src/r_gdt/r_gdt_api.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-Device/Driver/Src/r_gdt/%.o: ../Device/Driver/Src/r_gdt/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/Device/Driver/Src/r_lpm/subdir.mk b/HardwareDebug/Device/Driver/Src/r_lpm/subdir.mk
deleted file mode 100644
index 92f0dcb..0000000
--- a/HardwareDebug/Device/Driver/Src/r_lpm/subdir.mk
+++ /dev/null
@@ -1,19 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../Device/Driver/Src/r_lpm/r_lpm_api.c 
-
-C_DEPS += \
-./Device/Driver/Src/r_lpm/r_lpm_api.d 
-
-OBJS += \
-./Device/Driver/Src/r_lpm/r_lpm_api.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-Device/Driver/Src/r_lpm/%.o: ../Device/Driver/Src/r_lpm/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/Device/Driver/Src/r_pmip/subdir.mk b/HardwareDebug/Device/Driver/Src/r_pmip/subdir.mk
deleted file mode 100644
index 53e179e..0000000
--- a/HardwareDebug/Device/Driver/Src/r_pmip/subdir.mk
+++ /dev/null
@@ -1,19 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../Device/Driver/Src/r_pmip/r_pmip_api.c 
-
-C_DEPS += \
-./Device/Driver/Src/r_pmip/r_pmip_api.d 
-
-OBJS += \
-./Device/Driver/Src/r_pmip/r_pmip_api.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-Device/Driver/Src/r_pmip/%.o: ../Device/Driver/Src/r_pmip/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/Device/Driver/Src/r_smip/subdir.mk b/HardwareDebug/Device/Driver/Src/r_smip/subdir.mk
deleted file mode 100644
index e214c41..0000000
--- a/HardwareDebug/Device/Driver/Src/r_smip/subdir.mk
+++ /dev/null
@@ -1,19 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../Device/Driver/Src/r_smip/r_smip_api.c 
-
-C_DEPS += \
-./Device/Driver/Src/r_smip/r_smip_api.d 
-
-OBJS += \
-./Device/Driver/Src/r_smip/r_smip_api.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-Device/Driver/Src/r_smip/%.o: ../Device/Driver/Src/r_smip/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/Device/Driver/Src/r_system/subdir.mk b/HardwareDebug/Device/Driver/Src/r_system/subdir.mk
deleted file mode 100644
index 818eede..0000000
--- a/HardwareDebug/Device/Driver/Src/r_system/subdir.mk
+++ /dev/null
@@ -1,19 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../Device/Driver/Src/r_system/r_system_api.c 
-
-C_DEPS += \
-./Device/Driver/Src/r_system/r_system_api.d 
-
-OBJS += \
-./Device/Driver/Src/r_system/r_system_api.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-Device/Driver/Src/r_system/%.o: ../Device/Driver/Src/r_system/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/Device/subdir.mk b/HardwareDebug/Device/subdir.mk
deleted file mode 100644
index df06e3e..0000000
--- a/HardwareDebug/Device/subdir.mk
+++ /dev/null
@@ -1,25 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../Device/pin.c \
-../Device/startup_RE01_256KB.c \
-../Device/system_RE01_256KB.c 
-
-C_DEPS += \
-./Device/pin.d \
-./Device/startup_RE01_256KB.d \
-./Device/system_RE01_256KB.d 
-
-OBJS += \
-./Device/pin.o \
-./Device/startup_RE01_256KB.o \
-./Device/system_RE01_256KB.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-Device/%.o: ../Device/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/Flash Debug/Obj/subdir.mk b/HardwareDebug/Flash Debug/Obj/subdir.mk
deleted file mode 100644
index 9be161f..0000000
--- a/HardwareDebug/Flash Debug/Obj/subdir.mk	
+++ /dev/null
@@ -1,83 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-O_SRCS += \
-../Flash\ Debug/Obj/LoRaMac.o \
-../Flash\ Debug/Obj/LoRaMacAdr.o \
-../Flash\ Debug/Obj/LoRaMacClassB.o \
-../Flash\ Debug/Obj/LoRaMacCommands.o \
-../Flash\ Debug/Obj/LoRaMacConfirmQueue.o \
-../Flash\ Debug/Obj/LoRaMacCrypto.o \
-../Flash\ Debug/Obj/LoRaMacParser.o \
-../Flash\ Debug/Obj/LoRaMacSerializer.o \
-../Flash\ Debug/Obj/Region.o \
-../Flash\ Debug/Obj/RegionAS923.o \
-../Flash\ Debug/Obj/RegionAU915.o \
-../Flash\ Debug/Obj/RegionCN470.o \
-../Flash\ Debug/Obj/RegionCN779.o \
-../Flash\ Debug/Obj/RegionCommon.o \
-../Flash\ Debug/Obj/RegionEU433.o \
-../Flash\ Debug/Obj/RegionEU868.o \
-../Flash\ Debug/Obj/RegionIN865.o \
-../Flash\ Debug/Obj/RegionKR920.o \
-../Flash\ Debug/Obj/RegionRU864.o \
-../Flash\ Debug/Obj/RegionUS915.o \
-../Flash\ Debug/Obj/adc.o \
-../Flash\ Debug/Obj/aes.o \
-../Flash\ Debug/Obj/agt0_timer.o \
-../Flash\ Debug/Obj/agt1.o \
-../Flash\ Debug/Obj/bitmap_charge_data.o \
-../Flash\ Debug/Obj/bitmap_opening_data.o \
-../Flash\ Debug/Obj/bitmap_shutdown_data.o \
-../Flash\ Debug/Obj/board.o \
-../Flash\ Debug/Obj/cmac.o \
-../Flash\ Debug/Obj/delay-board.o \
-../Flash\ Debug/Obj/delay.o \
-../Flash\ Debug/Obj/fifo.o \
-../Flash\ Debug/Obj/gpio-board.o \
-../Flash\ Debug/Obj/gpio.o \
-../Flash\ Debug/Obj/hs300x.o \
-../Flash\ Debug/Obj/i2c-board.o \
-../Flash\ Debug/Obj/i2c.o \
-../Flash\ Debug/Obj/lcd.o \
-../Flash\ Debug/Obj/lpm-board.o \
-../Flash\ Debug/Obj/lvd_lvdbat.o \
-../Flash\ Debug/Obj/main.o \
-../Flash\ Debug/Obj/mip_display.o \
-../Flash\ Debug/Obj/pin.o \
-../Flash\ Debug/Obj/r_adc_api.o \
-../Flash\ Debug/Obj/r_dmac_api.o \
-../Flash\ Debug/Obj/r_dtc_api.o \
-../Flash\ Debug/Obj/r_ehc.o \
-../Flash\ Debug/Obj/r_flash_api.o \
-../Flash\ Debug/Obj/r_flash_lowlevel.o \
-../Flash\ Debug/Obj/r_gdt_api.o \
-../Flash\ Debug/Obj/r_i2c_cmsis_api.o \
-../Flash\ Debug/Obj/r_lpm_api.o \
-../Flash\ Debug/Obj/r_pmip_api.o \
-../Flash\ Debug/Obj/r_rtc.o \
-../Flash\ Debug/Obj/r_smip_api.o \
-../Flash\ Debug/Obj/r_spi_cmsis_api.o \
-../Flash\ Debug/Obj/r_system_api.o \
-../Flash\ Debug/Obj/r_usart_cmsis_api.o \
-../Flash\ Debug/Obj/radio.o \
-../Flash\ Debug/Obj/rtc-board.o \
-../Flash\ Debug/Obj/rtk70e015dc00001bj-board.o \
-../Flash\ Debug/Obj/sensors.o \
-../Flash\ Debug/Obj/soft-se.o \
-../Flash\ Debug/Obj/spi-board.o \
-../Flash\ Debug/Obj/startup_RE01_256KB.o \
-../Flash\ Debug/Obj/sx126x.o \
-../Flash\ Debug/Obj/sys_lpm.o \
-../Flash\ Debug/Obj/system_RE01_256KB.o \
-../Flash\ Debug/Obj/systime.o \
-../Flash\ Debug/Obj/timer.o \
-../Flash\ Debug/Obj/uart-board.o \
-../Flash\ Debug/Obj/uart.o \
-../Flash\ Debug/Obj/utilities.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-
diff --git a/HardwareDebug/Resource/subdir.mk b/HardwareDebug/Resource/subdir.mk
deleted file mode 100644
index c161aa0..0000000
--- a/HardwareDebug/Resource/subdir.mk
+++ /dev/null
@@ -1,25 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../Resource/bitmap_charge_data.c \
-../Resource/bitmap_opening_data.c \
-../Resource/bitmap_shutdown_data.c 
-
-C_DEPS += \
-./Resource/bitmap_charge_data.d \
-./Resource/bitmap_opening_data.d \
-./Resource/bitmap_shutdown_data.d 
-
-OBJS += \
-./Resource/bitmap_charge_data.o \
-./Resource/bitmap_opening_data.o \
-./Resource/bitmap_shutdown_data.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-Resource/%.o: ../Resource/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/boards/mcu/RE01_256KB/subdir.mk b/HardwareDebug/boards/mcu/RE01_256KB/subdir.mk
deleted file mode 100644
index f97ee47..0000000
--- a/HardwareDebug/boards/mcu/RE01_256KB/subdir.mk
+++ /dev/null
@@ -1,19 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../boards/mcu/RE01_256KB/r_rtc.c 
-
-C_DEPS += \
-./boards/mcu/RE01_256KB/r_rtc.d 
-
-OBJS += \
-./boards/mcu/RE01_256KB/r_rtc.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-boards/mcu/RE01_256KB/%.o: ../boards/mcu/RE01_256KB/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/boards/mcu/subdir.mk b/HardwareDebug/boards/mcu/subdir.mk
deleted file mode 100644
index 3f336ab..0000000
--- a/HardwareDebug/boards/mcu/subdir.mk
+++ /dev/null
@@ -1,19 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../boards/mcu/utilities.c 
-
-C_DEPS += \
-./boards/mcu/utilities.d 
-
-OBJS += \
-./boards/mcu/utilities.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-boards/mcu/%.o: ../boards/mcu/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/boards/rtk70e0118c00000bj/subdir.mk b/HardwareDebug/boards/rtk70e0118c00000bj/subdir.mk
deleted file mode 100644
index 2882edb..0000000
--- a/HardwareDebug/boards/rtk70e0118c00000bj/subdir.mk
+++ /dev/null
@@ -1,47 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../boards/rtk70e0118c00000bj/board.c \
-../boards/rtk70e0118c00000bj/delay-board.c \
-../boards/rtk70e0118c00000bj/gpio-board.c \
-../boards/rtk70e0118c00000bj/i2c-board.c \
-../boards/rtk70e0118c00000bj/lpm-board.c \
-../boards/rtk70e0118c00000bj/rtc-board.c \
-../boards/rtk70e0118c00000bj/rtk70e015dc00001bj-board.c \
-../boards/rtk70e0118c00000bj/spi-board.c \
-../boards/rtk70e0118c00000bj/uart-board.c 
-
-C_DEPS += \
-./boards/rtk70e0118c00000bj/board.d \
-./boards/rtk70e0118c00000bj/delay-board.d \
-./boards/rtk70e0118c00000bj/gpio-board.d \
-./boards/rtk70e0118c00000bj/i2c-board.d \
-./boards/rtk70e0118c00000bj/lpm-board.d \
-./boards/rtk70e0118c00000bj/rtc-board.d \
-./boards/rtk70e0118c00000bj/rtk70e015dc00001bj-board.d \
-./boards/rtk70e0118c00000bj/spi-board.d \
-./boards/rtk70e0118c00000bj/uart-board.d 
-
-OBJS += \
-./boards/rtk70e0118c00000bj/board.o \
-./boards/rtk70e0118c00000bj/delay-board.o \
-./boards/rtk70e0118c00000bj/gpio-board.o \
-./boards/rtk70e0118c00000bj/i2c-board.o \
-./boards/rtk70e0118c00000bj/lpm-board.o \
-./boards/rtk70e0118c00000bj/rtc-board.o \
-./boards/rtk70e0118c00000bj/rtk70e015dc00001bj-board.o \
-./boards/rtk70e0118c00000bj/spi-board.o \
-./boards/rtk70e0118c00000bj/uart-board.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-boards/rtk70e0118c00000bj/%.o: ../boards/rtk70e0118c00000bj/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-boards/rtk70e0118c00000bj/rtk70e015dc00001bj-board.o: ../boards/rtk70e0118c00000bj/rtk70e015dc00001bj-board.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DUSE_MODEM_LORA -DSX126X_TRIM_ENABLE -DUSE_RTC -DUSE_UART0 -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-boards/rtk70e0118c00000bj/spi-board.o: ../boards/rtk70e0118c00000bj/spi-board.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DUSE_MODEM_LORA -DSX126X_TRIM_ENABLE -DUSE_RTC -DUSE_UART0 -DREGION_US915 -DSX1261MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/mac/region/subdir.mk b/HardwareDebug/mac/region/subdir.mk
deleted file mode 100644
index 4642908..0000000
--- a/HardwareDebug/mac/region/subdir.mk
+++ /dev/null
@@ -1,52 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../mac/region/Region.c \
-../mac/region/RegionAS923.c \
-../mac/region/RegionAU915.c \
-../mac/region/RegionCN470.c \
-../mac/region/RegionCN779.c \
-../mac/region/RegionCommon.c \
-../mac/region/RegionEU433.c \
-../mac/region/RegionEU868.c \
-../mac/region/RegionIN865.c \
-../mac/region/RegionKR920.c \
-../mac/region/RegionRU864.c \
-../mac/region/RegionUS915.c 
-
-C_DEPS += \
-./mac/region/Region.d \
-./mac/region/RegionAS923.d \
-./mac/region/RegionAU915.d \
-./mac/region/RegionCN470.d \
-./mac/region/RegionCN779.d \
-./mac/region/RegionCommon.d \
-./mac/region/RegionEU433.d \
-./mac/region/RegionEU868.d \
-./mac/region/RegionIN865.d \
-./mac/region/RegionKR920.d \
-./mac/region/RegionRU864.d \
-./mac/region/RegionUS915.d 
-
-OBJS += \
-./mac/region/Region.o \
-./mac/region/RegionAS923.o \
-./mac/region/RegionAU915.o \
-./mac/region/RegionCN470.o \
-./mac/region/RegionCN779.o \
-./mac/region/RegionCommon.o \
-./mac/region/RegionEU433.o \
-./mac/region/RegionEU868.o \
-./mac/region/RegionIN865.o \
-./mac/region/RegionKR920.o \
-./mac/region/RegionRU864.o \
-./mac/region/RegionUS915.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-mac/region/%.o: ../mac/region/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/mac/subdir.mk b/HardwareDebug/mac/subdir.mk
deleted file mode 100644
index db39607..0000000
--- a/HardwareDebug/mac/subdir.mk
+++ /dev/null
@@ -1,40 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../mac/LoRaMac.c \
-../mac/LoRaMacAdr.c \
-../mac/LoRaMacClassB.c \
-../mac/LoRaMacCommands.c \
-../mac/LoRaMacConfirmQueue.c \
-../mac/LoRaMacCrypto.c \
-../mac/LoRaMacParser.c \
-../mac/LoRaMacSerializer.c 
-
-C_DEPS += \
-./mac/LoRaMac.d \
-./mac/LoRaMacAdr.d \
-./mac/LoRaMacClassB.d \
-./mac/LoRaMacCommands.d \
-./mac/LoRaMacConfirmQueue.d \
-./mac/LoRaMacCrypto.d \
-./mac/LoRaMacParser.d \
-./mac/LoRaMacSerializer.d 
-
-OBJS += \
-./mac/LoRaMac.o \
-./mac/LoRaMacAdr.o \
-./mac/LoRaMacClassB.o \
-./mac/LoRaMacCommands.o \
-./mac/LoRaMacConfirmQueue.o \
-./mac/LoRaMacCrypto.o \
-./mac/LoRaMacParser.o \
-./mac/LoRaMacSerializer.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-mac/%.o: ../mac/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/makefile b/HardwareDebug/makefile
deleted file mode 100644
index 1c199e3..0000000
--- a/HardwareDebug/makefile
+++ /dev/null
@@ -1,230 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
--include ../makefile.init
-
--include makefile.init
-
-RM := rm -rf *.lst *.lis *.lpp *.map
-
-# All of the sources participating in the build are defined here
--include sources.mk
--include system/crypto/subdir.mk
--include system/subdir.mk
--include script/subdir.mk
--include radio/sx126x/subdir.mk
--include radio/subdir.mk
--include mac/region/subdir.mk
--include mac/subdir.mk
--include boards/rtk70e0118c00000bj/subdir.mk
--include boards/mcu/RE01_256KB/subdir.mk
--include boards/mcu/subdir.mk
--include Resource/subdir.mk
--include Device/Driver/Src/r_system/subdir.mk
--include Device/Driver/Src/r_smip/subdir.mk
--include Device/Driver/Src/r_pmip/subdir.mk
--include Device/Driver/Src/r_lpm/subdir.mk
--include Device/Driver/Src/r_gdt/subdir.mk
--include Device/Driver/Src/r_flash/subdir.mk
--include Device/Driver/Src/r_ehc/subdir.mk
--include Device/Driver/Src/r_dtc/subdir.mk
--include Device/Driver/Src/r_dmac/subdir.mk
--include Device/Driver/Src/r_adc/subdir.mk
--include Device/CMSIS_Driver/Src/subdir.mk
--include Device/subdir.mk
--include subdir.mk
--include objects.mk
-
-ifneq ($(MAKECMDGOALS),clean)
-ifneq ($(strip $(JMP_DEPS)),)
--include $(JMP_DEPS)
-endif
-ifneq ($(strip $(FSY_DEPS)),)
--include $(FSY_DEPS)
-endif
-ifneq ($(strip $(C_UPPER_DEPS)),)
--include $(C_UPPER_DEPS)
-endif
-ifneq ($(strip $(SRC_UPPER_DEPS)),)
--include $(SRC_UPPER_DEPS)
-endif
-ifneq ($(strip $(P_UPPER_DEPS)),)
--include $(P_UPPER_DEPS)
-endif
-ifneq ($(strip $(S_DEPS)),)
--include $(S_DEPS)
-endif
-ifneq ($(strip $(PP_UPPER_DEPS)),)
--include $(PP_UPPER_DEPS)
-endif
-ifneq ($(strip $(P_DEPS)),)
--include $(P_DEPS)
-endif
-ifneq ($(strip $(FSY_UPPER_DEPS)),)
--include $(FSY_UPPER_DEPS)
-endif
-ifneq ($(strip $(C_DEPS)),)
--include $(C_DEPS)
-endif
-ifneq ($(strip $(SRC_DEPS)),)
--include $(SRC_DEPS)
-endif
-ifneq ($(strip $(JMP_UPPER_DEPS)),)
--include $(JMP_UPPER_DEPS)
-endif
-ifneq ($(strip $(PP_DEPS)),)
--include $(PP_DEPS)
-endif
-ifneq ($(strip $(ASM_UPPER_DEPS)),)
--include $(ASM_UPPER_DEPS)
-endif
-ifneq ($(strip $(SX_DEPS)),)
--include $(SX_DEPS)
-endif
-ifneq ($(strip $(SX_UPPER_DEPS)),)
--include $(SX_UPPER_DEPS)
-endif
-ifneq ($(strip $(ASM_DEPS)),)
--include $(ASM_DEPS)
-endif
-ifneq ($(strip $(S_UPPER_DEPS)),)
--include $(S_UPPER_DEPS)
-endif
-endif
-
--include ../makefile.defs
-
-# Add inputs and outputs from these tool invocations to the build variables 
-SECONDARY_FLASH += \
-r01an5753_re_lora.hex \
-
-SECONDARY_SIZE += \
-r01an5753_re_lora.siz \
-
-
-# All Target
-all: r01an5753_re_lora.elf secondary-outputs
-
-# Tool invocations
-r01an5753_re_lora.elf: $(OBJS) $(USER_OBJS) $(LIBRARY_GENERATOR_OUTPUTTYPE_OUTPUTS) $(LINKER_SCRIPT)
-	@	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -o "r01an5753_re_lora.elf" $(OBJS) $(USER_OBJS) -T "C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora\script\RE01_256KB.ld" -Wl,-Map,"r01an5753_re_lora.map" -Wl,--start-group -Wl,--end-group -nostartfiles -Xlinker --gc-sections -Wl,-eReset_Handler --specs=rdimon.specs
-r01an5753_re_lora.hex: r01an5753_re_lora.elf
-	arm-none-eabi-objcopy -O ihex "r01an5753_re_lora.elf"  "r01an5753_re_lora.hex"
-r01an5753_re_lora.siz: r01an5753_re_lora.elf
-	arm-none-eabi-size --format=berkeley "r01an5753_re_lora.elf"
-# Other Targets
-clean:
-ifneq ($(strip $(JMP_DEPS)),)
-	-$(file > clean_JMP_DEPS.tmp, $(JMP_DEPS))
-	-@ xargs -s 6000 -t -a clean_JMP_DEPS.tmp $(RM)
-	-@$(RM) clean_JMP_DEPS.tmp
-endif
-ifneq ($(strip $(FSY_DEPS)),)
-	-$(file > clean_FSY_DEPS.tmp, $(FSY_DEPS))
-	-@ xargs -s 6000 -t -a clean_FSY_DEPS.tmp $(RM)
-	-@$(RM) clean_FSY_DEPS.tmp
-endif
-ifneq ($(strip $(C_UPPER_DEPS)),)
-	-$(file > clean_C_UPPER_DEPS.tmp, $(C_UPPER_DEPS))
-	-@ xargs -s 6000 -t -a clean_C_UPPER_DEPS.tmp $(RM)
-	-@$(RM) clean_C_UPPER_DEPS.tmp
-endif
-ifneq ($(strip $(SECONDARY_SIZE)),)
-	-$(file > clean_SECONDARY_SIZE.tmp, $(SECONDARY_SIZE))
-	-@ xargs -s 6000 -t -a clean_SECONDARY_SIZE.tmp $(RM)
-	-@$(RM) clean_SECONDARY_SIZE.tmp
-endif
-ifneq ($(strip $(SRC_UPPER_DEPS)),)
-	-$(file > clean_SRC_UPPER_DEPS.tmp, $(SRC_UPPER_DEPS))
-	-@ xargs -s 6000 -t -a clean_SRC_UPPER_DEPS.tmp $(RM)
-	-@$(RM) clean_SRC_UPPER_DEPS.tmp
-endif
-ifneq ($(strip $(P_UPPER_DEPS)),)
-	-$(file > clean_P_UPPER_DEPS.tmp, $(P_UPPER_DEPS))
-	-@ xargs -s 6000 -t -a clean_P_UPPER_DEPS.tmp $(RM)
-	-@$(RM) clean_P_UPPER_DEPS.tmp
-endif
-ifneq ($(strip $(S_DEPS)),)
-	-$(file > clean_S_DEPS.tmp, $(S_DEPS))
-	-@ xargs -s 6000 -t -a clean_S_DEPS.tmp $(RM)
-	-@$(RM) clean_S_DEPS.tmp
-endif
-ifneq ($(strip $(PP_UPPER_DEPS)),)
-	-$(file > clean_PP_UPPER_DEPS.tmp, $(PP_UPPER_DEPS))
-	-@ xargs -s 6000 -t -a clean_PP_UPPER_DEPS.tmp $(RM)
-	-@$(RM) clean_PP_UPPER_DEPS.tmp
-endif
-ifneq ($(strip $(P_DEPS)),)
-	-$(file > clean_P_DEPS.tmp, $(P_DEPS))
-	-@ xargs -s 6000 -t -a clean_P_DEPS.tmp $(RM)
-	-@$(RM) clean_P_DEPS.tmp
-endif
-ifneq ($(strip $(FSY_UPPER_DEPS)),)
-	-$(file > clean_FSY_UPPER_DEPS.tmp, $(FSY_UPPER_DEPS))
-	-@ xargs -s 6000 -t -a clean_FSY_UPPER_DEPS.tmp $(RM)
-	-@$(RM) clean_FSY_UPPER_DEPS.tmp
-endif
-ifneq ($(strip $(C_DEPS)),)
-	-$(file > clean_C_DEPS.tmp, $(C_DEPS))
-	-@ xargs -s 6000 -t -a clean_C_DEPS.tmp $(RM)
-	-@$(RM) clean_C_DEPS.tmp
-endif
-ifneq ($(strip $(SRC_DEPS)),)
-	-$(file > clean_SRC_DEPS.tmp, $(SRC_DEPS))
-	-@ xargs -s 6000 -t -a clean_SRC_DEPS.tmp $(RM)
-	-@$(RM) clean_SRC_DEPS.tmp
-endif
-ifneq ($(strip $(JMP_UPPER_DEPS)),)
-	-$(file > clean_JMP_UPPER_DEPS.tmp, $(JMP_UPPER_DEPS))
-	-@ xargs -s 6000 -t -a clean_JMP_UPPER_DEPS.tmp $(RM)
-	-@$(RM) clean_JMP_UPPER_DEPS.tmp
-endif
-ifneq ($(strip $(PP_DEPS)),)
-	-$(file > clean_PP_DEPS.tmp, $(PP_DEPS))
-	-@ xargs -s 6000 -t -a clean_PP_DEPS.tmp $(RM)
-	-@$(RM) clean_PP_DEPS.tmp
-endif
-ifneq ($(strip $(ASM_UPPER_DEPS)),)
-	-$(file > clean_ASM_UPPER_DEPS.tmp, $(ASM_UPPER_DEPS))
-	-@ xargs -s 6000 -t -a clean_ASM_UPPER_DEPS.tmp $(RM)
-	-@$(RM) clean_ASM_UPPER_DEPS.tmp
-endif
-ifneq ($(strip $(SX_DEPS)),)
-	-$(file > clean_SX_DEPS.tmp, $(SX_DEPS))
-	-@ xargs -s 6000 -t -a clean_SX_DEPS.tmp $(RM)
-	-@$(RM) clean_SX_DEPS.tmp
-endif
-ifneq ($(strip $(SX_UPPER_DEPS)),)
-	-$(file > clean_SX_UPPER_DEPS.tmp, $(SX_UPPER_DEPS))
-	-@ xargs -s 6000 -t -a clean_SX_UPPER_DEPS.tmp $(RM)
-	-@$(RM) clean_SX_UPPER_DEPS.tmp
-endif
-ifneq ($(strip $(OBJS)),)
-	-$(file > clean_OBJS.tmp, $(OBJS))
-	-@ xargs -s 6000 -t -a clean_OBJS.tmp $(RM)
-	-@$(RM) clean_OBJS.tmp
-endif
-ifneq ($(strip $(SECONDARY_FLASH)),)
-	-$(file > clean_SECONDARY_FLASH.tmp, $(SECONDARY_FLASH))
-	-@ xargs -s 6000 -t -a clean_SECONDARY_FLASH.tmp $(RM)
-	-@$(RM) clean_SECONDARY_FLASH.tmp
-endif
-ifneq ($(strip $(ASM_DEPS)),)
-	-$(file > clean_ASM_DEPS.tmp, $(ASM_DEPS))
-	-@ xargs -s 6000 -t -a clean_ASM_DEPS.tmp $(RM)
-	-@$(RM) clean_ASM_DEPS.tmp
-endif
-ifneq ($(strip $(S_UPPER_DEPS)),)
-	-$(file > clean_S_UPPER_DEPS.tmp, $(S_UPPER_DEPS))
-	-@ xargs -s 6000 -t -a clean_S_UPPER_DEPS.tmp $(RM)
-	-@$(RM) clean_S_UPPER_DEPS.tmp
-endif
-	-$(RM)  r01an5753_re_lora.elf
-	-@echo ' '
-
-secondary-outputs: $(SECONDARY_FLASH) $(SECONDARY_SIZE)
-
-.PHONY: all clean dependents 
-
--include ../makefile.targets
diff --git a/HardwareDebug/makefile.init b/HardwareDebug/makefile.init
deleted file mode 100644
index beb7ac7..0000000
--- a/HardwareDebug/makefile.init
+++ /dev/null
@@ -1,13 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-arg1 = $(1)
-export PATH=C:\Program Files (x86)\GNU Tools ARM Embedded\6 2017-q2-update\bin\;C:\Program Files (x86)\GNU Tools ARM Embedded\6 2017-q2-update\libexec\gcc\6 2017-q2-update\;C:\Users\a5098388\.eclipse\com.renesas.platform_1435879475\Utilities;C:/Renesas/e2_studio/eclipse//plugins/com.renesas.runtime.jdk.hotspot.win32.x86_64_11.0.8.202009102051/jdk-11.0.8+10/bin/client;C:/Renesas/e2_studio/eclipse//plugins/com.renesas.runtime.jdk.hotspot.win32.x86_64_11.0.8.202009102051/jdk-11.0.8+10/bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Common Files\Microsoft Shared\Microsoft Online Services;C:\Program Files (x86)\Common Files\Microsoft Shared\Microsoft Online Services;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\doxygen\bin;C:\WINDOWS\System32\OpenSSH\;C:\Users\a5098388\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\a5098388\AppData\Local\Programs\Python\Python39\;C:\Users\a5098388\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\a5098388\AppData\Local\Programs\Python\Python38\;C:\Users\a5098388\AppData\Local\Microsoft\WindowsApps;;C:\Renesas\e2_studio\eclipse
-export TCINSTALL=C:\Program Files (x86)\GNU Tools ARM Embedded\6 2017-q2-update$(call arg1,\)
-export CWD=$(CURDIR)
-export AMS_LICENSE_PATH=
-export TC_VERSION=6.3.1.20170620
-export AMS_KEEP_FILE=
-export PWD=$(CURDIR)
-export GCC_VERSION=6.3.1
diff --git a/HardwareDebug/objects.mk b/HardwareDebug/objects.mk
deleted file mode 100644
index dc31e16..0000000
--- a/HardwareDebug/objects.mk
+++ /dev/null
@@ -1,8 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-USER_OBJS :=
-
-LIBS :=
-
diff --git a/HardwareDebug/radio/subdir.mk b/HardwareDebug/radio/subdir.mk
deleted file mode 100644
index fc739a8..0000000
--- a/HardwareDebug/radio/subdir.mk
+++ /dev/null
@@ -1,19 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../radio/radio.c 
-
-C_DEPS += \
-./radio/radio.d 
-
-OBJS += \
-./radio/radio.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-radio/%.o: ../radio/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/radio/sx126x/subdir.mk b/HardwareDebug/radio/sx126x/subdir.mk
deleted file mode 100644
index 3b2ba77..0000000
--- a/HardwareDebug/radio/sx126x/subdir.mk
+++ /dev/null
@@ -1,19 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../radio/sx126x/sx126x.c 
-
-C_DEPS += \
-./radio/sx126x/sx126x.d 
-
-OBJS += \
-./radio/sx126x/sx126x.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-radio/sx126x/%.o: ../radio/sx126x/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/script/subdir.mk b/HardwareDebug/script/subdir.mk
deleted file mode 100644
index d01b2bd..0000000
--- a/HardwareDebug/script/subdir.mk
+++ /dev/null
@@ -1,11 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-LINKER_SCRIPT += \
-../script/RE01_256KB.ld 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-
diff --git a/HardwareDebug/sources.mk b/HardwareDebug/sources.mk
deleted file mode 100644
index 71e89ee..0000000
--- a/HardwareDebug/sources.mk
+++ /dev/null
@@ -1,78 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-ASM_UPPER_SRCS := 
-O_SRCS := 
-ELF_SRCS := 
-SX_SRCS := 
-LINKER_SCRIPT := 
-JMP_UPPER_SRCS := 
-P_UPPER_SRCS := 
-SRC_SRCS := 
-JMP_SRCS := 
-FSY_UPPER_SRCS := 
-PP_UPPER_SRCS := 
-OBJ_UPPER_SRCS := 
-ASM_SRCS := 
-SX_UPPER_SRCS := 
-O_UPPER_SRCS := 
-S_UPPER_SRCS := 
-ELF_UPPER_SRCS := 
-C_UPPER_SRCS := 
-OBJ_SRCS := 
-S_SRCS := 
-PP_SRCS := 
-SRC_UPPER_SRCS := 
-FSY_SRCS := 
-P_SRCS := 
-C_SRCS := 
-JMP_DEPS := 
-FSY_DEPS := 
-C_UPPER_DEPS := 
-SECONDARY_SIZE := 
-SRC_UPPER_DEPS := 
-P_UPPER_DEPS := 
-S_DEPS := 
-PP_UPPER_DEPS := 
-P_DEPS := 
-FSY_UPPER_DEPS := 
-C_DEPS := 
-SRC_DEPS := 
-JMP_UPPER_DEPS := 
-PP_DEPS := 
-ASM_UPPER_DEPS := 
-SX_DEPS := 
-SX_UPPER_DEPS := 
-OBJS := 
-SECONDARY_FLASH := 
-ASM_DEPS := 
-S_UPPER_DEPS := 
-
-# Every subdirectory with source files must be described here
-SUBDIRS := \
-Device/CMSIS_Driver/Src \
-Device/Driver/Src/r_adc \
-Device/Driver/Src/r_dmac \
-Device/Driver/Src/r_dtc \
-Device/Driver/Src/r_ehc \
-Device/Driver/Src/r_flash \
-Device/Driver/Src/r_gdt \
-Device/Driver/Src/r_lpm \
-Device/Driver/Src/r_pmip \
-Device/Driver/Src/r_smip \
-Device/Driver/Src/r_system \
-Device \
-Resource \
-. \
-boards/mcu/RE01_256KB \
-boards/mcu \
-boards/rtk70e0118c00000bj \
-mac \
-mac/region \
-radio \
-radio/sx126x \
-script \
-system \
-system/crypto \
-
diff --git a/HardwareDebug/subdir.mk b/HardwareDebug/subdir.mk
deleted file mode 100644
index 58d95d8..0000000
--- a/HardwareDebug/subdir.mk
+++ /dev/null
@@ -1,43 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../agt0_timer.c \
-../agt1.c \
-../hs300x.c \
-../lcd.c \
-../lvd_lvdbat.c \
-../main.c \
-../mip_display.c \
-../sensors.c \
-../sys_lpm.c 
-
-C_DEPS += \
-./agt0_timer.d \
-./agt1.d \
-./hs300x.d \
-./lcd.d \
-./lvd_lvdbat.d \
-./main.d \
-./mip_display.d \
-./sensors.d \
-./sys_lpm.d 
-
-OBJS += \
-./agt0_timer.o \
-./agt1.o \
-./hs300x.o \
-./lcd.o \
-./lvd_lvdbat.o \
-./main.o \
-./mip_display.o \
-./sensors.o \
-./sys_lpm.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-%.o: ../%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/system/crypto/subdir.mk b/HardwareDebug/system/crypto/subdir.mk
deleted file mode 100644
index 6e1dfdf..0000000
--- a/HardwareDebug/system/crypto/subdir.mk
+++ /dev/null
@@ -1,25 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../system/crypto/aes.c \
-../system/crypto/cmac.c \
-../system/crypto/soft-se.c 
-
-C_DEPS += \
-./system/crypto/aes.d \
-./system/crypto/cmac.d \
-./system/crypto/soft-se.d 
-
-OBJS += \
-./system/crypto/aes.o \
-./system/crypto/cmac.o \
-./system/crypto/soft-se.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-system/crypto/%.o: ../system/crypto/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/HardwareDebug/system/subdir.mk b/HardwareDebug/system/subdir.mk
deleted file mode 100644
index 0ff1a51..0000000
--- a/HardwareDebug/system/subdir.mk
+++ /dev/null
@@ -1,40 +0,0 @@
-################################################################################
-# Automatically-generated file. Do not edit!
-################################################################################
-
-# Add inputs and outputs from these tool invocations to the build variables 
-C_SRCS += \
-../system/adc.c \
-../system/delay.c \
-../system/fifo.c \
-../system/gpio.c \
-../system/i2c.c \
-../system/systime.c \
-../system/timer.c \
-../system/uart.c 
-
-C_DEPS += \
-./system/adc.d \
-./system/delay.d \
-./system/fifo.d \
-./system/gpio.d \
-./system/i2c.d \
-./system/systime.d \
-./system/timer.d \
-./system/uart.d 
-
-OBJS += \
-./system/adc.o \
-./system/delay.o \
-./system/fifo.o \
-./system/gpio.o \
-./system/i2c.o \
-./system/systime.o \
-./system/timer.o \
-./system/uart.o 
-
-
-# Each subdirectory must supply rules for building sources it contributes
-system/%.o: ../system/%.c
-	arm-none-eabi-gcc -mcpu=cortex-m0plus -march=armv6-m -mthumb -mlittle-endian -mfloat-abi=soft -O0 -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wnull-dereference -g3 -DACTIVE_REGION=LORAMAC_REGION_US915 -DSX126X_TRIM_ENABLE -DUSE_RTC -DREGION_US915 -DSX1262MB2xAS -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/mcu/RE01_256KB -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/boards/rtk70e0118c00000bj -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Core/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/CMSIS/DSP_Lib/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/ -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Config -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/CMSIS_Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Device/Driver/Include -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/mac -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/radio/sx126x -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system -IC:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/system/crypto -I"C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora" -I"C:/Users/a5098388/e2_studio/workspace/r01an5753_re_lora/Resource" -std=gnu11 -fno-jump-tables -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"
-
diff --git a/Resource/bitmap_charge_data.c b/Resource/bitmap_charge_data.c
deleted file mode 100644
index 9f28436..0000000
--- a/Resource/bitmap_charge_data.c
+++ /dev/null
@@ -1,572 +0,0 @@
-/*********************************************************************************************************************
- * DISCLAIMER
- * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No 
- * other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all 
- * applicable laws, including copyright laws. 
- * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
- * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, 
- * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM 
- * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES 
- * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
- * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
- * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of 
- * this software. By using this software, you agree to the additional terms and conditions found by accessing the 
- * following link:
- * http://www.renesas.com/disclaimer 
- *
- * Copyright (C) 2018-2020 Renesas Electronics Corporation. All rights reserved.
- **********************************************************************************************************************/
-/**********************************************************************************************************************
- * History : DD.MM.YYYY Version Description
- *         : 25.06.2020 1.10    First Release
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- * File Name    : bitmap_charge_data.c
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Includes   <System Includes> , "Project Includes"
- *********************************************************************************************************************/
-#include <stdint.h>
-#include <stdbool.h>
-
-/**********************************************************************************************************************
- Macro definitions
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Local Typedef definitions
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Exported global variables
- *********************************************************************************************************************/
-
-const uint8_t g_bitmap_charge_data[] __attribute__ ((section(".ramdata"))) =
-{ 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
-        0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
-        0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
-        0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0x00, 0x00, 0x00, 0x04, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x00, 0x00, 0x00, 0x00, 0x05, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x00, 0x00, 0x00, 0x00, 0x06, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x08, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x09, 0xFF, 0xFF, 0xFF, 0x0F, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x0A, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x0B, 0xFF, 0xFF, 0xFF, 0x0F, 0x1F, 0xFC, 0xFF,
-        0xDF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x0C, 0xFF, 0xFF, 0xFF, 0x0F, 0x3F, 0xFC,
-        0xFF, 0xCF, 0x9F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xFF, 0xFF, 0xFF, 0x0F, 0x7F,
-        0xFC, 0xFF, 0xC7, 0x9F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xFF, 0xFF, 0xFF, 0x0F,
-        0x7F, 0xFC, 0xFF, 0xC7, 0x9F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF,
-        0x0F, 0x7F, 0xFC, 0xC0, 0x03, 0x06, 0xF8, 0xE1, 0x8F, 0x81, 0x3F, 0xFE, 0x63, 0x7C, 0xF8, 0x1F, 0xFC, 0x07,
-        0x3F, 0xFE, 0xFC, 0xF0, 0xC7, 0xC0, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x10, 0xFF, 0xFF,
-        0xFF, 0x0F, 0x3F, 0x7C, 0xC0, 0x03, 0x06, 0x78, 0x80, 0x8F, 0x81, 0x3F, 0xFE, 0x63, 0x1C, 0xE0, 0x0F, 0xF8,
-        0x03, 0x3E, 0x7E, 0x3C, 0xC0, 0xC7, 0xC0, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x11, 0xFF,
-        0xFF, 0xFF, 0x0F, 0x00, 0x3F, 0x0C, 0xC7, 0x9F, 0x1F, 0x0E, 0x0F, 0x98, 0x1F, 0xFF, 0x03, 0x86, 0xC3, 0x83,
-        0xE1, 0x70, 0x78, 0x7E, 0x0C, 0x87, 0x07, 0xCC, 0x8F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x12,
-        0xFF, 0xFF, 0xFF, 0x0F, 0xC0, 0x3F, 0x1F, 0xC7, 0x9F, 0x1F, 0x1F, 0x0F, 0x1E, 0x9F, 0xFF, 0x83, 0xC7, 0xC7,
-        0xE3, 0xE3, 0xF8, 0x78, 0x3E, 0x8E, 0x8F, 0x07, 0x8F, 0xCF, 0xFF, 0xFF, 0xFF, 0xC1, 0x00, 0x00, 0x00, 0x00,
-        0x13, 0xFF, 0xFF, 0xFF, 0x0F, 0x0F, 0xFE, 0x3F, 0xC7, 0x9F, 0x9F, 0x3F, 0x0E, 0x1F, 0x9F, 0xFF, 0xC3, 0xE7,
-        0x8F, 0xF1, 0x7F, 0xFC, 0x71, 0x3C, 0xCF, 0x1F, 0x87, 0x8F, 0xCF, 0xFF, 0xFF, 0x1F, 0x80, 0x00, 0x00, 0x00,
-        0x00, 0x14, 0xFF, 0xFF, 0xFF, 0x0F, 0x3F, 0xFC, 0x3F, 0xC7, 0x9F, 0x9F, 0x3F, 0x8E, 0x3F, 0x8E, 0xFF, 0xE3,
-        0xE7, 0x8F, 0xF1, 0x7F, 0xFC, 0xF1, 0x3C, 0xCF, 0x1F, 0xC7, 0x1F, 0xC7, 0xFF, 0xFF, 0x07, 0x80, 0x00, 0x00,
-        0x00, 0x00, 0x15, 0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0x7C, 0x00, 0xC7, 0x9F, 0x0F, 0x00, 0x8E, 0x7F, 0xCE, 0xFF,
-        0xE3, 0x03, 0x80, 0xF1, 0x7F, 0xFC, 0xE1, 0x1C, 0x07, 0x00, 0xC7, 0x3F, 0xE7, 0xFF, 0xFF, 0x01, 0x80, 0x00,
-        0x00, 0x00, 0x00, 0x16, 0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0x38, 0x38, 0xC7, 0x9F, 0x0F, 0x00, 0x8E, 0x7F, 0xC6,
-        0xFF, 0xE3, 0x03, 0x80, 0xF1, 0x7F, 0xFC, 0xE1, 0x19, 0x07, 0x00, 0xC7, 0x3F, 0xE3, 0xFF, 0xFF, 0x00, 0x80,
-        0x00, 0x00, 0x00, 0x00, 0x17, 0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0x18, 0x3F, 0xC7, 0x9F, 0x9F, 0xFF, 0x8F, 0x7F,
-        0xE4, 0xFF, 0xE3, 0xE7, 0xFF, 0xF1, 0x7F, 0xFC, 0xF1, 0x89, 0xCF, 0xFF, 0xC7, 0x3F, 0xF2, 0xFF, 0x7F, 0x00,
-        0x80, 0x00, 0x00, 0x00, 0x00, 0x18, 0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0x18, 0x3F, 0xC7, 0x9F, 0x9F, 0xFF, 0x8F,
-        0xFF, 0xE4, 0xFF, 0xE3, 0xE7, 0xFF, 0xF1, 0x7F, 0xFC, 0xF1, 0xC1, 0xCF, 0xFF, 0xC7, 0x7F, 0xF2, 0xFF, 0x3F,
-        0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x19, 0xFF, 0xFF, 0xFF, 0x0F, 0x7F, 0x1C, 0x1F, 0xC7, 0x9F, 0x1F, 0x7F,
-        0x8E, 0xFF, 0xE0, 0xFF, 0xE3, 0xC7, 0x9F, 0xE3, 0xE7, 0xF8, 0xF8, 0xC3, 0x8F, 0x3F, 0xC7, 0x7F, 0xF0, 0xFF,
-        0x1F, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x1A, 0xFF, 0xFF, 0xFF, 0x0F, 0x1F, 0x3C, 0x0E, 0xC7, 0x9F, 0x1F,
-        0x1C, 0x8E, 0xFF, 0xF1, 0xFF, 0xE3, 0x07, 0x87, 0x83, 0xE1, 0x70, 0xF8, 0xC3, 0x0F, 0x0E, 0xC7, 0xFF, 0xF8,
-        0xFF, 0x0F, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x1B, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x3F, 0x20, 0x0F, 0x1E,
-        0x78, 0x80, 0x8F, 0xFF, 0xF1, 0xFF, 0xE3, 0x1F, 0xE0, 0x0F, 0xF8, 0x03, 0xFE, 0xE3, 0x3F, 0xC0, 0xC7, 0xFF,
-        0xF8, 0xFF, 0x0F, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x1C, 0xFF, 0xFF, 0xFF, 0x0F, 0xC0, 0xFF, 0x30, 0x1E,
-        0x3E, 0xFC, 0xC1, 0x8F, 0xFF, 0xF9, 0xFF, 0xE3, 0x7F, 0xF0, 0x1F, 0xFC, 0x07, 0xFF, 0xE7, 0xFF, 0xE0, 0xC7,
-        0xFF, 0xFC, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFC, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x1E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x7F, 0xFC, 0xFF, 0x03, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x1F, 0xFE, 0xFF, 0x03, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x20, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0x01, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x21, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCF, 0xFF, 0xFF, 0x01, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x22, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x23, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x24,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
-        0x25, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
-        0x00, 0x26, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x80, 0x00, 0x00,
-        0x00, 0x00, 0x27, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x80, 0x00,
-        0x00, 0x00, 0x00, 0x28, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xC0, 0x00, 0x00, 0x80,
-        0x00, 0x00, 0x00, 0x00, 0x29, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00,
-        0x80, 0x00, 0x00, 0x00, 0x00, 0x2A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00,
-        0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x2B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00,
-        0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x2C, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x00,
-        0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x2D, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F,
-        0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x2E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x07, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x2F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x30, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x31, 0xFF, 0xFF, 0xFF, 0xFF, 0x01,
-        0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x32, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x01, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x33, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xF1, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x34, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xF1, 0xFF, 0xFF, 0xFF, 0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x35, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0xFF, 0xFF, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x36,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0xFF, 0xFF, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
-        0x37, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0x38, 0x7C, 0xC0, 0x0F, 0x7E, 0x9C, 0xE1, 0x18, 0xFE, 0x07, 0xF8,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
-        0x00, 0x38, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0x08, 0x78, 0xC0, 0x07, 0x7C, 0x8C, 0xE1, 0x08, 0xF8, 0x01,
-        0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00,
-        0x00, 0x00, 0x39, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0xF0, 0xC0, 0xF0, 0xF8, 0x61, 0x78, 0x80, 0xE1, 0xE0, 0xF8,
-        0x78, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
-        0x00, 0x00, 0x00, 0x3A, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0xF0, 0xE0, 0xF1, 0xF8, 0xF9, 0x79, 0xE0, 0xE1, 0xE0,
-        0xF9, 0x78, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
-        0x00, 0x00, 0x00, 0x00, 0x3B, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0xF0, 0xF1, 0xF8, 0xF8, 0x71, 0xF8, 0xE1,
-        0xF8, 0x71, 0xFC, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x80, 0x00, 0x00, 0x00, 0x00, 0x3C, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0xF0, 0xF1, 0xF8, 0xFC, 0x71, 0xF8,
-        0xE1, 0xF8, 0x71, 0xFC, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00,
-        0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x3D, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0xF0, 0xF1, 0x78, 0x00, 0x70,
-        0xF8, 0xE1, 0xF8, 0xF1, 0xFC, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00,
-        0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x3E, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0xF0, 0xF1, 0x78, 0x00,
-        0x70, 0xF8, 0xE1, 0xF8, 0xF1, 0x78, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00,
-        0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0xF0, 0xF1, 0xF8,
-        0xFC, 0x7F, 0xF8, 0xE1, 0xF8, 0xF1, 0x01, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07,
-        0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x40, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0xF0, 0xF1,
-        0xF8, 0xF8, 0x7F, 0xF8, 0xE1, 0xF8, 0xF1, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x03, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x41, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0xF0,
-        0xF1, 0xF8, 0xF9, 0x73, 0xF8, 0xE1, 0xF8, 0x71, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x42, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF,
-        0xF0, 0xF1, 0xF8, 0xE1, 0x71, 0xF8, 0xE1, 0xF8, 0xF1, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x43, 0xFF, 0xFF, 0xFF, 0xFF, 0x01,
-        0xC0, 0xF0, 0xF1, 0xC1, 0x07, 0x78, 0xF8, 0xE1, 0xF8, 0xF1, 0x01, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x44, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x01, 0xC0, 0xF0, 0xF1, 0xE3, 0x0F, 0x7E, 0xF8, 0xE1, 0xF8, 0xF1, 0x01, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x45, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFC, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x46, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFC, 0xF1, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x47, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFC, 0xF8, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x48,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x78, 0xF8, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
-        0x49, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
-        0x00, 0x4A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00,
-        0x00, 0x00, 0x4B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
-        0x00, 0x00, 0x00, 0x4C, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
-        0x00, 0x00, 0x00, 0x00, 0x4D, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x80, 0x00, 0x00, 0x00, 0x00, 0x4E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3E, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3C, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x50, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3C, 0xFF, 0xFF, 0xFF, 0x03, 0x00,
-        0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x51, 0xFF, 0xFF, 0xFF, 0xFF, 0xF9, 0xF9, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3C, 0xFF, 0xFF, 0xFF, 0x07,
-        0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x52, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xF9, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3C, 0xFF, 0xFF, 0xFF,
-        0x0F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x53, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xF8, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3C, 0xFF, 0xFF,
-        0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x54, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xF8,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3C, 0xFF,
-        0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x55, 0x3F, 0xFC, 0x0F, 0x3F, 0x00,
-        0x00, 0x7E, 0x7C, 0x7C, 0xF0, 0xE7, 0x78, 0xF0, 0xFF, 0x07, 0x18, 0xE0, 0x01, 0x3E, 0x02, 0x7F, 0x40, 0x3C,
-        0x01, 0xCF, 0x3F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x56, 0x0F, 0xF0, 0x03, 0x3C,
-        0x00, 0x40, 0x7E, 0x7C, 0x1C, 0xE0, 0x67, 0x38, 0xE0, 0xFF, 0x03, 0x18, 0xE0, 0x01, 0x3E, 0x00, 0x3E, 0x00,
-        0x3C, 0x00, 0x8E, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x57, 0xCF, 0xF3, 0x70,
-        0xF0, 0xF8, 0x78, 0x7C, 0x78, 0x0E, 0xC7, 0x07, 0x0C, 0x87, 0xFF, 0xF1, 0x7F, 0xFE, 0x79, 0x3C, 0x38, 0x3E,
-        0x3E, 0x3C, 0x3C, 0x1C, 0x8F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x58, 0xC7, 0xFF,
-        0xF0, 0xF0, 0xF8, 0x78, 0x3C, 0x78, 0x9E, 0xC7, 0x07, 0x8F, 0x8F, 0xFF, 0xF1, 0x7F, 0xFE, 0xFF, 0x38, 0x3C,
-        0x1C, 0x7F, 0x3C, 0x7E, 0x1C, 0x8F, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x59, 0xCF,
-        0xFF, 0xFC, 0xF3, 0xF8, 0xF8, 0x38, 0x79, 0xFE, 0x8F, 0x87, 0xC7, 0x9F, 0xFF, 0xE3, 0x7F, 0xFE, 0xFF, 0x38,
-        0x3E, 0x1C, 0x7F, 0x3C, 0xFF, 0x3C, 0xCF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x5A,
-        0xCF, 0xFF, 0xFC, 0xF3, 0xF8, 0xF8, 0x18, 0x39, 0xFE, 0x8F, 0xC7, 0xE7, 0x9F, 0xFF, 0x87, 0x7F, 0xFE, 0x07,
-        0x38, 0x3E, 0x0C, 0x7F, 0x3C, 0xFF, 0x38, 0xCF, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
-        0x5B, 0x3F, 0x7C, 0xFC, 0xE3, 0xF8, 0xF8, 0x99, 0x31, 0x1F, 0x80, 0xC7, 0x07, 0x80, 0xFF, 0x3F, 0x7C, 0xFE,
-        0xE1, 0x38, 0x3E, 0x0C, 0x7F, 0x3C, 0xFF, 0x38, 0xC6, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
-        0x00, 0x5C, 0xFF, 0x70, 0xFC, 0xE3, 0xF8, 0xF8, 0x99, 0x11, 0x1F, 0x8E, 0xC7, 0x07, 0x80, 0xFF, 0xFF, 0x78,
-        0xFE, 0xF8, 0x38, 0x3E, 0x0C, 0x7F, 0x3C, 0xFF, 0x78, 0xE6, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x80, 0x00, 0x00,
-        0x00, 0x00, 0x5D, 0xFF, 0xE3, 0xFC, 0xF3, 0xF8, 0xF8, 0x99, 0x83, 0x87, 0x8F, 0xC7, 0xE7, 0xFF, 0xFF, 0xFF,
-        0x71, 0x7E, 0xF8, 0x38, 0x3E, 0x1C, 0x7F, 0x3C, 0xFF, 0xFC, 0xE0, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x80, 0x00,
-        0x00, 0x00, 0x00, 0x5E, 0xFF, 0xC7, 0xFC, 0xF3, 0xF8, 0xF8, 0x81, 0x83, 0x87, 0x8F, 0xC7, 0xC7, 0xFF, 0xFF,
-        0xFF, 0x71, 0x7E, 0xF8, 0x38, 0x3E, 0x1C, 0x3F, 0x3C, 0x7F, 0xFC, 0xF0, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x80,
-        0x00, 0x00, 0x00, 0x00, 0x5F, 0xEF, 0xC7, 0xF0, 0xF0, 0xF8, 0xF8, 0xC3, 0x87, 0x87, 0x87, 0xC7, 0x8F, 0x9F,
-        0xFF, 0xE3, 0x79, 0xFE, 0x38, 0x38, 0x3E, 0x3C, 0x0C, 0x3C, 0x3C, 0xFC, 0xF0, 0xE3, 0xF1, 0x18, 0x00, 0x00,
-        0x80, 0x00, 0x00, 0x00, 0x00, 0x60, 0xCF, 0xE3, 0xF0, 0xF0, 0xF8, 0xF8, 0xC3, 0x87, 0x8F, 0x83, 0xC7, 0x0F,
-        0x8E, 0xFF, 0x07, 0x78, 0xE0, 0x81, 0x39, 0x3E, 0x7C, 0xC0, 0x3C, 0x01, 0xFF, 0xF1, 0xE3, 0xF1, 0x18, 0x00,
-        0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x61, 0x0F, 0xF0, 0x03, 0xFC, 0xF8, 0xC1, 0xE7, 0xC7, 0x1F, 0x98, 0xC7,
-        0x3F, 0xC0, 0xFF, 0x0F, 0xFE, 0xF0, 0xC3, 0x39, 0x3E, 0xFC, 0xE0, 0x3C, 0x83, 0xFF, 0xF8, 0xE3, 0xF1, 0x18,
-        0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x62, 0x3F, 0xF8, 0x0F, 0xFF, 0xF8, 0xE1, 0xE7, 0xCF, 0x3F, 0x9C,
-        0xC7, 0x7F, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xFF, 0xFF,
-        0x1F, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x63, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xFF,
-        0xFF, 0x1F, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x64, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0xFC,
-        0xFF, 0xFF, 0x03, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x65, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F,
-        0xFE, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x66, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x67, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x68, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x69, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x6A, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x6B, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x6C,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
-        0x6D, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
-        0x00, 0x6E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x80, 0x00, 0x00,
-        0x00, 0x00, 0x6F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x80, 0x00,
-        0x00, 0x00, 0x00, 0x70, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x80,
-        0x00, 0x00, 0x00, 0x00, 0x71, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00,
-        0x80, 0x00, 0x00, 0x00, 0x00, 0x72, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00,
-        0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x73, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F,
-        0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1,
-        0x3F, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x75, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xC0, 0x7F, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x76, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x00, 0xFF, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x77, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00,
-        0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x01, 0xFC, 0x01, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x78, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03,
-        0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x07, 0xF0, 0x0F, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x79, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x03, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0xC0, 0x1F, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7A, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x1F, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7B, 0xFF, 0xFF, 0xFF,
-        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x1C, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xFF, 0xFF,
-        0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7D, 0xFF,
-        0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7E,
-        0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
-        0x7F, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
-        0x00, 0x80, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x80, 0x00, 0x00,
-        0x00, 0x00, 0x81, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x80, 0x00,
-        0x00, 0x00, 0x00, 0x82, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x80,
-        0x00, 0x00, 0x00, 0x00, 0x83, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
-        0x80, 0x00, 0x00, 0x00, 0x00, 0x84, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x85, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x01, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x86, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x01, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x87, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x01, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x88, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x89, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x8A, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x8B, 0xFF, 0xFF, 0xFF, 0x01, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x8C, 0xFF, 0xFF, 0xFF, 0x01,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x8D, 0xFF, 0xFF, 0xFF,
-        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x8E, 0xFF, 0xFF,
-        0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x8F, 0xFF,
-        0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x90,
-        0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x8F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
-        0x91, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x01, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00,
-        0x00, 0x92, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x01, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00,
-        0x00, 0x00, 0x93, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x01, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00,
-        0x00, 0x00, 0x00, 0x94, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xF1, 0xC1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80,
-        0x00, 0x00, 0x00, 0x00, 0x95, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00,
-        0x80, 0x00, 0x00, 0x00, 0x00, 0x96, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07,
-        0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x97, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x98, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x99, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x9A, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x9B, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x9C, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0xC3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x9D, 0xFF, 0xFF, 0xFF, 0x01, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x83, 0x3F, 0xFE, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x9E, 0xFF, 0xFF, 0xFF, 0x01,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC1, 0x3F, 0xFE, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x9F, 0xFF, 0xFF, 0xFF,
-        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC1, 0x1F, 0xFE, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xA0, 0xFF, 0xFF,
-        0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x0F, 0x1E,
-        0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xA1, 0xFF,
-        0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00,
-        0x1F, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xA2,
-        0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00,
-        0x00, 0x1F, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
-        0xA3, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F,
-        0x00, 0xC0, 0xFF, 0x03, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00,
-        0x00, 0xA4, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x3F, 0xF0, 0xFF, 0xFF, 0x81, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00,
-        0x00, 0x00, 0xA5, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x3F, 0xFC, 0xFF, 0xFF, 0xC1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00,
-        0x00, 0x00, 0x00, 0xA6, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80,
-        0x00, 0x00, 0x00, 0x00, 0xA7, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00,
-        0x80, 0x00, 0x00, 0x00, 0x00, 0xA8, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07,
-        0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xA9, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x88, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xAA, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xAB, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0xFE, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xAC, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xAD, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0xF8, 0x83, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xAE, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0xF8, 0x03, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xAF, 0xFF, 0xFF, 0xFF, 0x01, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xB0, 0xFF, 0xFF, 0xFF, 0x01,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xB1, 0xFF, 0xFF, 0xFF,
-        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xB2, 0xFF, 0xFF,
-        0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xB3, 0xFF,
-        0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xB4,
-        0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
-        0xB5, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00,
-        0x00, 0xB6, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0xDE, 0xFF, 0x01, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00,
-        0x00, 0x00, 0xB7, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x8F, 0x7F, 0x00, 0xFC, 0xFF, 0x07, 0x00, 0x80, 0x00,
-        0x00, 0x00, 0x00, 0xB8, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0x1F, 0x00, 0xF0, 0xFF, 0x07, 0x00, 0x80,
-        0x00, 0x00, 0x00, 0x00, 0xB9, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0xE0, 0xFF, 0x07, 0x00,
-        0x80, 0x00, 0x00, 0x00, 0x00, 0xBA, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0xC0, 0xFF, 0x07,
-        0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x80, 0xFF,
-        0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xBC, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00,
-        0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xBD, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00,
-        0x00, 0xFF, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xBE, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0x00, 0x00, 0xFE, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xBF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x00, 0x00, 0x00, 0xFC, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xFF, 0xFF, 0xFF, 0x01, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x7F, 0x00, 0x00, 0x00, 0xFC, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xC2, 0xFF, 0xFF, 0xFF, 0x01,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0xFC, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xC3, 0xFF, 0xFF, 0xFF,
-        0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0xFC, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xC4, 0xFF, 0xFF,
-        0xFF, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0xFC, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xC5, 0xFF,
-        0xFF, 0xFF, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0xFC, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xC6,
-        0xFF, 0xFF, 0xFF, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0xFC, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
-        0xC7, 0xFF, 0xFF, 0xFF, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFC, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00,
-        0x00, 0xC8, 0xFF, 0xFF, 0xFF, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x80, 0x00, 0x00,
-        0x00, 0x00, 0xC9, 0xFF, 0xFF, 0xFF, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x80, 0x00,
-        0x00, 0x00, 0x00, 0xCA, 0xFF, 0xFF, 0xFF, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFE, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x07, 0x00, 0x80,
-        0x00, 0x00, 0x00, 0x00, 0xCB, 0xFF, 0xFF, 0xFF, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFE, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0xFC, 0x07, 0x00,
-        0x80, 0x00, 0x00, 0x00, 0x00, 0xCC, 0xFF, 0xFF, 0xFF, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFE, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0xF0, 0x07,
-        0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xCD, 0xFF, 0xFF, 0xFF, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFE,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0xE0,
-        0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xCE, 0xFF, 0xFF, 0xFF, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03,
-        0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x08, 0x00, 0x00,
-        0xC0, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xCF, 0xFF, 0xFF, 0xFF, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x03, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x1C, 0x00,
-        0x00, 0x80, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xD0, 0xFF, 0xFF, 0xFF, 0x01, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x03, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x7E,
-        0x00, 0x00, 0x80, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xD1, 0xFF, 0xFF, 0xFF, 0x01, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x03, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x01, 0x00, 0x00, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xD2, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xD3, 0xFF, 0xFF, 0xFF, 0x01, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x06, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xD4, 0xFF, 0xFF, 0xFF, 0x01,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x06, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xD5, 0xFF, 0xFF, 0xFF,
-        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x06, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xD6, 0xFF, 0xFF,
-        0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x06, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xD7, 0xFF,
-        0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x06, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xD8,
-        0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
-        0xD9, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00,
-        0x00, 0xDA, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00,
-        0x00, 0x00, 0xDB, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x80, 0x00,
-        0x00, 0x00, 0x00, 0xDC, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x20, 0x00, 0x00, 0x04, 0x00, 0x80,
-        0x00, 0x00, 0x00, 0x00, 0xDD, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x30, 0x00, 0x00, 0x04, 0x00,
-        0x80, 0x00, 0x00, 0x00, 0x00, 0xDE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x3C, 0x00, 0x00, 0x04,
-        0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x01, 0x00, 0x3F, 0x00, 0x00,
-        0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0xC0, 0x3F, 0x00,
-        0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0xF8, 0x3F,
-        0x00, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xE2, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0xF0,
-        0x3F, 0x00, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xE3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00,
-        0xE0, 0x7F, 0x00, 0x00, 0x06, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xE4, 0xFF, 0xFF, 0xFF, 0xFF, 0xF9, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F,
-        0x00, 0xE0, 0x7F, 0x00, 0x00, 0x06, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xE5, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x07, 0x00, 0x80, 0x7F, 0x00, 0x00, 0x06, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xE6, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x03, 0x08, 0x00, 0x7F, 0x00, 0x00, 0x06, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xE7, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x01, 0x18, 0x00, 0xFE, 0x00, 0x00, 0x06, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xE8, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x01, 0xFC, 0x00, 0xF8, 0x00, 0x00, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xE9, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0xFC, 0x01, 0x80, 0x00, 0x00, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xEA,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xFF, 0xC1, 0xC7, 0x8F, 0x8F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFE, 0x0F, 0x00, 0x00, 0x80, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
-        0xEB, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xFF, 0x80, 0xC7, 0x87, 0x8F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFE, 0x7F, 0x00, 0x00, 0x80, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00,
-        0x00, 0xEC, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x3F, 0x1C, 0x8E, 0x87, 0xCF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0xFF, 0xFF, 0x01, 0x00, 0xC0, 0x03, 0x00, 0x80, 0x00, 0x00,
-        0x00, 0x00, 0xED, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x3F, 0x3E, 0x8E, 0x87, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x80, 0xFF, 0xFF, 0x07, 0x00, 0xE0, 0x03, 0x00, 0x80, 0x00,
-        0x00, 0x00, 0x00, 0xEE, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x1F, 0x7F, 0x9C, 0x07, 0xE7, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x80, 0xFF, 0xFF, 0x1F, 0x00, 0xF0, 0x03, 0x00, 0x80,
-        0x00, 0x00, 0x00, 0x00, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x1F, 0x7F, 0x9C, 0x03, 0xE7, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0xC0, 0xFF, 0xFF, 0xFF, 0x00, 0xFC, 0x01, 0x00,
-        0x80, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x1F, 0x7F, 0x18, 0x33, 0xE6, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xC0, 0xFF, 0xFF, 0xFF, 0x01, 0xFF, 0x01,
-        0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x1F, 0x7F, 0x18, 0x31, 0xE2, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0xE1, 0xFF, 0xFF, 0xFF, 0x83, 0xFF,
-        0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xF2, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x1F, 0x7F, 0x3C, 0x79, 0xF2,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x1F, 0x7F, 0x3C, 0x78,
-        0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x70, 0xF0, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x7F, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xF4, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x3F, 0x3E, 0x7E,
-        0x78, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0xF8, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xF5, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x3F, 0x1C,
-        0x7E, 0xF8, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0xFC, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xF6, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xF0,
-        0x80, 0x7F, 0xFC, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0xFC,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0xF0, 0xC1, 0x7F, 0xFC, 0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00,
-        0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xF9, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFA, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFB, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFC,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
-        0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
-        0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
-        0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0x00, 0x00, 0x00, };
-
-/* End of File */
-
diff --git a/Resource/bitmap_opening_data.c b/Resource/bitmap_opening_data.c
deleted file mode 100644
index bf79753..0000000
--- a/Resource/bitmap_opening_data.c
+++ /dev/null
@@ -1,572 +0,0 @@
-/*********************************************************************************************************************
- * DISCLAIMER
- * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No 
- * other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all 
- * applicable laws, including copyright laws. 
- * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
- * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, 
- * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM 
- * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES 
- * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
- * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
- * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of 
- * this software. By using this software, you agree to the additional terms and conditions found by accessing the 
- * following link:
- * http://www.renesas.com/disclaimer 
- *
- * Copyright (C) 2018-2020 Renesas Electronics Corporation. All rights reserved.
- **********************************************************************************************************************/
-/**********************************************************************************************************************
- * History : DD.MM.YYYY Version Description
- *         : 25.06.2020 1.10    First Release
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- * File Name    : bitmap_opening_data.c
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Includes   <System Includes> , "Project Includes"
- *********************************************************************************************************************/
-#include <stdint.h>
-#include <stdbool.h>
-
-/**********************************************************************************************************************
- Macro definitions
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Local Typedef definitions
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Exported global variables
- *********************************************************************************************************************/
-
-const uint8_t g_bitmap_opening_data[] __attribute__ ((section(".ramdata"))) =
-{ 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
-        0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
-        0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
-        0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0x00, 0x00, 0x00, 0x04, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x00, 0x00, 0x00, 0x00, 0x05, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x00, 0x00, 0x00, 0x00, 0x06, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x08, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x09, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x0A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x0B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x0C, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x10, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x11, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x12,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
-        0x13, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
-        0x00, 0x14, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
-        0x00, 0x00, 0x15, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0x00, 0x00, 0x00, 0x16, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x00, 0x00, 0x00, 0x00, 0x17, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x00, 0x00, 0x00, 0x00, 0x18, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x19, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x1A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x1B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x1C, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x1E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x20, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x21, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x22, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x23, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x24,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
-        0x25, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
-        0x00, 0x26, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
-        0x00, 0x00, 0x27, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0x00, 0x00, 0x00, 0x28, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x00, 0x00, 0x00, 0x00, 0x29, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x00, 0x00, 0x00, 0x00, 0x2A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x2B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x2C, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x2D, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x2E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x2F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x30, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x31, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x32, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x33, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x34, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x35, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x36,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
-        0x37, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
-        0x00, 0x38, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
-        0x00, 0x00, 0x39, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0x00, 0x00, 0x00, 0x3A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x00, 0x00, 0x00, 0x00, 0x3B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x00, 0x00, 0x00, 0x00, 0x3C, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x3D, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x3E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x40, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x41, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x42, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x43, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x44, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0xFE,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x45, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC,
-        0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x46, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0xC0, 0x3F, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x47, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0xFE, 0x01, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x48,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0xF8, 0x07, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
-        0x49, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0xE0, 0x1F, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
-        0x00, 0x4A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x7F, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
-        0x00, 0x00, 0x4B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0xE0, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0x00, 0x00, 0x00, 0x4C, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0x30, 0xC0, 0x07, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x00, 0x00, 0x00, 0x00, 0x4D, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x80, 0xE7, 0x7F, 0x3E,
-        0x18, 0xFE, 0xE7, 0x7F, 0xE0, 0x83, 0xFF, 0x01, 0x00, 0xFC, 0x07, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x00, 0x00, 0x00, 0x00, 0x4E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0xC0, 0xF7, 0x7F,
-        0x7E, 0x18, 0xFF, 0xF3, 0x3F, 0xF0, 0xC3, 0xFF, 0x00, 0x00, 0xF8, 0x0F, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0xE0, 0xF3,
-        0x00, 0x7E, 0x98, 0x07, 0xF0, 0x00, 0xF0, 0xC7, 0x03, 0x00, 0x00, 0xF0, 0x1F, 0x00, 0xF0, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x50, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xF0,
-        0xF1, 0x00, 0xF6, 0x98, 0x07, 0xF0, 0x07, 0x38, 0xCF, 0x1F, 0x00, 0x00, 0xE0, 0x3F, 0x00, 0xE0, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x51, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0xE0,
-        0x79, 0xF0, 0x7F, 0xE6, 0x99, 0xFF, 0xE3, 0x3F, 0x3C, 0x8F, 0xFF, 0x00, 0x00, 0xC0, 0x7F, 0x00, 0x80, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x52, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00,
-        0xE0, 0xF1, 0xF0, 0x00, 0xC6, 0x9B, 0x07, 0x00, 0x7F, 0x1C, 0x1E, 0xFC, 0x01, 0x00, 0x80, 0xFF, 0x00, 0x00,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x53, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00,
-        0x00, 0xE0, 0xE1, 0xF1, 0x00, 0x86, 0x9F, 0x07, 0x00, 0xF8, 0x1E, 0x1E, 0xE0, 0x03, 0x00, 0x80, 0xFF, 0x00,
-        0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x54, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F,
-        0x00, 0x00, 0xE0, 0xC1, 0xF1, 0x00, 0x86, 0x9F, 0x07, 0x00, 0xF0, 0x0E, 0x3C, 0xC0, 0x03, 0x00, 0x00, 0xFF,
-        0x01, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x55, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x0F, 0x00, 0x00, 0xE0, 0x81, 0xE3, 0xFF, 0x06, 0x1F, 0xFF, 0xF7, 0x7F, 0xCF, 0xFF, 0xFF, 0x03, 0x00, 0x00,
-        0xFF, 0x03, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x56, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x8F, 0x7F, 0x06, 0x1C, 0xFC, 0xF3, 0x1F, 0xC7, 0xFF, 0x7F, 0x00, 0x00,
-        0x00, 0xFE, 0x03, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x57, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0xFE, 0x07, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x58, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0xFC, 0x07, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x59, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0xFC, 0x0F, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x5A,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x0F, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
-        0x5B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x1F, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
-        0x00, 0x5C, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1F, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
-        0x00, 0x00, 0x5D, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0x00, 0x00, 0x00, 0x5E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x00, 0x00, 0x00, 0x00, 0x5F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x00, 0x00, 0x00, 0x00, 0x60, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x61, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x62, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFC, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x63, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFE, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x64, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x80, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x65, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xC0,
-        0xFF, 0x1F, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x03, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x66, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0xE0, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x67, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x00, 0xF0, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x68, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x01, 0xF8, 0xFF, 0x1F, 0xC0, 0xFF, 0xFF, 0x00, 0x3E, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x69, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x01, 0xF8, 0xFF, 0x1F, 0xC0, 0xFF, 0xFF, 0x00, 0x3E, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x6A, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x01, 0xFC, 0xFF, 0x1F, 0xC0, 0xFF, 0xFF, 0x00, 0x1E, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x6B, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0xFC, 0xFF, 0x1F, 0xC0, 0xFF, 0xFF, 0x00, 0x1E, 0x80, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x6C,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0xFE, 0xFF, 0x1F, 0xC0, 0xFF, 0xFF, 0x00, 0x1E, 0x00, 0x01, 0x00, 0xC0,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
-        0x6D, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFE, 0xFF, 0x1F, 0xC0, 0xFF, 0xFF, 0x00, 0x1E, 0x00, 0x00, 0x00,
-        0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
-        0x00, 0x6E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFE, 0xFF, 0x1F, 0xC0, 0xFF, 0x7F, 0x00, 0x1E, 0x00, 0x00,
-        0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
-        0x00, 0x00, 0x6F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0xFE, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x80,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0x00, 0x00, 0x00, 0x70, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0xFE, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x80, 0x1F,
-        0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x00, 0x00, 0x00, 0x00, 0x71, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xFE, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0xF0,
-        0x1F, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x00, 0x00, 0x00, 0x00, 0x72, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xFE, 0xFF, 0x1F, 0xC0, 0xFF, 0x03,
-        0xE0, 0x3F, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x73, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0xFC, 0xFF, 0x1F, 0xC0, 0xFF,
-        0x0F, 0xC0, 0x3F, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x74, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0xFC, 0xFF, 0x1F, 0xC0,
-        0xFF, 0x1F, 0x80, 0x3F, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x75, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0xFC, 0xFF, 0x1F,
-        0xC0, 0xFF, 0x3F, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x76, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xF8, 0xFF,
-        0x1F, 0xC0, 0xFF, 0x7F, 0x00, 0xFC, 0x03, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x77, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x78, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x79, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xE3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x7A, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xCF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x7B, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x9F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x7D, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x7E,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
-        0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
-        0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
-        0x00, 0x00, 0x81, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0x00, 0x00, 0x00, 0x82, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x00, 0x00, 0x00, 0x00, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x00, 0x00, 0x00, 0x00, 0x84, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x85, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x86, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x87, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x88, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x89, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x8A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x8B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x8C, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x8D, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x8E, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x8F, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x90,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
-        0x91, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
-        0x00, 0x92, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
-        0x00, 0x00, 0x93, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0x00, 0x00, 0x00, 0x94, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x00, 0x00, 0x00, 0x00, 0x95, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x00, 0x00, 0x00, 0x00, 0x96, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x97, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x98, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x99, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x9A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x9B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x9C, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x9D, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x9E, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x9F, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xA0, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xA1, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xA2,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
-        0xA3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
-        0x00, 0xA4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
-        0x00, 0x00, 0xA5, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0x00, 0x00, 0x00, 0xA6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x00, 0x00, 0x00, 0x00, 0xA7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x00, 0x00, 0x00, 0x00, 0xA8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xA9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F,
-        0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xAA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x1F, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xAB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x1F, 0x3F, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xAC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x1F, 0x7F, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xAD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x1F, 0xFF, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xAE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0xFF, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xAF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0xFF, 0xF8, 0x01, 0x1F, 0x3E, 0x7E, 0x7C, 0xC0, 0x8F, 0xF0, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xB0, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0xFF, 0x78, 0x00, 0x3C, 0x3E, 0x3C, 0x1C, 0x80, 0x0F, 0xF0, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xB1, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x7F, 0x38, 0x38, 0x38, 0x1E, 0x3C, 0x0E, 0x0E, 0x0F, 0xFE,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xB2, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x1F, 0x3C, 0xFE, 0x38, 0x1C, 0x3C, 0x0E, 0x1F, 0x0F,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xB3, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0x1E, 0xFE, 0x70, 0x1C, 0x18, 0x86, 0x1F,
-        0x0E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xB4,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x80, 0x1F, 0xFF, 0x71, 0x8C, 0x18, 0x87,
-        0x3F, 0x8E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
-        0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0xFF, 0x1F, 0xFF, 0x71, 0x88, 0x18,
-        0x07, 0x00, 0x8E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
-        0x00, 0xB6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0xFF, 0x1F, 0xFF, 0xF1, 0x88,
-        0x11, 0x07, 0x00, 0x8E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
-        0x00, 0x00, 0xB7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0xFF, 0x1F, 0xFF, 0xF1,
-        0xC0, 0x81, 0x87, 0xFF, 0x8F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0x00, 0x00, 0x00, 0xB8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0xFF, 0x1F, 0xFE,
-        0xF0, 0xC0, 0x81, 0x87, 0xFF, 0x8F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x00, 0x00, 0x00, 0x00, 0xB9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0xFF, 0x3F,
-        0xFE, 0xF8, 0xC1, 0x83, 0x0F, 0x3F, 0x8F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x00, 0x00, 0x00, 0x00, 0xBA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0xFF,
-        0x3F, 0x38, 0xF8, 0xE1, 0xC3, 0x0F, 0x1E, 0x8E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F,
-        0xFF, 0x7F, 0x00, 0xFC, 0xE1, 0xC3, 0x1F, 0x00, 0x8F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xBC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x1F, 0xFF, 0xFF, 0x01, 0xFF, 0xE3, 0xC7, 0x7F, 0xC0, 0x8F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xBD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xBE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xC2, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xC3, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xC4, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xC5, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xC6,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
-        0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
-        0x00, 0xC8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
-        0x00, 0x00, 0xC9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0x00, 0x00, 0x00, 0xCA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x00, 0x00, 0x00, 0x00, 0xCB, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xF8, 0x7F, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x00, 0x00, 0x00, 0x00, 0xCC, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xF0, 0x3F, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xCD, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xF0, 0x3F, 0xF8, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xCE, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xE0, 0x1F, 0xF8, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC7, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xCF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xE0, 0x1F, 0xF8, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC7, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xD0, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xE0, 0x1F, 0xF8,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC7,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xD1, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xC4, 0x8F,
-        0xF8, 0x03, 0x7E, 0x04, 0xFC, 0x07, 0xFC, 0x07, 0xE0, 0x07, 0xFC, 0x08, 0x1C, 0xFC, 0x0F, 0xF8, 0x11, 0xF0,
-        0x01, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xD2, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xC4,
-        0x8F, 0xF8, 0x01, 0x7C, 0x00, 0xF8, 0x03, 0xF8, 0x01, 0xF8, 0x01, 0xF8, 0x00, 0x00, 0xF8, 0x03, 0xF0, 0x01,
-        0xE0, 0x01, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xD3, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F,
-        0x84, 0x87, 0xF8, 0x70, 0x78, 0xE0, 0xF0, 0xE1, 0xF0, 0xF1, 0xF8, 0xE0, 0xF0, 0xE0, 0xC0, 0xF0, 0xC1, 0xE1,
-        0x81, 0xC3, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xD4, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x7F, 0x8C, 0xC7, 0xF8, 0xF9, 0x78, 0xF8, 0xF1, 0xF3, 0xF1, 0xF8, 0xF1, 0xF0, 0xF1, 0xF0, 0xE1, 0xF1, 0xE1,
-        0xE3, 0xE1, 0xC7, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xD5, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x7F, 0x0C, 0xC3, 0xF8, 0xFF, 0x78, 0xFC, 0xF1, 0xFF, 0xF1, 0xF8, 0x71, 0xF8, 0xE1, 0xF8, 0xF1, 0xF1,
-        0xF0, 0xC3, 0xF1, 0xC7, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xD6, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x7F, 0x1C, 0xE3, 0xF8, 0x3F, 0x78, 0xFC, 0xF1, 0x7F, 0xF0, 0xF8, 0x71, 0xF8, 0xE3, 0xF8, 0xF1,
-        0xF1, 0xF0, 0xC7, 0xF1, 0xC7, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xD7, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x7F, 0x1C, 0xE3, 0xF8, 0x01, 0x78, 0xFC, 0xF1, 0x03, 0xF0, 0xF0, 0x70, 0x00, 0xE0, 0xF8,
-        0xF1, 0xF1, 0x00, 0xC0, 0xF1, 0xC7, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xD8,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x1C, 0xE0, 0xF8, 0xF0, 0x78, 0xFC, 0xF1, 0xE1, 0xF1, 0x01, 0x78, 0x00, 0xE0,
-        0xF8, 0xF1, 0xF1, 0x00, 0xC0, 0xF1, 0xC7, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
-        0xD9, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3C, 0xF0, 0x78, 0xFC, 0x78, 0xFC, 0xF1, 0xF8, 0xF1, 0x03, 0x7E, 0xF8,
-        0xFF, 0xF8, 0xF1, 0xF1, 0xF0, 0xFF, 0xF1, 0xC7, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
-        0x00, 0xDA, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3C, 0xF0, 0x78, 0xFC, 0x78, 0xFC, 0xF1, 0xF8, 0xF1, 0xF9, 0x7F,
-        0xF8, 0xFF, 0xF8, 0xF1, 0xF1, 0xF0, 0xFF, 0xF1, 0xC7, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
-        0x00, 0x00, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7C, 0xF8, 0x78, 0x7C, 0x78, 0xFC, 0xF1, 0xF8, 0xF0, 0xF8,
-        0xFF, 0xF0, 0xF3, 0xF8, 0xF1, 0xF1, 0xE1, 0xE7, 0xF1, 0xC7, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0x00, 0x00, 0x00, 0xDC, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7C, 0xF8, 0x78, 0x38, 0x78, 0xFC, 0xF1, 0x70, 0xF0,
-        0xE0, 0xFF, 0xE0, 0xE1, 0xF8, 0xF1, 0xF1, 0xC1, 0xC3, 0xF1, 0xC7, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x00, 0x00, 0x00, 0x00, 0xDD, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7C, 0xFC, 0xF8, 0x00, 0x78, 0xFC, 0xF1, 0x01,
-        0xF0, 0x01, 0xF8, 0x01, 0xF0, 0xF8, 0xF1, 0xF1, 0x03, 0xE0, 0xF1, 0xC7, 0x07, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x00, 0x00, 0x00, 0x00, 0xDE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x81, 0x70, 0xFC, 0xF1,
-        0x03, 0xE1, 0x01, 0xE0, 0x07, 0xFC, 0xF8, 0xF1, 0xF1, 0x0F, 0xF8, 0xF1, 0xC7, 0x0F, 0xFE, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x7F, 0xF8, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x7F, 0xFC, 0xE3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xF8, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xE2, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xE3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xE4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xE5, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xE6, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xE7, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xE8, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xE9, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xEA,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
-        0xEB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
-        0x00, 0xEC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
-        0x00, 0x00, 0xED, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0x00, 0x00, 0x00, 0xEE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x00, 0x00, 0x00, 0x00, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xF2, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xF4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xF5, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xF6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xF9, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFA, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFB, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFC,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
-        0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
-        0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
-        0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
-        0x00, 0x00, 0x00, };
-
-/* End of File */
-
diff --git a/Resource/bitmap_shutdown_data.c b/Resource/bitmap_shutdown_data.c
deleted file mode 100644
index 9afe9c9..0000000
--- a/Resource/bitmap_shutdown_data.c
+++ /dev/null
@@ -1,572 +0,0 @@
-/*********************************************************************************************************************
- * DISCLAIMER
- * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No 
- * other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all 
- * applicable laws, including copyright laws. 
- * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
- * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, 
- * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM 
- * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES 
- * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
- * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
- * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of 
- * this software. By using this software, you agree to the additional terms and conditions found by accessing the 
- * following link:
- * http://www.renesas.com/disclaimer 
- *
- * Copyright (C) 2018-2020 Renesas Electronics Corporation. All rights reserved.
- **********************************************************************************************************************/
-/**********************************************************************************************************************
- * History : DD.MM.YYYY Version Description
- *         : 25.06.2020 1.10    First Release
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- * File Name    : bitmap_shutdown_data.c
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Includes   <System Includes> , "Project Includes"
- *********************************************************************************************************************/
-#include <stdint.h>
-#include <stdbool.h>
-
-/**********************************************************************************************************************
- Macro definitions
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Local Typedef definitions
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Exported global variables
- *********************************************************************************************************************/
-
-const uint8_t g_bitmap_shutdown_data[] __attribute__ ((section(".ramdata"))) =
-{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0xF8, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00,
-        0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0xFC, 0x83, 0x03, 0x00, 0x00, 0x00,
-        0x00, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x87, 0x87, 0x03, 0x00, 0x00,
-        0x80, 0x01, 0x82, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x03, 0x87, 0x03, 0x00,
-        0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x80, 0x03, 0x80, 0x03,
-        0x00, 0x00, 0xC0, 0x81, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x80, 0x03, 0x80,
-        0x03, 0x00, 0x00, 0xC0, 0x81, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x07,
-        0x80, 0xF3, 0xC0, 0x03, 0xE7, 0xCF, 0x1F, 0x87, 0xE3, 0x01, 0xFE, 0x03, 0x80, 0xE7, 0x00, 0x1F, 0x1C, 0x18,
-        0x18, 0xE7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
-        0x0F, 0x80, 0xFB, 0xC3, 0x03, 0xE7, 0xCF, 0x1F, 0x87, 0xFB, 0x03, 0xFF, 0x01, 0xE0, 0xFF, 0x80, 0x3F, 0x1C,
-        0x1C, 0x18, 0xF7, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
-        0x00, 0x3F, 0x80, 0x8F, 0xC3, 0x03, 0xC7, 0x81, 0x03, 0x87, 0x9F, 0x87, 0xE3, 0x01, 0xF0, 0xF8, 0xE0, 0xF9,
-        0x18, 0x3C, 0x18, 0x1F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12,
-        0x00, 0x00, 0xFC, 0x80, 0x0F, 0xC3, 0x03, 0xC7, 0x81, 0x03, 0x87, 0x0F, 0x87, 0xC1, 0x01, 0x70, 0xE0, 0xE0,
-        0xE0, 0x18, 0x3E, 0x1C, 0x1F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x13, 0x00, 0x00, 0xF0, 0x83, 0x03, 0xC7, 0x03, 0xC7, 0x81, 0x03, 0x87, 0x07, 0xC7, 0x81, 0x01, 0x38, 0xE0,
-        0x70, 0xC0, 0x39, 0x76, 0x0C, 0x07, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x14, 0x00, 0x00, 0xC0, 0x83, 0x03, 0xC7, 0x03, 0xC7, 0x81, 0x03, 0x87, 0x07, 0xC7, 0x81, 0x01, 0x38,
-        0xE0, 0x70, 0xC0, 0x39, 0x76, 0x0E, 0x07, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x87, 0x03, 0xC7, 0x03, 0xC7, 0x81, 0x03, 0x87, 0x07, 0x87, 0x81, 0x01,
-        0x38, 0xE0, 0x78, 0xC0, 0x71, 0x66, 0x06, 0x07, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x8F, 0x03, 0xC7, 0x03, 0xC7, 0x81, 0x03, 0x87, 0x07, 0x87, 0xC1,
-        0x01, 0x38, 0xE0, 0x78, 0xC0, 0x71, 0x67, 0x06, 0x07, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x8F, 0x03, 0xC7, 0x03, 0xC7, 0x81, 0x03, 0x87, 0x07, 0x07,
-        0x7F, 0x00, 0x38, 0xE0, 0x70, 0xC0, 0x61, 0xE3, 0x06, 0x07, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x8F, 0x03, 0xC7, 0x03, 0xC7, 0x81, 0x03, 0x87, 0x07,
-        0x87, 0x3D, 0x00, 0x38, 0xE0, 0x70, 0xC0, 0xE1, 0xE3, 0x07, 0x07, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x80, 0x03, 0x87, 0x03, 0x87, 0xC3, 0xC7, 0x81, 0x03, 0x87,
-        0x07, 0xC7, 0x01, 0x00, 0x70, 0xF0, 0xE0, 0xE0, 0xE0, 0xC1, 0x03, 0x07, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x00, 0x80, 0x0F, 0x83, 0x03, 0x87, 0xC7, 0xC7, 0x81, 0x03,
-        0x87, 0x07, 0x87, 0x07, 0x00, 0xF0, 0xF8, 0xE0, 0xF1, 0xE0, 0x81, 0x03, 0x07, 0xCF, 0xC3, 0xF1, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0xFE, 0x81, 0x03, 0x07, 0x7F, 0x87, 0x0F,
-        0x1F, 0x87, 0x07, 0x07, 0xFF, 0x01, 0xE0, 0xDF, 0x80, 0x3F, 0xC0, 0x81, 0x01, 0x07, 0xCF, 0xC3, 0xF1, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0xFC, 0x80, 0x03, 0x07, 0x3E, 0x87,
-        0x07, 0x1E, 0x87, 0x07, 0x87, 0xFF, 0x03, 0x80, 0xC7, 0x00, 0x1F, 0xC0, 0x81, 0x01, 0x07, 0xCF, 0xC3, 0xF1,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x01, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x01, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x81, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x2A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x35, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x4A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x4B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x4D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x59, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5A,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x5B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x5C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x5D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x5E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x5F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x1F, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x1F, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x1F,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
-        0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
-        0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x80, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x80,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x0F, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00,
-        0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x0F, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6A, 0x00, 0x00,
-        0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x3F,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6B, 0x00,
-        0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0,
-        0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6C,
-        0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0xF8, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x6D, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x7C, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x6E, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x3E, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x6F, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x3E, 0xE0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x1F, 0xF0, 0xE1, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xE0, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xE0, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0x3F, 0x00, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x80, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x77, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7A, 0x00, 0x00, 0x00, 0x80,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7B, 0x00, 0x00, 0x00,
-        0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0,
-        0x01, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00,
-        0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0xC0, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7D, 0x00,
-        0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0xC0, 0xFF, 0x07, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E,
-        0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0xC0, 0xFF, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x7F, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x01, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x21, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x70, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8A, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x00, 0x00, 0x00, 0x80, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8C, 0x00, 0x00, 0x00, 0x80,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8D, 0x00, 0x00, 0x00,
-        0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x00, 0x00,
-        0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8F, 0x00,
-        0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90,
-        0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x91, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x92, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9A, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9B, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9D, 0x00, 0x00, 0x00, 0x80, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9E, 0x00, 0x00, 0x00, 0x80,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x00, 0x00, 0x00,
-        0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00, 0x00,
-        0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA1, 0x00,
-        0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA2,
-        0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0xA3, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0xA4, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x07, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0xA5, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0x1F, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0xA6, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x3F, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0xA7, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x7F,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF,
-        0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA9, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xFF,
-        0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0xAA, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0,
-        0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0xAB, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0xE0, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0xAC, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0xAD, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0xAE, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0xAF, 0x00, 0x00, 0x00, 0x80, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0xB0, 0x00, 0x00, 0x00, 0x80,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0xB1, 0x00, 0x00, 0x00,
-        0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0xB2, 0x00, 0x00,
-        0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0xB3, 0x00,
-        0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0xB4,
-        0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00,
-        0xB5, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00,
-        0x00, 0xB6, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00,
-        0x00, 0x00, 0xB7, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0x07, 0x00,
-        0x00, 0x00, 0x00, 0xB8, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xE3, 0xFF, 0xFF, 0xFF, 0x03,
-        0x00, 0x00, 0x00, 0x00, 0xB9, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF,
-        0x03, 0x00, 0x00, 0x00, 0x00, 0xBA, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBC, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBD, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x7F, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBE, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x7F, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBF, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xC7, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x00, 0x00, 0x00, 0x80, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0xF8, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC2, 0x00, 0x00, 0x00, 0x80,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0xFE, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0x00, 0x00, 0x00,
-        0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0xC4, 0x00, 0x00,
-        0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x83, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0xC5, 0x00,
-        0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC1, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0xC6,
-        0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xC0, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00,
-        0xC7, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0xC0, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00,
-        0x00, 0xC8, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xC0, 0xFF, 0xFF, 0x0F, 0x00, 0x00,
-        0x00, 0x00, 0xC9, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00,
-        0x00, 0x00, 0x00, 0xCA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07,
-        0x00, 0x00, 0x00, 0x00, 0xCB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0,
-        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0x07, 0x00, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0xCE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
-        0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD3, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD4, 0x80, 0x03, 0xC0, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD5, 0x00, 0x03, 0xE0,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD6, 0x00, 0x07,
-        0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD7, 0x00,
-        0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8,
-        0x00, 0x0E, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0xD9, 0x00, 0x0E, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0xDA, 0x00, 0x0C, 0x38, 0xC0, 0x03, 0xCE, 0x07, 0x1C, 0xC0, 0x01, 0x1E, 0x18, 0x38, 0x38, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0xDB, 0x00, 0x1C, 0x38, 0xF0, 0x0F, 0xCE, 0x07, 0x1C, 0xC0, 0x81, 0x7F, 0x18, 0x38, 0x38, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0xDC, 0x00, 0x1C, 0x1C, 0x3C, 0x1E, 0xFE, 0x0E, 0x0C, 0xC0, 0xE1, 0xF1, 0x39, 0x78, 0x18,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0xDD, 0x00, 0x38, 0x1C, 0x1C, 0x1C, 0x3E, 0x0C, 0x0E, 0xC0, 0xE1, 0xE1, 0x39, 0x7C,
-        0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0xDE, 0x00, 0x38, 0x0C, 0x0C, 0x38, 0x1E, 0x0C, 0x0E, 0xC0, 0x61, 0x80, 0x71,
-        0x6C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x30, 0x0C, 0x0C, 0x38, 0x0E, 0x1C, 0x07, 0xC0, 0x61, 0x80,
-        0x71, 0x6E, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x70, 0x0E, 0xFE, 0x3F, 0x0E, 0x38, 0x03, 0xC0, 0x71,
-        0x80, 0x63, 0xE6, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE1, 0x00, 0x70, 0x06, 0xFE, 0x3F, 0x0E, 0x38, 0x03, 0xC0,
-        0x71, 0x80, 0x63, 0xE6, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x00, 0xE0, 0x07, 0x0C, 0x00, 0x0E, 0xB0, 0x03,
-        0xC0, 0x61, 0x80, 0x61, 0xC6, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE3, 0x00, 0xE0, 0x03, 0x0C, 0x00, 0x0E, 0xB0,
-        0x03, 0xC0, 0x61, 0x80, 0xE1, 0xC7, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x00, 0xC0, 0x03, 0x1C, 0x30, 0x0E,
-        0xF0, 0x01, 0xC0, 0xE1, 0xE1, 0xC1, 0x83, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE5, 0x00, 0xC0, 0x03, 0x7C, 0x3C,
-        0x0E, 0xE0, 0x00, 0xC0, 0xE1, 0xE1, 0xC1, 0x83, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE6, 0x00, 0xC0, 0x01, 0xF0,
-        0x0F, 0x0E, 0xC0, 0x00, 0xC0, 0x81, 0x7F, 0x80, 0x81, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE7, 0x00, 0xC0, 0x01,
-        0xC0, 0x07, 0x0E, 0xE0, 0x00, 0xC0, 0x01, 0x1E, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE9, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEA,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0xEB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0xEC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0xED, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0xEF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF7, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF9, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFA, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFB, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0xFD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, };
-
-/* End of File */
-
diff --git a/Resource/resource.h b/Resource/resource.h
deleted file mode 100644
index 002840c..0000000
--- a/Resource/resource.h
+++ /dev/null
@@ -1,76 +0,0 @@
-/***********************************************************************************************************************
- * DISCLAIMER
- * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
- * other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
- * applicable laws, including copyright laws.
- * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
- * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
- * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
- * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
- * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
- * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
- * this software. By using this software, you agree to the additional terms and conditions found by accessing the
- * following link:
- * http://www.renesas.com/disclaimer
- *
- * Copyright (C) 2018-2020 Renesas Electronics Corporation. All rights reserved.
- **********************************************************************************************************************/
-/**********************************************************************************************************************
- * History : DD.MM.YYYY Version Description
- *         : 25.06.2020 1.10    First Release
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- * File Name    : resource.h
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Includes   <System Includes> , "Project Includes"
- *********************************************************************************************************************/
-#include <stdint.h>
-#include <stdbool.h>
-
-#ifndef RESOURCE_PRV_H_
-    #define RESOURCE_PRV_H_
-
-/**********************************************************************************************************************
- Macro definitions
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Typedef definitions
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Exported global variables
- *********************************************************************************************************************/
-
-/* wakeup */
-extern uint8_t g_bitmap_wakeup_data[];
-
-/* opening */
-extern uint8_t g_bitmap_opening_data[];
-
-/* charge */
-extern uint8_t g_bitmap_charge_data[];
-
-/* shutdown */
-extern uint8_t g_bitmap_shutdown_data[];
-
-/* lowpower mode */
-extern uint8_t g_bitmap_walk1_data[];
-extern uint8_t g_bitmap_walk2_data[];
-
-/* hispeed mode */
-extern uint8_t g_bitmap_jogging1_data[];
-extern uint8_t g_bitmap_jogging2_data[];
-
-/* fullspeed mode */
-extern uint8_t g_bitmap_run1_data[];
-extern uint8_t g_bitmap_run2_data[];
-extern uint8_t g_bitmap_run3_data[];
-
-/**********************************************************************************************************************
- Exported global functions (to be accessed by other files)
- *********************************************************************************************************************/
-
-#endif /* RESOURCE_PRV_H_ */
-/* End of file (resource.h) */
-
diff --git a/Resource/sensor_data_screen.h b/Resource/sensor_data_screen.h
deleted file mode 100644
index 25fbdab..0000000
--- a/Resource/sensor_data_screen.h
+++ /dev/null
@@ -1,412 +0,0 @@
-/***********************************************************************************************************************
- * DISCLAIMER
- * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
- * other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
- * applicable laws, including copyright laws.
- * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
- * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
- * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
- * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
- * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
- * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
- * this software. By using this software, you agree to the additional terms and conditions found by accessing the
- * following link:
- * http://www.renesas.com/disclaimer
- *
- * Copyright (C) 2020 Renesas Electronics Corporation. All rights reserved.
- **********************************************************************************************************************/
-/**********************************************************************************************************************
- * File Name    : image.h
- * Description  : Image data
-**********************************************************************************************************************/
-
-#ifndef _IMAGE_H
-#define _IMAGE_H
-
-/**********************************************************************************************************************
- Includes   <System Includes> , "Project Includes"
- *********************************************************************************************************************/
-
-/**********************************************************************************************************************
- Macro definitions
- *********************************************************************************************************************/
-
-/**********************************************************************************************************************
- Typedef definitions
- *********************************************************************************************************************/
-
-/**********************************************************************************************************************
- Exported global variables
- *********************************************************************************************************************/
-
- /*image data for numbers with the order:*/
- /*0 1 2 3 4 5 6 7 8 9 */
-  /*each number takes 2 bytes (2 columns)*/
-unsigned char numbersimg[] __attribute__ ((aligned (16))) =
-{
- /*
-    0xF0,   0x03,   0x80,   0x07,   0xE0,   0x07,   0xF0,   0x03,   0x80,   0x0F,   0xFF,   0x1F,   0xF0,   0x03,   0xFC,   0x1F,   0xF0,   0x03,   0xF0,   0x01,
-    0xFC,   0x07,   0xC0,   0x07,   0xF8,   0x0F,   0xFC,   0x0F,   0x80,   0x0F,   0xFF,   0x1F,   0xF8,   0x0F,   0xFC,   0x1F,   0xF8,   0x0F,   0xFC,   0x07,
-    0xFE,   0x0F,   0xF0,   0x07,   0xFC,   0x1F,   0xFC,   0x1F,   0x80,   0x0F,   0xFF,   0x1F,   0xFC,   0x1F,   0xFC,   0x1F,   0xFC,   0x1F,   0xFE,   0x0F,
-    0x1E,   0x1E,   0xFC,   0x07,   0x3C,   0x3C,   0x1E,   0x3C,   0xC0,   0x0F,   0xFF,   0x1F,   0x1E,   0x1E,   0x00,   0x1E,   0x1E,   0x1E,   0x1E,   0x0F,
-    0x0F,   0x1E,   0xFC,   0x07,   0x1E,   0x3C,   0x1E,   0x3C,   0xC0,   0x0F,   0x0F,   0x00,   0x0E,   0x3C,   0x00,   0x1E,   0x1E,   0x3C,   0x0F,   0x1E,
-    0x0F,   0x1C,   0x9C,   0x07,   0x1E,   0x38,   0x0F,   0x3C,   0xE0,   0x0E,   0x0F,   0x00,   0x0F,   0x3C,   0x00,   0x1E,   0x1E,   0x3C,   0x0F,   0x1C,
-    0x07,   0x3C,   0x80,   0x07,   0x1E,   0x38,   0x0F,   0x38,   0xE0,   0x0E,   0x0F,   0x00,   0x0F,   0x3C,   0x00,   0x0E,   0x0E,   0x3C,   0x07,   0x1C,
-    0x07,   0x3C,   0x80,   0x07,   0x1E,   0x38,   0x0F,   0x38,   0xE0,   0x0E,   0x0F,   0x00,   0x0F,   0x00,   0x00,   0x0E,   0x0E,   0x3C,   0x07,   0x1C,
-    0x07,   0x3C,   0x80,   0x07,   0x1E,   0x38,   0x00,   0x3C,   0x70,   0x0E,   0x0F,   0x00,   0x0F,   0x00,   0x00,   0x0F,   0x1E,   0x3C,   0x07,   0x3C,
-    0x07,   0x3C,   0x80,   0x07,   0x00,   0x3C,   0x00,   0x3C,   0x70,   0x0E,   0x07,   0x00,   0x0F,   0x00,   0x00,   0x0F,   0x1E,   0x3C,   0x07,   0x3C,
-    0x07,   0x3C,   0x80,   0x07,   0x00,   0x3C,   0x00,   0x3E,   0x78,   0x0E,   0xE7,   0x03,   0x0F,   0x00,   0x00,   0x0F,   0x3C,   0x1E,   0x07,   0x3C,
-    0x07,   0x3C,   0x80,   0x07,   0x00,   0x3C,   0xC0,   0x1F,   0x38,   0x0E,   0xF7,   0x0F,   0xCF,   0x03,   0x00,   0x07,   0xFC,   0x0F,   0x0F,   0x3C,
-    0x07,   0x3C,   0x80,   0x07,   0x00,   0x1E,   0xC0,   0x0F,   0x3C,   0x0E,   0xFF,   0x0F,   0xFF,   0x0F,   0x00,   0x07,   0xF8,   0x07,   0x0F,   0x3C,
-    0x07,   0x3C,   0x80,   0x07,   0x00,   0x1E,   0xC0,   0x07,   0x3C,   0x0E,   0x1F,   0x1E,   0xFF,   0x1F,   0x80,   0x07,   0xF8,   0x0F,   0x0F,   0x3E,
-    0x07,   0x3C,   0x80,   0x07,   0x00,   0x0F,   0xC0,   0x1F,   0x1C,   0x0E,   0x0F,   0x1E,   0x1F,   0x1E,   0x80,   0x07,   0xFC,   0x1F,   0xFE,   0x3F,
-    0x07,   0x3C,   0x80,   0x07,   0x80,   0x0F,   0x00,   0x1E,   0x1E,   0x0E,   0x00,   0x1C,   0x0F,   0x1E,   0x80,   0x07,   0x3E,   0x1E,   0xFE,   0x3D,
-    0x07,   0x3C,   0x80,   0x07,   0x80,   0x07,   0x00,   0x3C,   0x1E,   0x0E,   0x00,   0x1C,   0x0F,   0x3C,   0x80,   0x03,   0x1E,   0x3C,   0xF8,   0x3C,
-    0x07,   0x3C,   0x80,   0x07,   0xC0,   0x03,   0x00,   0x3C,   0x0F,   0x0E,   0x00,   0x3C,   0x0F,   0x3C,   0x80,   0x03,   0x0E,   0x3C,   0x00,   0x3C,
-    0x07,   0x3C,   0x80,   0x07,   0xE0,   0x03,   0x00,   0x3C,   0xFF,   0x3F,   0x00,   0x3C,   0x0F,   0x3C,   0xC0,   0x03,   0x0F,   0x38,   0x00,   0x3C,
-    0x07,   0x3C,   0x80,   0x07,   0xE0,   0x01,   0x00,   0x38,   0xFF,   0x3F,   0x00,   0x3C,   0x0F,   0x3C,   0xC0,   0x03,   0x0F,   0x38,   0x00,   0x3C,
-    0x07,   0x3C,   0x80,   0x07,   0xF0,   0x00,   0x00,   0x38,   0xFF,   0x3F,   0x00,   0x1C,   0x0F,   0x3C,   0xC0,   0x03,   0x0F,   0x38,   0x00,   0x1C,
-    0x07,   0x3C,   0x80,   0x07,   0xF0,   0x00,   0x0F,   0x38,   0xFF,   0x3F,   0x07,   0x1C,   0x0F,   0x3C,   0xC0,   0x01,   0x0F,   0x38,   0x00,   0x1C,
-    0x07,   0x3C,   0x80,   0x07,   0x78,   0x00,   0x0F,   0x3C,   0x00,   0x0E,   0x07,   0x1C,   0x0F,   0x3C,   0xC0,   0x01,   0x0E,   0x38,   0x07,   0x1C,
-    0x0F,   0x1C,   0x80,   0x07,   0x7C,   0x00,   0x0E,   0x3C,   0x00,   0x0E,   0x0F,   0x1C,   0x0F,   0x1C,   0xE0,   0x01,   0x0E,   0x3C,   0x0F,   0x1E,
-    0x0F,   0x1E,   0x80,   0x07,   0x3C,   0x00,   0x1E,   0x3C,   0x00,   0x0E,   0x0F,   0x1E,   0x0E,   0x1E,   0xE0,   0x01,   0x1E,   0x3C,   0x0F,   0x1E,
-    0x1E,   0x1F,   0x80,   0x07,   0x1E,   0x00,   0x1E,   0x1E,   0x00,   0x0E,   0x1F,   0x0E,   0x1E,   0x1E,   0xE0,   0x01,   0x1E,   0x1E,   0x0F,   0x0F,
-    0xFE,   0x0F,   0x80,   0x07,   0xFF,   0x3F,   0xFC,   0x1F,   0x00,   0x0E,   0xFE,   0x0F,   0xFC,   0x0F,   0xE0,   0x01,   0xFC,   0x1F,   0xFE,   0x0F,
-    0xFC,   0x07,   0x80,   0x07,   0xFF,   0x3F,   0xF8,   0x0F,   0x00,   0x0E,   0xFC,   0x07,   0xF8,   0x07,   0xE0,   0x00,   0xF8,   0x0F,   0xFC,   0x07,
-    0xF0,   0x01,   0x80,   0x07,   0xFF,   0x3F,   0xF0,   0x03,   0x00,   0x0E,   0xF8,   0x01,   0xF0,   0x03,   0xF0,   0x00,   0xF0,   0x03,   0xF0,   0x01,
-*/
-    0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,
-    0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,
-    0xE0,   0x07,   0x00,   0x03,   0xE0,   0x0F,   0xE0,   0x0F,   0x00,   0x1E,   0xF8,   0x7F,   0x80,   0x1F,   0xF8,   0x7F,   0xC0,   0x1F,   0xC0,   0x1F,   0x00,   0x00,
-    0xF8,   0x0F,   0x80,   0x03,   0xF0,   0x1F,   0xF0,   0x1F,   0x00,   0x1E,   0xF8,   0x7F,   0xC0,   0x3F,   0xF8,   0x7F,   0xE0,   0x3F,   0xE0,   0x3F,   0x00,   0x00,
-    0x78,   0x1E,   0xF0,   0x03,   0x78,   0x3E,   0x78,   0x3C,   0x00,   0x1F,   0x38,   0x00,   0xE0,   0x79,   0x00,   0x70,   0xF0,   0x78,   0xF0,   0x78,   0x00,   0x00,
-    0x3C,   0x3C,   0xF8,   0x03,   0x38,   0x38,   0x3C,   0x38,   0x00,   0x1F,   0x38,   0x00,   0xF0,   0x70,   0x00,   0x70,   0x78,   0x70,   0x70,   0x70,   0x00,   0x00,
-    0x1C,   0x3C,   0xE0,   0x03,   0x3C,   0x38,   0x3C,   0x38,   0x80,   0x1F,   0x38,   0x00,   0x70,   0x70,   0x00,   0x78,   0x78,   0x70,   0x78,   0xF0,   0x00,   0x00,
-    0x1E,   0x38,   0xC0,   0x03,   0x3C,   0x38,   0x1C,   0x38,   0xC0,   0x1F,   0x38,   0x00,   0x70,   0x00,   0x00,   0x38,   0x78,   0xF0,   0x78,   0xF0,   0x00,   0x00,
-    0x1E,   0x78,   0xC0,   0x03,   0x1C,   0x38,   0x00,   0x38,   0xC0,   0x1D,   0x38,   0x00,   0x78,   0x00,   0x00,   0x38,   0x78,   0x70,   0x78,   0xF0,   0x00,   0x00,
-    0x0E,   0x78,   0xC0,   0x03,   0x00,   0x3C,   0x00,   0x3C,   0xE0,   0x1C,   0xF8,   0x0F,   0x78,   0x0F,   0x00,   0x38,   0x70,   0x70,   0x78,   0xF0,   0x00,   0x00,
-    0x0E,   0x78,   0xC0,   0x03,   0x00,   0x3C,   0x00,   0x1E,   0xE0,   0x1C,   0xF8,   0x3F,   0xF8,   0x3F,   0x00,   0x1C,   0xF0,   0x3C,   0x78,   0xF0,   0x00,   0x00,
-    0x0E,   0x78,   0xC0,   0x03,   0x00,   0x1E,   0x80,   0x0F,   0x70,   0x1C,   0xF8,   0x3C,   0xF8,   0x7F,   0x00,   0x1C,   0xE0,   0x1F,   0x70,   0xF0,   0x00,   0x00,
-    0x0E,   0x78,   0xC0,   0x03,   0x00,   0x0F,   0x80,   0x1F,   0x38,   0x1C,   0x38,   0x78,   0xF8,   0x70,   0x00,   0x1E,   0xE0,   0x3F,   0xF0,   0xF8,   0x00,   0x00,
-    0x0E,   0x78,   0xC0,   0x03,   0x80,   0x07,   0x00,   0x3C,   0x38,   0x1C,   0x00,   0x70,   0x78,   0xF0,   0x00,   0x1E,   0xF0,   0x78,   0xF0,   0xFF,   0x00,   0x00,
-    0x0E,   0x78,   0xC0,   0x03,   0xC0,   0x03,   0x00,   0x38,   0x3C,   0x1C,   0x00,   0x70,   0x78,   0xF0,   0x00,   0x0E,   0x78,   0xF0,   0xE0,   0xFF,   0x00,   0x00,
-    0x0E,   0x78,   0xC0,   0x03,   0xE0,   0x01,   0x00,   0x78,   0xFC,   0x7F,   0x00,   0x70,   0x78,   0xF0,   0x00,   0x0E,   0x38,   0xF0,   0x80,   0xF7,   0x00,   0x00,
-    0x1E,   0x38,   0xC0,   0x03,   0xE0,   0x00,   0x1C,   0x78,   0xFE,   0x7F,   0x00,   0x70,   0x78,   0xF0,   0x00,   0x0F,   0x38,   0xE0,   0x00,   0xF0,   0x00,   0x00,
-    0x1E,   0x38,   0xC0,   0x03,   0xF0,   0x00,   0x1C,   0x78,   0xFC,   0x7F,   0x3C,   0x78,   0x78,   0xF0,   0x00,   0x07,   0x38,   0xE0,   0x00,   0x70,   0x00,   0x00,
-    0x3C,   0x3C,   0xC0,   0x03,   0x78,   0x00,   0x1C,   0x78,   0x00,   0x1C,   0x3C,   0x78,   0x70,   0x70,   0x00,   0x07,   0x78,   0xF0,   0x70,   0x78,   0x00,   0x00,
-    0x3C,   0x1E,   0xC0,   0x03,   0x3C,   0x00,   0x3C,   0x3C,   0x00,   0x1C,   0x78,   0x3C,   0xF0,   0x78,   0x80,   0x07,   0x78,   0x78,   0xF0,   0x3C,   0xC0,   0x00,
-    0xF8,   0x0F,   0xC0,   0x03,   0xFC,   0x7F,   0xF8,   0x1F,   0x00,   0x1C,   0xF8,   0x1F,   0xE0,   0x3F,   0x80,   0x03,   0xF0,   0x7F,   0xE0,   0x3F,   0xE0,   0x01,
-    0xF0,   0x07,   0xC0,   0x03,   0xFC,   0x7F,   0xF0,   0x0F,   0x00,   0x1C,   0xF0,   0x0F,   0xC0,   0x1F,   0x80,   0x03,   0xE0,   0x3F,   0xE0,   0x1F,   0xE0,   0x01,
-    0xC0,   0x01,   0x80,   0x01,   0xFC,   0x3F,   0xC0,   0x03,   0x00,   0x1C,   0x80,   0x03,   0x00,   0x07,   0x80,   0x01,   0x80,   0x07,   0x80,   0x03,   0xC0,   0x00,
-    0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,   0x00,
-};
-
-/*image data of background image (whole image)*/
-unsigned char bgimg[] __attribute__ ((aligned (16))) =
-{
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x01,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x02,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x03,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFC,	0xFF,	0xFF,	0xFF,
-     0xFF,	0xFF,	0x7F,	0xE0,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x04,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0xF0,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0x1F,	0x3C,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x05,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xF0,	0x07,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x06,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xC0,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0x83,	0x3F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x07,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF0,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0x07,	0xFE,	0x01,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x08,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFC,	0x0F,	0xE0,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0x1F,	0xFC,	0x07,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x09,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFF,	0xFF,	0xE3,	0x40,	0xBE,	0x07,	0x07,	0x3E,
-     0x1F,	0xF8,	0x3F,	0xF0,	0x1F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x0A,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x80,	0xFF,	0xFF,	0x23,
-     0x7E,	0xB8,	0xF9,	0xF1,	0x0F,	0xC7,	0xFF,	0x7F,	0xE0,	0x7F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x0B,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0xC0,	0xFF,	0xFF,	0x31,	0x7F,	0xB1,	0xF9,	0xF1,	0x4F,	0xC6,	0xFF,	0xFF,	0xC0,	0xFF,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x0C,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xE0,	0xFF,	0xFF,	0x38,	0x60,	0xB3,	0x01,	0x83,	0x67,	0x0C,	0xFE,	0xFF,	0x81,	0xFF,	0x03,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x0D,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF0,	0xFF,	0x8F,	0x39,	0x7F,	0xA7,	0xF9,	0x1F,	0xE6,	0x7C,	0xF8,	0xFF,	0x81,	0xFF,	0x07,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x0E,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF0,	0xFF,	0x8F,	0x33,	0x7E,	0x87,	0xF9,	0x7F,	0xF2,	0xF8,	0xF9,	0xFF,	0x03,	0xFF,	0x0F,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x0F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF8,	0xFF,	0x8F,	0x67,	0x40,	0x8F,	0x03,	0x01,	0x31,	0x00,	0xFC,
-     0xFF,	0x07,	0xFE,	0x1F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x10,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFC,	0xFF,	0xFF,	0xDF,	0xFF,	0xFF,
-     0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0x07,	0xFE,	0x1F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x11,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFC,
-     0xFF,	0xFF,	0x7F,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0x07,	0xFC,	0x3F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x12,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0xFE,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0x0F,	0xFC,	0x7F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x13,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFE,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0x0F,	0xF8,	0x7F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x14,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFE,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0x0F,	0xF8,	0xFF,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x15,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFE,	0xFF,	0x7F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x16,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFF,	0xFF,	0x03,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x17,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFF,	0x7F,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x18,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0xFF,	0x3F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x19,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFF,	0x07,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x1A,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFF,	0x03,	0xF0,	0xFF,	0xFF,	0x07,	0xFC,	0xFF,	0x3F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x1B,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFF,	0x01,	0xF0,	0xFF,	0xFF,	0x0F,	0xFF,	0xFF,	0x1F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x1C,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFF,	0x00,	0xF0,	0x03,	0xC0,	0x0F,	0x7F,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x1D,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x7E,	0x00,	0xF0,	0x03,	0xC0,
-     0x8F,	0x3F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x1E,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x7E,	0x00,	0xF0,	0x03,	0xC0,	0x8F,	0x3F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x1F,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x7E,	0x00,	0xF0,	0x03,	0xC0,	0x8F,	0xFF,	0xFF,	0x1F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x20,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x7C,	0x00,	0xF0,	0x03,	0xE0,	0x8F,	0xFF,	0xFF,	0x0F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x21,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x7C,	0x00,	0xF0,	0xFF,	0xFF,	0x8F,	0x3F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x22,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x78,	0x00,	0xF0,	0xFF,	0xFF,	0x81,	0x3F,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x23,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x78,	0x00,	0xF0,	0x03,	0xF8,	0x83,	0x3F,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x24,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x70,	0x00,
-     0xF0,	0x03,	0xF0,	0x07,	0xFF,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x25,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0xE0,	0x00,	0xF0,	0x03,	0xE0,	0x0F,	0xFE,	0xFF,	0x7F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x26,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xC0,	0x00,	0xF0,	0x03,	0x80,	0x3F,	0xC0,	0xFF,	0x3F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x27,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x80,	0x01,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x28,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x03,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x29,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x06,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x2A,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x0C,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x2B,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x10,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x2C,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x40,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x2D,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x2E,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,
-     0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0x00,	0x00,	0x00,	0x00,	0x2F,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,
-     0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0x00,	0x00,	0x00,	0x00,	0x30,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x31,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x32,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x33,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x34,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x35,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x36,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x37,	0x00,	0x40,	0x00,	0x01,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x04,	0x10,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x38,	0x00,	0x80,	0x80,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x08,	0x08,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x39,	0x00,	0x80,
-     0x80,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x08,	0x08,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x3A,	0x00,	0x80,	0x80,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x08,	0x08,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x3B,	0x00,	0x00,	0x41,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x10,	0x04,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x3C,	0x00,	0x00,	0x41,	0x10,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x10,	0x04,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x3D,	0x00,	0x00,	0x22,	0x11,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x20,	0x02,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x3E,	0x00,	0x00,	0x22,	0x11,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x20,	0x02,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x3F,	0x00,	0x00,	0xA2,	0xF7,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x20,	0x02,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x40,	0x00,	0x00,	0x14,	0x91,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x40,	0x01,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x41,	0x00,	0x00,	0x14,	0x91,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x40,	0x01,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x42,	0x00,	0x00,	0x08,	0x91,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x80,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x43,	0x00,	0x00,	0x08,	0x97,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x80,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x44,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x45,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x46,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x47,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x48,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x49,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x4A,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x4B,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x4C,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x4D,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x4E,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x4F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x50,	0xF8,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,
-     0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0x0F,	0x00,	0x00,	0x00,	0x00,	0x51,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x52,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x53,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x54,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x55,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x56,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x57,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x58,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x59,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x5A,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x5B,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x5C,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x5D,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x5E,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x5F,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x60,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x61,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x62,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x63,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x64,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x65,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x66,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x67,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x68,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x69,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x6A,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x6B,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x6C,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x6D,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x6E,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x6F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x70,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x71,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x72,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x73,
-     0xF8,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0x0F,
-     0x00,	0x00,	0x00,	0x00,	0x74,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x75,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x76,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x77,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x83,	0x07,	0x01,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x78,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x80,	0x64,	0x08,	0x01,	0x10,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x07,	0x08,	0x00,	0x00,	0x00,	0x00,	0x79,	0x00,	0x78,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x80,	0x24,	0x10,	0x01,	0x38,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x80,	0x08,	0x04,	0x00,	0x00,
-     0x00,	0x00,	0x7A,	0x00,	0xC6,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x13,	0x10,	0x01,	0x7C,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x80,	0x08,	0x02,	0x00,	0x00,	0x00,	0x00,	0x7B,	0x00,	0x82,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x10,	0x00,	0x01,	0x7C,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x80,	0x08,	0x01,	0x00,	0x00,	0x00,	0x00,	0x7C,	0x00,	0x82,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x10,	0x00,	0x01,	0xFE,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x80,	0x88,	0x00,	0x00,	0x00,	0x00,	0x00,	0x7D,	0x00,	0x82,	0x3C,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x10,	0x00,	0x01,	0xFF,	0x01,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x80,	0x48,	0x00,	0x00,	0x00,	0x00,	0x00,	0x7E,	0x00,	0x82,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x10,	0x00,	0x81,	0xFF,	0x03,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x27,	0x07,	0x00,	0x00,	0x00,	0x00,	0x7F,	0x00,	0x9A,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x10,	0x00,	0x81,	0xFF,	0x03,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x90,	0x08,	0x00,	0x00,	0x00,	0x00,
-     0x80,	0x00,	0xBA,	0x38,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x10,	0x10,	0xC1,	0xFF,	0x07,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x88,
-     0x08,	0x00,	0x00,	0x00,	0x00,	0x81,	0x00,	0xBA,	0x08,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x20,	0x10,	0xE1,	0xFF,	0x0F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x84,	0x08,	0x00,	0x00,	0x00,	0x00,	0x82,	0x00,	0xBA,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x60,	0x08,	0xE1,	0xF9,	0x0F,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x82,	0x08,	0x00,	0x00,	0x00,	0x00,	0x83,	0x00,	0xBA,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x80,	0x07,
-     0xF1,	0xF6,	0x1F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x81,	0x08,	0x00,	0x00,	0x00,	0x00,	0x84,	0x00,	0xBA,	0x38,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0xF1,	0xF6,	0x1E,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x80,	0x00,	0x07,	0x00,	0x00,	0x00,	0x00,	0x85,	0x00,	0xBA,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF9,	0x76,	0x3E,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x86,	0x00,
-     0xBA,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF9,	0x39,	0x3F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x87,	0x00,	0xBA,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF9,	0x9F,	0x3F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x88,	0x00,	0xBA,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF9,	0xCF,	0x3F,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x89,	0x00,	0xBA,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF9,	0xE7,
-     0x3F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x8A,	0x00,	0xBA,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0xF9,	0x33,	0x3F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x8B,	0x00,	0x39,	0x01,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF9,	0xD9,	0x3E,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x8C,	0x80,	0x7C,	0x02,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF9,	0xDC,	0x3E,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x8D,	0x80,	0xFE,	0x02,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF1,	0xDE,	0x1E,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x8E,	0x80,	0xFE,	0x02,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF1,	0x3F,	0x1F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x8F,	0x80,	0xFE,	0x02,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xE1,	0xFF,	0x0F,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x90,	0x80,	0xFE,	0x02,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0xC1,	0xFF,	0x07,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x91,	0x80,	0x7C,	0x02,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x81,	0xFF,	0x03,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x92,	0x80,	0x39,	0x03,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x01,	0xFE,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x93,
-     0x00,	0x83,	0x01,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x01,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x94,	0x00,	0x7C,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x01,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x95,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x96,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x97,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x98,	0xF8,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,
-     0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0x0F,	0x00,	0x00,	0x00,	0x00,	0x99,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x9A,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x9B,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x9C,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x9D,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x9E,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x9F,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0xA0,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0xA1,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xA2,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xA3,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xA4,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xA5,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xA6,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0xA7,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xA8,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xA9,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xAA,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xAB,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xAC,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0xAD,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xAE,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xAF,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xB0,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xB1,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xB2,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xB3,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0xB4,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xB5,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xB6,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xB7,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xB8,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xB9,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0xBA,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xBB,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xBC,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xBD,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xBE,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xBF,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0xC0,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0xC1,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xC2,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xC3,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xC4,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xC5,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xC6,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0xC7,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xC8,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xC9,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xCA,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xCB,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xCC,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0xCD,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xCE,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xCF,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xD0,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xD1,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xD2,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xD3,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0xD4,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xD5,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xD6,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xD7,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xD8,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xD9,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0xDA,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xDB,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xDC,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xDD,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xDE,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xDF,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0xE0,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0xE1,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xE2,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xE3,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xE4,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xE5,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xE6,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0xE7,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xE8,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xE9,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xEA,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xEB,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xEC,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0xED,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xEE,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xEF,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF0,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF1,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF2,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF3,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0xF4,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF5,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF6,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF7,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF8,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xF9,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0xFA,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFB,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFC,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFD,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFE,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFF,	0x00,	0x00,	0x00,	0x00,
-     0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
-};
-
-/**********************************************************************************************************************
- Exported global functions (to be accessed by other files)
- *********************************************************************************************************************/
-
-#endif /* _IMAGE_H */
-
-/* End of file (image.h) */
diff --git a/agt0_timer.c b/agt0_timer.c
deleted file mode 100644
index ee78dcb..0000000
--- a/agt0_timer.c
+++ /dev/null
@@ -1,156 +0,0 @@
-/**********************************************************************************************************************
-* DISCLAIMER
-* This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
-* other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
-* applicable laws, including copyright laws.
-* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
-* THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MECHANTABILITY,
-* FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
-* EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
-* SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
-* SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
-* Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
-* this software. By using this software, you agree to the additional terms and conditions found by accessing the
-* following link:
-* http://www.renesas.com/disclaimer
-*
-* Copyright (C) 2018-2020 Renesas Electronics Corporation. All rights reserved.
-**********************************************************************************************************************/
-/**********************************************************************************************************************
-* File Name    : agt0_timer.c
-* Description  : Timer driver that uses AGT0 module on Renesas RE01 MCUs
-**********************************************************************************************************************/
-
-#include <stdint.h>
-#include "RE01_256KB.h"
-#include "r_system_cfg.h"
-#include "r_system_api.h"
-#include "r_lpm_api.h"
-#include "agt0_timer.h"
-#include "utilities.h"
-
-static bool     timer_flag_expired = false;
-
-static uint16_t timer_count = 0;
-
-
-static void agt0_timer_isr(void);
-
-/**************************************************************************//**
-* @brief       
-*
-* @retval       
-******************************************************************************/
-void agt0_timer_init(void)
-{
-    volatile uint8_t tmp;
-
-    /* Release AGT0 module stop condition  */
-    R_LPM_ModuleStart(LPM_MSTP_AGT0);
-
-    /* AGT0 Setting */
-    /* Stop AGT0 count */
-    AGT0->AGTCR_b.TSTOP     = 1;
-    while (AGT0->AGTCR_b.TCSTF == 1) { ; }		// wait till it stopped counting
-
-    AGT0->AGTMR1_b.TMOD     = 0x00;             /* Operation mode   : Timer mod */
-    AGT0->AGTMR1_b.TEDGPL   = 0;                /* Edge polarity    : Single-edge */
-    AGT0->AGTMR1_b.TCK      = 0x06;             /* Count source     : AGTSCLK */
-    AGT0->AGTMR2_b.CKS      = 0x05;             /* AGTSCLK division ratio   : 1/32 => 1.024kHz */
-
-    AGT0->AGT = 1; /* 1ms timer */
-
-    /* Connect AGT0_AGTI interrupt signal to NVIC a channel */
-    R_SYS_IrqEventLinkSet(SYSTEM_CFG_EVENT_NUMBER_AGT0_AGTI, 0x13, agt0_timer_isr);
-
-    /* IRQ Priority setting */
-    R_NVIC_SetPriority(SYSTEM_CFG_EVENT_NUMBER_AGT0_AGTI, 1);
-
-    /* Clear AGT0_AGTI IR flag in ICU */
-    R_SYS_IrqStatusClear(SYSTEM_CFG_EVENT_NUMBER_AGT0_AGTI);
-    
-    /* Setup NVIC for AGT0_AGTI interrupt */
-    R_NVIC_EnableIRQ(SYSTEM_CFG_EVENT_NUMBER_AGT0_AGTI);
-
-    return;
-} /* End of function agt0_timer_init */
-
-/***********************************************************************************************************************
-* Function Name: agt0_timer_start
-* Description  : Start AGT0 counting.
-* Arguments    : none
-* Return Value : none
-***********************************************************************************************************************/
-__attribute__ ((section(".ramfunc")))  void agt0_timer_start(uint16_t ms)
-{
-
-    timer_flag_expired = false;
-
-    timer_count = ms;
-
-    /* Start AGT0 count */
-    AGT0->AGTCR_b.TSTART    = 1;
-    
-    /* Wait until the count starts */
-    while(0 == AGT0->AGTCR_b.TCSTF);
-
-    return;
-} /* End of function agt0_timer_start */
-
-/***********************************************************************************************************************
-* Function Name: agt1_stop
-* Description  : Stop AGT0 counting.
-* Arguments    : none
-* Return Value : none
-***********************************************************************************************************************/
-__attribute__ ((section(".ramfunc")))  void agt0_timer_stop(void)
-{
-    
-    CRITICAL_SECTION_BEGIN( );
-    /* Stop AGT0 count */
-    AGT0->AGTCR_b.TSTART     = 0;
-
-    /* Wait until the count stops */
-    while(1 == AGT0->AGTCR_b.TCSTF);
-
-    /* Underflow flag clear */
-    AGT0->AGTCR_b.TUNDF = 0;
-
-    CRITICAL_SECTION_END( );
-
-    timer_flag_expired = false;
-
-    return;
-} /* End of function agt0_timer_stop */
-
-__attribute__ ((section(".ramfunc"))) bool agt0_timer_check_expired(void)
-{
-    bool flag = false;
-
-    CRITICAL_SECTION_BEGIN( );
-    if (true == timer_flag_expired)
-    {
-        flag = true;
-    }
-    CRITICAL_SECTION_END( );
-
-    return flag;
-}
-
-/***********************************************************************************************************************
-* Function Name: agt0_timer_isr
-* Description  : AGT0 interrupt processing.
-* Arguments    : none
-* Return Value : none
-***********************************************************************************************************************/
-__attribute__ ((section(".ramfunc")))  static void agt0_timer_isr(void)
-{
-    /* Underflow flag clear */
-    AGT0->AGTCR_b.TUNDF = 0;
-
-    if( 0 == --timer_count )
-    {
-        timer_flag_expired = true;
-    }
-
-} /* End of function agt1_isr */
diff --git a/agt0_timer.h b/agt0_timer.h
deleted file mode 100644
index 7911b97..0000000
--- a/agt0_timer.h
+++ /dev/null
@@ -1,33 +0,0 @@
-/**********************************************************************************************************************
-* DISCLAIMER
-* This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
-* other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
-* applicable laws, including copyright laws.
-* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
-* THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MECHANTABILITY,
-* FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
-* EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
-* SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
-* SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
-* Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
-* this software. By using this software, you agree to the additional terms and conditions found by accessing the
-* following link:
-* http://www.renesas.com/disclaimer
-*
-* Copyright (C) 2018-2020 Renesas Electronics Corporation. All rights reserved.
-**********************************************************************************************************************/
-/**********************************************************************************************************************
-* File Name    : agt1.h
-* Description  : Declaration of device accessor to the AGT1 module on Renesas RE01 MCUs
-**********************************************************************************************************************/
-#include <stdbool.h>
-
-#ifndef AGT0_TIMER_H_
-#define AGT0_TIMER_H_
-
-void agt0_timer_init(void);
-void agt0_timer_start(uint16_t ms);
-void agt0_timer_stop(void);
-bool agt0_timer_check_expired(void);
-
-#endif /* AGT0_TIMER_H_ */
diff --git a/agt1.c b/agt1.c
deleted file mode 100644
index e3903d8..0000000
--- a/agt1.c
+++ /dev/null
@@ -1,145 +0,0 @@
-/**********************************************************************************************************************
-* DISCLAIMER
-* This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
-* other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
-* applicable laws, including copyright laws.
-* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
-* THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MECHANTABILITY,
-* FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
-* EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
-* SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
-* SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
-* Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
-* this software. By using this software, you agree to the additional terms and conditions found by accessing the
-* following link:
-* http://www.renesas.com/disclaimer
-*
-* Copyright (C) 2018-2019 Renesas Electronics Corporation. All rights reserved.
-**********************************************************************************************************************/
-/**********************************************************************************************************************
-* File Name    : agt1.c
-* Description  : Device accessor to the AGT1 module on Renesas RE01 MCUs
-**********************************************************************************************************************/
-
-#include <stdint.h>
-#include "RE01_256KB.h"
-#include "r_system_cfg.h"
-#include "r_system_api.h"
-#include "r_lpm_api.h"
-#include "agt1.h"
-
-//#define AGT_TIMER_COUNT    0x13ff       /*   5120 counts at 1.024kHz =>  5000ms  */
-//#define AGT_TIMER_COUNT    0x27ff       /*   10240 counts at 1.024kHz =>  10000ms  */
-//#define AGT_TIMER_COUNT    0x3bff       /*  15360 counts at 1.024kHz =>  15000ms */
-#define AGT_TIMER_COUNT    0x77FF       /*  30720 counts at 1.024kHz =>  30000ms */
-//#define AGT_TIMER_COUNT    0xEFFF       /*  61440 counts at 1.024kHz =>  1min */
-
-static void agt1_isr(void);
-
-/**************************************************************************//**
-* @brief       
-*
-* @retval       
-******************************************************************************/
-void agt1_init(void)
-{
-    volatile uint8_t tmp;
-
-    /* Release AGT1 module stop condition  */
-    R_LPM_ModuleStart(LPM_MSTP_AGT1);
-
-    /* AGT1 Setting */
-    /* Stop AGT1 count */
-    AGT1->AGTCR_b.TSTOP     = 1;
-    while (AGT1->AGTCR_b.TCSTF == 1) { ; }		// wait till it stopped counting
-
-    AGT1->AGTMR1_b.TMOD     = 0x00;             /* Operation mode   : Timer mod */
-    AGT1->AGTMR1_b.TEDGPL   = 0;                /* Edge polarity    : Single-edge */
-    AGT1->AGTMR1_b.TCK      = 0x06;             /* Count source     : AGTSCLK */
-    AGT1->AGTMR2_b.CKS      = 0x05;             /* AGTSCLK division ratio   : 1/32 */
-//    AGT1->AGTMR2_b.CKS      = 0x06;             /* AGTSCLK division ratio   : 1/64 */
-
-    AGT1->AGT = AGT_TIMER_COUNT;
-
-    /* Connect AGT1_AGTI interrupt signal to NVIC a channel */
-    R_SYS_IrqEventLinkSet(SYSTEM_CFG_EVENT_NUMBER_AGT1_AGTI, 0x6, agt1_isr);
-
-    /* Clear AGT1_AGTI IR flag in ICU */
-    R_SYS_IrqStatusClear(SYSTEM_CFG_EVENT_NUMBER_AGT1_AGTI);
-    
-    /* Setup NVIC for AGT1_AGTI interrupt */
-    R_NVIC_EnableIRQ(SYSTEM_CFG_EVENT_NUMBER_AGT1_AGTI);
-    
-    /* Set AGT1 to module stop condition */
-    /* If the count source is the sub-clock oscillator or LOCO, 
-       module stop bit of AGT1 must be set to 1 except when accessing the AGT1 registers */
-    R_LPM_ModuleStop(LPM_MSTP_AGT1);
-
-    return;
-} /* End of function agt1_init */
-
-/***********************************************************************************************************************
-* Function Name: agt1_start
-* Description  : Start AGT1 counting.
-* Arguments    : none
-* Return Value : none
-***********************************************************************************************************************/
-__attribute__ ((section(".ramfunc"))) void agt1_start(void)
-{
-    /* Release AGT1 module stop condition  */
-    R_LPM_ModuleStart(LPM_MSTP_AGT1);
-
-    /* Start AGT1 count */
-    AGT1->AGTCR_b.TSTART    = 1;
-    
-    /* Wait until the count starts */
-    while(0 == AGT1->AGTCR_b.TCSTF);
-
-    /* Enable the low power mode */
-    AGT1->AGTMR2_b.LPM      = 1;
-    
-    /* Set AGT1 to module stop condition */
-    /* If the count source is the sub-clock oscillator or LOCO, 
-       module stop bit of AGT1 must be set to 1 except when accessing the AGT1 registers */
-    R_LPM_ModuleStop(LPM_MSTP_AGT1);
-
-    return;
-} /* End of function agt1_start */
-
-/***********************************************************************************************************************
-* Function Name: agt1_stop
-* Description  : Stop AGT1 counting.
-* Arguments    : none
-* Return Value : none
-***********************************************************************************************************************/
-__attribute__ ((section(".ramfunc"))) void agt1_stop(void)
-{
-    /* Release AGT1 module stop condition  */
-    R_LPM_ModuleStart(LPM_MSTP_AGT1);
-
-    /* Disable the low power mode */
-    AGT1->AGTMR2_b.LPM       = 0;
-    
-    /* Stop AGT1 count */
-    AGT1->AGTCR_b.TSTART     = 0;
-
-    /* Set AGT1 to module stop condition */
-    /* If the count source is the sub-clock oscillator or LOCO, 
-       module stop bit of AGT1 must be set to 1 except when accessing the AGT1 registers */
-    R_LPM_ModuleStop(LPM_MSTP_AGT1);
-
-    return;
-} /* End of function agt1_stop */
-
-/***********************************************************************************************************************
-* Function Name: agt1_isr
-* Description  : AGT1 interrupt processing.
-* Arguments    : none
-* Return Value : none
-***********************************************************************************************************************/
-__attribute__ ((section(".ramfunc"))) static void agt1_isr(void)
-{
-    /* Underflow flag clear */
-    AGT1->AGTCR_b.TUNDF = 0;
-
-} /* End of function agt1_isr */
diff --git a/agt1.h b/agt1.h
deleted file mode 100644
index 45246be..0000000
--- a/agt1.h
+++ /dev/null
@@ -1,31 +0,0 @@
-/**********************************************************************************************************************
-* DISCLAIMER
-* This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
-* other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
-* applicable laws, including copyright laws.
-* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
-* THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MECHANTABILITY,
-* FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
-* EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
-* SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
-* SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
-* Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
-* this software. By using this software, you agree to the additional terms and conditions found by accessing the
-* following link:
-* http://www.renesas.com/disclaimer
-*
-* Copyright (C) 2018-2019 Renesas Electronics Corporation. All rights reserved.
-**********************************************************************************************************************/
-/**********************************************************************************************************************
-* File Name    : agt1.h
-* Description  : Declaration of device accessor to the AGT1 module on Renesas RE01 MCUs
-**********************************************************************************************************************/
-
-#ifndef AGT1_H_
-#define AGT1_H_
-
-void agt1_init(void);
-void agt1_start(void);
-void agt1_stop(void);
-
-#endif /* AGT1_H_ */
diff --git a/boards/adc-board.h b/boards/adc-board.h
deleted file mode 100644
index 6d6f623..0000000
--- a/boards/adc-board.h
+++ /dev/null
@@ -1,58 +0,0 @@
-/*!
- * \file      adc-board.h
- *
- * \brief     Target board ADC driver implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __ADC_BOARD_H__
-#define __ADC_BOARD_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include "adc.h"
-
-/*!
- * \brief Initializes the ADC object and MCU peripheral
- *
- * \param [IN] obj      ADC object
- * \param [IN] adcInput ADC input pin
- */
-void AdcMcuInit( Adc_t *obj, PinNames adcInput );
-
-/*!
- * \brief Initializes the ADC internal parameters
- */
-void AdcMcuConfig( void );
-
-/*!
- * \brief Reads the value of the given channel
- *
- * \param [IN] obj     ADC object
- * \param [IN] channel ADC input channel
- */
-uint16_t AdcMcuReadChannel( Adc_t *obj, uint32_t channel );
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __ADC_BOARD_H__
diff --git a/boards/board.h b/boards/board.h
deleted file mode 100644
index a320cc4..0000000
--- a/boards/board.h
+++ /dev/null
@@ -1,125 +0,0 @@
-/*!
- * \file      board.h
- *
- * \brief     Target board general functions implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __BOARD_H__
-#define __BOARD_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-#include "utilities.h"
-/*!
- * Possible power sources
- */
-enum BoardPowerSources
-{
-    USB_POWER = 0,
-    BATTERY_POWER,
-};
-
-/*!
- * \brief Initializes the mcu.
- */
-void BoardInitMcu( void );
-
-/*!
- * \brief Resets the mcu.
- */
-void BoardResetMcu( void );
-
-/*!
- * \brief Initializes the boards peripherals.
- */
-void BoardInitPeriph( void );
-
-/*!
- * \brief De-initializes the target board peripherals to decrease power
- *        consumption.
- */
-void BoardDeInitMcu( void );
-
-/*!
- * \brief Gets the current potentiometer level value
- *
- * \retval value  Potentiometer level ( value in percent )
- */
-uint8_t BoardGetPotiLevel( void );
-
-/*!
- * \brief Measure the Battery voltage
- *
- * \retval value  battery voltage in volts
- */
-uint32_t BoardGetBatteryVoltage( void );
-
-/*!
- * \brief Get the current battery level
- *
- * \retval value  battery level [  0: USB,
- *                                 1: Min level,
- *                                 x: level
- *                               254: fully charged,
- *                               255: Error]
- */
-uint8_t BoardGetBatteryLevel( void );
-
-/*!
- * Returns a pseudo random seed generated using the MCU Unique ID
- *
- * \retval seed Generated pseudo random seed
- */
-uint32_t BoardGetRandomSeed( void );
-
-/*!
- * \brief Gets the board 64 bits unique ID
- *
- * \param [IN] id Pointer to an array that will contain the Unique ID
- */
-void BoardGetUniqueId( uint8_t *id );
-
-/*!
- * \brief Manages the entry into ARM cortex deep-sleep mode
- */
-void BoardLowPowerHandler( void );
-
-/*!
- * \brief Get the board power source
- *
- * \retval value  power source [0: USB_POWER, 1: BATTERY_POWER]
- */
-uint8_t GetBoardPowerSource( void );
-
-/*!
- * \brief Get the board version
- *
- * \retval value  Version
- */
-Version_t BoardGetVersion( void );
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __BOARD_H__
diff --git a/boards/board_uart.h b/boards/board_uart.h
deleted file mode 100644
index dd3a7b5..0000000
--- a/boards/board_uart.h
+++ /dev/null
@@ -1,42 +0,0 @@
-/**********************************************************************************************************************
-* DISCLAIMER
-* This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
-* other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
-* applicable laws, including copyright laws.
-* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
-* THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MECHANTABILITY,
-* FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
-* EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
-* SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
-* SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
-* Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
-* this software. By using this software, you agree to the additional terms and conditions found by accessing the
-* following link:
-* http://www.renesas.com/disclaimer
-*
-* Copyright (C) 2018-2019 Renesas Electronics Corporation. All rights reserved.
-**********************************************************************************************************************/
-/**********************************************************************************************************************
-* File Name    : board_uart.h
-* Description  : Target board UART function definition
-**********************************************************************************************************************/
-
-#ifndef __BOARD_UART_H__
-#define __BOARD_UART_H__
-
-#include <stdint.h>
-
-/*!
- * \brief Initialize and configure UART
- *
- * \param baud baud rate
- */
-void BoardUartConfigure(uint32_t baud);
-
-/*!
- * \brief De-initialize UART
- *
- */
-void BoardUartDeconfigure(void);
-
-#endif // __BOARD_UART_H__
diff --git a/boards/delay-board.h b/boards/delay-board.h
deleted file mode 100644
index dd9e100..0000000
--- a/boards/delay-board.h
+++ /dev/null
@@ -1,48 +0,0 @@
-/*!
- * \file      delay-board.h
- *
- * \brief     Target board delay implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- */
-#ifndef __DELAY_BOARD_H__
-#define __DELAY_BOARD_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-
-#define DELAY_BOARD_FUNC_LOCATION __attribute__ ((section(".ramfunc")))
-
-/*!
- * \brief Blocking delay of "ms" milliseconds
- *
- * \param [IN] ms    delay in milliseconds
- */
-void DelayMsMcu( uint32_t ms ) DELAY_BOARD_FUNC_LOCATION;
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __DELAY_BOARD_H__
diff --git a/boards/gpio-board.h b/boards/gpio-board.h
deleted file mode 100644
index 31e734f..0000000
--- a/boards/gpio-board.h
+++ /dev/null
@@ -1,103 +0,0 @@
-/*!
- * \file      gpio-board.h
- *
- * \brief     Target board GPIO driver implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __GPIO_BOARD_H__
-#define __GPIO_BOARD_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include "gpio.h"
-
-#define GPIO_BOARD_FUNC_LOCATION __attribute__ ((section(".ramfunc")))
-
-/*!
- * \brief Initializes the given GPIO object
- *
- * \param [IN] obj    Pointer to the GPIO object
- * \param [IN] pin    Pin name ( please look in pinName-board.h file )
- * \param [IN] mode   Pin mode [PIN_INPUT, PIN_OUTPUT,
- *                              PIN_ALTERNATE_FCT, PIN_ANALOGIC]
- * \param [IN] config Pin config [PIN_PUSH_PULL, PIN_OPEN_DRAIN]
- * \param [IN] type   Pin type [PIN_NO_PULL, PIN_PULL_UP, PIN_PULL_DOWN]
- * \param [IN] value  Default output value at initialization
- */
-void GpioMcuInit( Gpio_t *obj, PinNames pin, PinModes mode, PinConfigs config, PinTypes type, uint32_t value );
-
-/*!
- * \brief Sets a user defined object pointer
- *
- * \param [IN] context User defined data object pointer to pass back
- *                     on IRQ handler callback
- */
-void GpioMcuSetContext( Gpio_t *obj, void* context );
-
-/*!
- * \brief GPIO IRQ Initialization
- *
- * \param [IN] obj         Pointer to the GPIO object
- * \param [IN] irqMode     IRQ mode [NO_IRQ, IRQ_RISING_EDGE,
- *                                   IRQ_FALLING_EDGE, IRQ_RISING_FALLING_EDGE]
- * \param [IN] irqPriority IRQ priority [IRQ_VERY_LOW_PRIORITY, IRQ_LOW_PRIORITY
- *                                       IRQ_MEDIUM_PRIORITY, IRQ_HIGH_PRIORITY
- *                                       IRQ_VERY_HIGH_PRIORITY]
- * \param [IN] irqHandler  Callback function pointer
- */
-void GpioMcuSetInterrupt( Gpio_t *obj, IrqModes irqMode, IrqPriorities irqPriority, GpioIrqHandler *irqHandler );
-
-/*!
- * \brief Removes the interrupt from the object
- *
- * \param [IN] obj Pointer to the GPIO object
- */
-void GpioMcuRemoveInterrupt( Gpio_t *obj );
-
-/*!
- * \brief Writes the given value to the GPIO output
- *
- * \param [IN] obj   Pointer to the GPIO object
- * \param [IN] value New GPIO output value
- */
-void GpioMcuWrite( Gpio_t *obj, uint32_t value ) GPIO_BOARD_FUNC_LOCATION;
-
-/*!
- * \brief Toggle the value to the GPIO output
- *
- * \param [IN] obj   Pointer to the GPIO object
- */
-void GpioMcuToggle( Gpio_t *obj );
-
-/*!
- * \brief Reads the current GPIO input value
- *
- * \param [IN] obj Pointer to the GPIO object
- * \retval value   Current GPIO input value
- */
-uint32_t GpioMcuRead( Gpio_t *obj );
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __GPIO_BOARD_H__
diff --git a/boards/i2c-board.h b/boards/i2c-board.h
deleted file mode 100644
index 0e6273c..0000000
--- a/boards/i2c-board.h
+++ /dev/null
@@ -1,149 +0,0 @@
-/*!
- * \file      i2c-board.h
- *
- * \brief     Target board I2C driver implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __I2C_BOARD_H__
-#define __I2C_BOARD_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-#include <stdbool.h>
-#include "i2c.h"
-
-/*!
- * Operation Mode for the I2C
- */
-typedef enum
-{
-    MODE_I2C = 0,
-    MODE_SMBUS_DEVICE,
-    MODE_SMBUS_HOST
-}I2cMode;
-
-/*!
- * I2C signal duty cycle
- */
-typedef enum
-{
-    I2C_DUTY_CYCLE_2 = 0,
-    I2C_DUTY_CYCLE_16_9
-}I2cDutyCycle;
-
-/*!
- * I2C select if the acknowledge in after the 7th or 10th bit
- */
-typedef enum
-{
-    I2C_ACK_ADD_7_BIT = 0,
-    I2C_ACK_ADD_10_BIT
-}I2cAckAddrMode;
-
-/*!
- * Internal device address size
- */
-typedef enum
-{
-    I2C_ADDR_SIZE_8 = 0,
-    I2C_ADDR_SIZE_16,
-}I2cAddrSize;
-
-/*!
- * \brief Initializes the I2C object and MCU peripheral
- *
- * \param [IN] obj  I2C object
- * \param [IN] scl  I2C Scl pin name to be used
- * \param [IN] sda  I2C Sda pin name to be used
- */
-void I2cMcuInit( I2c_t *obj, I2cId_t i2cId, PinNames scl, PinNames sda );
-
-/*!
- * \brief Initializes the I2C object and MCU peripheral
- *
- * \param [IN] obj              I2C object
- * \param [IN] mode             Mode of operation for the I2C Bus
- * \param [IN] dutyCycle        Signal duty cycle
- * \param [IN] I2cAckEnable     Enable or Disable to ack
- * \param [IN] AckAddrMode      7bit or 10 bit addressing
- * \param [IN] I2cFrequency     I2C bus clock frequency
- */
-void I2cMcuFormat( I2c_t *obj, I2cMode mode, I2cDutyCycle dutyCycle, bool I2cAckEnable, I2cAckAddrMode AckAddrMode, uint32_t I2cFrequency );
-
-/*!
- * \brief DeInitializes the I2C object and MCU peripheral
- *
- * \param [IN] obj  I2C object
- */
-void I2cMcuDeInit( I2c_t *obj );
-
-/*!
- * \brief Reset the I2C object and MCU peripheral
- *
- * \param [IN] obj  I2C object
- */
-void I2cMcuResetBus( I2c_t *obj );
-
-/*!
- * \brief Write data buffer to the I2C device
- *
- * \param [IN] obj              I2C object
- * \param [IN] deviceAddr       device address
- * \param [IN] addr             data address
- * \param [IN] buffer           data buffer to write
- * \param [IN] size             number of data bytes to write
- */
-uint8_t I2cMcuWriteBuffer( I2c_t *obj, uint8_t deviceAddr, uint16_t addr, uint8_t *buffer, uint16_t size );
-
-/*!
- * \brief Read data buffer from the I2C device
- *
- * \param [IN] obj              I2C object
- * \param [IN] deviceAddr       device address
- * \param [IN] addr             data address
- * \param [IN] buffer           data buffer to read
- * \param [IN] size             number of data bytes to read
- */
-uint8_t I2cMcuReadBuffer( I2c_t *obj, uint8_t deviceAddr, uint16_t addr, uint8_t *buffer, uint16_t size );
-
-/*!
- * \brief Waits until the given device is in standby mode
- *
- * \param [IN] obj              I2C object
- * \param [IN] deviceAddr       device address
- */
-uint8_t I2cMcuWaitStandbyState( I2c_t *obj, uint8_t deviceAddr );
-
-/*!
- * \brief Sets the internal device address size
- *
- * \param [IN] obj              I2C object
- * \param [IN] addrSize         Internal address size
- */
-void I2cSetAddrSize( I2c_t *obj, I2cAddrSize addrSize );
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __I2C_BOARD_H__
diff --git a/boards/mcu/RE01_256KB/pinName-board.h b/boards/mcu/RE01_256KB/pinName-board.h
deleted file mode 100644
index a34b111..0000000
--- a/boards/mcu/RE01_256KB/pinName-board.h
+++ /dev/null
@@ -1,40 +0,0 @@
-/*!
- * \file      pinName-board.h
- *
- * \brief     Target board GPIO pins definitions
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __PIN_NAME_BOARD_H__
-#define __PIN_NAME_BOARD_H__
-
-/*!
- * RE01 256KB Pin Names
- */
-#define MCU_PINS \
-   P0_0=0x00,  P0_1,  P0_2,  P0_3,  P0_4,  P0_5,  P0_6,  P0_7, P0_8, P0_9, P0_10, P0_11, P0_12, P0_13, P0_14, P0_15, \
-   P1_0=0x10,  P1_1,  P1_2,  P1_3,  P1_4,  P1_5,  P1_6,  P1_7, P1_8, P1_9, P1_10, P1_11, P1_12, P1_13, \
-   P2_0=0x20,  P2_1,  P2_2,  P2_3,  P2_4,  P2_5,  P2_6,  P2_7, P2_8, P2_9, P2_10, \
-   P3_0=0x30,  P3_1,  P3_2,  P3_3,  P3_4,  P3_5,  P3_6,  P3_7, P3_8, P3_9, P3_10, P3_11, P3_12, P3_13, P3_14, P3_15, \
-   P4_0=0x40,  P4_1,  P4_2,  P4_3,  P4_4,  P4_5,  P4_6,  P4_7, P4_8, P4_9, P4_10, P4_11, P4_12, P4_13,  \
-   P5_0=0x50,  P5_1,  P5_2,  P5_3,  P5_4,  P5_5,  P5_6,  P5_7, P5_8, P5_9, P5_10, P5_11, \
-   P6_0=0x60,  P6_1,  P6_2,  P6_3,  P6_4,  \
-   P7_0=0x70,  P7_1,  P7_2,  P7_3,  P7_4,  \
-   P8_0=0x80,  P8_1,  P8_2,  P8_3,  P8_4,  P8_5,  P8_6,  P8_7, P8_8, P8_9, P8_10, P8_11, P8_12, P8_13, P8_14, P8_15
-
-#endif // __PIN_NAME_BOARD_H__
diff --git a/boards/mcu/RE01_256KB/r_rtc.c b/boards/mcu/RE01_256KB/r_rtc.c
deleted file mode 100644
index 8e25a4d..0000000
--- a/boards/mcu/RE01_256KB/r_rtc.c
+++ /dev/null
@@ -1,524 +0,0 @@
-/**********************************************************************************************************************
-* DISCLAIMER
-* This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
-* other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
-* applicable laws, including copyright laws.
-* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
-* THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MECHANTABILITY,
-* FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
-* EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
-* SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
-* SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
-* Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
-* this software. By using this software, you agree to the additional terms and conditions found by accessing the
-* following link:
-* http://www.renesas.com/disclaimer
-*
-* Copyright (C) 2018-2019 Renesas Electronics Corporation. All rights reserved.
-**********************************************************************************************************************/
-/**********************************************************************************************************************
-* File Name    : r_rtc.c
-* Description  : Device accessor to the RTC module on Renesas RE01 MCUs
-**********************************************************************************************************************/
-
-#include "r_rtc.h"
-#include "r_lpm_api.h"
-
-int rtc_bcd_to_dec (uint8_t to_convert) __attribute__ ((section(".ramfunc")));
-uint8_t rtc_dec_to_bcd (uint8_t to_convert)  __attribute__ ((section(".ramfunc")));
-
-static void rtc_prd_isr(void) __attribute__ ((section(".ramfunc")));
-static void rtc_alm_isr(void) __attribute__ ((section(".ramfunc")));
-
-static RTC_Event_t rtc_callback;
-
-static bool is_rtc_initialized;
-
-void rtc_init (RTC_Event_t event_cb)
-{
-  int i;
-
-  /* Release RTC module stop condition  */
-  R_LPM_ModuleStart(LPM_MSTP_RTC);
-
-  RTC->RCR4_b.RSKSTP = 1;
-  
-  // Supply 6 cycles of the clock selected, for setup. 
-  for (i = 0; i < 6; i++)
-  {
-    asm("nop");
-  }
-  
-  RTC->RCR2_b.START &= ~(1UL);
-  while(RTC->RCR2_b.START)
-  {
-    asm("nop");
-  }
-  
-  RTC->RCR2_b.RESET |= 1UL;
-  while(RTC->RCR2_b.RESET)
-  {   
-    asm("nop");
-  }
-  
-  while (0x00u != RTC->RCR1)
-  {
-    /* Disable RTC interrupts */
-    RTC->RCR1 = 0x00u;
-  }
-  
-  /* Stop RTC counter */
-  rtc_counter_run(RTC_COUNTER_STOP);
-  
-  /* Confirm that it has changed */
-  while (0 != RTC->RCR2_b.CNTMD)
-  {
-    /* Set RTC to calendar mode */
-    RTC->RCR2_b.CNTMD = 0;
-  }
-  
-  /* Clear alarms, capture, adjustment registers, and output enable */
-  rtc_reset();
-  
-  rtc_callback = event_cb;
-  
-  is_rtc_initialized = true;
-}
-
-void rtc_set_periodic (rtc_periodic_t freq, uint8_t priority)
-{
-  uint8_t tmp;
-  
-  if (is_rtc_initialized == false)
-    return;
-  
-  /* NOTE: arguments validated before entering this routine */
-  
-  /* Set frequency */
-  /* Note: Off can be any one of several values. It may not match the "off" value written. */
-  tmp = RTC->RCR1_b.PES;
-  if (RTC->RCR1_b.PES != freq)           // if setting needs to change
-  {
-    RTC->RCR1_b.PES = freq;            // write the setting
-    while (RTC->RCR1_b.PES == tmp)     // loop while setting has not changed
-    {
-      /* Confirm that it has changed */
-      asm("nop");
-    }
-  }
-  
-  
-  /* Set interrupts */
-  if (RTC_PERIODIC_OFF == freq)
-  {
-
-  }
-  else
-  {
-    R_SYS_IrqEventLinkSet(SYSTEM_CFG_EVENT_NUMBER_RTC_PRD, 0x05, (system_int_cb_t)rtc_prd_isr);
-    
-    R_SYS_IrqStatusClear(SYSTEM_CFG_EVENT_NUMBER_RTC_PRD);
-    
-    R_NVIC_SetPriority(SYSTEM_CFG_EVENT_NUMBER_RTC_PRD, priority);
-    R_NVIC_EnableIRQ(SYSTEM_CFG_EVENT_NUMBER_RTC_PRD);
-    
-    RTC->RCR1_b.PIE = 1;
-  }
-  
-  return;
-}
-
-void rtc_disable_periodic (void)
-{
-  R_NVIC_DisableIRQ(SYSTEM_CFG_EVENT_NUMBER_RTC_PRD);
-
-  R_NVIC_ClearPendingIRQ(SYSTEM_CFG_EVENT_NUMBER_RTC_PRD);
-
-  RTC->RCR1_b.PIE = 0;
-}
-
-void rtc_set_current_time (tm_t * p_current)
-{
-  uint8_t clock_state;
-  volatile uint8_t dummy_byte;
-  volatile uint16_t dummy_word;
-  volatile uint8_t i;
-  
-  if (is_rtc_initialized == false)
-    return;
-  
-  /* Note the clock state */
-  clock_state = RTC->RCR2_b.START;
-  
-  /* Stop RTC counter */
-  rtc_counter_run(RTC_COUNTER_STOP);
-  
-  /* Set for 24-hour mode. */
-  RTC->RCR2_b.HR24 = 1;
-  
-  /* Set time */
-  /* Set seconds. (0-59) */
-  RTC->RSECCNT = rtc_dec_to_bcd((uint8_t) p_current->tm_sec);
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_byte = RTC->RSECCNT;
-  }
-  
-  /* Set minutes (0-59) */
-  RTC->RMINCNT = rtc_dec_to_bcd((uint8_t) p_current->tm_min);
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_byte = RTC->RMINCNT;
-  }
-  
-  /* Set hours. (0-23) */
-  RTC->RHRCNT = rtc_dec_to_bcd((uint8_t) p_current->tm_hour);
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_byte = RTC->RHRCNT;
-  }
-  
-  /* Set the date */
-  /* Day of the week (0-6, 0=Sunday) */
-  RTC->RWKCNT = (uint8_t) p_current->tm_wday;
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_byte = RTC->RWKCNT;
-  }
-  
-  /* Day of the month (1-31) */
-  RTC->RDAYCNT = rtc_dec_to_bcd((uint8_t) p_current->tm_mday);
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_byte = RTC->RDAYCNT;
-  }
-  
-  /* Month. (1-12, 1=January) */
-  RTC->RMONCNT = rtc_dec_to_bcd((uint8_t) (p_current->tm_mon + 1));
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_byte = RTC->RMONCNT;
-  }
-  
-  /* Year. (00-99) */
-  RTC->RYRCNT = (uint16_t) (rtc_dec_to_bcd((uint8_t) ((p_current->tm_year + 1900) % 100)));
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_word = RTC->RYRCNT;
-  }
-  
-  /* Restore the clock */
-  rtc_counter_run(clock_state);
-  
-  return;
-}
-
-void rtc_set_alarm_time (tm_t *p_alarm)
-{
-  volatile uint8_t dummy_byte;
-  volatile uint16_t dummy_word;
-  volatile uint8_t i;
-  
-  if (is_rtc_initialized == false)
-    return;
-  
-  /* Set time */
-  /* Set seconds. (0-59) */
-  RTC->RSECAR &= 0x80u;
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_byte = RTC->RSECAR;
-  }
-  
-  RTC->RSECAR |= rtc_dec_to_bcd((uint8_t) p_alarm->tm_sec);
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_byte = RTC->RSECAR;
-  }
-  
-  /* Set minutes (0-59) */
-  RTC->RMINAR &= 0x80u;
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_byte = RTC->RMINAR;
-  }
-  
-  RTC->RMINAR |= rtc_dec_to_bcd((uint8_t) p_alarm->tm_min);
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_byte = RTC->RMINAR;
-  }
-  
-  /* Set hours. (0-23) */
-  RTC->RHRAR &= 0x80u;
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_byte = RTC->RHRAR;
-  }
-  
-  RTC->RHRAR |= rtc_dec_to_bcd((uint8_t) p_alarm->tm_hour);
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_byte = RTC->RHRAR;
-  }
-  
-  /* Set the date */
-  /* Day of the week (0-6, 0=Sunday) */
-  RTC->RWKAR &= 0x80u;
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_byte = RTC->RWKAR;
-  }
-#if 0 /* Not used in the LoRaMac framework */
-  RTC->RWKAR |= (uint8_t) p_alarm->tm_wday;
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_byte = RTC->RWKAR;
-  }
-  
-  /* Day of the month (1-31) */
-  RTC->RDAYAR &= 0x80u;
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_byte = RTC->RDAYAR;
-  }
-#endif
-  RTC->RDAYAR |= rtc_dec_to_bcd((uint8_t) p_alarm->tm_mday);
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_byte = RTC->RDAYAR;
-  }
-  
-#if 0 /* Not used in the LoRaMac framework */
-  /* Month. (1-12, 1=January) */
-  RTC->RMONAR &= 0x80u;
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_byte = RTC->RMONAR;
-  }
-  
-  RTC->RMONAR |= rtc_dec_to_bcd((uint8_t) (p_alarm->tm_mon + 1));
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_byte = RTC->RMONAR;
-  }
-  
-  /* Year. (00-99) */
-  RTC->RYRAR = (uint16_t) (rtc_dec_to_bcd((uint8_t) ((p_alarm->tm_year + 1900) % 100)));
-  for (i = 0; i < RTC_DUMMY_READ; i++)
-  {
-    dummy_word = RTC->RYRAR;
-  }
-#endif
-  return;
-}
-
-void rtc_enable_alarms (rtc_alarm_ctrl_t *p_alm_ctrl)
-{
-  if (is_rtc_initialized == false)
-    return;
-  
-  /* Alarm time enable setting */
-  RTC->RSECAR_b.ENB  = (uint8_t)((true == p_alm_ctrl->sec) ? 1 : 0);
-  RTC->RMINAR_b.ENB  = (uint8_t)((true == p_alm_ctrl->min) ? 1 : 0);
-  RTC->RHRAR_b.ENB   = (uint8_t)((true == p_alm_ctrl->hour) ? 1 : 0);
-  RTC->RDAYAR_b.ENB  = (uint8_t)((true == p_alm_ctrl->mday) ? 1 : 0);
-#if 0 /* Not used in the LoRaMac framework */
-  RTC->RMONAR_b.ENB  = (uint8_t)((true == p_alm_ctrl->mon) ? 1 : 0);
-  RTC->RYRAREN_b.ENB = (uint8_t)((true == p_alm_ctrl->year) ? 1 : 0);
-  RTC->RWKAR_b.ENB   = (uint8_t)((true == p_alm_ctrl->wday) ? 1 : 0);
-  if (1 == RTC->RWKAR_b.ENB) // dummy read for waiting until set the value of RTC
-  {
-    asm("nop");
-  }
-#else
-  if (1 == RTC->RDAYAR_b.ENB) // dummy read for waiting until set the value of RTC
-  {
-    asm("nop");
-  }
-#endif
-  
-  /* Alarm time setting definite waiting */
-//  R_SYS_SoftwareDelay((uint32_t)16, (e_system_delay_units_t)SYSTEM_DELAY_UNITS_MILLISECONDS);  //Approx.16ms (1/64Hz = 15.625ms)
-  
-  R_SYS_IrqEventLinkSet(SYSTEM_CFG_EVENT_NUMBER_RTC_ALM, 0x06, (system_int_cb_t)rtc_alm_isr);
-  
-  R_NVIC_SetPriority(SYSTEM_CFG_EVENT_NUMBER_RTC_ALM, p_alm_ctrl->int_priority);
-  R_NVIC_EnableIRQ(SYSTEM_CFG_EVENT_NUMBER_RTC_ALM);
-  
-  RTC->RCR1_b.AIE = 1;
-}
-
-void rtc_disable_alarms(void)
-{
-  R_NVIC_DisableIRQ(SYSTEM_CFG_EVENT_NUMBER_RTC_ALM);
-  
-  R_NVIC_ClearPendingIRQ(SYSTEM_CFG_EVENT_NUMBER_RTC_ALM);
-  
-  RTC->RCR1_b.AIE = 0;
-}
-
-void rtc_read_sec_subSec (tm_t *p_current)
-{
-    if (is_rtc_initialized == false)
-        return;
-
-    p_current->tm_subsec  = RTC->R64CNT;
-
-    /* Read and convert RTC registers; mask off unknown bits and hour am/pm. */
-    /* Seconds. (0-59) */
-    p_current->tm_sec  = rtc_bcd_to_dec((uint8_t) (RTC->RSECCNT & 0x7fu));
-}
-
-void rtc_read_current (tm_t *p_current)
-{
-    uint16_t bcd_years; // Used for converting year.
-  
-    if (is_rtc_initialized == false)
-        return;
-  
-    p_current->tm_subsec  = RTC->R64CNT;
-    
-    /* Read and convert RTC registers; mask off unknown bits and hour am/pm. */
-    /* Seconds. (0-59) */
-    p_current->tm_sec  = rtc_bcd_to_dec((uint8_t) (RTC->RSECCNT & 0x7fu));
-    
-    /* Minutes. (0-59) */
-    p_current->tm_min  = rtc_bcd_to_dec((uint8_t) (RTC->RMINCNT & 0x7fu));
-    
-    /* Hours. (0-23) */
-    p_current->tm_hour = rtc_bcd_to_dec((uint8_t) (RTC->RHRCNT & 0x3fu));
-    
-    /* Day of the month (1-31) */
-    p_current->tm_mday = rtc_bcd_to_dec(RTC->RDAYCNT);
-    
-    /* Months since January (0-11) */
-    p_current->tm_mon  = rtc_bcd_to_dec(RTC->RMONCNT) - 1;
-    
-    /* Years since 2000 */
-    bcd_years = (uint16_t) RTC->RYRCNT;
-    
-    /* years years since 1900 (100-199) */
-    p_current->tm_year = rtc_bcd_to_dec((uint8_t) (bcd_years & 0xFF)) + 100;
-    
-    /* Days since Sunday (0-6) */
-    p_current->tm_wday = (int) (RTC->RWKCNT & 0x07u);
-
-    return;
-}
-
-void rtc_read_alarm (tm_t *p_alarm)
-{
-  /* Used for converting year. */
-  uint16_t bcd_years;
-  
-  if (is_rtc_initialized == false)
-    return;
-  
-  /* Clear flag in ICU */
-  //ICU.IR[IR_RTC_CUP].BIT.IR = 0;
-  
-  /* Read and convert RTC registers; mask off unknown bits and hour am/pm. */
-  /* Seconds. (0-59) */
-  p_alarm->tm_sec  = rtc_bcd_to_dec((uint8_t) (RTC->RSECAR & 0x7fu));
-  
-  /* Minutes. (0-59) */
-  p_alarm->tm_min  = rtc_bcd_to_dec((uint8_t) (RTC->RMINAR & 0x7fu));
-  
-  /* Hours. (0-23) */
-  p_alarm->tm_hour = rtc_bcd_to_dec((uint8_t) (RTC->RHRAR & 0x3fu));
-  
-  /* Day of the month (1-31) */
-  p_alarm->tm_mday = rtc_bcd_to_dec((uint8_t) (RTC->RDAYAR & 0x3fu));
-  
-  /* Months since January (0-11) */
-  p_alarm->tm_mon  = rtc_bcd_to_dec((uint8_t) (RTC->RMONAR & 0x1fu)) - 1;
-  
-  /* Years since 2000 (100-199)*/
-  bcd_years = (uint16_t) RTC->RYRAR;
-  
-  /* RTC only supports years 0-99; years since 1900 */
-  p_alarm->tm_year = rtc_bcd_to_dec((uint8_t) (bcd_years & 0xFF)) + 100;
-  
-  /* Days since Sunday (0-6) */
-  p_alarm->tm_wday = (int) (RTC->RWKAR & 0x07u);
-  return;
-}
-
-void rtc_counter_run (const uint8_t action)
-{ 
-  /* START bit is updated in synchronization with the next count source. */
-  while (RTC->RCR2_b.START != action)
-  {
-    RTC->RCR2_b.START = action;
-  }
-}
-
-void rtc_reset (void)
-{
-  RTC->RCR2_b.RESET |= 1UL;
-  while(RTC->RCR2_b.RESET)
-  {   
-    asm("nop");
-  }
-}
-
-void rtc_enable_ints (void)
-{
-  /* Enable RTC interrupts (PIE, CIE and AIE), not ICU yet */
-    RTC->RCR1 = RTC_INT_ENABLE;
-    while (RTC_INT_ENABLE != RTC->RCR1)
-    {
-        /* Confirm that it has changed */
-        asm("nop");
-    }
-}
-
-void rtc_disable_ints (void)
-{
-  
-}
-
-/***********************************************************************************************************************
-* Function Name: rtc_bcd_to_dec
-* Description  : Converts from binary coded decimal (BCD) to decimal
-* Arguments    : to_convert -
-*                    Value to convert.
-* Return Value : Converted value.
-***********************************************************************************************************************/
-int rtc_bcd_to_dec (uint8_t to_convert)
-{
-  return (int) ((((to_convert & 0xF0) >> 4) * 10) + (to_convert & 0x0F));
-}
-/**********************************************************************************************************************
-End of function rtc_bcd_to_dec
-***********************************************************************************************************************/
-
-
-/***********************************************************************************************************************
-* Function Name: rtc_dec_to_bcd
-* Description  : Converts from decimal to binary coded decimal (BCD)
-* Arguments    : to_convert -
-*                    Value to convert.
-* Return Value : Converted value.
-***********************************************************************************************************************/
-uint8_t rtc_dec_to_bcd (uint8_t to_convert)
-{
-  return (uint8_t) ((((to_convert / 10) << 4) & 0xF0) | (to_convert % 10));
-}
-/**********************************************************************************************************************
-End of function rtc_dec_to_bcd
-***********************************************************************************************************************/
-static void rtc_prd_isr(void)
-{
-  if (rtc_callback != NULL)
-    rtc_callback(RTC_EVENT_PERIODIC);
-}
-
-static void rtc_alm_isr(void)
-{
-  if (rtc_callback != NULL)
-  {
-      rtc_callback(RTC_EVENT_ALARM);
-  }
-}
diff --git a/boards/mcu/RE01_256KB/r_rtc.h b/boards/mcu/RE01_256KB/r_rtc.h
deleted file mode 100644
index 0f99f45..0000000
--- a/boards/mcu/RE01_256KB/r_rtc.h
+++ /dev/null
@@ -1,107 +0,0 @@
-/**********************************************************************************************************************
-* DISCLAIMER
-* This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
-* other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
-* applicable laws, including copyright laws.
-* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
-* THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MECHANTABILITY,
-* FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
-* EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
-* SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
-* SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
-* Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
-* this software. By using this software, you agree to the additional terms and conditions found by accessing the
-* following link:
-* http://www.renesas.com/disclaimer
-*
-* Copyright (C) 2018-2019 Renesas Electronics Corporation. All rights reserved.
-**********************************************************************************************************************/
-/**********************************************************************************************************************
-* File Name    : r_rtc.h
-* Description  : Function declaration of the RTC module driver on Renesas RE01 MCUs
-**********************************************************************************************************************/
-
-#ifndef R_RTC_H_
-#define R_RTC_H_
-
-#include "r_system_api.h"
-
-#define R_RTC_FUNC_LOCATION __attribute__ ((section(".ramfunc")))
-
-#define RTC_COUNTER_STOP        (0)
-#define RTC_COUNTER_START       (1)
-#define RTC_DUMMY_READ          (3)
-#define RTC_INT_ENABLE          (0x07)
-
-typedef enum e_rtc_event
-{
-    RTC_EVENT_NONE,
-    RTC_EVENT_ALARM,
-    RTC_EVENT_PERIODIC,
-    RTC_EVENT_CARRYUP
-} rtc_event_t;
-
-typedef void (*RTC_Event_t) (rtc_event_t event);
-
-typedef enum e_rtc_periodic
-{
-    RTC_PERIODIC_OFF    = 0,
-    RTC_PERIODIC_256_HZ = 6,
-    RTC_PERIODIC_128_HZ = 7,
-    RTC_PERIODIC_64_HZ  = 8,
-    RTC_PERIODIC_32_HZ  = 9,
-    RTC_PERIODIC_16_HZ  = 10,
-    RTC_PERIODIC_8_HZ   = 11,
-    RTC_PERIODIC_4_HZ   = 12,
-    RTC_PERIODIC_2_HZ   = 13,
-    RTC_PERIODIC_1_HZ   = 14,
-    RTC_PERIODIC_2_SEC  = 15,
-} rtc_periodic_t;
-
-#if (!defined(_TIME_H) && !defined(__time_h__))
-typedef struct
-{
-    int tm_subsec;  /* Sub Seconds */
-    int tm_sec;     /* Seconds (0-59) */
-    int tm_min;     /* Minute (0-59) */
-    int tm_hour;    /* Hour (0-23) */
-    int tm_mday;    /* Day of the month (1-31) */
-    int tm_mon;     /* Month (0-11, 0=January) */
-    int tm_year;    /* Year since 1900 (100-199, 100=2000)*/
-    int tm_wday;    /* Day of the week (0-6, 0=Sunday) */
-    int tm_yday;    /* Day of the year (0-365) */
-    int tm_isdst;   /* Daylight Savings enabled (>0), disabled (=0), or unknown (<0)*/
-} tm_t;
-#endif
-
-typedef struct
-{
-    uint8_t     int_priority;       // INT priority; 0=disable, 1=low, 15=high
-
-    /* set to true to cause alarm when all enabled alarm fields match current time */
-    bool        sec;
-    bool        min;
-    bool        hour;
-    bool        wday;
-    bool        mday;
-    bool        mon;
-    bool        year;
-} rtc_alarm_ctrl_t;
-
-void rtc_init (RTC_Event_t event_cb);
-void rtc_set_periodic (rtc_periodic_t freq, uint8_t priority) R_RTC_FUNC_LOCATION;
-void rtc_disable_periodic (void) R_RTC_FUNC_LOCATION;
-void rtc_set_current_time (tm_t * p_current);
-void rtc_set_alarm_time (tm_t *p_alarm) R_RTC_FUNC_LOCATION;
-void rtc_enable_alarms (rtc_alarm_ctrl_t *p_alm_ctrl) R_RTC_FUNC_LOCATION;
-void rtc_disable_alarms(void) R_RTC_FUNC_LOCATION;
-void rtc_read_alarm (tm_t *p_alarm);
-void rtc_read_current (tm_t *p_current) R_RTC_FUNC_LOCATION;
-void rtc_counter_run (const uint8_t action);
-void rtc_reset (void);
-void rtc_enable_ints (void);
-void rtc_disable_ints (void);
-void rtc_read_sec_subSec (tm_t *p_current) R_RTC_FUNC_LOCATION;
-
-
-#endif /* R_RTC_H_ */
diff --git a/boards/mcu/utilities.c b/boards/mcu/utilities.c
deleted file mode 100644
index d32d573..0000000
--- a/boards/mcu/utilities.c
+++ /dev/null
@@ -1,92 +0,0 @@
-/*!
- * \file      utilities.h
- *
- * \brief     Helper functions implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#include <stdlib.h>
-#include <stdio.h>
-#include "utilities.h"
-
-/*!
- * Redefinition of rand() and srand() standard C functions.
- * These functions are redefined in order to get the same behavior across
- * different compiler toolchains implementations.
- */
-// Standard random functions redefinition start
-#define RAND_LOCAL_MAX 2147483647L
-
-static uint32_t next = 1;
-
-int32_t rand1( void )
-{
-    return ( ( next = next * 1103515245L + 12345L ) % RAND_LOCAL_MAX );
-}
-
-void srand1( uint32_t seed )
-{
-    next = seed;
-}
-// Standard random functions redefinition end
-
-int32_t randr( int32_t min, int32_t max )
-{
-    return ( int32_t )rand1( ) % ( max - min + 1 ) + min;
-}
-
-void memcpy1( uint8_t *dst, const uint8_t *src, uint16_t size )
-{
-    while( size-- )
-    {
-        *dst++ = *src++;
-    }
-}
-
-void memcpyr( uint8_t *dst, const uint8_t *src, uint16_t size )
-{
-    dst = dst + ( size - 1 );
-    while( size-- )
-    {
-        *dst-- = *src++;
-    }
-}
-
-void memset1( uint8_t *dst, uint8_t value, uint16_t size )
-{
-    while( size-- )
-    {
-        *dst++ = value;
-    }
-}
-
-int8_t Nibble2HexChar( uint8_t a )
-{
-    if( a < 10 )
-    {
-        return '0' + a;
-    }
-    else if( a < 16 )
-    {
-        return 'A' + ( a - 10 );
-    }
-    else
-    {
-        return '?';
-    }
-}
diff --git a/boards/rtc-board.h b/boards/rtc-board.h
deleted file mode 100644
index 63527d5..0000000
--- a/boards/rtc-board.h
+++ /dev/null
@@ -1,203 +0,0 @@
-/*!
- * \file      rtc-board.h
- *
- * \brief     Target board RTC timer and low power modes management
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __RTC_BOARD_H__
-#define __RTC_BOARD_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-#include <stdbool.h>
-#include "timer.h"
-
-#define RTC_BOARD_FUNC_LOCATION __attribute__ ((section(".ramfunc")))
-
-/*!
- * \brief Temperature coefficient of the clock source
- */
-#define RTC_TEMP_COEFFICIENT                            ( -0.035 )
-
-/*!
- * \brief Temperature coefficient deviation of the clock source
- */
-#define RTC_TEMP_DEV_COEFFICIENT                        ( 0.0035 )
-
-/*!
- * \brief Turnover temperature of the clock source
- */
-#define RTC_TEMP_TURNOVER                               ( 25.0 )
-
-/*!
- * \brief Turnover temperature deviation of the clock source
- */
-#define RTC_TEMP_DEV_TURNOVER                           ( 5.0 )
-
-/*!
- * \brief Initializes the RTC timer
- *
- * \remark The timer is based on the RTC
- */
-void RtcInit( void );
-
-/*!
- * \brief Returns the minimum timeout value
- *
- * \retval minTimeout Minimum timeout value in in ticks
- */
-uint32_t RtcGetMinimumTimeout( void ) RTC_BOARD_FUNC_LOCATION;
-
-/*!
- * \brief converts time in ms to time in ticks
- *
- * \param[IN] milliseconds Time in milliseconds
- * \retval returns time in timer ticks
- */
-uint32_t RtcMs2Tick( TimerTime_t milliseconds );
-
-/*!
- * \brief converts time in ticks to time in ms
- *
- * \param[IN] time in timer ticks
- * \retval returns time in milliseconds
- */
-TimerTime_t RtcTick2Ms( uint32_t tick );
-
-/*!
- * \brief Performs a delay of milliseconds by polling RTC
- *
- * \param[IN] milliseconds Delay in ms
- */
-void RtcDelayMs( TimerTime_t milliseconds );
-
-/*!
- * \brief Calculates the wake up time between wake up and MCU start
- *
- * \note Resolution in RTC_ALARM_TIME_BASE
- */
-void RtcSetMcuWakeUpTime( void );
-
-/*!
- * \brief Returns the wake up time in ticks
- *
- * \retval wakeUpTime The WakeUpTime value in ticks
- */
-int16_t RtcGetMcuWakeUpTime( void );
-
-/*!
- * \brief Sets the alarm
- *
- * \note The alarm is set at now (read in this funtion) + timeout
- *
- * \param timeout [IN] Duration of the Timer ticks
- */
-void RtcSetAlarm( uint32_t timeout ) RTC_BOARD_FUNC_LOCATION;
-
-/*!
- * \brief Stops the Alarm
- */
-void RtcStopAlarm( void ) RTC_BOARD_FUNC_LOCATION;
-
-/*!
- * \brief Starts wake up alarm
- *
- * \note  Alarm in RtcTimerContext.Time + timeout
- *
- * \param [IN] timeout Timeout value in ticks
- */
-void RtcStartAlarm( uint32_t timeout ) RTC_BOARD_FUNC_LOCATION;
-
-/*!
- * \brief Sets the RTC timer reference
- *
- * \retval value Timer reference value in ticks
- */
-uint32_t RtcSetTimerContext( void ) RTC_BOARD_FUNC_LOCATION;
-  
-/*!
- * \brief Gets the RTC timer reference
- *
- * \retval value Timer value in ticks
- */
-uint32_t RtcGetTimerContext( void ) RTC_BOARD_FUNC_LOCATION;
-
-/*!
- * \brief Gets the system time with the number of seconds elapsed since epoch
- *
- * \param [OUT] milliseconds Number of milliseconds elapsed since epoch
- * \retval seconds Number of seconds elapsed since epoch
- */
-uint32_t RtcGetCalendarTime( uint16_t *milliseconds );
-
-/*!
- * \brief Get the RTC timer value
- *
- * \retval RTC Timer value
- */
-uint32_t RtcGetTimerValue( void );
-
-/*!
- * \brief Get the RTC timer elapsed time since the last Alarm was set
- *
- * \retval RTC Elapsed time since the last alarm in ticks.
- */
-uint32_t RtcGetTimerElapsedTime( void ) RTC_BOARD_FUNC_LOCATION;
-
-/*!
- * \brief Writes data0 and data1 to the RTC backup registers
- *
- * \param [IN] data0 1st Data to be written
- * \param [IN] data1 2nd Data to be written
- */
-void RtcBkupWrite( uint32_t data0, uint32_t data1 );
-
-/*!
- * \brief Reads data0 and data1 from the RTC backup registers
- *
- * \param [OUT] data0 1st Data to be read
- * \param [OUT] data1 2nd Data to be read
- */
-void RtcBkupRead( uint32_t* data0, uint32_t* data1 );
-
-/*!
- * \brief Processes pending timer events
- */
-void RtcProcess( void );
-
-/*!
- * \brief Computes the temperature compensation for a period of time on a
- *        specific temperature.
- *
- * \param [IN] period Time period to compensate in milliseconds
- * \param [IN] temperature Current temperature
- *
- * \retval Compensated time period
- */
-TimerTime_t RtcTempCompensation( TimerTime_t period, float temperature );
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __RTC_BOARD_H__
diff --git a/boards/rtk70e0118c00000bj/board-config.h b/boards/rtk70e0118c00000bj/board-config.h
deleted file mode 100644
index 7768d72..0000000
--- a/boards/rtk70e0118c00000bj/board-config.h
+++ /dev/null
@@ -1,86 +0,0 @@
-/*!
- * \file      board-config.h
- *
- * \brief     Board configuration for RENESAS RE01 256KB RTK70E0118C00000BJ
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- */
-#ifndef __BOARD_CONFIG_H__
-#define __BOARD_CONFIG_H__
-
-#if defined(__ICCARM__)                  /* IAR Compiler */
-#include <intrinsics.h>
-#endif
-#include "r_system_api.h"
-
-/* UART channel selection for the USB serial port */
-#if !defined (USE_UART0) && !defined(USE_UART4)
-#define USE_UART0
-#endif
-
-/*!
- * Defines the time required for the TCXO to wakeup [ms].
- */
-#if defined( SX1262DVK1DAS )
-#define BOARD_TCXO_WAKEUP_TIME                      5
-#else
-#define BOARD_TCXO_WAKEUP_TIME                      0
-#endif
-
-/*!
- * Board MCU pins definitions
- */
-#define RADIO_RESET                                 P0_0    /* ARDUINO_AN000 */
-
-#define RADIO_MOSI                                  P0_10   /* ARDUINO_MOSIA_B */
-#define RADIO_MISO                                  P8_15   /* ARDUINO_MISOA_B */
-#define RADIO_SCLK                                  P0_11   /* ARDUINO_RSPCKA_B */
-
-#define RADIO_NSS                                   P3_0    /* ARDUINO_IO7 */
-#define RADIO_BUSY                                  P2_5    /* ARDUINO_IO3_IRQ8_C */
-#define RADIO_DIO_1                                 P6_4    /* ARDUINO_IO6_GTIOC5B_B
-															 * NOTE: ARDUINO_IO5_GTIOC5A_B is connected to P6_3;
-															 * however, we need the DIO IRQ from the radio
-															 * chip. Thus, ARDUINO_IO6_GTIOC5B_B (P6_4 is assigned
-															 * as RASIO_DIO_1
-															 */
-
-#define RADIO_ANT_SW                                P4_9    /* ARDUINO_IO8 */
-
-#define LED_0                                       P2_10   /* LED_O (ORANGE) */
-#define LED_1                                       P4_10   /* LED_R (RED) */
-
-#define SW1                                         P5_9    /* SW1 */
-#define SW2                                         P5_8    /* SW2 */
-
-#define DCDC_EHC_EN                                 P2_9
-
-#define UART_TX                                     NC //dummy val //PA_2
-#define UART_RX                                     NC //dummy val //PA_3
-
-#endif // __BOARD_CONFIG_H__
diff --git a/boards/rtk70e0118c00000bj/board.c b/boards/rtk70e0118c00000bj/board.c
deleted file mode 100644
index b20be7d..0000000
--- a/boards/rtk70e0118c00000bj/board.c
+++ /dev/null
@@ -1,498 +0,0 @@
-/*!
-* \file      board.c
-*
-* \brief     Target board general functions implementation
-*
-* \copyright Revised BSD License, see section \ref LICENSE.
-*
-* \code
-*                ______                              _
-*               / _____)             _              | |
-*              ( (____  _____ ____ _| |_ _____  ____| |__
-*               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
-*               _____) ) ____| | | || |_| ____( (___| | | |
-*              (______/|_____)_|_|_| \__)_____)\____)_| |_|
-*              (C)2013-2017 Semtech
-*
-* \endcode
-*
-* \author    Miguel Luis ( Semtech )
-*
-* \author    Gregory Cristian ( Semtech )
-*/
-#include "utilities.h"
-#include "gpio.h"
-#include "adc.h"
-#include "spi.h"
-#include "i2c.h"
-#include "uart.h"
-#include "timer.h"
-#include "lpm-board.h"
-#include "rtc-board.h"
-#include "uart-board.h"
-#include "r_lpm_api.h"
-#include "delay.h"
-
-#if defined( SX1261DVK1BAS ) || defined( SX1261MB2xAS ) || defined( SX1262DVK1CAS ) || defined( SX1262DVK1DAS ) || defined( SX1262MB2xAS ) || defined(RTK70E017DC01000BJ)//Added SX1262MB2xAS - Navaneeth
-#include "sx126x-board.h"
-#elif defined( SX1272MB2DAS)
-#include "sx1272-board.h"
-#elif defined( SX1276MB1LAS ) || defined( SX1276MB1MAS )
-#include "sx1276-board.h"
-#endif
-#include "board.h"
-
-/*!
-* Unique Devices IDs
-*/
-#define         ID1                                 ( 0x1FF80050 )
-#define         ID2                                 ( 0x1FF80054 )
-#define         ID3                                 ( 0x1FF80064 )
-
-/*!
-* GPIO pins objects
-*/
-Gpio_t Led1;        /* LED1 */
-Gpio_t Led2;        /* LED2 */
-Gpio_t DcdcEnable;  /* On-board DCDC control */
-
-/*
-* MCU objects
-*/
-Uart_t Uart0;
-Uart_t Uart4;
-
-I2c_t  I2c0;
-
-/*!
-* Initializes the unused GPIO to a know status
-*/
-static void BoardUnusedIoInit( void );
-
-/*!
-* System Clock Initialization (one-time clock configuration at beginning)
-*/
-static void SystemClockInit( void );
-
-/*!
-* System Clock Configuration
-*/
-static void SystemClockConfig( void );
-
-/*!
-* Used to measure and calibrate the system wake-up time from STOP mode
-*/
-static void CalibrateSystemWakeupTime( void );
-
-/*!
-* System Clock Re-Configuration when waking up from STOP mode
-*/
-static void SystemClockReConfig( void );
-
-void sh3x_init(void);
-void sgp30_init(void);
-
-void print(char * str);
-
-/*!
-* Timer used at first boot to calibrate the SystemWakeupTime
-*/
-static TimerEvent_t CalibrateSystemWakeupTimeTimer;
-
-/*!
-* Flag to indicate if the MCU is Initialized
-*/
-static bool McuInitialized = false;
-
-/*!
-* Flag used to indicate if board is powered from the USB
-*/
-static bool UsbIsConnected = false;
-
-/*!
-* UART FIFO buffers size
-*/
-#ifdef USE_UART0
-#define UART0_FIFO_TX_SIZE                                256
-#define UART0_FIFO_RX_SIZE                                256
-#endif
-#ifdef USE_UART4
-#define UART4_FIFO_TX_SIZE                                256
-#define UART4_FIFO_RX_SIZE                                256
-#endif
-
-#ifdef USE_UART0
-uint8_t Uart0TxBuffer[UART0_FIFO_TX_SIZE];
-uint8_t Uart0RxBuffer[UART0_FIFO_RX_SIZE];
-#endif
-#ifdef USE_UART4
-uint8_t Uart4TxBuffer[UART4_FIFO_TX_SIZE];
-uint8_t Uart4RxBuffer[UART4_FIFO_RX_SIZE];
-#endif
-
-/*!
-* Flag to indicate if the SystemWakeupTime is Calibrated
-*/
-static bool SystemWakeupTimeCalibrated = false;
-
-/*!
-* Callback indicating the end of the system wake-up time calibration
-*/
-static void OnCalibrateSystemWakeupTimeTimerEvent( void* context )
-{
-  RtcSetMcuWakeUpTime( );
-  SystemWakeupTimeCalibrated = true;
-}
-
-void BoardCriticalSectionBegin( uint32_t *mask )
-{
-  *mask = __get_PRIMASK( );
-  __disable_irq( );
-}
-
-void BoardCriticalSectionEnd( uint32_t *mask )
-{
-  __set_PRIMASK( *mask );
-}
-
-void BoardInitPeriph( void )
-{
-  
-}
-
-void BoardInitMcu( void )
-{
-  if( McuInitialized == false )
-  {    
-    /* LEDs */
-    GpioInit( &Led1, LED_0, PIN_OUTPUT, PIN_PUSH_PULL, PIN_NO_PULL, 1 );
-    GpioInit( &Led2, LED_1, PIN_OUTPUT, PIN_PUSH_PULL, PIN_NO_PULL, 1 );
-
-    SystemClockInit();
-
-    SystemClockConfig( );
-    
-    /* Switch off IO power domains
-     * b7 VPM    = 1 (Switch off)
-     * b6 USBVCC = 1 (Switch off)
-     * b5 IOVCC3 = 0 (Switch on)
-     * b4 IOVCC2 = 0 (Switch on)
-     * b3 IOVCC1 = 0 (Switch on)
-     * b2 IOVCC0 = 0 (Switch on)
-     * b1 AV1CTL = 1 (Switch off)
-     * b0 AV0CTL = 0 (Switch on)
-     */
-    R_LPM_IOPowerSupplyModeSet(0xC2);
-    
-    UsbIsConnected = true;
-    
-    BoardUnusedIoInit( );
-    if( GetBoardPowerSource( ) == BATTERY_POWER )
-    {
-      // Disables OFF mode - Enables lowest power mode (STOP)
-      LpmSetOffMode( LPM_APPLI_ID, LPM_DISABLE );
-    }
-  }
-  else
-  {
-    SystemClockReConfig( );
-  }
-  
-#if defined( SX1261DVK1BAS ) || defined( SX1261MB2xAS ) || defined( SX1262DVK1CAS ) || defined( SX1262DVK1DAS ) || defined( SX1262MB2xAS ) || defined(RTK70E017DC01000BJ)//Added SX1262MB2xAS - Navaneeth
-  SpiInit( &SX126x.Spi, SPI_1, RADIO_MOSI, RADIO_MISO, RADIO_SCLK, NC);
-  SX126xIoInit( );
-#elif defined( SX1272MB2DAS)
-  SpiInit( &SX1272.Spi, SPI_1, RADIO_MOSI, RADIO_MISO, RADIO_SCLK, NC );
-  SX1272IoInit( );
-#elif defined( SX1276MB1LAS ) || defined( SX1276MB1MAS )
-  SpiInit( &SX1276.Spi, SPI_1, RADIO_MOSI, RADIO_MISO, RADIO_SCLK, NC );
-  SX1276IoInit( );
-#endif
-  
-  I2cInit( &I2c0, I2C_0, NC, NC );
-
-#if defined( USE_RTC )
-  RtcInit();
-#endif
-    
-  if( McuInitialized == false )
-  {
-    McuInitialized = true;
-    if( GetBoardPowerSource( ) == BATTERY_POWER )
-    {
-      CalibrateSystemWakeupTime( );
-    }
-  }
-}
-
-#ifdef USE_UART0
-void BoardUartConfigure(uint32_t baud)
-{
-  FifoInit( &Uart0.FifoTx, Uart0TxBuffer, UART0_FIFO_TX_SIZE );
-  FifoInit( &Uart0.FifoRx, Uart0RxBuffer, UART0_FIFO_RX_SIZE ); //not recessary as RX is disabled 
-  
-  // Configure your terminal for 8 Bits data (7 data bit + 1 parity bit), no parity and no flow ctrl
-  UartInit( &Uart0, UART_1, UART_TX, UART_RX );
-  UartConfig( &Uart0, RX_TX, baud, UART_8_BIT, UART_1_STOP_BIT, NO_PARITY, NO_FLOW_CTRL );
-}
-
-void BoardUartDeconfigure(void)
-{
-  UartDeInit( &Uart0);
-}
-#endif
-#ifdef USE_UART4
-void BoardUartConfigure(uint32_t baud)
-{
-  FifoInit( &Uart4.FifoTx, Uart4TxBuffer, UART4_FIFO_TX_SIZE );
-  FifoInit( &Uart4.FifoRx, Uart4RxBuffer, UART4_FIFO_RX_SIZE ); //not recessary as RX is disabled 
-  
-  // Configure your terminal for 8 Bits data (7 data bit + 1 parity bit), no parity and no flow ctrl
-  UartInit( &Uart4, UART_2, UART_TX, UART_RX );
-  UartConfig( &Uart4, RX_TX, baud, UART_8_BIT, UART_1_STOP_BIT, NO_PARITY, NO_FLOW_CTRL );
-}
-
-void BoardUartDeconfigure(void)
-{
-  UartDeInit( &Uart4);
-}
-#endif
-
-void BoardResetMcu( void )
-{
-  CRITICAL_SECTION_BEGIN( );
-  
-  //Restart system
-  NVIC_SystemReset( );
-  
-}
-
-void BoardDeInitMcu( void )
-{
-#if defined( SX1261DVK1BAS ) || defined( SX1261MB2xAS ) || defined( SX1262DVK1CAS ) || defined( SX1262DVK1DAS ) || defined( SX1262MB2xAS ) || defined(RTK70E017DC01000BJ)//Added SX1262MB2xAS - Navaneeth
-  SpiDeInit( &SX126x.Spi );
-  SX126xIoDeInit( );
-#elif defined( SX1272MB2DAS)
-  SpiDeInit( &SX1272.Spi );
-  SX1272IoDeInit( );
-#elif defined( SX1276MB1LAS ) || defined( SX1276MB1MAS )
-  SpiDeInit( &SX1276.Spi );
-  SX1276IoDeInit( );
-#endif
-  
-  I2cDeInit( &I2c0);
-}
-
-uint32_t BoardGetRandomSeed( void )
-{
-  return ( ( *( uint32_t* )ID1 ) ^ ( *( uint32_t* )ID2 ) ^ ( *( uint32_t* )ID3 ) );
-}
-
-void BoardGetUniqueId( uint8_t *id )
-{
-  id[7] = ( ( *( uint32_t* )ID1 )+ ( *( uint32_t* )ID3 ) ) >> 24;
-  id[6] = ( ( *( uint32_t* )ID1 )+ ( *( uint32_t* )ID3 ) ) >> 16;
-  id[5] = ( ( *( uint32_t* )ID1 )+ ( *( uint32_t* )ID3 ) ) >> 8;
-  id[4] = ( ( *( uint32_t* )ID1 )+ ( *( uint32_t* )ID3 ) );
-  id[3] = ( ( *( uint32_t* )ID2 ) ) >> 24;
-  id[2] = ( ( *( uint32_t* )ID2 ) ) >> 16;
-  id[1] = ( ( *( uint32_t* )ID2 ) ) >> 8;
-  id[0] = ( ( *( uint32_t* )ID2 ) );
-}
-
-uint16_t BoardBatteryMeasureVolage( void )
-{
-  return 0;
-}
-
-uint32_t BoardGetBatteryVoltage( void )
-{
-  return 0;
-}
-
-uint8_t BoardGetBatteryLevel( void )
-{
-  return 0;
-}
-
-static void BoardUnusedIoInit( void )
-{
-  
-}
-
-void SystemClockInit( void )
-{
-  R_SYS_SystemClockSOSCSet();
-
-  R_SYS_MediumSpeedClockStop();
-
-//  R_SYS_LowSpeedClockStop();
-  
-  R_LPM_BackBiasModeEnable(LPM_VBB_CLOCK_SOSC);
-}
-
-void SystemClockConfig( void )
-{
-  if (R_LPM_BackBiasModeGet() == LPM_BACKBIAS_MODE_VBB)
-  {
-    R_LPM_BackBiasModeExit();
-  }
-  
-  if (R_SYS_HighSpeedModeSet() != 0)
-  {
-    while(1);
-  }
-  
-  R_SYS_MainOscSpeedClockStart();
-  while(0x00 == (0x08 & R_SYS_OscStabilizationFlagGet()));
-  
-  if (R_SYS_SystemClockMOSCSet() != 0)
-  {
-    while(1);
-  }
-
-      if (0 != R_SYS_SystemClockDividerSet(SYSTEM_CLOCK_DIV_1, SYSTEM_CLOCK_DIV_64))
-      {
-          while(1);
-      }
-}
-
-void CalibrateSystemWakeupTime( void )
-{
-  if( SystemWakeupTimeCalibrated == false )
-  {
-    TimerInit( &CalibrateSystemWakeupTimeTimer, OnCalibrateSystemWakeupTimeTimerEvent );
-    TimerSetValue( &CalibrateSystemWakeupTimeTimer, 1000 );
-    TimerStart( &CalibrateSystemWakeupTimeTimer );
-    while( SystemWakeupTimeCalibrated == false )
-    {
-      
-    }
-  }
-}
-
-void SystemClockReConfig( void )
-{
-  
-}
-
-void SysTick_Handler( void )
-{
-  
-}
-
-uint8_t GetBoardPowerSource( void )
-{
-  if( UsbIsConnected == false )
-  {
-    return BATTERY_POWER;
-  }
-  else
-  {
-    return USB_POWER;
-  }
-}
-
-void BoardLowPowerHandler( void )
-{
-#if 0 // FIXME IRQ control is done in the lower level.
-    __disable_irq( );
-    /*!
-     * If an interrupt has occurred after __disable_irq( ), it is kept pending
-     * and cortex will not enter low power anyway
-     */
-#endif
-
-    LpmEnterLowPower( );
-
-#if 0 // FIXME IRQ control is done in the lower level.
-    __enable_irq( );
-#endif
-}
-
-#if !defined ( __CC_ARM )
-/*
-* Function to be used by stdout for printf etc
-*/
-int _write( int fd, const void *buf, size_t count )
-{
-#ifdef USE_UART0
-  while( UartPutBuffer( &Uart0, ( uint8_t* )buf, ( uint16_t )count ) != 0 ){ };
-#endif
-#ifdef USE_UART4
-  while( UartPutBuffer( &Uart4, ( uint8_t* )buf, ( uint16_t )count ) != 0 ){ };
-#endif
-  return count;
-}
-
-/*
-* Function to be used by stdin for scanf etc
-*/
-int _read( int fd, const void *buf, size_t count )
-{
-  size_t bytesRead = 0;
-#ifdef USE_UART0
-  while( UartGetBuffer( &Uart0, ( uint8_t* )buf, count, ( uint16_t* )&bytesRead ) != 0 ){ };
-  // Echo back the character
-  while( UartPutBuffer( &Uart0, ( uint8_t* )buf, ( uint16_t )bytesRead ) != 0 ){ };
-#endif
-#ifdef USE_UART4
-  while( UartGetBuffer( &Uart4, ( uint8_t* )buf, count, ( uint16_t* )&bytesRead ) != 0 ){ };
-  // Echo back the character
-  while( UartPutBuffer( &Uart4, ( uint8_t* )buf, ( uint16_t )bytesRead ) != 0 ){ };
-#endif
-  return bytesRead;
-}
-
-#else
-
-// Keil compiler
-int fputc( int c, FILE *stream )
-{
-  while( UartPutChar( &Uart2, ( uint8_t )c ) != 0 );
-  return c;
-}
-
-int fgetc( FILE *stream )
-{
-  uint8_t c = 0;
-  while( UartGetChar( &Uart2, &c ) != 0 );
-  // Echo back the character
-  while( UartPutChar( &Uart2, c ) != 0 );
-  return ( int )c;
-}
-
-#endif
-
-#ifdef USE_FULL_ASSERT
-/*
-* Function Name  : assert_failed
-* Description    : Reports the name of the source file and the source line number
-*                  where the assert_param error has occurred.
-* Input          : - file: pointer to the source file name
-*                  - line: assert_param error line source number
-* Output         : None
-* Return         : None
-*/
-void assert_failed( uint8_t* file, uint32_t line )
-{
-  /* User can add his own implementation to report the file name and line number,
-  ex: printf("Wrong parameters value: file %s on line %lu\r\n", file, line) */
-  
-  printf( "Wrong parameters value: file %s on line %lu\r\n", ( const char* )file, line );
-  /* Infinite loop */
-  while( 1 )
-  {
-  }
-}
-#endif
-
-void print(char * str)
-{
-#ifdef USE_UART0
-  UartMcuPutBuffer(&Uart0, (uint8_t*)str, strlen(str));
-#endif
-#ifdef USE_UART4
-  UartMcuPutBuffer(&Uart4, (uint8_t*)str, strlen(str));
-#endif
-}
diff --git a/boards/rtk70e0118c00000bj/delay-board.c b/boards/rtk70e0118c00000bj/delay-board.c
deleted file mode 100644
index 7a0539b..0000000
--- a/boards/rtk70e0118c00000bj/delay-board.c
+++ /dev/null
@@ -1,40 +0,0 @@
-/*!
- * \file      delay-board.c
- *
- * \brief     Target board delay implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- */
-#include "r_system_api.h"
-#include "r_lpm_api.h"
-#include "delay-board.h"
-#include "agt0_timer.h"
-
-void DelayMsMcu( uint32_t ms )
-{
-    agt0_timer_start( ms );
-
-    while (false == agt0_timer_check_expired())
-    {
-        /* CPU enters the sleep mode */
-        R_LPM_SleepModeEntry();
-    }
-    agt0_timer_stop();
-}
diff --git a/boards/rtk70e0118c00000bj/gpio-board.c b/boards/rtk70e0118c00000bj/gpio-board.c
deleted file mode 100644
index 0ca592a..0000000
--- a/boards/rtk70e0118c00000bj/gpio-board.c
+++ /dev/null
@@ -1,289 +0,0 @@
-/*!
-* \file      gpio-board.c
-*
-* \brief     Target board GPIO driver implementation
-*
-* \copyright Revised BSD License, see section \ref LICENSE.
-*
-* \code
-*                ______                              _
-*               / _____)             _              | |
-*              ( (____  _____ ____ _| |_ _____  ____| |__
-*               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
-*               _____) ) ____| | | || |_| ____( (___| | | |
-*              (______/|_____)_|_|_| \__)_____)\____)_| |_|
-*              (C)2013-2017 Semtech
-*
-* \endcode
-*
-* \author    Miguel Luis ( Semtech )
-*
-* \author    Gregory Cristian ( Semtech )
-*/
-#include "board-config.h"
-#include "RE01_256KB.h"
-#include "utilities.h"
-#include "rtc-board.h"
-#include "gpio-board.h"
-
-static void GpioIrqInputEnable( Gpio_t *obj);
-
-void GpioMcuInit( Gpio_t *obj, PinNames pin, PinModes mode, PinConfigs config, PinTypes type, uint32_t value )
-{
-  obj->pin = pin;
-  
-  if (pin == NC)
-  {
-    return;
-  }
-  
-  obj->pull = type;
-  
-  uint8_t port = (pin & 0xf0) >> 4;
-  uint32_t *pAddr = (uint32_t *) (PFS_BASE + (0x40 * port) + (0x04 * (0x0f & pin) ));
-  uint32_t tempReg = *pAddr;
-  
-  // Enable Multifunction Pin Controller write
-  PFS->PWPR_b.B0WI &= ~(0x1);
-  while (PFS->PWPR_b.B0WI)
-  {
-    asm("nop");
-  }
-  PFS->PWPR_b.PFSWE |= 0x1;
-  
-  switch (mode)
-  {
-  case PIN_INPUT: 
-    tempReg &= ~(0x1 << 2);
-    (type) ? (tempReg |= (0x1 << 4)) : (tempReg &= ~(0x1 << 4));
-    break;
-  case PIN_OUTPUT: 
-    tempReg |= (0x1 << 2);
-    (value) ? (tempReg |= 0x1) : (tempReg &= ~(0x1));
-    if (PIN_PUSH_PULL == config)
-    {
-      tempReg &= ~(0x3 << 6);
-    }
-    else if (PIN_OPEN_DRAIN == config)
-    {
-      tempReg |= (0x3 << 6);
-    }
-    else 
-    {
-      // TTL input
-    }
-    
-    if (PIN_PULL_UP == type)
-    {
-      tempReg |= (0x1 << 4);
-    }
-    else
-    { 
-      tempReg &= ~(0x1 << 4);
-    }
-    break;
-  default:
-    break;
-  }
-  *pAddr = tempReg;
-  
-  PFS->PWPR_b.PFSWE &= ~(0x1);
-  PFS->PWPR_b.B0WI |= 0x1;
-}
-
-void GpioMcuSetInterrupt( Gpio_t *obj, IrqModes irqMode, IrqPriorities irqPriority, GpioIrqHandler *irqHandler )
-{
-  if(obj == NULL)
-  {
-    return;
-  }
-  
-  if (P0_14 == obj->pin)
-  {
-    GpioIrqInputEnable(obj);
-
-    ICU->IRQCR2_b.IRQMD = 0x1;
-    R_SYS_IrqEventLinkSet(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ2, 0x1, (system_int_cb_t)irqHandler);
-    R_SYS_IrqStatusClear(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ2);
-    R_NVIC_SetPriority(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ2, 3);
-    R_NVIC_EnableIRQ(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ2);
-
-  }
-  else if (P6_4 == obj->pin)
-  {
-    GpioIrqInputEnable(obj);
-    
-    ICU->IRQCR3_b.IRQMD = 0x1;
-    R_SYS_IrqEventLinkSet(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ3, 0x1, (system_int_cb_t)irqHandler);
-    R_SYS_IrqStatusClear(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ3);
-    R_NVIC_SetPriority(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ3, 1);
-    R_NVIC_EnableIRQ(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ3);
-    
-  }
-  else if (P5_8 == obj->pin)
-  {
-    GpioIrqInputEnable(obj);
-
-    ICU->IRQCR4_b.IRQMD = 0x1;
-    R_SYS_IrqEventLinkSet(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ4, 0x13, (system_int_cb_t)irqHandler);
-    R_SYS_IrqStatusClear(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ4);
-    R_NVIC_SetPriority(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ4, 1);
-    R_NVIC_EnableIRQ(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ4);
-
-  }
-  else if (P2_4 == obj->pin)
-  {
-    GpioIrqInputEnable(obj);
-
-    ICU->IRQCR7_b.IRQMD = 0x1;
-    R_SYS_IrqEventLinkSet(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ7, 0x13, (system_int_cb_t)irqHandler);
-    R_SYS_IrqStatusClear(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ7);
-    R_NVIC_SetPriority(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ7, 1);
-    R_NVIC_EnableIRQ(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ7);
-
-  }
-  else if (P2_5 == obj->pin)
-  {
-    GpioIrqInputEnable(obj);
-
-    ICU->IRQCR8_b.IRQMD = 0x1;
-    R_SYS_IrqEventLinkSet(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ8, 0x1E, (system_int_cb_t)irqHandler);
-    R_SYS_IrqStatusClear(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ8);
-    R_NVIC_SetPriority(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ8, 1);
-    R_NVIC_EnableIRQ(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ8);
-
-  }
-  else if (P5_9 == obj->pin)
-  {
-    GpioIrqInputEnable(obj);
-
-    KINT->KRCTL = 0x09; // rising edge, use flags
-    KINT->KRM   = 0x04; //
-    R_SYS_IrqEventLinkSet(SYSTEM_CFG_EVENT_NUMBER_KEY_INTKR, 0x17, (system_int_cb_t)irqHandler);
-    R_SYS_IrqStatusClear(SYSTEM_CFG_EVENT_NUMBER_KEY_INTKR);
-    R_NVIC_SetPriority(SYSTEM_CFG_EVENT_NUMBER_KEY_INTKR, 1);
-    R_NVIC_EnableIRQ(SYSTEM_CFG_EVENT_NUMBER_KEY_INTKR);
-    
-  }
-  else
-  {
-    // no other GPIO interrupts configured
-  }     
-}
-
-void GpioMcuRemoveInterrupt( Gpio_t *obj )
-{
-  if(obj == NULL)
-  {
-    return;
-  }
-  
-  if (P4_11 == obj->pin)
-  {
-    R_NVIC_DisableIRQ(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ0);
-  }
-  else if (P2_7 == obj->pin)
-  {
-    R_NVIC_DisableIRQ(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ1);
-  }
-  else if (P4_10 == obj->pin)
-  {
-    R_NVIC_DisableIRQ(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ2);
-    R_SYS_IrqStatusClear(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ2);
-  }
-  else if (P4_9 == obj->pin)
-  {
-    R_NVIC_DisableIRQ(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ3);
-  }
-  else if (P1_7 == obj->pin)
-  {
-    R_NVIC_DisableIRQ(SYSTEM_CFG_EVENT_NUMBER_PORT_IRQ7);
-  }
-  else if (P5_10 == obj->pin)
-  {
-    R_NVIC_DisableIRQ(SYSTEM_CFG_EVENT_NUMBER_KEY_INTKR);
-  }
-  else
-  {
-    // no other GPIO interrupts configured
-  }        
-}
-
-void GpioMcuWrite( Gpio_t *obj, uint32_t value )
-{
-  if ( (NULL == obj) || (NC == obj->pin) )
-  {
-    return;
-  }
-  
-  uint8_t port = ( (obj->pin & 0xf0) >> 4);
-  uint8_t pin = obj->pin & 0xf;
-  uint32_t *pAddr = (uint32_t *) (PORT0_BASE + (0x20 * port) ); 
-  
-  if (value)
-  {
-    *pAddr |= 0x1 << (pin + 16);
-  }
-  else
-  {
-    *pAddr &= ~( 0x1 << (pin +16) );
-  }
-}
-
-void GpioMcuToggle( Gpio_t *obj )
-{
-  if ( (NULL == obj) || (NC == obj->pin) )
-  {
-    return;
-  }
-  
-  uint8_t port = ( (obj->pin & 0xf0) >> 4);
-  uint8_t pin = obj->pin & 0xf;
-  uint32_t *pAddr = (uint32_t *) (PORT0_BASE + (0x20 * port)); 
-  
-  *pAddr ^= 0x1 << (pin + 16);
-}
-
-uint32_t GpioMcuRead( Gpio_t *obj )
-{
-  if ( (NULL == obj) || (NC == obj->pin) )
-  {
-    return 0;
-  }
-  
-  uint8_t port = ( (obj->pin & 0xf0) >> 4);
-  uint8_t pin = obj->pin & 0xf;
-  uint32_t *pAddr = (uint32_t *) (PORT0_BASE + (0x20 * port) + 4); 
-  
-  uint32_t value = *pAddr & (0x1 << pin); 
-  
-  return (value > 0? 1 : 0);
-}
-
-static void GpioIrqInputEnable( Gpio_t *obj)
-{
-  if ( (NULL == obj) || (NC == obj->pin) )
-  {
-    return;
-  }
-  
-  uint8_t port = ( (obj->pin & 0xf0) >> 4);
-  uint8_t pin = obj->pin & 0xf;
-  uint32_t *pAddr = (uint32_t *) (PFS_BASE + (0x40 * port) + (0x04 * (0x0f & pin) ));
-  uint32_t tempReg = *pAddr;
-  
-  // Enable Multifunction Pin Controller write
-  PFS->PWPR_b.B0WI &= ~(0x1);
-  while (PFS->PWPR_b.B0WI)
-  {
-    asm("nop");
-  }
-  PFS->PWPR_b.PFSWE |= 0x1;
-  
-  tempReg |= (0x1 << 14);
-  
-  *pAddr = tempReg;
-  
-  PFS->PWPR_b.PFSWE &= ~(0x1);
-  PFS->PWPR_b.B0WI |= 0x1;
-}
diff --git a/boards/rtk70e0118c00000bj/i2c-board.c b/boards/rtk70e0118c00000bj/i2c-board.c
deleted file mode 100644
index 0034afc..0000000
--- a/boards/rtk70e0118c00000bj/i2c-board.c
+++ /dev/null
@@ -1,123 +0,0 @@
-/*!
-* \file      i2c-board.c
-*
-* \brief     Target board I2C driver implementation
-*
-* \copyright Revised BSD License, see section \ref LICENSE.
-*
-* \code
-*                ______                              _
-*               / _____)             _              | |
-*              ( (____  _____ ____ _| |_ _____  ____| |__
-*               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
-*               _____) ) ____| | | || |_| ____( (___| | | |
-*              (______/|_____)_|_|_| \__)_____)\____)_| |_|
-*              (C)2013-2017 Semtech
-*
-* \endcode
-*
-* \author    Miguel Luis ( Semtech )
-*
-* \author    Gregory Cristian ( Semtech )
-*/
-#include "board-config.h"
-#include "r_i2c_cmsis_api.h"
-#include "utilities.h"
-#include "i2c-board.h"
-
-/*!
-*  The value of the maximal timeout for I2C waiting loops
-*/
-#define TIMEOUT_MAX                                 0x8000
-
-static void callback(uint32_t event);
-
-extern ARM_DRIVER_I2C Driver_I2C0;
-extern ARM_DRIVER_I2C Driver_I2C1;
-
-static ARM_DRIVER_I2C * I2cHandle[] = {&Driver_I2C0, &Driver_I2C1};
-
-static uint8_t eventWait;
-
-void I2cMcuInit( I2c_t *obj, I2cId_t i2cId, PinNames scl, PinNames sda )
-{
-  obj->I2cId = i2cId;
-  
-  I2cHandle[obj->I2cId]->Initialize(callback); 
-  
-  I2cHandle[obj->I2cId]->PowerControl(ARM_POWER_FULL); 
-}
-
-void I2cMcuFormat( I2c_t *obj, I2cMode mode, I2cDutyCycle dutyCycle, bool I2cAckEnable, I2cAckAddrMode AckAddrMode, uint32_t I2cFrequency )
-{  
-  I2cHandle[obj->I2cId]->Control(ARM_I2C_BUS_SPEED, ARM_I2C_BUS_SPEED_STANDARD);
-}
-
-void I2cMcuResetBus( I2c_t *obj )
-{
- 
-}
-
-void I2cMcuDeInit( I2c_t *obj )
-{
-  I2cHandle[obj->I2cId]->Uninitialize();
-}
-
-void I2cSetAddrSize( I2c_t *obj, I2cAddrSize addrSize )
-{
-}
-
-uint8_t I2cMcuWrite( I2c_t *obj, uint8_t deviceAddr, uint16_t addr, uint8_t data )
-{
-  uint8_t status = FAIL;
-  uint32_t timeout = 0x020000;
-
-  eventWait = 0;
-
-  status = I2cHandle[obj->I2cId]->MasterTransmit(deviceAddr, &data, 1, true);
-
-  while(eventWait == 0 && --timeout);
-
-  return ((status == ARM_DRIVER_OK) && (eventWait != 0)) ? SUCCESS : FAIL;
-}
-
-uint8_t I2cMcuWriteBuffer( I2c_t *obj, uint8_t deviceAddr, uint16_t addr, uint8_t *buffer, uint16_t size )
-{
-  uint8_t status = FAIL;
-  uint32_t timeout = 0x020000;
-  
-  eventWait = 0;
-  
-  status = I2cHandle[obj->I2cId]->MasterTransmit(deviceAddr, buffer, size, false);
-  
-  while(eventWait == 0 && --timeout);
-  
-  return ((status == ARM_DRIVER_OK) && (eventWait != 0)) ? SUCCESS : FAIL;
-}
-
-uint8_t I2cMcuReadBuffer( I2c_t *obj, uint8_t deviceAddr, uint16_t addr, uint8_t *buffer, uint16_t size )
-{
-  uint8_t status = FAIL;
-  uint32_t timeout = 0x020000;
-  
-  eventWait = 0;
-  
-  status = I2cHandle[obj->I2cId]->MasterReceive(deviceAddr, buffer, size, false);
-  
-  while(eventWait == 0 && --timeout);
-  
-  return ((status == ARM_DRIVER_OK) && (eventWait != 0)) ? SUCCESS : FAIL;
-}
-
-uint8_t I2cMcuWaitStandbyState( I2c_t *obj, uint8_t deviceAddr )
-{
-  uint8_t status = FAIL;
-  
-  
-  return status;
-}
-
-static void callback(uint32_t event)
-{
-  eventWait = (uint8_t)event;
-}
diff --git a/boards/rtk70e0118c00000bj/lpm-board.c b/boards/rtk70e0118c00000bj/lpm-board.c
deleted file mode 100644
index 4b7d4ec..0000000
--- a/boards/rtk70e0118c00000bj/lpm-board.c
+++ /dev/null
@@ -1,243 +0,0 @@
-/*!
- * \file      lpm-board.c
- *
- * \brief     Target board low power modes management
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech - STMicroelectronics
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    MCD Application Team (C)( STMicroelectronics International )
- */
-#include <stdint.h>
-#include "utilities.h"
-#include "lpm-board.h"
-#include "r_lpm_api.h"
-#include "sys_lpm.h"
-#include "board.h"
-#include "radio.h"
-#include "Commissioning.h"
-#include "gpio.h"
-
-/* Mask register backup for the critical section */
-static uint32_t mask;
-static uint32_t maskStandby;
-
-/* Software status flag for the standby mode control */
-static uint32_t StandbyModeDisable = 0;
-static uint32_t OffModeDisable = 1;
-
-/* Quick radio resume procedure after shutting down the radio */
-static void     resumeRadioAfterShutdown( void );
-
-/* GPIO objects used for the low power control */
-extern Gpio_t   DcdcEnable;
-extern Gpio_t   AntPow;
-
-void LpmSetOffMode( LpmId_t id, LpmSetMode_t mode )
-{
-}
-
-void LpmSetLowPowerMode( LpmId_t id, LpmSetMode_t mode )
-{
-    BoardCriticalSectionBegin( &mask );
-
-    switch( mode )
-    {
-        case LPM_DISABLE:
-        {
-            StandbyModeDisable |= ( uint32_t )id;
-            break;
-        }
-        case LPM_ENABLE:
-        {
-            StandbyModeDisable &= ~( uint32_t )id;
-            break;
-        }
-        case LPM_BOARD_DCDC_DISABLE:
-        {
-            GpioWrite( &DcdcEnable, 0 );
-
-            /* ANT_SW is changed to Low for preventing a leakage current.     */
-            /* P409, the RE pin connected to ANT_SW, belongs to the           */
-            /* VCC/IOVCC power domain, so even if DCDC is turned off,         */
-            /* the power will not be turned off like the pins in other domains.*/
-            GpioWrite( &AntPow, 0 );
-            
-            break;
-        }
-        case LPM_BOARD_DCDC_ENABLE:
-        {
-            /* ANT_SW is changed back to High. */
-            GpioWrite( &AntPow, 1 );
-
-            GpioWrite( &DcdcEnable, 1 );
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-
-    BoardCriticalSectionEnd( &mask );
-    return;
-}
-
-void LpmEnterLowPower( void )
-{
-    if( StandbyModeDisable != 0 )
-    {
-        /*!
-        * SLEEP mode is required
-        */
-        LpmEnterSleepMode( );
-        LpmExitSleepMode( );
-    }
-    else
-    {
-        if( OffModeDisable != 0 )
-        {
-            /*!
-            * Standby mode is required
-            */
-            LpmEnterStandbyMode( );
-            LpmExitStandbyMode( );
-        }
-        else
-        {
-            /*!
-            * OFF mode is required
-            */
-            LpmEnterOffMode( );
-            LpmExitOffMode( );
-        }
-    }
-}
-
-LpmGetMode_t LpmGetMode(void)
-{
-    LpmGetMode_t mode;
-
-    BoardCriticalSectionBegin( &mask );
-
-    if( StandbyModeDisable != 0 )
-    {
-        mode = LPM_SLEEP_MODE;
-    }
-    else
-    {
-        mode = LPM_STANDBY_MODE;
-    }
-
-    BoardCriticalSectionEnd( &mask );
-    return mode;
-}
-
-void LpmEnterSleepMode( void)
-{
-#if 0 // FIXME This treatment can cause a timing issue for LoRaMAC time management so disabled for now
-    /* Change the clock divider setting to lower power consumption down while in standby mode
-     * Assumption here is the system clock and peripheral clock are both 32MHz
-     * Set the frequency down to 4MHz here */
-    R_SYS_SystemClockDividerSet( SYSTEM_CLOCK_DIV_8, SYSTEM_CLOCK_DIV_8);
-#endif
-
-    R_LPM_SleepModeEntry();
-
-#if 0 // FIXME This treatment can cause a timing issue for LoRaMAC time management so disabled for now
-                    /* Set the clock divider setting back */
-                    R_SYS_SystemClockDividerSet( SYSTEM_CLOCK_DIV_1, SYSTEM_CLOCK_DIV_1);
-#endif
-}
-
-void LpmExitSleepMode( void )
-{
-}
-
-void LpmEnterStandbyMode( void )
-{
-    /* Block interrupts to make a secure shut-off */
-    BoardCriticalSectionBegin( &maskStandby );
-
-    BoardDeInitMcu();
-
-    /* Turn on the function to prevent the propagation of indeterminate values. */
-    R_LPM_IOPowerSupplyModeSet(LPM_IOPOWER_SUPPLY_ALL);   
-    
-    /* Turn the buck boost DCDC off to supply +3.3V to the radio module */
-    LpmSetLowPowerMode(LPM_APPLI_ID, LPM_BOARD_DCDC_DISABLE);
-
-    system_lpm_prepare();
-    /* Enter in the standby mode */
-    system_lpm_enter();
-}
-
-void LpmExitStandbyMode( void )
-{
-    /* Wakeup from the standby mode by an interrupt */
-    system_lpm_exit();
-
-    system_lpm_restore();
-
-    /* Turn the buck boost DCDC on to supply +3.3V to the radio module */
-    LpmSetLowPowerMode(LPM_APPLI_ID, LPM_BOARD_DCDC_ENABLE);
-
-    /* Turn off the function to prevent the propagation of indeterminate values. */
-    R_LPM_IOPowerSupplyModeSet(LPM_IOPOWER_SUPPLY_NONE);    
-    
-    /* Allow interrupts from this point */
-    BoardCriticalSectionEnd( &maskStandby );
-
-    BoardInitMcu();
-
-    /* Resume radio chip for coming LoRaWAN communication */
-    resumeRadioAfterShutdown();
-}
-
-void LpmEnterOffMode( void )
-{
-}
-
-void LpmExitOffMode( void )
-{
-}
-
-/**************************************************************************//**
-* @brief   Quick radio restart procedures after shutting a LoRa radio chip down
-* once LoRaWAN is activated. These procedures initializes a LoRa radio chip
-* that is performed in the LoRaMacInitialization API. To restart the LoRaWAN
-* communication after a LoRa radio chip is shut down, you can take two ways.
-* (1) Keep LoRaMAC context in MAC and just resume the radio condition by
-*     calling this function
-* (2) Call LoRaMacDeInitialization API again to restart LoRaMAC initialization
-*     that also invokes a LoRa radio chip initialization.
-*
-* @param   none
-* @retval  none
-******************************************************************************/
-void resumeRadioAfterShutdown ( void )
-{
-    /* Passing NULL to the radio API below will keep the radio events
-     * configuration in the radio layer as it is.
-     */
-    Radio.Init( NULL );
-
-    /* Set non-public here if needed */
-    Radio.SetPublicNetwork( LORAWAN_PUBLIC_NETWORK );
-
-    Radio.Sleep( );
-}
diff --git a/boards/rtk70e0118c00000bj/lpm-board.h b/boards/rtk70e0118c00000bj/lpm-board.h
deleted file mode 100644
index b0ae27c..0000000
--- a/boards/rtk70e0118c00000bj/lpm-board.h
+++ /dev/null
@@ -1,152 +0,0 @@
-/*!
- * \file      lpm-board.h
- *
- * \brief     Target board low power modes management
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech - STMicroelectronics
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    MCD Application Team (C)( STMicroelectronics International )
- */
-#ifndef __LPM_BOARD_H__
-#define __LPM_BOARD_H__
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-#include "board-config.h"
-
-/*!
- * Low power manager configuration
- */
-typedef enum
-{
-    LPM_APPLI_ID   =                                ( 1 << 0 ),
-    LPM_LIB_ID     =                                ( 1 << 1 ),
-    LPM_RTC_ID     =                                ( 1 << 2 ),
-    LPM_GPS_ID     =                                ( 1 << 3 ),
-    LPM_UART_RX_ID =                                ( 1 << 4 ),
-    LPM_UART_TX_ID =                                ( 1 << 5 ),
-} LpmId_t;
-
-/*!
- * Low Power Mode selected
- */
-typedef enum
-{
-    LPM_ENABLE = 0,
-    LPM_BOARD_DCDC_ENABLE,
-    LPM_BOARD_DCDC_DISABLE,
-    LPM_DISABLE,
-} LpmSetMode_t;
-
-typedef enum
-{
-    LPM_SLEEP_MODE,
-    LPM_STANDBY_MODE,
-    LPM_OFF_MODE,
-} LpmGetMode_t;
-
-#define LPM_FUNC_LOCATION __attribute__ ((section(".ramfunc")))
-
-/*!
- * \brief  This API returns the Low Power Mode selected that will be applied when the system will enter low power mode
- *         if there is no update between the time the mode is read with this API and the time the system enters
- *         low power mode.
- *
- * \retval mode Selected low power mode
- */
-LpmGetMode_t LpmGetMode( void ) LPM_FUNC_LOCATION;
-
-/*!
- * \brief  This API notifies the low power manager if the specified user allows the standby mode or not.
- *         When the application does not require the system clock, it enters standby mode if at least one user disallow
- *         Off Mode. Otherwise, it enters Off Mode.
- *         The default mode selection for all users is Off mode enabled
- *
- * \param [IN] id   Process Id
- * \param [IN] mode Selected mode
- */
-void LpmSetLowPowerMode( LpmId_t id, LpmSetMode_t mode ) LPM_FUNC_LOCATION;
-
-/*!
- * \brief  This API notifies the low power manager if the specified user allows the Off mode or not.
- *         When the application does not require the system clock, it enters Stop Mode if at least one user disallow
- *         Off Mode. Otherwise, it enters Off Mode.
- *         The default mode selection for all users is Off mode enabled
- *
- * \param [IN] id   Process Id
- * \param [IN] mode Selected mode
- */
-void LpmSetOffMode(LpmId_t id, LpmSetMode_t mode ) LPM_FUNC_LOCATION;
-
-/*!
- * \brief  This API shall be used by the application when there is no more code to execute so that the system may
- *         enter low-power mode. The mode selected depends on the information received from LpmOffModeSelection( ) and
- *         LpmSysclockRequest( )
- *         This function shall be called in critical section
- */
-void LpmEnterLowPower( void ) LPM_FUNC_LOCATION;
-
-/*!
- * \brief  This API is called by the low power manager in a critical section (PRIMASK bit set) to allow the
- *         application to implement dedicated code before entering Sleep Mode
- */
-void LpmEnterSleepMode( void ) LPM_FUNC_LOCATION;
-
-/*!
- * \brief  This API is called by the low power manager in a critical section (PRIMASK bit set) to allow the
- *         application to implement dedicated code before getting out from Sleep Mode
- */
-void LpmExitSleepMode( void ) LPM_FUNC_LOCATION;
-
-/*!
- * \brief  This API is called by the low power manager in a critical section (PRIMASK bit set) to allow the
- *         application to implement dedicated code before entering Standby Mode
- */
-void LpmEnterStandbyMode( void ) LPM_FUNC_LOCATION;
-
-/*!
- * \brief  This API is called by the low power manager in a critical section (PRIMASK bit set) to allow the
- *         application to implement dedicated code before getting out from Standby Mode. This is where the
- *         application should reconfigure the clock tree when needed
- */
-void LpmExitStandbyMode( void ) LPM_FUNC_LOCATION;
-
-/*!
- * \brief  This API is called by the low power manager in a critical section (PRIMASK bit set) to allow the
- *         application to implement dedicated code before entering Off mode. This is where the application could save
- *         data in the retention memory as the RAM memory content will be lost
- */
-void LpmEnterOffMode( void ) LPM_FUNC_LOCATION;
-
-/*!
- * @brief  This API is called by the low power manager in a critical section (PRIMASK bit set) to allow the
- *         application to implement dedicated code before getting out from Off mode. This can only happen when the
- *         Off mode is finally not entered. In that case, the application may reverse some configurations done before
- *         entering Off mode. When Off mode is successful, the system is reset when getting out from this low-power mode
- */
-void LpmExitOffMode( void ) LPM_FUNC_LOCATION;
-
-void BatRecoverySstbyEntry( void );
-void BatRecoverySstbyExit( void );
-#ifdef __cplusplus
-}
-#endif
-
-#endif /*__LPM_BOARD_H__ */
diff --git a/boards/rtk70e0118c00000bj/pinName-ioe.h b/boards/rtk70e0118c00000bj/pinName-ioe.h
deleted file mode 100644
index 088297d..0000000
--- a/boards/rtk70e0118c00000bj/pinName-ioe.h
+++ /dev/null
@@ -1,26 +0,0 @@
-/*!
- * \file      pinName-ioe.h
- *
- * \brief     Target board IO Expander pins definitions
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __PIN_NAME_IOE_H__
-#define __PIN_NAME_IOE_H__
-
-#endif // __PIN_NAME_IOE_H__
diff --git a/boards/rtk70e0118c00000bj/rtc-board.c b/boards/rtk70e0118c00000bj/rtc-board.c
deleted file mode 100644
index b53bdb8..0000000
--- a/boards/rtk70e0118c00000bj/rtc-board.c
+++ /dev/null
@@ -1,572 +0,0 @@
-/*!
-* \file      rtc-board.c
-*
-* \brief     Target board RTC timer and low power modes management
-*
-* \copyright Revised BSD License, see section \ref LICENSE.
-*
-* \code
-*                ______                              _
-*               / _____)             _              | |
-*              ( (____  _____ ____ _| |_ _____  ____| |__
-*               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
-*               _____) ) ____| | | || |_| ____( (___| | | |
-*              (______/|_____)_|_|_| \__)_____)\____)_| |_|
-*              (C)2013-2017 Semtech - STMicroelectronics
-*
-* \endcode
-*
-* \author    Miguel Luis ( Semtech )
-*
-* \author    Gregory Cristian ( Semtech )
-*
-* \author    MCD Application Team (C)( STMicroelectronics International )
-*/
-#include <math.h>
-#include <time.h>
-#include "utilities.h"
-#include "delay.h"
-#include "board.h"
-#include "timer.h"
-#include "systime.h"
-#include "gpio.h"
-#include "r_rtc.h"
-#include "lpm-board.h"
-#include "rtc-board.h"
-#include "sys_lpm.h"
-
-// MCU Wake Up Time
-#define MIN_ALARM_DELAY                             6 // in ticks
-
-// sub-second number of bits
-#define N_PREDIV                                    7 /* 7bits for 128Hz tick (7.8125ms/tick) */
-
-// Prescaler
-#define PREDIV                                      ( ( 1 << N_PREDIV ) - 1 )
-
-// RTC Time base in us
-#define USEC_NUMBER                                 1000000
-#define MSEC_NUMBER                                 ( USEC_NUMBER / 1000 )
-
-#define COMMON_FACTOR                               3
-#define CONV_NUMER                                  ( MSEC_NUMBER >> COMMON_FACTOR )
-#define CONV_DENOM                                  ( 1 << ( N_PREDIV - COMMON_FACTOR ) )
-
-/*!
-* \brief Days, Hours, Minutes and seconds
-*/
-#define DAYS_IN_LEAP_YEAR                           ( ( uint32_t )  366U )
-#define DAYS_IN_YEAR                                ( ( uint32_t )  365U )
-#define SECONDS_IN_1DAY                             ( ( uint32_t )86400U )
-#define SECONDS_IN_1HOUR                            ( ( uint32_t ) 3600U )
-#define SECONDS_IN_1MINUTE                          ( ( uint32_t )   60U )
-#define MINUTES_IN_1HOUR                            ( ( uint32_t )   60U )
-#define HOURS_IN_1DAY                               ( ( uint32_t )   24U )
-
-/*!
-* \brief Correction factors
-*/
-#define  DAYS_IN_MONTH_CORRECTION_NORM              ( ( uint32_t )0x99AAA0 )
-#define  DAYS_IN_MONTH_CORRECTION_LEAP              ( ( uint32_t )0x445550 )
-
-/*!
-* \brief Calculates ceiling( X / N )
-*/
-#define DIVC( X, N )                                ( ( ( X ) + ( N ) -1 ) / ( N ) )
-
-/*!
-* RTC timer context 
-*/
-typedef struct
-{
-  uint32_t        Time;         // Reference time
-  tm_t            DateTime;
-}RtcTimerContext_t;
-
-/*!
-* \brief Indicates if the RTC is already Initialized or not
-*/
-static bool RtcInitialized = false;
-
-/*!
-* \brief Indicates if the RTC Wake Up Time is calibrated or not
-*/
-static bool McuWakeUpTimeInitialized = false;
-
-/*!
-* \brief Compensates MCU wakeup time
-*/
-static int16_t McuWakeUpTimeCal = 0;
-
-/*!
-* Number of days in each month on a normal year
-*/
-static const uint8_t DaysInMonth[] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
-
-/*!
-* Number of days in each month on a leap year
-*/
-static const uint8_t DaysInMonthLeapYear[] = { 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
-
-/*!
-* \brief RTC Alarm
-*/
-static tm_t rtcAlarm;
-
-/*!
-* Keep the value of the RTC timer when the RTC alarm is set
-* Set with the \ref RtcSetTimerContext function
-* Value is kept as a Reference to calculate alarm
-*/
-static RtcTimerContext_t RtcTimerContext;
-
-/*!
- * Used to store the Seconds and SubSeconds.
- *
- * WARNING: Temporary fix fix. Should use MCU NVM memory.
- */
-static uint32_t RtcBkupMemory[] = { 0, 0 };
-
-/*!
-* \brief Get the current time from calendar in ticks
-*
-* \param [IN] date           Pointer to RTC_DateStruct
-* \param [IN] time           Pointer to RTC_TimeStruct
-* \retval calendarValue Time in ticks
-*/
-static uint64_t RtcGetCalendarValue( tm_t* dateTime ) __attribute__ ((section(".ramfunc")));
-static void     rtc_event_callback(rtc_event_t ev) __attribute__ ((section(".ramfunc")));
-
-void RtcInit( void )
-{
-  tm_t dateTime;
-  
-  if( RtcInitialized == false )
-  {
-    rtc_init(rtc_event_callback);
-    
-    dateTime.tm_sec = 0;
-    dateTime.tm_min = 0;
-    dateTime.tm_hour = 0;
-    rtc_set_current_time(&dateTime);
-    rtc_counter_run(RTC_COUNTER_START);
-    
-    RtcSetTimerContext( );
-    RtcInitialized = true;
-  }
-}
-
-/*!
-* \brief Sets the RTC timer reference, sets also the RTC_DateStruct and RTC_TimeStruct
-*
-* \param none
-* \retval timerValue In ticks
-*/
-uint32_t RtcSetTimerContext( void )
-{
-  RtcTimerContext.Time = ( uint32_t )RtcGetCalendarValue( &RtcTimerContext.DateTime );
-  return ( uint32_t )RtcTimerContext.Time;
-}
-
-/*!
-* \brief Gets the RTC timer reference
-*
-* \param none
-* \retval timerValue In ticks
-*/
-uint32_t RtcGetTimerContext( void )
-{
-  return RtcTimerContext.Time;
-}
-
-/*!
-* \brief returns the wake up time in ticks
-*
-* \retval wake up time in ticks
-*/
-uint32_t RtcGetMinimumTimeout( void )
-{
-  return( MIN_ALARM_DELAY );
-}
-
-/*!
-* \brief converts time in ms to time in ticks
-*
-* \param[IN] milliseconds Time in milliseconds
-* \retval returns time in timer ticks
-*/
-uint32_t RtcMs2Tick( uint32_t milliseconds )
-{
-  return ( uint32_t )( ( ( ( uint64_t )milliseconds ) * CONV_DENOM ) / CONV_NUMER );
-}
-
-/*!
-* \brief converts time in ticks to time in ms
-*
-* \param[IN] time in timer ticks
-* \retval returns time in milliseconds
-*/
-uint32_t RtcTick2Ms( uint32_t tick )
-{
-  uint32_t seconds = tick >> N_PREDIV;
-  
-  tick = tick & PREDIV;
-  return ( ( seconds * 1000 ) + ( ( tick * 1000 ) >> N_PREDIV ) );
-}
-
-/*!
-* \brief a delay of delay ms by polling RTC
-*
-* \param[IN] delay in ms
-*/
-void RtcDelayMs( uint32_t delay )
-{
-  uint64_t delayTicks = 0;
-  uint64_t refTicks = RtcGetTimerValue( );
-  
-  delayTicks = RtcMs2Tick( delay );
-  
-  // Wait delay ms
-  while( ( ( RtcGetTimerValue( ) - refTicks ) ) < delayTicks )
-  {
-    __NOP( );
-  }
-}
-
-/*!
-* \brief Sets the alarm
-*
-* \note The alarm is set at now (read in this funtion) + timeout
-*
-* \param timeout Duration of the Timer ticks
-*/
-void RtcSetAlarm( uint32_t timeout )
-{
-  // We don't go in Low Power mode for timeout below MIN_ALARM_DELAY
-  if( ( MIN_ALARM_DELAY + McuWakeUpTimeCal ) < ( ( timeout - RtcGetTimerElapsedTime( ) ) ) )
-  {
-    LpmSetLowPowerMode( LPM_RTC_ID, LPM_ENABLE );
-  }
-  else
-  {
-    LpmSetLowPowerMode( LPM_RTC_ID, LPM_DISABLE );
-  }
-  
-  // In case stop mode is required
-  if( LpmGetMode( ) == LPM_STANDBY_MODE )
-  {
-    timeout = timeout - McuWakeUpTimeCal;
-  }
-  
-  RtcStartAlarm( timeout );
-}
-
-void RtcStopAlarm( void )
-{
-  rtc_disable_alarms();
-}
-
-void RtcStartAlarm( uint32_t timeout )
-{
-  rtc_alarm_ctrl_t alm_ctrl;
-  uint16_t rtcAlarmSubSeconds = 0;
-  uint16_t rtcAlarmSeconds = 0;
-  uint16_t rtcAlarmMinutes = 0;
-  uint16_t rtcAlarmHours = 0;
-  uint16_t rtcAlarmDays = 0;
-  tm_t dateTime = RtcTimerContext.DateTime;
-  
-  RtcStopAlarm( );
-  
-  /*reverse counter */
-  rtcAlarmSubSeconds =  dateTime.tm_subsec;
-  rtcAlarmSubSeconds += ( timeout & PREDIV );
-  // convert timeout  to seconds
-  timeout >>= N_PREDIV;
-  
-  // Convert microsecs to RTC format and add to 'Now'
-  rtcAlarmDays =  dateTime.tm_mday;
-  while( timeout >= TM_SECONDS_IN_1DAY )
-  {
-    timeout -= TM_SECONDS_IN_1DAY;
-    rtcAlarmDays++;
-  }
-  
-  // Calc hours
-  rtcAlarmHours = dateTime.tm_hour;
-  while( timeout >= TM_SECONDS_IN_1HOUR )
-  {
-    timeout -= TM_SECONDS_IN_1HOUR;
-    rtcAlarmHours++;
-  }
-  
-  // Calc minutes
-  rtcAlarmMinutes = dateTime.tm_min;
-  while( timeout >= TM_SECONDS_IN_1MINUTE )
-  {
-    timeout -= TM_SECONDS_IN_1MINUTE;
-    rtcAlarmMinutes++;
-  }
-  
-  // Calc seconds
-  rtcAlarmSeconds =  dateTime.tm_sec + timeout;
-  
-  //***** Correct for modulo********
-  while( rtcAlarmSubSeconds >= ( PREDIV + 1 ) )
-  {
-    rtcAlarmSubSeconds -= ( PREDIV + 1 );
-    rtcAlarmSeconds++;
-  }
-  
-  while( rtcAlarmSeconds >= TM_SECONDS_IN_1MINUTE )
-  { 
-    rtcAlarmSeconds -= TM_SECONDS_IN_1MINUTE;
-    rtcAlarmMinutes++;
-  }
-  
-  while( rtcAlarmMinutes >= TM_MINUTES_IN_1HOUR )
-  {
-    rtcAlarmMinutes -= TM_MINUTES_IN_1HOUR;
-    rtcAlarmHours++;
-  }
-  
-  while( rtcAlarmHours >= TM_HOURS_IN_1DAY )
-  {
-    rtcAlarmHours -= TM_HOURS_IN_1DAY;
-    rtcAlarmDays++;
-  }
-  
-  if( dateTime.tm_year % 4 == 0 ) 
-  {
-    if( rtcAlarmDays > DaysInMonthLeapYear[dateTime.tm_mon - 1] )
-    {
-      rtcAlarmDays = rtcAlarmDays % DaysInMonthLeapYear[dateTime.tm_mon - 1];
-    }
-  }
-  else
-  {
-    if( rtcAlarmDays > DaysInMonth[dateTime.tm_mon - 1] )
-    {   
-      rtcAlarmDays = rtcAlarmDays % DaysInMonth[dateTime.tm_mon - 1];
-    }
-  }
-  
-  /* Set RTC_AlarmStructure with calculated values*/
-  rtcAlarm.tm_subsec = rtcAlarmSubSeconds;
-  rtcAlarm.tm_sec = rtcAlarmSeconds;
-  rtcAlarm.tm_min = rtcAlarmMinutes;
-  rtcAlarm.tm_hour = rtcAlarmHours;
-  rtcAlarm.tm_mday = rtcAlarmDays;
-  
-  alm_ctrl.int_priority = 2;
-  alm_ctrl.sec  = true;
-  alm_ctrl.min  = true;
-  alm_ctrl.hour = true;
-  alm_ctrl.mday = true;
-  
-  // Set RTC_Alarm
-  rtc_set_alarm_time(&rtcAlarm);
-  rtc_enable_alarms (&alm_ctrl);
-}
-
-uint32_t RtcGetTimerValue( void )
-{
-      tm_t dateTime;
-  
-      uint32_t calendarValue = ( uint32_t )RtcGetCalendarValue( &dateTime );
-  
-      return( calendarValue );
-}
-
-uint32_t RtcGetTimerElapsedTime( void )
-{
-    tm_t dateTime;
-    
-    uint32_t calendarValue = ( uint32_t )RtcGetCalendarValue( &dateTime );
-  
-    return( ( uint32_t )( calendarValue - RtcTimerContext.Time ) );
-}
-
-void RtcSetMcuWakeUpTime( void )
-{
-      tm_t dateTime;
-  
-      uint32_t now, hit;
-      int16_t mcuWakeUpTime;
-  
-      if( ( McuWakeUpTimeInitialized == false ) && 
-         ( R_NVIC_GetPendingIRQ( SYSTEM_CFG_EVENT_NUMBER_RTC_ALM ) == 1 ) )
-      {
-          /* WARNING: Works ok if now is below 30 days
-           *          it is ok since it's done once at first alarm wake-up
-           */
-          McuWakeUpTimeInitialized = true;
-          now = ( uint32_t )RtcGetCalendarValue( &dateTime );
-  
-          rtc_read_alarm(&rtcAlarm);
-
-          hit = rtcAlarm.tm_sec +
-                60 * ( rtcAlarm.tm_min +
-                60 * ( rtcAlarm.tm_hour +
-                24 * ( rtcAlarm.tm_mday ) ) );
-          hit = ( hit << N_PREDIV ) + ( PREDIV - 0 );
-  
-          mcuWakeUpTime = ( int16_t )( ( now - hit ) );
-          McuWakeUpTimeCal += mcuWakeUpTime;
-          //PRINTF( 3, "Cal=%d, %d\n\r", McuWakeUpTimeCal, mcuWakeUpTime);
-      }
-}
-
-int16_t RtcGetMcuWakeUpTime( void )
-{
-  return McuWakeUpTimeCal;
-}
-
-static uint64_t RtcGetCalendarValue( tm_t* dateTime )
-{
-  uint64_t calendarValue = 0;
-  uint32_t correction;
-  uint32_t seconds;
-  
-  // Get Time and Date
-  rtc_read_current(dateTime);
-  
-  // Calculate amount of elapsed days since 01/01/2000
-  seconds = DIVC( ( DAYS_IN_YEAR * 3 + DAYS_IN_LEAP_YEAR ) * dateTime->tm_year , 4 );
-  
-  correction = ( ( dateTime->tm_year % 4 ) == 0 ) ? DAYS_IN_MONTH_CORRECTION_LEAP : DAYS_IN_MONTH_CORRECTION_NORM;
-  
-  seconds += ( DIVC( ( dateTime->tm_mon-1 ) * ( 30 + 31 ), 2 ) - ( ( ( correction >> ( ( dateTime->tm_mon - 1 ) * 2 ) ) & 0x03 ) ) );
-  
-  seconds += ( dateTime->tm_mday -1 );
-  
-  // Convert from days to seconds
-  seconds *= SECONDS_IN_1DAY;
-  
-  seconds += ( ( uint32_t )dateTime->tm_sec + 
-              ( ( uint32_t )dateTime->tm_min * SECONDS_IN_1MINUTE ) +
-                ( ( uint32_t )dateTime->tm_hour * SECONDS_IN_1HOUR ) ) ;
-  
-  calendarValue = ( ( ( uint64_t )seconds ) << N_PREDIV ) + dateTime->tm_subsec;
-  
-  return( calendarValue );
-}
-
-uint32_t RtcGetCalendarTime( uint16_t *milliseconds )
-{
-  tm_t dateTime;
-  uint32_t ticks;
-  
-  uint64_t calendarValue = RtcGetCalendarValue( &dateTime );
-  
-  uint32_t seconds = ( uint32_t )calendarValue >> N_PREDIV;
-  
-  ticks =  ( uint32_t )calendarValue & PREDIV;
-  
-  *milliseconds = RtcTick2Ms( ticks );
-  
-  return seconds;
-}
-
-/*!
-* \brief  RTC event callback.
-*
-* \param [IN] event RTC event
-*/
-static void rtc_event_callback(rtc_event_t event)
-{
-    tm_t timeCurrent;
-
-    if ( RTC_EVENT_ALARM == event )
-    {   /* RTC alarm event with 1 second resolution */
-        if ( 0 == rtcAlarm.tm_subsec )
-        {
-            /* Callback the timer IRQ handler if sub-second is zero sharp */
-            TimerIrqHandler( );
-        }
-        else
-        {   /* Start RTC periodic interrupt to fire the periodic event on the scheduled alarm sub-second */
-            rtc_set_periodic(RTC_PERIODIC_64_HZ, 2);
-        }
-    }
-    else if ( RTC_EVENT_PERIODIC == event )
-    {   /* Periodic timer event for the sub-second count */
-
-        /* Readout current second and sub-second */
-        rtc_read_sec_subSec( &timeCurrent );
-
-        /* Stop periodic interrupt when second and sub-second exceeded scheduled alarm second and sub-second */
-        if (  ((timeCurrent.tm_sec << N_PREDIV) | timeCurrent.tm_subsec) >=
-              ((rtcAlarm.tm_sec << N_PREDIV)    | rtcAlarm.tm_subsec) )
-        {
-            rtc_disable_periodic();
-
-            /* Callback the timer IRQ handler */
-            TimerIrqHandler( );
-        }
-    }
-    else
-    {
-        /* DO NOTHING */
-    }
-}
-
-void RtcBkupWrite( uint32_t data0, uint32_t data1 )
-{
-    CRITICAL_SECTION_BEGIN( );
-
-    RtcBkupMemory[0] = data0;
-    RtcBkupMemory[1] = data1;
-
-    CRITICAL_SECTION_END( );
-}
-
-void RtcBkupRead( uint32_t* data0, uint32_t* data1 )
-{
-    CRITICAL_SECTION_BEGIN( );
-
-    *data0 = RtcBkupMemory[0];
-    *data1 = RtcBkupMemory[1];
-
-    CRITICAL_SECTION_END( );
-}
-
-void RtcProcess( void )
-{
-  // Not used on this platform.
-}
-
-TimerTime_t RtcTempCompensation( TimerTime_t period, float temperature )
-{
-  float k = RTC_TEMP_COEFFICIENT;
-  float kDev = RTC_TEMP_DEV_COEFFICIENT;
-  float t = RTC_TEMP_TURNOVER;
-  float tDev = RTC_TEMP_DEV_TURNOVER;
-  float interim = 0.0;
-  float ppm = 0.0;
-  
-  if( k < 0.0 )
-  {
-    ppm = ( k - kDev );
-  }
-  else
-  {
-    ppm = ( k + kDev );
-  }
-  interim = ( temperature - ( t - tDev ) );
-  ppm *=  interim * interim;
-  
-  // Calculate the drift in time
-  interim = ( ( float ) period * ppm ) / 1e6;
-  // Calculate the resulting time period
-  interim += period;
-  interim = floor( interim );
-  
-  if( interim < 0.0 )
-  {
-    interim = ( float )period;
-  }
-  
-  // Calculate the resulting period
-  return ( TimerTime_t ) interim;
-}
diff --git a/boards/rtk70e0118c00000bj/rtk70e015dc00001bj-board.c b/boards/rtk70e0118c00000bj/rtk70e015dc00001bj-board.c
deleted file mode 100644
index 2d0fef9..0000000
--- a/boards/rtk70e0118c00000bj/rtk70e015dc00001bj-board.c
+++ /dev/null
@@ -1,268 +0,0 @@
-/*!
- * \file      rtk70e015dc00001bj-board.c
- *
- * \brief     Target board <RENESAS RTK70E015DC00001BJ + SX1261MB2xAS mbed shiled> driver implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#include "board-config.h"
-#include <stdlib.h>
-#include "utilities.h"
-#include "board.h"
-#include "delay.h"
-#include "radio.h"
-#include "sx126x-board.h"
-
-/*!
- * Antenna switch GPIO pins objects
- */
-Gpio_t AntPow;
-
-void SX126xIoInit( void )
-{
-    /* RESET pin has to output LOW during +3.3V power being shutdown. */
-    GpioInit( &SX126x.Reset, RADIO_RESET, PIN_OUTPUT, PIN_PUSH_PULL, PIN_NO_PULL, 1 );
-
-    GpioInit( &SX126x.Spi.Nss, RADIO_NSS, PIN_OUTPUT, PIN_PUSH_PULL, PIN_NO_PULL, 1 );
-    GpioInit( &SX126x.BUSY, RADIO_BUSY, PIN_INPUT, PIN_PUSH_PULL, PIN_NO_PULL, 0 );
-    GpioInit( &SX126x.DIO1, RADIO_DIO_1, PIN_INPUT, PIN_PUSH_PULL, PIN_NO_PULL, 0 );
-
-    GpioInit( &AntPow, RADIO_ANT_SW, PIN_OUTPUT, PIN_PUSH_PULL, PIN_NO_PULL, 1 );
-
-#if defined( USE_RADIO_DEBUG )
-    GpioInit( &DbgPinTx, RADIO_DBG_PIN_TX, PIN_OUTPUT, PIN_PUSH_PULL, PIN_NO_PULL, 0 );
-    GpioInit( &DbgPinRx, RADIO_DBG_PIN_RX, PIN_OUTPUT, PIN_PUSH_PULL, PIN_NO_PULL, 0 );
-#endif
-}
-
-void SX126xIoIrqInit( DioIrqHandler dioIrq )
-{
-    GpioSetInterrupt( &SX126x.DIO1, IRQ_RISING_EDGE, IRQ_HIGH_PRIORITY, dioIrq );
-}
-
-void SX126xIoDeInit( void )
-{
-    /* Assert RESET pin */
-    GpioInit( &SX126x.Reset, RADIO_RESET, PIN_OUTPUT, PIN_PUSH_PULL, PIN_NO_PULL, 0 );
-
-    GpioInit( &SX126x.Spi.Nss, RADIO_NSS, PIN_OUTPUT, PIN_PUSH_PULL, PIN_NO_PULL, 0 );
-    GpioInit( &SX126x.BUSY, RADIO_BUSY, PIN_OUTPUT, PIN_PUSH_PULL, PIN_NO_PULL, 0 );
-    GpioInit( &SX126x.DIO1, RADIO_DIO_1, PIN_OUTPUT, PIN_PUSH_PULL, PIN_NO_PULL, 0 );
-}
-
-void SX126xIoTcxoInit( void )
-{
-    // No TCXO component available on this board design.
-}
-
-uint32_t SX126xGetBoardTcxoWakeupTime( void )
-{
-    return BOARD_TCXO_WAKEUP_TIME;
-}
-
-void SX126xReset( void )
-{
-    DelayMs( 10 );
-    GpioInit( &SX126x.Reset, RADIO_RESET, PIN_OUTPUT, PIN_PUSH_PULL, PIN_NO_PULL, 0 );
-    DelayMs( 20 );
-    GpioInit( &SX126x.Reset, RADIO_RESET, PIN_OUTPUT, PIN_PUSH_PULL, PIN_NO_PULL, 1 ); // internal pull-up //AE PIN_ANALOGIC
-    DelayMs( 10 );
-}
-
-void SX126xWaitOnBusy( void )
-{
-    while( GpioRead( &SX126x.BUSY ) == 1 );
-}
-
-void SX126xWakeup( void )
-{
-    //CRITICAL_SECTION_BEGIN( );
-
-    GpioWrite( &SX126x.Spi.Nss, 0 );
-
-    SpiInOut( &SX126x.Spi, RADIO_GET_STATUS );
-    SpiInOut( &SX126x.Spi, 0x00 );
-
-    GpioWrite( &SX126x.Spi.Nss, 1 );
-
-    // Wait for chip to be ready.
-    SX126xWaitOnBusy( );
-
-    //CRITICAL_SECTION_END( );
-}
-
-void SX126xWriteCommand( RadioCommands_t command, uint8_t *buffer, uint16_t size )
-{
-    SX126xCheckDeviceReady( );
-
-    GpioWrite( &SX126x.Spi.Nss, 0 );
-
-    SpiInOut( &SX126x.Spi, ( uint8_t )command );
-
-    for( uint16_t i = 0; i < size; i++ )
-    {
-        SpiInOut( &SX126x.Spi, buffer[i] );
-    }
-
-    GpioWrite( &SX126x.Spi.Nss, 1 );
-
-    if( command != RADIO_SET_SLEEP )
-    {
-        SX126xWaitOnBusy( );
-    }
-}
-
-uint8_t SX126xReadCommand( RadioCommands_t command, uint8_t *buffer, uint16_t size )
-{
-    uint8_t status = 0;
-
-    SX126xCheckDeviceReady( );
-
-    GpioWrite( &SX126x.Spi.Nss, 0 );
-
-    SpiInOut( &SX126x.Spi, ( uint8_t )command );
-    status = SpiInOut( &SX126x.Spi, 0x00 );
-    for( uint16_t i = 0; i < size; i++ )
-    {
-        buffer[i] = SpiInOut( &SX126x.Spi, 0 );
-    }
-
-    GpioWrite( &SX126x.Spi.Nss, 1 );
-
-    SX126xWaitOnBusy( );
-
-    return status;
-}
-
-void SX126xWriteRegisters( uint16_t address, uint8_t *buffer, uint16_t size )
-{
-    SX126xCheckDeviceReady( );
-
-    GpioWrite( &SX126x.Spi.Nss, 0 );
-    
-    SpiInOut( &SX126x.Spi, RADIO_WRITE_REGISTER );
-    SpiInOut( &SX126x.Spi, ( address & 0xFF00 ) >> 8 );
-    SpiInOut( &SX126x.Spi, address & 0x00FF );
-    
-    for( uint16_t i = 0; i < size; i++ )
-    {
-        SpiInOut( &SX126x.Spi, buffer[i] );
-    }
-
-    GpioWrite( &SX126x.Spi.Nss, 1 );
-
-    SX126xWaitOnBusy( );
-}
-
-void SX126xWriteRegister( uint16_t address, uint8_t value )
-{
-    SX126xWriteRegisters( address, &value, 1 );
-}
-
-void SX126xReadRegisters( uint16_t address, uint8_t *buffer, uint16_t size )
-{
-    SX126xCheckDeviceReady( );
-
-    GpioWrite( &SX126x.Spi.Nss, 0 );
-
-    SpiInOut( &SX126x.Spi, RADIO_READ_REGISTER );
-    SpiInOut( &SX126x.Spi, ( address & 0xFF00 ) >> 8 );
-    SpiInOut( &SX126x.Spi, address & 0x00FF );
-    SpiInOut( &SX126x.Spi, 0 );
-    for( uint16_t i = 0; i < size; i++ )
-    {
-        buffer[i] = SpiInOut( &SX126x.Spi, 0 );
-    }
-    GpioWrite( &SX126x.Spi.Nss, 1 );
-
-    SX126xWaitOnBusy( );
-}
-
-uint8_t SX126xReadRegister( uint16_t address )
-{
-    uint8_t data;
-    SX126xReadRegisters( address, &data, 1 );
-    return data;
-}
-
-void SX126xWriteBuffer( uint8_t offset, uint8_t *buffer, uint8_t size )
-{
-    SX126xCheckDeviceReady( );
-
-    GpioWrite( &SX126x.Spi.Nss, 0 );
-
-    SpiInOut( &SX126x.Spi, RADIO_WRITE_BUFFER );
-    SpiInOut( &SX126x.Spi, offset );
-    for( uint16_t i = 0; i < size; i++ )
-    {
-        SpiInOut( &SX126x.Spi, buffer[i] );
-    }
-    GpioWrite( &SX126x.Spi.Nss, 1 );
-
-    SX126xWaitOnBusy( );
-}
-
-void SX126xReadBuffer( uint8_t offset, uint8_t *buffer, uint8_t size )
-{
-    SX126xCheckDeviceReady( );
-
-    GpioWrite( &SX126x.Spi.Nss, 0 );
-
-    SpiInOut( &SX126x.Spi, RADIO_READ_BUFFER );
-    SpiInOut( &SX126x.Spi, offset );
-    SpiInOut( &SX126x.Spi, 0 );
-    for( uint16_t i = 0; i < size; i++ )
-    {
-        buffer[i] = SpiInOut( &SX126x.Spi, 0 );
-    }
-    GpioWrite( &SX126x.Spi.Nss, 1 );
-
-    SX126xWaitOnBusy( );
-}
-
-void SX126xSetRfTxPower( int8_t power )
-{
-    SX126xSetTxParams( power, RADIO_RAMP_40_US );
-}
-
-uint8_t SX126xGetDeviceId( void )
-{
-#if defined( SX1261DVK1BAS ) || defined(SX1261MB2xAS)
-    return SX1261;
-#elif defined( SX1262DVK1CAS ) || defined( SX1262DVK1DAS ) || defined(SX1262MB2xAS)
-    return SX1262;
-#endif
-}
-
-void SX126xAntSwOn( void )
-{
-    /* DO NOTHING */
-}
-
-void SX126xAntSwOff( void )
-{
-    /* DO NOTHING */
-}
-
-bool SX126xCheckRfFrequency( uint32_t frequency )
-{
-    /* Implement check. Currently all frequencies are supported. */
-    return true;
-}
-
-/* End of file (rtk70e017dc01000bj-board.c) */
diff --git a/boards/rtk70e0118c00000bj/spi-board.c b/boards/rtk70e0118c00000bj/spi-board.c
deleted file mode 100644
index 6708e29..0000000
--- a/boards/rtk70e0118c00000bj/spi-board.c
+++ /dev/null
@@ -1,103 +0,0 @@
-/*!
-* \file      spi-board.c
-*
-* \brief     Target board SPI driver implementation
-*
-* \copyright Revised BSD License, see section \ref LICENSE.
-*
-* \code
-*                ______                              _
-*               / _____)             _              | |
-*              ( (____  _____ ____ _| |_ _____  ____| |__
-*               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
-*               _____) ) ____| | | || |_| ____( (___| | | |
-*              (______/|_____)_|_|_| \__)_____)\____)_| |_|
-*              (C)2013-2017 Semtech
-*
-* \endcode
-*
-* \author    Miguel Luis ( Semtech )
-*
-* \author    Gregory Cristian ( Semtech )
-*/
-#include "r_spi_cmsis_api.h"
-#include "utilities.h"
-#include "board.h"
-#include "gpio.h"
-#include "spi-board.h"
-
-#include "error.h"
-
-static void callback(uint32_t event);
-
-extern ARM_DRIVER_SPI Driver_SPI0;
-extern ARM_DRIVER_SPI Driver_SPI1;
-
-static ARM_DRIVER_SPI * SpiHandle[] = {&Driver_SPI0, &Driver_SPI1};
-
-static volatile uint8_t eventWait;
-
-void SpiInit( Spi_t *obj, SpiId_t spiId, PinNames mosi, PinNames miso, PinNames sclk, PinNames nss )
-{
-  int err;
-  
-  CRITICAL_SECTION_BEGIN( );
-  
-  obj->SpiId = spiId;
-  
-  err = SpiHandle[obj->SpiId]->Initialize(callback); 
-  APP_ERR_HANDLER(err);
-  
-  err = SpiHandle[obj->SpiId]->PowerControl(ARM_POWER_FULL); 
-  APP_ERR_HANDLER(err);
-  
-  err = SpiHandle[obj->SpiId]->Control(ARM_SPI_MODE_MASTER  | 
-                                       ARM_SPI_DATA_BITS(8) | 
-                                         ARM_SPI_SS_MASTER_UNUSED | 
-                                           ARM_SPI_CPOL0_CPHA0  | 
-                                             ARM_SPI_MSB_LSB, 100000);//10000000);
-  APP_ERR_HANDLER(err);
-  
-  CRITICAL_SECTION_END( );
-}
-
-void SpiDeInit( Spi_t *obj )
-{
-  int err;
-  err = SpiHandle[obj->SpiId]->Uninitialize();
-  APP_ERR_HANDLER(err);
-}
-
-void SpiFormat( Spi_t *obj, int8_t bits, int8_t cpol, int8_t cpha, int8_t slave )
-{
-  
-}
-
-void SpiFrequency( Spi_t *obj, uint32_t hz )
-{
-  
-}
-
-uint16_t SpiInOut( Spi_t *obj, uint16_t outData )
-{
-  int err;
-  uint8_t rxData = 0;
-  uint32_t timeout = 0x020000;
-  
-  eventWait = 0; 
-  
-  err = SpiHandle[obj->SpiId]->Transfer(&outData, &rxData, 1);
-  APP_ERR_HANDLER(err);
-  
-  while((eventWait == 0) && (--timeout != 0));
-  
-  APP_ERR_HANDLER(eventWait != ARM_SPI_EVENT_TRANSFER_COMPLETE);
-
-  return( rxData );
-}
-
-
-static void callback(uint32_t event)
-{
-  eventWait  = event;
-}
diff --git a/boards/rtk70e0118c00000bj/uart-board.c b/boards/rtk70e0118c00000bj/uart-board.c
deleted file mode 100644
index 994c523..0000000
--- a/boards/rtk70e0118c00000bj/uart-board.c
+++ /dev/null
@@ -1,304 +0,0 @@
-/*!
-* \file      uart-board.c
-*
-* \brief     Target board UART driver implementation
-*
-* \copyright Revised BSD License, see section \ref LICENSE.
-*
-* \code
-*                ______                              _
-*               / _____)             _              | |
-*              ( (____  _____ ____ _| |_ _____  ____| |__
-*               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
-*               _____) ) ____| | | || |_| ____( (___| | | |
-*              (______/|_____)_|_|_| \__)_____)\____)_| |_|
-*              (C)2013-2017 Semtech
-*
-* \endcode
-*
-* \author    Miguel Luis ( Semtech )
-*
-* \author    Gregory Cristian ( Semtech )
-*/
-#include "r_usart_cmsis_api.h"
-#include "utilities.h"
-#include "board.h"
-#include "uart-board.h"
-
-/*!
-* Number of times the UartPutBuffer will try to send the buffer before
-* returning ERROR
-*/
-#define TX_BUFFER_RETRY_COUNT                       10
-
-extern ARM_DRIVER_USART Driver_USART0;
-extern ARM_DRIVER_USART Driver_USART4;
-
-static ARM_DRIVER_USART * UartHandle[] = {&Driver_USART0, &Driver_USART4};
-
-uint8_t RxData = 0;
-uint8_t TxData = 0;
-
-#ifdef USE_UART0
-extern Uart_t Uart0;
-#endif
-#ifdef USE_UART4
-extern Uart_t Uart4;
-#endif
-
-static uint8_t eventWait;
-
-static void uart_event_callback(uint32_t ev);
-
-void UartMcuInit( Uart_t *obj, UartId_t uartId, PinNames tx, PinNames rx )
-{
-  obj->UartId = uartId;
-  
-  if( uartId == UART_USB_CDC )
-  {
-#if defined( USE_USB_CDC )
-    UartUsbInit( obj, uartId, NC, NC );
-#endif
-  }
-  else
-  {
-    UartHandle[obj->UartId]->Initialize(uart_event_callback);
-    
-    UartHandle[obj->UartId]->PowerControl(ARM_POWER_FULL);
-  }
-}
-
-void UartMcuConfig( Uart_t *obj, UartMode_t mode, uint32_t baudrate, WordLength_t wordLength, StopBits_t stopBits, Parity_t parity, FlowCtrl_t flowCtrl )
-{
-  if( obj->UartId == UART_USB_CDC )
-  {
-#if defined( USE_USB_CDC )
-    UartUsbConfig( obj, mode, baudrate, wordLength, stopBits, parity, flowCtrl );
-#endif
-  }
-  else
-  {
-    
-    UartHandle[obj->UartId]->Control( ARM_USART_MODE_ASYNCHRONOUS, baudrate);
-    UartHandle[obj->UartId]->Control( ARM_USART_CONTROL_TX, 1);
-    
-  }
-}
-
-void UartMcuDeInit( Uart_t *obj )
-{
-  if( obj->UartId == UART_USB_CDC )
-  {
-#if defined( USE_USB_CDC )
-    UartUsbDeInit( obj );
-#endif
-  }
-  else
-  {
-    UartHandle[obj->UartId]->Uninitialize();
-  }
-}
-
-uint8_t UartMcuPutChar( Uart_t *obj, uint8_t data )
-{
-  uint8_t status = FAIL;
-  uint32_t timeout = 0x020000;
-  if( obj->UartId == UART_USB_CDC )
-  {
-#if defined( USE_USB_CDC )
-    return UartUsbPutChar( obj, data );
-#else
-    return 255; // Not supported
-#endif
-  }
-  else
-  {
-    //CRITICAL_SECTION_BEGIN( );
-    TxData = data;
-    
-    if( IsFifoFull( &obj->FifoTx ) == false )
-    {
-      FifoPush( &obj->FifoTx, TxData );
-      
-      eventWait = 0;
-      
-      status = UartHandle[obj->UartId]->Send(&TxData, 1);
-      
-      while(eventWait == 0 && --timeout);
-      
-      return ((status == ARM_DRIVER_OK) && (eventWait != 0)) ? 0 : 1;
-      
-      //CRITICAL_SECTION_END( );
-    }
-    //CRITICAL_SECTION_END( );
-    return 1; // Busy
-  }
-}
-
-uint8_t UartMcuGetChar( Uart_t *obj, uint8_t *data )
-{
-  if( obj->UartId == UART_USB_CDC )
-  {
-#if defined( USE_USB_CDC )
-    return UartUsbGetChar( obj, data );
-#else
-    return 255; // Not supported
-#endif
-  }
-  else
-  {
-    //CRITICAL_SECTION_BEGIN( );
-    
-    if( IsFifoEmpty( &obj->FifoRx ) == false )
-    {
-      *data = FifoPop( &obj->FifoRx );
-      //CRITICAL_SECTION_END( );
-      return 0;
-    }
-    //CRITICAL_SECTION_END( );
-    return 1;
-  }
-}
-
-uint8_t UartMcuPutBuffer( Uart_t *obj, uint8_t *buffer, uint16_t size )
-{
-  if( obj->UartId == UART_USB_CDC )
-  {
-#if defined( USE_USB_CDC )
-    return UartUsbPutBuffer( obj, buffer, size );
-#else
-    return 255; // Not supported
-#endif
-  }
-  else
-  {
-    uint8_t retryCount;
-    uint16_t i;
-    
-    for( i = 0; i < size; i++ )
-    {
-      retryCount = 0;
-      while( UartPutChar( obj, buffer[i] ) != 0 )
-      {
-        retryCount++;
-        
-        // Exit if something goes terribly wrong
-        if( retryCount > TX_BUFFER_RETRY_COUNT )
-        {
-          return 1; // Error
-        }
-      }
-    }
-    return 0; // OK
-  }
-}
-
-uint8_t UartMcuGetBuffer( Uart_t *obj, uint8_t *buffer, uint16_t size, uint16_t *nbReadBytes )
-{
-  uint16_t localSize = 0;
-  
-  while( localSize < size )
-  {
-    if( UartGetChar( obj, buffer + localSize ) == 0 )
-    {
-      localSize++;
-    }
-    else
-    {
-      break;
-    }
-  }
-  
-  *nbReadBytes = localSize;
-  
-  if( localSize == 0 )
-  {
-    return 1; // Empty
-  }
-  return 0; // OK
-}
-
-#ifdef USE_UART0
-static void uart_event_callback(uint32_t ev)
-{
-  switch (ev)
-  {
-  case ARM_USART_EVENT_SEND_COMPLETE:
-    {
-      eventWait = (uint8_t)ev;
-      if( IsFifoEmpty( &Uart0.FifoTx ) == false )
-      {
-        TxData = FifoPop( &Uart0.FifoTx );
-      }
-      
-      if( Uart0.IrqNotify != NULL )
-      {
-        Uart0.IrqNotify( UART_NOTIFY_TX );
-      }
-    }
-    break;
-    
-  case ARM_USART_EVENT_RECEIVE_COMPLETE:
-    {
-      if( IsFifoFull( &Uart0.FifoRx ) == false )
-      {
-        // Read one byte from the receive data register
-        FifoPush( &Uart0.FifoRx, RxData );
-      }
-      
-      if( Uart0.IrqNotify != NULL )
-      {
-        Uart0.IrqNotify( UART_NOTIFY_RX );
-      }
-      
-    }
-    break;
-  }
-}
-#endif
-
-#ifdef USE_UART4
-static void uart_event_callback(uint32_t ev)
-{
-  switch (ev)
-  {
-  case ARM_USART_EVENT_SEND_COMPLETE:
-    {
-      eventWait = (uint8_t)ev;
-      if( IsFifoEmpty( &Uart4.FifoTx ) == false )
-      {
-        TxData = FifoPop( &Uart4.FifoTx );
-      }
-      
-      if( Uart4.IrqNotify != NULL )
-      {
-        Uart4.IrqNotify( UART_NOTIFY_TX );
-      }
-    }
-    break;
-    
-  case ARM_USART_EVENT_RECEIVE_COMPLETE:
-    {
-      if( IsFifoFull( &Uart4.FifoRx ) == false )
-      {
-        // Read one byte from the receive data register
-        FifoPush( &Uart4.FifoRx, RxData );
-      }
-      
-      if( Uart4.IrqNotify != NULL )
-      {
-        Uart4.IrqNotify( UART_NOTIFY_RX );
-      }
-      
-    }
-    break;
-  }
-}
-#endif
-
-#ifndef USE_UART4
-static void uart_event_callback(uint32_t ev)
-  {
-    /* User process */
-  }
-#endif
diff --git a/boards/spi-board.h b/boards/spi-board.h
deleted file mode 100644
index c372c02..0000000
--- a/boards/spi-board.h
+++ /dev/null
@@ -1,39 +0,0 @@
-/*!
- * \file      spi-board.h
- *
- * \brief     Target board SPI driver implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __SPI_BOARD_H__
-#define __SPI_BOARD_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include "spi.h"
-
-// An Spi.c file has to be implmented under system directory.
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __SPI_BOARD_H__
diff --git a/boards/sx126x-board.h b/boards/sx126x-board.h
deleted file mode 100644
index c8f09bd..0000000
--- a/boards/sx126x-board.h
+++ /dev/null
@@ -1,182 +0,0 @@
-/*!
- * \file      sx126x-board.h
- *
- * \brief     Target board SX126x driver implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __SX126x_BOARD_H__
-#define __SX126x_BOARD_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#define SX126x_BOARD_FUNC_LOCATION __attribute__ ((section(".ramfunc")))
-
-#include <stdint.h>
-#include <stdbool.h>
-#include "sx126x/sx126x.h"
-
-/*!
- * \brief Initializes the radio I/Os pins interface
- */
-void SX126xIoInit( void );
-
-/*!
- * \brief Initializes DIO IRQ handlers
- *
- * \param [IN] irqHandlers Array containing the IRQ callback functions
- */
-void SX126xIoIrqInit( DioIrqHandler dioIrq );
-
-/*!
- * \brief De-initializes the radio I/Os pins interface.
- *
- * \remark Useful when going in MCU low power modes
- */
-void SX126xIoDeInit( void );
-
-/*!
- * \brief Initializes the TCXO power pin.
- */
-void SX126xIoTcxoInit( void );
-
-/*!
- * \brief Initializes the radio debug pins.
- */
-void SX126xIoDbgInit( void );
-
-/*!
- * \brief HW Reset of the radio
- */
-void SX126xReset( void );
-
-/*!
- * \brief Blocking loop to wait while the Busy pin in high
- */
-void SX126xWaitOnBusy( void ) SX126x_BOARD_FUNC_LOCATION;
-
-/*!
- * \brief Wakes up the radio
- */
-void SX126xWakeup( void ) SX126x_BOARD_FUNC_LOCATION;
-
-/*!
- * \brief Send a command that write data to the radio
- *
- * \param [in]  opcode        Opcode of the command
- * \param [in]  buffer        Buffer to be send to the radio
- * \param [in]  size          Size of the buffer to send
- */
-void SX126xWriteCommand( RadioCommands_t opcode, uint8_t *buffer, uint16_t size ) SX126x_BOARD_FUNC_LOCATION;
-
-/*!
- * \brief Send a command that read data from the radio
- *
- * \param [in]  opcode        Opcode of the command
- * \param [out] buffer        Buffer holding data from the radio
- * \param [in]  size          Size of the buffer
- *
- * \retval status Return command radio status
- */
-uint8_t SX126xReadCommand( RadioCommands_t opcode, uint8_t *buffer, uint16_t size );
-
-/*!
- * \brief Write a single byte of data to the radio memory
- *
- * \param [in]  address       The address of the first byte to write in the radio
- * \param [in]  value         The data to be written in radio's memory
- */
-void SX126xWriteRegister( uint16_t address, uint8_t value );
-
-/*!
- * \brief Read a single byte of data from the radio memory
- *
- * \param [in]  address       The address of the first byte to write in the radio
- *
- * \retval      value         The value of the byte at the given address in radio's memory
- */
-uint8_t SX126xReadRegister( uint16_t address );
-
-/*!
- * \brief Sets the radio output power.
- *
- * \param [IN] power Sets the RF output power
- */
-void SX126xSetRfTxPower( int8_t power );
-
-/*!
- * \brief Gets the device ID
- *
- * \retval id Connected device ID
- */
-uint8_t SX126xGetDeviceId( void );
-
-/*!
- * \brief Initializes the RF Switch I/Os pins interface
- */
-void SX126xAntSwOn( void );
-
-/*!
- * \brief De-initializes the RF Switch I/Os pins interface
- *
- * \remark Needed to decrease the power consumption in MCU low power modes
- */
-void SX126xAntSwOff( void );
-
-/*!
- * \brief Checks if the given RF frequency is supported by the hardware
- *
- * \param [IN] frequency RF frequency to be checked
- * \retval isSupported [true: supported, false: unsupported]
- */
-bool SX126xCheckRfFrequency( uint32_t frequency );
-
-/*!
- * \brief Gets the Defines the time required for the TCXO to wakeup [ms].
- *
- * \retval time Board TCXO wakeup time in ms.
- */
-uint32_t SX126xGetBoardTcxoWakeupTime( void );
-
-/*!
- * \brief Writes new Tx debug pin state
- *
- * \param [IN] state Debug pin state
- */
-void SX126xDbgPinTxWrite( uint8_t state );
-
-/*!
- * \brief Writes new Rx debug pin state
- *
- * \param [IN] state Debug pin state
- */
-void SX126xDbgPinRxWrite( uint8_t state );
-
-/*!
- * Radio hardware and global parameters
- */
-extern SX126x_t SX126x;
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __SX126x_BOARD_H__
diff --git a/boards/uart-board.h b/boards/uart-board.h
deleted file mode 100644
index 5c5bbe6..0000000
--- a/boards/uart-board.h
+++ /dev/null
@@ -1,108 +0,0 @@
-/*!
- * \file      uart-board.h
- *
- * \brief     Target board UART driver implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __UART_BOARD_H__
-#define __UART_BOARD_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-#include "uart.h"
-
-/*!
- * \brief Initializes the UART object and MCU peripheral
- *
- * \param [IN] obj  UART object
- * \param [IN] tx   UART Tx pin name to be used
- * \param [IN] rx   UART Rx pin name to be used
- */
-void UartMcuInit( Uart_t *obj, UartId_t uartId, PinNames tx, PinNames rx );
-
-/*!
- * \brief Configures the UART object and MCU peripheral
- *
- * \remark UartInit function must be called first.
- *
- * \param [IN] obj          UART object
- * \param [IN] mode         Mode of operation for the UART
- * \param [IN] baudrate     UART baudrate
- * \param [IN] wordLength   packet length
- * \param [IN] stopBits     stop bits setup
- * \param [IN] parity       packet parity
- * \param [IN] flowCtrl     UART flow control
- */
-void UartMcuConfig( Uart_t *obj, UartMode_t mode, uint32_t baudrate, WordLength_t wordLength, StopBits_t stopBits, Parity_t parity, FlowCtrl_t flowCtrl );
-
-/*!
- * \brief DeInitializes the UART object and MCU pins
- *
- * \param [IN] obj  UART object
- */
-void UartMcuDeInit( Uart_t *obj );
-
-/*!
- * \brief Sends a character to the UART
- *
- * \param [IN] obj   UART object
- * \param [IN] data  Character to be sent
- * \retval status    [0: OK, 1: Busy]
- */
-uint8_t UartMcuPutChar( Uart_t *obj, uint8_t data );
-
-/*!
- * \brief Sends a buffer to the UART
- *
- * \param [IN] obj    UART object
- * \param [IN] buffer Buffer to be sent
- * \param [IN] size   Buffer size
- * \retval status     [0: OK, 1: Busy]
- */
-uint8_t UartMcuPutBuffer( Uart_t *obj, uint8_t *buffer, uint16_t size );
-
-/*!
- * \brief Gets a character from the UART
- *
- * \param [IN] obj   UART object
- * \param [IN] data  Received character
- * \retval status    [0: OK, 1: Busy]
- */
-uint8_t UartMcuGetChar( Uart_t *obj, uint8_t *data );
-
-/*!
- * \brief Gets a character from the UART
- *
- * \param [IN] obj          UART object
- * \param [IN] buffer       Received buffer
- * \param [IN] size         Number of bytes to be received
- * \param [OUT] nbReadBytes Number of bytes really read
- * \retval status           [0: OK, 1: Busy]
- */
-uint8_t UartMcuGetBuffer( Uart_t *obj, uint8_t *buffer, uint16_t size, uint16_t *nbReadBytes );
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __UART_BOARD_H__
diff --git a/boards/uart-usb-board.h b/boards/uart-usb-board.h
deleted file mode 100644
index 51680f8..0000000
--- a/boards/uart-usb-board.h
+++ /dev/null
@@ -1,102 +0,0 @@
-/*!
- * \file      uart-usb-board.h
- *
- * \brief     Target board UART over USB driver implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __UART_USB_BOARD_H__
-#define __UART_USB_BOARD_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-#include "uart.h"
-
-/*!
- * \brief Initializes the UART object and MCU peripheral
- *
- * \param [IN] obj  UART object
- * \param [IN] tx   UART Tx pin name to be used
- * \param [IN] rx   UART Rx pin name to be used
- */
-void UartUsbInit( Uart_t *obj, UartId_t uartId, PinNames tx, PinNames rx );
-
-/*!
- * \brief Initializes the UART object and USB peripheral
- *
- * \param [IN] obj          UART object
- * \param [IN] mode         Mode of operation for the UART
- * \param [IN] baudrate     UART baudrate
- * \param [IN] wordLength   packet length
- * \param [IN] stopBits     stop bits setup
- * \param [IN] parity       packet parity
- * \param [IN] flowCtrl     UART flow control
- */
-void UartUsbConfig( Uart_t *obj, UartMode_t mode, uint32_t baudrate, WordLength_t wordLength, StopBits_t stopBits, Parity_t parity, FlowCtrl_t flowCtrl );
-
-/*!
- * \brief DeInitializes the UART object and USB peripheral
- *
- * \param [IN] obj  UART object
- */
-void UartUsbDeInit( Uart_t *obj );
-
-/*!
- * \brief Checks if the cable is connected or not
- *
- * \retval connected [0: Not connected, 1: Connected]
- */
-uint8_t UartUsbIsUsbCableConnected( void );
-
-/*!
- * \brief Sends a buffer to the UART
- *
- * \param [IN] obj    UART object
- * \param [IN] buffer Buffer to be sent
- * \param [IN] size   Buffer size
- * \retval status     [0: OK, 1: Busy, 2: Fail]
- */
-uint8_t UartUsbPutBuffer( Uart_t *obj, uint8_t *buffer, uint16_t size );
-
-/*!
- * \brief Sends a character to the UART
- *
- * \param [IN] obj   UART object
- * \param [IN] data  Character to be sent
- * \retval status    [0: OK, 1: Busy, 2: Fail]
- */
-uint8_t UartUsbPutChar( Uart_t *obj, uint8_t data );
-
-/*!
- * \brief Gets a character from the UART
- *
- * \param [IN] obj   UART object
- * \param [IN] data  Received character
- * \retval status    [0: OK, 1: Busy, 2: Fail]
- */
-uint8_t UartUsbGetChar( Uart_t *obj, uint8_t *data );
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __UART_USB_BOARD_H__
diff --git a/boards/utilities.h b/boards/utilities.h
deleted file mode 100644
index d285eba..0000000
--- a/boards/utilities.h
+++ /dev/null
@@ -1,178 +0,0 @@
-/*!
- * \file      utilities.h
- *
- * \brief     Helper functions implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __UTILITIES_H__
-#define __UTILITIES_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-
-/*!
- * Generic definition
- */
-#ifndef SUCCESS
-#define SUCCESS                                     1
-#endif
-
-#ifndef FAIL
-#define FAIL                                        0
-#endif
-
-/*!
- * \brief Returns the minimum value between a and b
- *
- * \param [IN] a 1st value
- * \param [IN] b 2nd value
- * \retval minValue Minimum value
- */
-#ifndef MIN
-#define MIN( a, b ) ( ( ( a ) < ( b ) ) ? ( a ) : ( b ) )
-#endif
-
-/*!
- * \brief Returns the maximum value between a and b
- *
- * \param [IN] a 1st value
- * \param [IN] b 2nd value
- * \retval maxValue Maximum value
- */
-#ifndef MAX
-#define MAX( a, b ) ( ( ( a ) > ( b ) ) ? ( a ) : ( b ) )
-#endif
-
-/*!
- * \brief Returns 2 raised to the power of n
- *
- * \param [IN] n power value
- * \retval result of raising 2 to the power n
- */
-#define POW2( n ) ( 1 << n )
-
-/*!
- * Version
- */
-typedef union Version_u
-{
-    struct Version_s
-    {
-        uint8_t Revision;
-        uint8_t Patch;
-        uint8_t Minor;
-        uint8_t Major;
-    }Fields;
-    uint32_t Value;
-}Version_t;
-
-/*!
- * \brief Initializes the pseudo random generator initial value
- *
- * \param [IN] seed Pseudo random generator initial value
- */
-void srand1( uint32_t seed );
-
-/*!
- * \brief Computes a random number between min and max
- *
- * \param [IN] min range minimum value
- * \param [IN] max range maximum value
- * \retval random random value in range min..max
- */
-int32_t randr( int32_t min, int32_t max );
-
-/*!
- * \brief Copies size elements of src array to dst array
- *
- * \remark STM32 Standard memcpy function only works on pointers that are aligned
- *
- * \param [OUT] dst  Destination array
- * \param [IN]  src  Source array
- * \param [IN]  size Number of bytes to be copied
- */
-void memcpy1( uint8_t *dst, const uint8_t *src, uint16_t size );
-
-/*!
- * \brief Copies size elements of src array to dst array reversing the byte order
- *
- * \param [OUT] dst  Destination array
- * \param [IN]  src  Source array
- * \param [IN]  size Number of bytes to be copied
- */
-void memcpyr( uint8_t *dst, const uint8_t *src, uint16_t size );
-
-/*!
- * \brief Set size elements of dst array with value
- *
- * \remark STM32 Standard memset function only works on pointers that are aligned
- *
- * \param [OUT] dst   Destination array
- * \param [IN]  value Default value
- * \param [IN]  size  Number of bytes to be copied
- */
-void memset1( uint8_t *dst, uint8_t value, uint16_t size );
-
-/*!
- * \brief Converts a nibble to an hexadecimal character
- *
- * \param [IN] a   Nibble to be converted
- * \retval hexChar Converted hexadecimal character
- */
-int8_t Nibble2HexChar( uint8_t a );
-
-/*!
- * Begins critical section
- */
-#define CRITICAL_SECTION_BEGIN( ) uint32_t mask; BoardCriticalSectionBegin( &mask )
-
-/*!
- * Ends critical section
- */
-#define CRITICAL_SECTION_END( ) BoardCriticalSectionEnd( &mask )
-
-/*
- * ============================================================================
- * Following functions must be implemented inside the specific platform 
- * board.c file.
- * ============================================================================
- */
-/*!
- * Disable interrupts, begins critical section
- * 
- * \param [IN] mask Pointer to a variable where to store the CPU IRQ mask
- */
-void BoardCriticalSectionBegin( uint32_t *mask ) __attribute__ ((section(".ramfunc")));
-
-/*!
- * Ends critical section
- * 
- * \param [IN] mask Pointer to a variable where the CPU IRQ mask was stored
- */
-void BoardCriticalSectionEnd( uint32_t *mask ) __attribute__ ((section(".ramfunc")));
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __UTILITIES_H__
diff --git a/error.h b/error.h
deleted file mode 100644
index 75ab7d2..0000000
--- a/error.h
+++ /dev/null
@@ -1,32 +0,0 @@
-/**********************************************************************************************************************
-* DISCLAIMER
-* This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
-* other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
-* applicable laws, including copyright laws.
-* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
-* THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MECHANTABILITY,
-* FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
-* EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
-* SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
-* SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
-* Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
-* this software. By using this software, you agree to the additional terms and conditions found by accessing the
-* following link:
-* http://www.renesas.com/disclaimer
-*
-* Copyright (C) 2018-2019 Renesas Electronics Corporation. All rights reserved.
-**********************************************************************************************************************/
-/**********************************************************************************************************************
-* File Name    : error.h
-* Description  : Function definition for the application error handler
-**********************************************************************************************************************/
-
-#ifndef APP_ERROR_H_
-#define APP_ERROR_H_
-
-#define APP_ERR_HANDLER(x)    if (x) {while(1);}
-#define APP_ERR_RETURN(x)      {if(x){return x;}}
-
-#define UNUSED(x)  (void)(x)
-
-#endif /* APP_ERROR_H_ */
diff --git a/lcd.c b/lcd.c
deleted file mode 100644
index e882739..0000000
--- a/lcd.c
+++ /dev/null
@@ -1,676 +0,0 @@
-/*********************************************************************************************************************
- * DISCLAIMER
- * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
- * other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
- * applicable laws, including copyright laws.
- * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
- * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
- * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
- * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
- * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
- * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
- * this software. By using this software, you agree to the additional terms and conditions found by accessing the
- * following link:
- * http://www.renesas.com/disclaimer
- *
- * Copyright (C) 2018-2020 Renesas Electronics Corporation. All rights reserved.
- **********************************************************************************************************************/
-/**********************************************************************************************************************
- * History : DD.MM.YYYY Version Description
- *         : 25.06.2020 1.10    First Release
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- * File Name    : lcd.c
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Includes   <System Includes> , "Project Includes"
- *********************************************************************************************************************/
-#include <stdint.h>
-#include <stdbool.h>
-#include <string.h>
-#include <math.h>
-
-#include "RE01_256KB.h"
-#include "r_smip_api.h"
-
-#include "lcd.h"
-
-/**********************************************************************************************************************
- Macro definitions
- *********************************************************************************************************************/
-/* Port register */
-/* VCOM */
-#define LCD_PRV_VCOM_REG_PFS            (PFS->P814PFS)
-#define LCD_PRV_VCOM_REG_PODR           (PORT8->PODR_b.PODR14)
-/* RST */
-#define LCD_PRV_RST_REG_PFS             (PFS->P813PFS)
-#define LCD_PRV_RST_REG_PODR            (PORT8->PODR_b.PODR13)
-/* SCLK */
-#define LCD_PRV_SCLK_REG_PFS            (PFS->P011PFS)
-/* MOSI */
-#define LCD_PRV_MOSI_REG_PFS            (PFS->P010PFS)
-/* SCS */
-#define LCD_PRV_SCS_REG_PFS             (PFS->P015PFS)
-#define LCD_PRV_SCS_REG_PODR            (PORT0->PODR_b.PODR15)
-
-/* SMIP driver send status */
-#define LCD_PRV_SEND_NOT_END            (0)
-#define LCD_PRV_SEND_COMPLETE           (1)
-#define LCD_PRV_SEND_ERROR              (2)
-
-/* Active interrupt ISR number */
-#define LCD_PRV_IPSR_NMI                (2)
-
-/* Clock frequency MOCO (KHz) */
-#define LCD_PRV_FREQUENCY_MOCO_KHZ      (2000)
-/* RSPI module channel */
-#define LCD_PRV_RSPI_CH                 (0)
-/* LCD communication speed (bps) : 500kbps */
-#define LCD_PRV_SPEED_BPS               (500000)
-/* image line : 256line */
-#define LCD_PRV_BITMAP_LINE             (256)
-/* image data size (word) : 2,368word */
-#define LCD_PRV_BITMAP_SIZE_WORD        (((8 + 256 + 32) * LCD_PRV_BITMAP_LINE) / 32)
-
-/**********************************************************************************************************************
- Local Typedef definitions
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Exported global variables
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Private (static) variables and functions
- *********************************************************************************************************************/
-volatile static uint32_t s_end_flag __attribute__ ((section(".data"))) = LCD_PRV_SEND_NOT_END;
-
-/* error */
-static void lcd_error (void) __attribute__ ((section(".ramfunc")));
-
-/* callback from R_SMIP driver */
-static void smip_callback (uint32_t event) __attribute__ ((section(".ramfunc")));
-
-/***********************************************************************************************************************
- * Function Name: lcd_open
- * Description  : This function initializes the R_SMIP driver for LCD communication. Set the pins used for communication
- *              : with the LCD.
- * Arguments    : none
- * Return Value : none
- ***********************************************************************************************************************/
-void lcd_open (void)
-{
-
-    /*  Set the pins used for communication with the LCD. */
-    if (R_SMIP_Open(LCD_PRV_RSPI_CH, LCD_PRV_SPEED_BPS, &g_smip_tbl_lcd_info[SMIP_TYPE_KYOCERA], smip_callback)
-            != SMIP_OK)
-    {
-        lcd_error();
-    }
-
-    return;
-} /* End of function lcd_open */
-
-/***********************************************************************************************************************
- * Function Name: lcd_on
- * Description  : This function starts communication with the LCD and displays a black screen.
- * Arguments    : none
- * Return Value : none
- ***********************************************************************************************************************/
-void lcd_on (void)
-{
-
-    /* Enable communication : Set RST pin to 'L' */
-    if (R_SMIP_PowerOn() != SMIP_OK)
-    {
-        lcd_error();
-    }
-
-    return;
-} /* End of function lcd_on */
-
-/***********************************************************************************************************************
- * Function Name: lcd_off
- * Description  : This function displays a black screen on the LCD and stops communication.
- * Arguments    : none
- * Return Value : none
- ***********************************************************************************************************************/
-void lcd_off (void)
-{
-
-    /* Disable communication : Set VCOM pin to 'L' and set RST pin to 'H' */
-    if (R_SMIP_PowerOff() != SMIP_OK)
-    {
-        lcd_error();
-    }
-
-    return;
-} /* End of function lcd_off */
-
-/***********************************************************************************************************************
- * Function Name: lcd_send
- * Description  : This function sends the image data specified in the argument to the LCD. Wait until the transmission is
- *              : completed in this function.
- * Arguments    : uint8_t * buf - Set the address of the area where the image data is stored.
- * Return Value : none
- ***********************************************************************************************************************/
-void lcd_send (const uint8_t *buf)
-{
-    s_end_flag = LCD_PRV_SEND_NOT_END;
-
-    /* Start sending to LCD. */
-    if (R_SMIP_Send(0, LCD_PRV_BITMAP_LINE, buf) != SMIP_OK)
-    {
-        lcd_error();
-    }
-    while (LCD_PRV_SEND_NOT_END == s_end_flag)
-    {
-        ; /* wait to end */
-    }
-    if (LCD_PRV_SEND_COMPLETE != s_end_flag)
-    {
-        lcd_error();
-    }
-
-    return;
-} /* End of function lcd_send */
-
-/***********************************************************************************************************************
- * Function Name: lcd_reconfig_speed
- * Description  : This function reconfigures the communication speed. Executes when the operating clock is changed.
- * Arguments    : none
- * Return Value : none
- ***********************************************************************************************************************/
-void lcd_reconfig_speed (void)
-{
-
-    /* Reconfigure communication speed. */
-    if (R_SMIP_ReconfigSpiSpeed(LCD_PRV_SPEED_BPS) != SMIP_OK)
-    {
-        lcd_error();
-    }
-
-    return;
-} /* End of function lcd_reconfig_speed */
-
-/***********************************************************************************************************************
- * Function Name: lcd_suspend
- * Description  : This function sets the pin used for LCD to a general port. If this function is executed before stopping
- *              : the RSPI module, the LCD display screen can be retained. The pin assigned to the general port by this
- *              : function can be reconfigured by the lcd_resume () function.
- * Arguments    : none
- * Return Value : none
- ***********************************************************************************************************************/
-void lcd_suspend (void)
-{
-
-    /* Holds the LCD display screen. */
-    if (R_SMIP_Suspend() != SMIP_OK)
-    {
-        lcd_error();
-    }
-
-    return;
-} /* End of function lcd_suspend */
-
-/***********************************************************************************************************************
- * Function Name: lcd_resume
- * Description  : This function reconfigures the pins assigned to general ports by the lcd_suspend () function.
- *              : Executing this function after starts the RSPI module allows communication to be resumed without
- *              : affecting the LCD display.
- * Arguments    : none
- * Return Value : none
- ***********************************************************************************************************************/
-void lcd_resume (void)
-{
-
-    /* Resume the LCD communication. */
-    if (R_SMIP_Resume(LCD_PRV_SPEED_BPS) != SMIP_OK)
-    {
-        lcd_error();
-    }
-
-    return;
-} /* End of function lcd_resume */
-
-/***********************************************************************************************************************
- * Function Name: lcd_open_not_int
- * Description  : This function initialize the RSPI module for LCD communication. Set the pins used for communication
- *              : with the LCD. The difference with the lcd_open () function is that this function performs LCD
- *              : communication without using interrupts  (does not use R_SMIP driver).
- *              : Therefore, this function can be executed from an interrupt handler. If '0' is set in the argument
- *              : drv_flag, it can be executed before R_SYS driver initialization or RAM initialization.
- * Arguments    : uint32_t clock - Set the operating clock frequency (unit: KHz)
- * Return Value : none
- ***********************************************************************************************************************/
-void lcd_open_not_int (uint32_t clock)
-{
-    uint32_t ipsr;
-
-    ipsr = __get_IPSR();
-
-    /*********************************************************************************************/
-    /* initialize RSPI module.                                                                   */
-    /*********************************************************************************************/
-    /*----------------------------------------------------------------------
-     * MSTPCRB register - Module Stop Control Register B
-     * b19  MSTPB19 - [0] Cancel the SPI0 module-stop state.
-     *--------------------------------------------------------------------*/
-    MSTP->MSTPCRB_b.MSTPB19 = 0U;
-
-    /*----------------------------------------------------------------------
-     * SSLP register - SPI Slave Select Polarity Register
-     * b0  SSL0P - [1] Set the SSLn0 bit signal to active-high.
-     *--------------------------------------------------------------------*/
-    SPI0->SSLP = 0x01U;
-
-    /*----------------------------------------------------------------------
-     * SPPCR register - SPI Pin Control Register
-     * b5  MOIFE - [0] Set MOSI output value to equal the final data from previous transfer.
-     * b4  MOIFV - [0] Set level output on the MOSIn pin during MOSI idling to low.
-     * b1  SPLP2 - [0] Normal mode.
-     * b0  SPLP  - [0] Normal mode.
-     *--------------------------------------------------------------------*/
-    SPI0->SPPCR = 0x00U;
-
-    /*----------------------------------------------------------------------
-     * SPBR register - SPI Bit Rate Register
-     *--------------------------------------------------------------------*/
-    if ( LCD_PRV_FREQUENCY_MOCO_KHZ <= clock)
-    {
-        SPI0->SPBR = 0x01U;
-    }
-    else
-    {
-        SPI0->SPBR = 0x00U;
-    }
-
-    /*----------------------------------------------------------------------
-     * SPDCR register - SPI Data Control Register
-     * b6   SPBYT     - [0] The SPDR/SPDR_HA is accessed in halfword or word (SPLW is valid).
-     * b5   SPLW      - [1] Set SPDR to valid (for word access).
-     * b4   SPRDTD    - [0] Read SPDR register values from the receive buffer.
-     * b1-0 SPFC[1:0] - [00] 1 frame.
-     *--------------------------------------------------------------------*/
-    SPI0->SPDCR = 0x20U;
-
-    /*----------------------------------------------------------------------
-     * SPCKD register - SPI Clock Delay Register
-     * b2-0 SCKDL[2:0] - [001] 2 RSPCK.
-     *--------------------------------------------------------------------*/
-    SPI0->SPCKD = 0x01U; /* 2Cycle wait(RSPCK), secure tsSCS period */
-
-    /*----------------------------------------------------------------------
-     * SSLND register - SPI Slave Select Negation Delay Register
-     * b2-0 SLNDL[2:0] - [000] 1 RSPCK.
-     *--------------------------------------------------------------------*/
-    SPI0->SSLND = 0x00U;
-
-    /*----------------------------------------------------------------------
-     * SPND register - SPI Next-Access Delay Register
-     * b2-0 SPNDL[2:0] - [000] 1 RSPCK + 2PCLKA.
-     *--------------------------------------------------------------------*/
-    SPI0->SPND = 0x00U; /* 2Cycle wait(RSPCK), secure thSCS period */
-
-    /*----------------------------------------------------------------------
-     * SPND register - SPI Control Register 2
-     * b4   SCKASE - [0] Disable RSPCK auto-stop function.
-     * b3   PTE    - [0] Disable self-diagnosis function of the parity circuit.
-     * b2   SPIIE  - [0] Disable idle interrupt requests.
-     * b1   SPOE   - [0] Select even parity for transmission and reception.
-     * b0   SPPE   - [0] Do not add parity bit to transmit data and do not check parity bit of receive data.
-     *--------------------------------------------------------------------*/
-    SPI0->SPCR2 = 0x00U;
-
-    /*----------------------------------------------------------------------
-     * SPCMOD0 register - SPI Command Registers 0
-     * b15   SCKDEN    - [1] An RSPCK delay equal to the setting in the SPI clock delay register (SPCKD).
-     * b14   SLNDEN    - [1] An SSL negation delay equal to the setting in the SPI slave select negation delay register (SSLND).
-     * b13   SPNDEN    - [1] A next-access delay equal to the setting in the SPI next-access delay register (SPND).
-     * b12   LSBF      - [1] 1: LSB first.
-     * b11-8 SPB[3:0]  - [0010] 32 bits.
-     * b5-4  SSLA[1:0] - [00] SSL0.
-     * b3-2  BRDV[1:0] - [00] Base bit rate.
-     * b1    CPOL      - [0] Set RSPCK low during idle.
-     * b0    CPHA      - [0] Select data sampling on rising edge, data change on falling edge.
-     *--------------------------------------------------------------------*/
-    SPI0->SPCMD0 = 0xF200U;
-
-    /*----------------------------------------------------------------------
-     * SPCR register - SPI Control Register
-     * b7   SPRIE  - [0] Disable SPI receive buffer full interrupt requests.
-     * b6   SPE    - [0] Disable the SPI function.
-     * b5   SPTIE  - [0] Disable transmit buffer empty interrupt requests.
-     * b4   SPEIE  - [0] Disable SPI error interrupt requests.
-     * b3   MASTR  - [1] Select master mode.
-     * b2   MODFEN - [0] Disable the detection of mode fault error.
-     * b1   TXMD   - [1] Select serial communications with transmit-only.
-     * b0   SPMS   - [0] Select SPI operation (4-wire method).
-     *--------------------------------------------------------------------*/
-    SPI0->SPCR = 0x0AU;
-    while (0x0A != SPI0->SPCR)
-    {
-        ; /* wait to write */
-    }
-
-    /*********************************************************************************************/
-    /* Set the pins used for communication with the LCD.                                         */
-    /*********************************************************************************************/
-    if (LCD_PRV_IPSR_NMI == ipsr)
-    {
-        R_SYS_RegisterProtectDisable(SYSTEM_REG_PROTECT_MPC);
-    }
-    else
-    {
-
-        /*----------------------------------------------------------------------
-         * PWPR register - Write-Protect Register
-         * b7   BOWI  - [0] Writing to the PFSWE bit is enabled.
-         * b6   PFSWE - [1] Writing to the PmnPFS register is enabled.
-         *--------------------------------------------------------------------*/
-        PFS->PWPR_b.B0WI = 0U;
-        PFS->PWPR_b.PFSWE = 1U;
-    }
-
-    /*----------------------------------------------------------------------
-     * PmnPFS register - Port mn Pin Function Select Register
-     * b28-24   PSEL[4:0] - Sets a peripheral function.
-     * b16      PMR       - [0] Use the pin as a general I/O port.
-     *                      [1] Use the pin as a peripheral module.
-     * b15      ASEL      - [0] Do not use as an analog pin.
-     * b14      ISEL      - [0] Do not use as an IRQn input pin.
-     * b11-10   DSCR[1:0] - [11] High driving ability.
-     * b7      PCODR      - [0] CMOS output.
-     * b6      NCODR      - [0] CMOS output.
-     * b5      PDCR       - [0] Disables input pull-down.
-     * b4      PUCR       - [0] Disables input pull-up.
-     * b2      PDR        - [0] Input (functions as an input pin).
-     *                      [1] Output (functions as an output pin).
-     * b0      PODR       - [0] Low output.
-     *--------------------------------------------------------------------*/
-    LCD_PRV_RST_REG_PFS = 0x00000C04U;
-    LCD_PRV_VCOM_REG_PFS = 0x00000C04U;
-    LCD_PRV_SCLK_REG_PFS = 0x06010C00U;
-    LCD_PRV_MOSI_REG_PFS = 0x06010C00U;
-    LCD_PRV_SCS_REG_PFS = 0x00000C04U;
-
-    if (LCD_PRV_IPSR_NMI == ipsr)
-    {
-        R_SYS_RegisterProtectEnable(SYSTEM_REG_PROTECT_MPC);
-    }
-    else
-    {
-
-        /*----------------------------------------------------------------------
-         * PWPR register - Write-Protect Register
-         * b7   BOWI  - [1] Writing to the PFSWE bit is disabled.
-         * b6   PFSWE - [0] Writing to the PmnPFS register is disabled.
-         *--------------------------------------------------------------------*/
-        PFS->PWPR_b.PFSWE = 0U;
-        PFS->PWPR_b.B0WI = 1U;
-    }
-
-    return;
-} /* End of function lcd_open_not_int */
-
-/***********************************************************************************************************************
- * Function Name: lcd_off_not_int
- * Description  : This function displays a black screen on the LCD and stops communication. The difference with the
- *              : lcd_off () function is that this function performs LCD communication without using interrupts
- *              : (does not use R_SMIP driver).
- *              : Therefore, this function can be executed from an interrupt handler. It can be executed before
- *              : R_SYS driver initialization or RAM initialization.
- * Arguments    : uint32_t clock - Set the operating clock frequency (unit: KHz)
- * Return Value : none
- ***********************************************************************************************************************/
-void lcd_off_not_int (uint32_t clock)
-{
-    volatile uint32_t lop = 0U;
-
-    /*********************************************************************************************/
-    /* Disable communication : Set VCOM pin to 'L' and set RST pin to 'H'.                       */
-    /*********************************************************************************************/
-    /*----------------------------------------------------------------------
-     * PODR register - Port Control Register 1
-     * PODRn  - [0] Low output.
-     *--------------------------------------------------------------------*/
-    LCD_PRV_VCOM_REG_PODR = 0U;
-
-    /* Wait 1ms for tsVCOM period */
-    for (lop = 0; lop < clock; lop++)
-    {
-        asm("nop");
-    }
-
-    /*----------------------------------------------------------------------
-     * PODR register - Port Control Register 1
-     * PODRn  - [1] High output.
-     *--------------------------------------------------------------------*/
-    LCD_PRV_RST_REG_PODR = 1U;
-
-    /* Wait 1ms for RST period */
-    for (lop = 0; lop < clock; lop++)
-    {
-        asm("nop");
-    }
-
-    return;
-} /* End of function lcd_off_not_int */
-
-/***********************************************************************************************************************
- * Function Name: lcd_send_not_int
- * Description  : This function sends the image data specified in the argument to the LCD. Wait until the transmission is
- *              : completed in this function. The difference with the lcd_send () function is that this function performs
- *              : LCD communication without using interrupts (does not use R_SMIP driver).
- *              : Therefore, this function can be executed from an interrupt handler. It can be executed before R_SYS
- *              : driver initialization or RAM initialization.
- * Arguments    : uint8_t* buf   - Set the address of the area where the image data is stored.
- *              : uint32_t clock - Set the operating clock frequency (unit: KHz)
- * Return Value : none
- ***********************************************************************************************************************/
-void lcd_send_not_int (const uint8_t *buf, uint32_t clock)
-{
-    volatile uint32_t lop = 0U;
-
-    /* cast to force type conversion from 8bit to 32bit */
-    uint32_t *p_buf32 = (uint32_t *) buf;
-
-    /*********************************************************************************************/
-    /* Start sending to LCD.                                                                     */
-    /*********************************************************************************************/
-    /*----------------------------------------------------------------------
-     * PODR register - Port Control Register 1
-     * PODRn  - [0] Low output.
-     *          [1] High output.
-     *--------------------------------------------------------------------*/
-    LCD_PRV_VCOM_REG_PODR = ~LCD_PRV_VCOM_REG_PODR; /* Invert the VCOM signal */
-
-    /* Wait 4ms for tsVCOM period */
-    for (lop = 0; lop < (4 * clock); lop++)
-    {
-        asm("nop");
-    }
-
-    /*----------------------------------------------------------------------
-     * PODR register - Port Control Register 1
-     * PODRn  - [1] High output.
-     *--------------------------------------------------------------------*/
-    LCD_PRV_SCS_REG_PODR = 1U;
-
-    /*********************************************************************************************/
-    /* Setup RSPI module.                                                                        */
-    /*********************************************************************************************/
-    /*----------------------------------------------------------------------
-     * SPSR register - SPI Status Register
-     * b3   PERF   - [0] No parity error occurred.
-     * b2   MODF   - [0] No mode fault error or underrun error occurred.
-     * b0   OVRF   - [0] No overrun error occurred.
-     *--------------------------------------------------------------------*/
-    SPI0->SPSR_b.OVRF = 0U;
-    SPI0->SPSR_b.MODF = 0U;
-    SPI0->SPSR_b.PERF = 0U;
-
-    /*----------------------------------------------------------------------
-     * SPCR2 register - SPI Control Register 2
-     * b2   SPIIE  - [0] Disable idle interrupt requests.
-     *--------------------------------------------------------------------*/
-    SPI0->SPCR2_b.SPIIE = 0U;
-
-    /*----------------------------------------------------------------------
-     * SPCR register - SPI Control Register
-     * b6   SPE   - [1] Enable the SPI function.
-     * b5   SPTIE - [1] Enable transmit buffer empty interrupt requests.
-     *--------------------------------------------------------------------*/
-    SPI0->SPCR_b.SPTIE = 1U;
-    SPI0->SPCR_b.SPE = 1U;
-
-    /*********************************************************************************************/
-    /* Send data.                                                                                */
-    /*********************************************************************************************/
-    for (lop = 0; lop < (LCD_PRV_BITMAP_SIZE_WORD * 4); lop += 4)
-    {
-
-        /*----------------------------------------------------------------------
-         * SPSR register - SPI Status Register
-         * b5   SPTEF   - [0] Data is in the transmit buffer.
-         *--------------------------------------------------------------------*/
-        while (0 == SPI0->SPSR_b.SPTEF)
-        {
-            ; /* wait to empty buffer */
-        }
-
-        /*----------------------------------------------------------------------
-         * SPDR register - SPI Data Register
-         *--------------------------------------------------------------------*/
-        SPI0->SPDR = *p_buf32;
-        p_buf32++;
-    }
-
-    /*********************************************************************************************/
-    /* Stop sending to LCD.                                                                      */
-    /*********************************************************************************************/
-    for (lop = 0; lop < 2; lop++)
-    {
-        asm("nop");
-    }
-
-    /*----------------------------------------------------------------------
-     * SPSR register - SPI Status Register
-     * b1   IDLNF   - [1] SPI is in the transfer state.
-     *--------------------------------------------------------------------*/
-    while (1 == SPI0->SPSR_b.IDLNF)
-    {
-        ; /* wait */
-    }
-
-    /*----------------------------------------------------------------------
-     * SPCR register - SPI Control Register
-     * b6   SPE   - [0] Disable the SPI function.
-     *--------------------------------------------------------------------*/
-    SPI0->SPCR_b.SPE = 0U;
-
-    /*----------------------------------------------------------------------
-     * PODR register - Port Control Register 1
-     * PODRn  - [0] Low output.
-     *--------------------------------------------------------------------*/
-    LCD_PRV_SCS_REG_PODR = 0U;
-
-    /* twSCSL wait(10[us] -> 1[ms]) */
-    for (lop = 0; lop < clock; lop++)
-    {
-        asm("nop");
-    }
-
-    /* thVCOM wait(1[ms]) */
-    for (lop = 0; lop < clock; lop++)
-    {
-        asm("nop");
-    }
-
-    /*----------------------------------------------------------------------
-     * PODR register - Port Control Register 1
-     * PODRn  - [0] Low output.
-     *          [1] High output.
-     *--------------------------------------------------------------------*/
-    LCD_PRV_VCOM_REG_PODR = ~LCD_PRV_VCOM_REG_PODR; /* Invert VCOM signal */
-
-    /*----------------------------------------------------------------------
-     * MSTPCRB register - Module Stop Control Register B
-     * b19  MSTPB19 - [1] Set the SPI0 module-stop state.
-     *--------------------------------------------------------------------*/
-    MSTP->MSTPCRB_b.MSTPB19 = 1U;
-
-    return;
-} /* End of function lcd_send_not_int */
-
-/***********************************************************************************************************************
- * Function Name: lcd_error
- * Description  : Detect error.
- * Arguments    : none
- * Return Value : none
- ***********************************************************************************************************************/
-static void lcd_error (void)
-{
-    while (1)
-    {
-        ; /* error handling */
-    }
-} /* End of function lcd_error */
-
-/***********************************************************************************************************************
- * Function Name: smip_callback
- * Description  : This function is a callback function from R_SYS driver. This function is executed when transmission to
- *              : the LCD is completed or an error is detected.
- * Arguments    : uint32_t event - The transmission result is set.
- *              :                  SMIP_EVENT_SEND_COMPLETE : Send compleate
- *              :                  SMIP_EVENT_SEND_ERROR    : Send error
- * Return Value : none
- ***********************************************************************************************************************/
-static void smip_callback (uint32_t event)
-{
-    switch (event)
-    {
-        case SMIP_EVENT_SEND_COMPLETE:
-            s_end_flag = LCD_PRV_SEND_COMPLETE;
-            break;
-        case SMIP_EVENT_SEND_ERROR:
-            s_end_flag = LCD_PRV_SEND_ERROR;
-            break;
-        default:
-            break;
-    }
-
-    return;
-} /* End of function smip_callback */
-
-/* End of File */
-
-/***********************************************************************************************************************
-* Function Name: display
-* Revision     : 1.10
-* Description  : This function initializes the system, system clock, timer (AGT1), and interrupt.
-                  Every 100 ms, connection to ISL29125 light sensor are made through I2C.
-                  Data received (G, R, and B value) from the light sensor are processed and converted to lux value and RGB level bar.
-                  Lux value and RGB level bar are then displayed to MIP LCD.
-* Arguments    : none
-* Return Value : none
-***********************************************************************************************************************/
-int DisplayDraw( uint8_t * image, int startRow, int numberOfLines )
-{
-    s_end_flag = LCD_PRV_SEND_NOT_END;
-
-   /* Start sending to LCD. */
-   if (R_SMIP_Send(startRow, numberOfLines, image) != SMIP_OK)
-   {
-       lcd_error();
-   }
-   while (LCD_PRV_SEND_NOT_END == s_end_flag)
-   {
-       ; /* wait to end */
-   }
-   if (LCD_PRV_SEND_COMPLETE != s_end_flag)
-   {
-       lcd_error();
-   }
-
-   return 0;
-} /* End of function DisplayDraw() */
diff --git a/lcd.h b/lcd.h
deleted file mode 100644
index 8e6b31f..0000000
--- a/lcd.h
+++ /dev/null
@@ -1,62 +0,0 @@
-/***********************************************************************************************************************
- * DISCLAIMER
- * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
- * other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
- * applicable laws, including copyright laws.
- * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
- * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
- * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
- * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
- * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
- * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
- * this software. By using this software, you agree to the additional terms and conditions found by accessing the
- * following link:
- * http://www.renesas.com/disclaimer
- *
- * Copyright (C) 2018-2020 Renesas Electronics Corporation. All rights reserved.
- **********************************************************************************************************************/
-/**********************************************************************************************************************
- * History : DD.MM.YYYY Version Description
- *         : 25.06.2020 1.10    First Release
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- * File Name    : lcd.h
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Includes   <System Includes> , "Project Includes"
- *********************************************************************************************************************/
-#include <stdint.h>
-#include <stdbool.h>
-
-#ifndef LCD_PRV_H_
-    #define LCD_PRV_H_
-
-/**********************************************************************************************************************
- Macro definitions
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Typedef definitions
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Exported global variables
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Exported global functions (to be accessed by other files)
- *********************************************************************************************************************/
-
-extern void lcd_open (void) __attribute__ ((section(".ramfunc")));
-extern void lcd_on (void) __attribute__ ((section(".ramfunc")));
-extern void lcd_off (void) __attribute__ ((section(".ramfunc")));
-extern void lcd_send (const uint8_t *buf) __attribute__ ((section(".ramfunc")));
-extern void lcd_reconfig_speed (void) __attribute__ ((section(".ramfunc")));
-extern void lcd_suspend (void) __attribute__ ((section(".ramfunc")));
-extern void lcd_resume (void) __attribute__ ((section(".ramfunc")));
-
-extern void lcd_open_not_int (uint32_t clock) __attribute__ ((section(".ehc_ramfunc")));
-extern void lcd_off_not_int (uint32_t clock) __attribute__ ((section(".ramfunc")));
-extern void lcd_send_not_int (const uint8_t *buf, uint32_t clock) __attribute__ ((section(".ehc_ramfunc")));
-
-#endif /* LCD_PRV_H_ */
-/* End of file (lcd.h) */
-
diff --git a/lvd_lvdbat.c b/lvd_lvdbat.c
deleted file mode 100644
index ac7aa8e..0000000
--- a/lvd_lvdbat.c
+++ /dev/null
@@ -1,588 +0,0 @@
-/*********************************************************************************************************************
- * DISCLAIMER
- * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No 
- * other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all 
- * applicable laws, including copyright laws. 
- * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
- * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, 
- * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM 
- * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES 
- * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
- * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
- * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of 
- * this software. By using this software, you agree to the additional terms and conditions found by accessing the 
- * following link:
- * http://www.renesas.com/disclaimer 
- *
- * Copyright (C) 2018-2020 Renesas Electronics Corporation. All rights reserved.
- **********************************************************************************************************************/
-/**********************************************************************************************************************
- * History : DD.MM.YYYY Version Description
- *         : 25.06.2020 1.10    First Release
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- * File Name    : lvd_lvdbat.c
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Includes   <System Includes> , "Project Includes"
- *********************************************************************************************************************/
-#include <stdint.h>
-#include <stdbool.h>
-#include <string.h>
-#include <math.h>
-
-#include "RE01_256KB.h"
-#include "r_system_api.h"
-#include "r_lpm_api.h"
-
-#include "lvd_lvdbat.h"
-
-/**********************************************************************************************************************
- Macro definitions
- *********************************************************************************************************************/
-/* LVD1 and LVDBAT operation stabilization time (us) : 600us */
-#define LVD_LVDBAT_PRV_LVD_OPE_STABILIZATION_TIME   (600)
-
-/* Interrupt setting */
-#define LVD_LVDBAT_PRV_GROUP5_EVENT_LVD_LVDBAT      (0x04)
-
-/**********************************************************************************************************************
- Local Typedef definitions
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Exported global variables
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Private (static) variables and functions
- *********************************************************************************************************************/
-
-/* This variable is for saving previous mask value */
-volatile static uint32_t s_old_mask_level __attribute__ ((section(".data"))) = 0U;
-
-static void (*g_lvd_cb) (void);
-
-/* error */
-static void lvd_lvdbat_error (void) __attribute__ ((section(".ramfunc")));
-
-/* callback functions */
-static void cb_lvdbat (void) __attribute__ ((section(".ramfunc")));
-
-/***********************************************************************************************************************
- * Function Name: lvd_lvdbat_init
- * Description  : This is a initial setting function for voltage monitor modeules(LVD1 and LVDBAT).
- * Arguments    : e_lvd_level_t lvd_level       - Set LVD detection voltage level.
- *              : e_lvdbat_level_t lvdbat_level - Set LVDBAT detection voltage level.
- *              : lvd_cb_t cb                   - Set the callback function pointer when LVD is detected.
- * Return Value : none
- ***********************************************************************************************************************/
-void lvd_lvdbat_init (e_lvd_level_t lvd_level, e_lvdbat_level_t lvdbat_level, lvd_cb_t cb)
-{
-
-    /* User needs to stop both LVD1 and LVDBAT even if you set only one. So set it at once.*/
-    /* LVD1 is working until here, so we should follow the procedure to stop LVD */
-
-    /*************************************************************************************************/
-    /* Set primask and disable interrupt.                                                            */
-    /*************************************************************************************************/
-    s_old_mask_level = __get_PRIMASK();
-    __set_PRIMASK(1U);
-
-    /* Disable resister write protect */
-    R_SYS_RegisterProtectDisable(SYSTEM_REG_PROTECT_LVD);
-
-    /*************************************************************************************************/
-    /* Disable LVD1 circuit comparison result output (LVDBAT already stopped).                       */
-    /*************************************************************************************************/
-    /*----------------------------------------------------------------------
-     * LVD1CR0 register - Voltage Monitor 1 Circuit Control Register 0
-     * b2  CMPE - [0] Disable voltage monitor 1 circuit comparison result output.
-     * b0  RIE  - [0] Disable voltage monitor 1 interrupt/reset.
-     *--------------------------------------------------------------------*/
-    SYSC->LVD1CR0_b.CMPE = 0U;
-    SYSC->LVD1CR0_b.RIE = 0U;
-
-    /*************************************************************************************************/
-    /* Disable LVD1 and LVDABT circuit.                                                              */
-    /*************************************************************************************************/
-    /*----------------------------------------------------------------------
-     * LVCMPCR register - Voltage Monitor Circuit Control Register
-     * b6  LVDBATE - [0] Disable voltage detection BAT circuit.
-     * b5  LVD1E   - [0] Disable voltage detection 1 circuit.
-     *--------------------------------------------------------------------*/
-    SYSC->LVCMPCR = 0x00U;
-
-    /*************************************************************************************************/
-    /* Set LVD1 and LVDBAT threshold.                                                                */
-    /*************************************************************************************************/
-    /*----------------------------------------------------------------------
-     * LVDLVLR register - Voltage Detection Level Select Register
-     * b6-b4  LVDBATLVL[2:0] - Voltage Detection BAT Level Select.
-     *                         [011] VdetBAT_5 :typ. 2.33V
-     *                         [100] VdetBAT_7 :typ. 2.17V
-     *                         [101] VdetBAT_9 :typ. 2.00V
-     *                         [110] VdetBAT_B :typ. 1.84V
-     *                         [111] VdetBAT_D :typ. 1.67V
-     * b2-b0  LVD1LVL[2:0]   - Voltage Detection 1 Level Select.
-     *                         [000] Vdet1_0 :typ. 2.83V
-     *                         [001] Vdet1_1 :typ. 2.66V
-     *                         [010] Vdet1_3 :typ. 2.50V
-     *                         [011] Vdet1_5 :typ. 2.33V
-     *                         [100] Vdet1_7 :typ. 2.17V
-     *                         [101] Vdet1_9 :typ. 2.00V
-     *                         [110] Vdet1_B :typ. 1.84V
-     *                         [111] Vdet1_D :typ. 1.67V
-     *--------------------------------------------------------------------*/
-    SYSC->LVDLVLR = (uint8_t) ((lvdbat_level << 0x04U) | lvd_level);
-
-    /*************************************************************************************************/
-    /* Enable LVD1 and LVDBAT circuit.                                                               */
-    /*************************************************************************************************/
-    /*----------------------------------------------------------------------
-     * LVCMPCR register - Voltage Monitor Circuit Control Register
-     * b6  LVDBATE - [1] Enable voltage detection BAT circuit.
-     * b5  LVD1E   - [1] Enable voltage detection 1 circuit.
-     *--------------------------------------------------------------------*/
-    SYSC->LVCMPCR = 0x60U;
-
-    /* Wait td(E-A) LVD1 and LVDBAT operation stabilization time */
-    R_SYS_SoftwareDelay(LVD_LVDBAT_PRV_LVD_OPE_STABILIZATION_TIME, SYSTEM_DELAY_UNITS_MICROSECONDS);
-
-    /*************************************************************************************************/
-    /* Setup and enable LVD1 non-maskable interrupt before LVDBAT.                                   */
-    /*************************************************************************************************/
-    /*----------------------------------------------------------------------
-     * LVD1CR0 register - Voltage Monitor 1 Circuit Control Register 0
-     * b6  RI      - [0] Generate voltage monitor 1 interrupt on Vdet1 crossing.
-     *--------------------------------------------------------------------*/
-    SYSC->LVD1CR0_b.RI = 0U;
-
-    /*----------------------------------------------------------------------
-     * LVD1CR1 register - Voltage Monitor 1 Circuit Control Register 1
-     * b2   IRQSEL      - [0] Non-maskable interrupt.
-     * b1-0 IDTSEL[1:0] - [01] Detection of VCC < Vdet1 (falling).
-     *--------------------------------------------------------------------*/
-    SYSC->LVD1CR1 = 0x01U;
-
-    /*----------------------------------------------------------------------
-     * LVD1SR register - Voltage Monitor 1 Circuit Status Register
-     * b0   DET  - [0] Not detected: Voltage Monitor 1 Voltage Change Detection Flag.
-     *--------------------------------------------------------------------*/
-    SYSC->LVD1SR_b.DET = 0U;
-
-    /*----------------------------------------------------------------------
-     * LVD1CR0 register - Voltage Monitor 1 Circuit Control Register 0
-     * b0  RIE  - [1] Enable voltage monitor 1 interrupt/reset.
-     *--------------------------------------------------------------------*/
-    SYSC->LVD1CR0_b.RIE = 1U;
-
-    /*************************************************************************************************/
-    /* Setup and disable LVDBAT maskable interrupt.                                                  */
-    /*************************************************************************************************/
-    /*----------------------------------------------------------------------
-     * LVDBATCR0 register - Voltage Monitor BAT Circuit Control Register 0
-     * b6  RI  - [0] Generate voltage monitor BAT interrupt on VdetBAT crossing.
-     *--------------------------------------------------------------------*/
-    SYSC->LVDBATCR0_b.RI = 0U;
-
-    /*----------------------------------------------------------------------
-     * LVDBATCR1 register - Voltage Monitor BAT Circuit Control Register 1
-     * b2   IRQSEL      - [0] Non-maskable interrupt.
-     * b1-0 IDTSEL[1:0] - [01] Detection of VBAT_EHC < VdetBAT (falling).
-     *--------------------------------------------------------------------*/
-    SYSC->LVDBATCR1 = 0x01;
-
-    /*----------------------------------------------------------------------
-     * LVDBATSR register - Voltage Monitor BAT Circuit Status Register
-     * b0   DET      - [0] Not detected : Voltage Monitor BAT Voltage Change Detection Flag.
-     *--------------------------------------------------------------------*/
-    SYSC->LVDBATSR_b.DET = 0U;
-
-    /*----------------------------------------------------------------------
-     * LVDBATCR0 register - Voltage Monitor BAT Circuit Control Register 0
-     * b0  RIE  - [0] Disable voltage monitor BAT interrupt/reset.
-     *--------------------------------------------------------------------*/
-    SYSC->LVDBATCR0_b.RIE = 0U;
-
-    /*************************************************************************************************/
-    /* Enable LVD1 circuit omparison result output.                                                  */
-    /*************************************************************************************************/
-    /*----------------------------------------------------------------------
-     * LVD1CR0 register - Voltage Monitor 1 Circuit Control Register 0
-     * b2  CMPE - [1] Enable voltage monitor 1 circuit comparison result output.
-     *--------------------------------------------------------------------*/
-    SYSC->LVD1CR0_b.CMPE = 1U;
-
-    /*************************************************************************************************/
-    /* Enable LVDBAT circuit omparison result output.                                                */
-    /*************************************************************************************************/
-    /*----------------------------------------------------------------------
-     * LVDBATCR0 register - Voltage Monitor BAT Circuit Control Register 0
-     * b2  CMPE - [1] Enable voltage monitor BAT circuit comparison result output.
-     *--------------------------------------------------------------------*/
-    SYSC->LVDBATCR0_b.CMPE = 1U;
-
-    /* Enable resister protect */
-    R_SYS_RegisterProtectEnable(SYSTEM_REG_PROTECT_LVD);
-
-    /*************************************************************************************************/
-    /* Stores the address of the callback function.                                                  */
-    /*************************************************************************************************/
-    g_lvd_cb = cb;
-
-    /*************************************************************************************************/
-    /* Remove primask and enable interrupt                                                           */
-    /*************************************************************************************************/
-    __set_PRIMASK(s_old_mask_level);
-
-    return;
-} /* End of function lvd_lvdbat_init */
-
-/***********************************************************************************************************************
- * Function Name: lvdbat_change_setting
- * Description  : This is a function for changing LVDBAT settings.
- * Arguments    : e_lvdbat_direction_t dir - Set the detection direction of LVDBAT.
- *              : e_lvdbat_level_t level   - Set LVDBAT detection voltage level.
- *              : uint8_t int_flag         - Set whether interrupt settings are required.
- *              :                            0: No interrupt settings required.
- *              :                            1: Interrupt setting is required.
- * Return Value : none
- ***********************************************************************************************************************/
-void lvdbat_change_setting (e_lvdbat_direction_t dir, e_lvdbat_level_t level, uint8_t int_flag)
-{
-    IRQn_Type irq = SYSTEM_CFG_EVENT_NUMBER_LVD_LVDBAT;
-
-    /*************************************************************************************************/
-    /* Set primask and disable interrupt.                                                            */
-    /*************************************************************************************************/
-    /* Disable other interrupts to minimize LVD disable period.*/
-    s_old_mask_level = __get_PRIMASK();
-    __set_PRIMASK(1U);
-
-    /* Disable resister protect */
-    R_SYS_RegisterProtectDisable(SYSTEM_REG_PROTECT_LVD);
-
-    /*************************************************************************************************/
-    /* Disable LVD1 and LVDBAT circuit comparison result output.                                     */
-    /*************************************************************************************************/
-    /*----------------------------------------------------------------------
-     * LVDBATCR0 register - Voltage Monitor BAT Circuit Control Register 0
-     * b2  CMPE - [0] Disable voltage monitor BAT circuit comparison result output.
-     * b0  RIE  - [0] Disable voltage monitor BAT interrupt/reset.
-     *--------------------------------------------------------------------*/
-    SYSC->LVDBATCR0_b.CMPE = 0U;
-    SYSC->LVDBATCR0_b.RIE = 0U;
-
-    /*----------------------------------------------------------------------
-     * LVD1CR0 register - Voltage Monitor 1 Circuit Control Register 0
-     * b2  CMPE - [0] Disable voltage monitor 1 circuit comparison result output.
-     * b0  RIE  - [0] Disable voltage monitor 1 interrupt/reset.
-     *--------------------------------------------------------------------*/
-    SYSC->LVD1CR0_b.CMPE = 0U;
-    SYSC->LVD1CR0_b.RIE = 0U;
-
-    /*************************************************************************************************/
-    /* Disable LVDBAT maskable interrupt.                                                            */
-    /*************************************************************************************************/
-    R_NVIC_DisableIRQ(irq); /* Disable NVIC */
-    if (0 != R_SYS_IrqStatusClear(irq)) /* Clear NVIC flag */
-    {
-        lvd_lvdbat_error();
-    }
-    R_NVIC_ClearPendingIRQ(irq); /* Clear NVIC pending status */
-
-    /*************************************************************************************************/
-    /* Disable LVD1 and LVDABT circuit.                                                              */
-    /*************************************************************************************************/
-    /*----------------------------------------------------------------------
-     * LVCMPCR register - Voltage Monitor Circuit Control Register
-     * b6  LVDBATE - [0] Disable voltage detection BAT circuit.
-     * b5  LVD1E   - [0] Disable voltage detection 1 circuit.
-     *--------------------------------------------------------------------*/
-    SYSC->LVCMPCR = 0x00U;
-
-    /*************************************************************************************************/
-    /* Set LVDBAT threshold.                                                                         */
-    /*************************************************************************************************/
-    /*----------------------------------------------------------------------
-     * LVDLVLR register - Voltage Detection Level Select Register
-     * b6-b4  LVDBATLVL[2:0] - Voltage Detection BAT Level Select.
-     *                         [011] VdetBAT_5 :typ. 2.33V
-     *                         [100] VdetBAT_7 :typ. 2.17V
-     *                         [101] VdetBAT_9 :typ. 2.00V
-     *                         [110] VdetBAT_B :typ. 1.84V
-     *                         [111] VdetBAT_D :typ. 1.67V
-     *--------------------------------------------------------------------*/
-    SYSC->LVDLVLR_b.LVDBATLVL = level;
-
-    /*************************************************************************************************/
-    /* Enable LVD1 and LVDBAT circuit.                                                               */
-    /*************************************************************************************************/
-    /*----------------------------------------------------------------------
-     * LVCMPCR register - Voltage Monitor Circuit Control Register
-     * b6  LVDBATE - [1] Enable voltage detection BAT circuit.
-     * b5  LVD1E   - [1] Enable voltage detection 1 circuit.
-     *--------------------------------------------------------------------*/
-    SYSC->LVCMPCR = 0x60U;
-
-    /* Wait td(E-A) LVD1 and LVDBAT operation stabilization time */
-    R_SYS_SoftwareDelay(LVD_LVDBAT_PRV_LVD_OPE_STABILIZATION_TIME, SYSTEM_DELAY_UNITS_MICROSECONDS);
-
-    /*************************************************************************************************/
-    /* Enable LVD1 non-maskable interrupt before LVDBAT.                                             */
-    /*************************************************************************************************/
-    /*----------------------------------------------------------------------
-     * LVD1CR0 register - Voltage Monitor 1 Circuit Control Register 0
-     * b0  RIE  - [1] Enable voltage monitor 1 interrupt/reset.
-     *--------------------------------------------------------------------*/
-    SYSC->LVD1CR0_b.RIE = 1U;
-
-    if (1 == int_flag)
-    {
-
-        /*************************************************************************************************/
-        /* Setup and enable LVDBAT maskable interrupt.                                                   */
-        /*************************************************************************************************/
-        /*----------------------------------------------------------------------
-         * LVDBATCR1 register - Voltage Monitor BAT Circuit Control Register 1
-         * b2   IRQSEL      - [1] Maskable interrupt.
-         * b1-0 IDTSEL[1:0] - [00] Detection of VBAT_EHC >= VdetBAT (rising).
-         *                    [01] Detection of VBAT_EHC < VdetBAT (falling).
-         *                    [10] Detection of either the falling or rising condition above.
-         *--------------------------------------------------------------------*/
-        SYSC->LVDBATCR1_b.IDTSEL = dir; /* Set LVDBAT detect direction */
-        SYSC->LVDBATCR1_b.IRQSEL = 1U; /* Set LVDBAT interrupt type as maskable interrupt */
-
-        /*----------------------------------------------------------------------
-         * LVDBATSR register - Voltage Monitor BAT Circuit Status Register
-         * b0   DET      - [0] Not detected : Voltage Monitor BAT Voltage Change Detection Flag.
-         *--------------------------------------------------------------------*/
-        SYSC->LVDBATSR_b.DET = 0U; /* Clear a detect flag of LVDBAT */
-
-        /*----------------------------------------------------------------------
-         * LVDBATCR0 register - Voltage Monitor BAT Circuit Control Register 0
-         * b0  RIE  - [1] Enable voltage monitor BAT interrupt/reset.
-         *--------------------------------------------------------------------*/
-        SYSC->LVDBATCR0_b.RIE = 1U; /* Enable LVDBAT interrupt */
-    }
-
-    /*************************************************************************************************/
-    /* Enable LVD1 circuit omparison result output.                                                  */
-    /*************************************************************************************************/
-    /*----------------------------------------------------------------------
-     * LVD1CR0 register - Voltage Monitor 1 Circuit Control Register 0
-     * b2  CMPE - [1] Enable voltage monitor 1 circuit comparison result output.
-     *--------------------------------------------------------------------*/
-    SYSC->LVD1CR0_b.CMPE = 1U; /* Enable LVD1 result output circuit */
-
-    /*************************************************************************************************/
-    /* Enable LVDBAT circuit omparison result output.                                                */
-    /*************************************************************************************************/
-    /*----------------------------------------------------------------------
-     * LVDBATCR0 register - Voltage Monitor BAT Circuit Control Register 0
-     * b2  CMPE - [1] Enable voltage monitor BAT circuit comparison result output.
-     *--------------------------------------------------------------------*/
-    SYSC->LVDBATCR0_b.CMPE = 1U; /* Enable LVDBAT result output circuit */
-
-    /* Enable resister protect */
-    R_SYS_RegisterProtectEnable(SYSTEM_REG_PROTECT_LVD);
-
-    if (1 == int_flag)
-    {
-
-        /*************************************************************************************************/
-        /* Enable LVDBAT maskable interrupt.                                                            */
-        /*************************************************************************************************/
-        if (0 != R_SYS_IrqStatusClear(irq)) /* Clear NVIC flag */
-        {
-            lvd_lvdbat_error();
-        }
-        R_NVIC_ClearPendingIRQ(irq); /* Clear NVIC pending status */
-        R_NVIC_SetPriority(irq, 0); /* Set interrupt priority highest */
-        R_NVIC_EnableIRQ(irq); /* Enable NVIC */
-
-        /* Connect NVIC with ICU, and Set callback function */
-        if (0 != R_SYS_IrqEventLinkSet(irq, LVD_LVDBAT_PRV_GROUP5_EVENT_LVD_LVDBAT, &cb_lvdbat))
-        {
-            lvd_lvdbat_error();
-        }
-    }
-
-    /*************************************************************************************************/
-    /* Remove primask and enable interrupt                                                           */
-    /*************************************************************************************************/
-    __set_PRIMASK(s_old_mask_level);
-
-    return;
-} /* End of function lvdbat_change_setting */
-
-/***********************************************************************************************************************
- * Function Name: lvdbat_status_get
- * Description  : This function returns whether LVDBAT is higher or lower than the set voltage level.
- * Arguments    : none
- * Return Value : e_lvdbat_status_t
- *              :   - LVDBAT_STATUS_LOW  :VBAT_EHC port voltage is lower than the voltage level set in LVDBAT.
- *              :   - LVDBAT_STATUS_HIGH :VBAT_EHC port voltage is higher than the voltage level set in LVDBAT.
- ***********************************************************************************************************************/
-e_lvdbat_status_t lvdbat_status_get (void)
-{
-
-    /*----------------------------------------------------------------------
-     * LVDBATSR register - Voltage Monitor BAT Circuit Status Register
-     * b1   MON   - [0] VBAT_EHC < VdetBAT.
-     *              [1] VBAT_EHC >= VdetBAT or MON is disabled.
-     *--------------------------------------------------------------------*/
-    return (e_lvdbat_status_t) SYSC->LVDBATSR_b.MON;
-} /* End of function lvdbat_status_get */
-
-/***********************************************************************************************************************
- * Function Name: lvd_lvdbat_error
- * Description  : Detect error.
- * Arguments    : none
- * Return Value : none
- ***********************************************************************************************************************/
-static void lvd_lvdbat_error (void)
-{
-    while (1)
-    {
-        ; /* error handling */
-    }
-
-} /* End of function lvd_lvdbat_error */
-
-/***********************************************************************************************************************
- * Function Name: cb_lvdbat
- * Description  : This function is a callback function for LVDBAT interrupt. This function do nothing.
- *              : This interrupt is used to return from Software Standby.
- * Arguments    : none
- * Return Value : none
- ***********************************************************************************************************************/
-static void cb_lvdbat (void)
-{
-    return; /* do nothing */
-} /* End of function cb_lvdbat */
-
-/***********************************************************************************************************************
- * Function Name: cb_lvd
- * Description  : This function is a callback function for LVD1 interrupt.
- *              : When battery level becomes very low, this funtion is called and shuts down the system.
- * Arguments    : none
- * Return Value : none
- ***********************************************************************************************************************/
-void cb_lvd (void)
-{
-    uint8_t i;
-
-    /*************************************************************************************************/
-    /* Clear LVD1 detection flag.                                                                    */
-    /*************************************************************************************************/
-    /* Because of the possibility of noise, disable register protect using a function. */
-    R_SYS_RegisterProtectDisable(SYSTEM_REG_PROTECT_LVD);
-
-    /*----------------------------------------------------------------------
-     * LVD1SR register - Voltage Monitor 1 Circuit Status Register
-     * b0   DET  - [0] Not detected: Voltage Monitor 1 Voltage Change Detection Flag.
-     *--------------------------------------------------------------------*/
-    SYSC->LVD1SR_b.DET = 0U;
-
-    /*----------------------------------------------------------------------
-     * NMICLR register - Non-Maskable Interrupt Status Clear Register
-     * b2   LVD1CLR - [1] Clear the NMISR.LVD1ST flag.
-     *--------------------------------------------------------------------*/
-    ICU->NMICLR_b.LVD1CLR = 1U;
-
-    /*----------------------------------------------------------------------
-     * NMISR register - Non-Maskable Interrupt Status Register
-     * b2   LVD1ST - [0] Voltage monitor 1 interrupt not requested.
-     *--------------------------------------------------------------------*/
-    while (0 != ICU->NMISR_b.LVD1ST)
-    {
-        PORT4->PODR_b.PODR10 = 0U; /* wait to clear */
-    }
-
-    /* Because of the possibility of noise, enable register protect using a function. */
-    R_SYS_RegisterProtectEnable(SYSTEM_REG_PROTECT_LVD);
-
-    /*************************************************************************************************/
-    /* Check if LVD detected due to noise.                                                           */
-    /*************************************************************************************************/
-    /* Wait 100m second for stabilizetion of noise */
-    R_SYS_SoftwareDelay(100, SYSTEM_DELAY_UNITS_MILLISECONDS);
-
-    for (i = 0; i < 3; i++)
-    {
-
-        /*----------------------------------------------------------------------
-         * LVD1SR register - Voltage Monitor 1 Circuit Status Register
-         * b1   MON  - [0] VCC < Vdet1.
-         *--------------------------------------------------------------------*/
-        if (0 != SYSC->LVD1SR_b.MON)
-        {
-
-            /* This LVD detection is misdetection. */
-            /* VCC level is higher than LVD1det level. */
-            /* So, This detection is error by any noise */
-            return;
-        }
-    }
-
-    /*************************************************************************************************/
-    /* Callback to user application for pre-processing of shutdown.                                  */
-    /*************************************************************************************************/
-    if ( NULL != (void *) g_lvd_cb)
-    {
-        g_lvd_cb();
-    }
-
-    /*************************************************************************************************/
-    /* Changing the clock source to LOCO.                                                            */
-    /*************************************************************************************************/
-    /* Disable the protect function of the register */
-    /*----------------------------------------------------------------------
-     * PRCR register - Enable/Disable the register write protection
-     * b15-8  PRKEY[7:0] - [10100101] Enable writing to the PRCR register.
-     * b1     PRC1       - [1] Enable writing to the registers related to power save function.
-     * b0     PRC0       - [1] Enable writing to the registers related to clock generation function.
-     *--------------------------------------------------------------------*/
-    SYSC->PRCR = 0xA503U;
-
-    /*----------------------------------------------------------------------
-     * LOCOCR register - Low-Speed On-Chip Oscillator Control Register
-     * b0     LCSTP       - [0] Start the LOCO.
-     *--------------------------------------------------------------------*/
-    if (0 != SYSC->LOCOCR_b.LCSTP)
-    {
-
-        /*--------------------------------------------------------------------------
-         * Start the LOCO operation
-         *------------------------------------------------------------------------*/
-        SYSC->LOCOCR_b.LCSTP = 0U;
-
-        while (0U != SYSC->LOCOCR_b.LCSTP)
-        {
-            ; /* Wait the LOCO clock stabilization */
-        }
-    }
-
-    /*----------------------------------------------------------------------
-     * SCKSCR register - System Clock Source Control Register
-     * b2-0  CKSEL[2:0] - [010] Clock Source Select LOCO.
-     *--------------------------------------------------------------------*/
-    SYSC->SCKSCR = 0x02U;
-
-    /*************************************************************************************************/
-    /* Enable EHC Charging Capacitor Quick Wake-up function.                                         */
-    /*************************************************************************************************/
-    /*----------------------------------------------------------------------
-     * EHCCR1 register - EHC Control Register 1
-     * b0  QUICKMODE - [0] Initial charging of the secondary battery or initialization of the EHC.
-     *--------------------------------------------------------------------*/
-    EHC->EHCCR1_b.QUICKMODE = 0U;
-
-    while (1)
-    {
-        ; /* This process is not reached because the power is cut off. */
-    }
-} /* End of function cb_lvd */
-
-/* End of File */
-
diff --git a/lvd_lvdbat.h b/lvd_lvdbat.h
deleted file mode 100644
index 325b938..0000000
--- a/lvd_lvdbat.h
+++ /dev/null
@@ -1,94 +0,0 @@
-/***********************************************************************************************************************
- * DISCLAIMER
- * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
- * other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
- * applicable laws, including copyright laws.
- * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
- * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
- * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
- * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
- * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
- * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
- * this software. By using this software, you agree to the additional terms and conditions found by accessing the
- * following link:
- * http://www.renesas.com/disclaimer
- *
- * Copyright (C) 2018-2020 Renesas Electronics Corporation. All rights reserved.
- **********************************************************************************************************************/
-/**********************************************************************************************************************
- * History : DD.MM.YYYY Version Description
- *         : 25.06.2020 1.10    First Release
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- * File Name    : lvd_lvdbat.h
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Includes   <System Includes> , "Project Includes"
- *********************************************************************************************************************/
-#include <stdint.h>
-#include <stdbool.h>
-
-#ifndef LVD_LVDBAT_PRV_H_
-    #define LVD_LVDBAT_PRV_H_
-
-/**********************************************************************************************************************
- Macro definitions
- *********************************************************************************************************************/
-/**********************************************************************************************************************
- Typedef definitions
- *********************************************************************************************************************/
-typedef enum e_lvdbat_status
-{
-    LVDBAT_STATUS_LOW = 0,         // VBAT_EHC < VdetBAT
-    LVDBAT_STATUS_HIGH = 1         // VBAT_EHC >= VdetBAT
-} e_lvdbat_status_t;
-
-typedef enum e_lvdbat_direction
-{
-    LVDBAT_DIRECTION_UP = 0,       // Detection of VBAT_EHC >= VdetBAT (rising)
-    LVDBAT_DIRECTION_DOWN = 1,     // Detection of VBAT_EHC < VdetBAT (falling)
-    LVDBAT_DIRECTION_BOTH = 2      // Detection of either the falling or rising condition above
-} e_lvdbat_direction_t;
-
-typedef enum e_lvdbat_level
-{
-    LVDBAT_LEVEL5_2P33 = 3,        // 2.33V
-    LVDBAT_LEVEL7_2P17 = 4,        // 2.17V
-    LVDBAT_LEVEL9_2P00 = 5,        // 2.00V
-    LVDBAT_LEVELB_1P84 = 6,        // 1.84V
-    LVDBAT_LEVELD_1P67 = 7,        // 1.67V
-    LVDBAT_LEVEL_MAX = 8
-} e_lvdbat_level_t;
-
-typedef enum e_lvd_level
-{
-    LVD_LEVEL0_2P83 = 0,           // 2.83V
-    LVD_LEVEL1_2P66 = 1,           // 2.66V
-    LVD_LEVEL3_2P50 = 2,           // 2.50V
-    LVD_LEVEL5_2P33 = 3,           // 2.33V
-    LVD_LEVEL7_2P17 = 4,           // 2.17V
-    LVD_LEVEL9_2P00 = 5,           // 2.00V
-    LVD_LEVELB_1P84 = 6,           // 1.84V
-    LVD_LEVELD_1P67 = 7,           // 1.67V
-    LVD_LEVEL_MAX = 8
-} e_lvd_level_t;
-
-/**********************************************************************************************************************
- Exported global variables
- *********************************************************************************************************************/
-/* Callback function type */
-typedef void (*lvd_cb_t) (void);
-
-/**********************************************************************************************************************
- Exported global functions (to be accessed by other files)
- *********************************************************************************************************************/
-
-extern void lvd_lvdbat_init (e_lvd_level_t lvd_level, e_lvdbat_level_t lvdbat_level, lvd_cb_t cb) __attribute__ ((section(".ramfunc")));
-extern void lvdbat_change_setting (e_lvdbat_direction_t dir, e_lvdbat_level_t level, uint8_t int_flag) __attribute__ ((section(".ramfunc")));
-extern e_lvdbat_status_t lvdbat_status_get (void) __attribute__ ((section(".ramfunc")));
-extern void cb_lvd (void) __attribute__ ((section(".ramfunc")));
-
-#endif /* LVD_LVDBAT_PRV_H_ */
-/* End of file (lvd_lvdbat.h) */
-
diff --git a/mac/LoRaMac.c b/mac/LoRaMac.c
deleted file mode 100644
index cd32cae..0000000
--- a/mac/LoRaMac.c
+++ /dev/null
@@ -1,4820 +0,0 @@
-/*!
- * \file      LoRaMac.c
- *
- * \brief     LoRa MAC layer implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- */
-#include "utilities.h"
-#include "region/Region.h"
-#include "LoRaMacClassB.h"
-#include "LoRaMacCrypto.h"
-#include "secure-element.h"
-#include "LoRaMacTest.h"
-#include "LoRaMacTypes.h"
-#include "LoRaMacConfirmQueue.h"
-#include "LoRaMacHeaderTypes.h"
-#include "LoRaMacMessageTypes.h"
-#include "LoRaMacParser.h"
-#include "LoRaMacCommands.h"
-#include "LoRaMacAdr.h"
-
-#include "LoRaMac.h"
-
-#define LORAMAC_FUNC_LOCATION_ONRADIO_EVENT __attribute__ ((section(".ramfunc")))
-
-#ifndef LORAMAC_VERSION
-/*!
- * LORaWAN version definition.
- */
-#define LORAMAC_VERSION                             0x01000300
-#endif
-
-/*!
- * Maximum PHY layer payload size
- */
-#define LORAMAC_PHY_MAXPAYLOAD                      255
-
-/*!
- * Maximum MAC commands buffer size
- */
-#define LORA_MAC_COMMAND_MAX_LENGTH                 128
-
-/*!
- * Maximum length of the fOpts field
- */
-#define LORA_MAC_COMMAND_MAX_FOPTS_LENGTH           15
-
-/*!
- * LoRaMac duty cycle for the back-off procedure during the first hour.
- */
-#define BACKOFF_DC_1_HOUR                           100
-
-/*!
- * LoRaMac duty cycle for the back-off procedure during the next 10 hours.
- */
-#define BACKOFF_DC_10_HOURS                         1000
-
-/*!
- * LoRaMac duty cycle for the back-off procedure during the next 24 hours.
- */
-#define BACKOFF_DC_24_HOURS                         10000
-
-/*!
- * LoRaMac internal states
- */
-enum eLoRaMacState
-{
-    LORAMAC_IDLE          = 0x00000000,
-    LORAMAC_STOPPED       = 0x00000001,
-    LORAMAC_TX_RUNNING    = 0x00000002,
-    LORAMAC_RX            = 0x00000004,
-    LORAMAC_ACK_RETRY     = 0x00000010,
-    LORAMAC_TX_DELAYED    = 0x00000020,
-    LORAMAC_TX_CONFIG     = 0x00000040,
-    LORAMAC_RX_ABORT      = 0x00000080,
-};
-
-/*
- * Request permission state
- */
-typedef enum eLoRaMacRequestHandling
-{
-    LORAMAC_REQUEST_HANDLING_OFF = 0,
-    LORAMAC_REQUEST_HANDLING_ON = !LORAMAC_REQUEST_HANDLING_OFF
-}LoRaMacRequestHandling_t;
-
-typedef struct sLoRaMacNvmCtx
-{
-    /*
-     * LoRaMac region.
-     */
-    LoRaMacRegion_t Region;
-    /*
-     * LoRaMac default parameters
-     */
-    LoRaMacParams_t MacParamsDefaults;
-    /*
-     * Network ID ( 3 bytes )
-     */
-    uint32_t NetID;
-    /*
-     * Mote Address
-     */
-    uint32_t DevAddr;
-    /*!
-    * Multicast channel list
-    */
-    MulticastCtx_t MulticastChannelList[LORAMAC_MAX_MC_CTX];
-    /*
-     * Actual device class
-     */
-    DeviceClass_t DeviceClass;
-    /*
-     * Indicates if the node is connected to
-     * a private or public network
-     */
-    bool PublicNetwork;
-    /*
-     * LoRaMac ADR control status
-     */
-    bool AdrCtrlOn;
-    /*
-     * Counts the number of missed ADR acknowledgements
-     */
-    uint32_t AdrAckCounter;
-
-    /*
-     * LoRaMac parameters
-     */
-    LoRaMacParams_t MacParams;
-    /*
-     * Maximum duty cycle
-     * \remark Possibility to shutdown the device.
-     */
-    uint8_t MaxDCycle;
-    /*
-    * Enables/Disables duty cycle management (Test only)
-    */
-    bool DutyCycleOn;
-    /*
-     * Current channel index
-     */
-    uint8_t LastTxChannel;
-    /*
-     * Buffer containing the MAC layer commands
-     */
-    uint8_t MacCommandsBuffer[LORA_MAC_COMMAND_MAX_LENGTH];
-    /*
-     * If the server has sent a FRAME_TYPE_DATA_CONFIRMED_DOWN this variable indicates
-     * if the ACK bit must be set for the next transmission
-     */
-    bool SrvAckRequested;
-    /*
-     * Aggregated duty cycle management
-     */
-    uint16_t AggregatedDCycle;
-    /*
-    * Aggregated duty cycle management
-    */
-    TimerTime_t LastTxDoneTime;
-    TimerTime_t AggregatedTimeOff;
-    /*
-    * Stores the time at LoRaMac initialization.
-    *
-    * \remark Used for the BACKOFF_DC computation.
-    */
-    SysTime_t InitializationTime;
-    /*
-     * Current LoRaWAN Version
-     */
-    Version_t Version;
-    /*
-     * End-Device network activation
-     */
-    ActivationType_t NetworkActivation;
-    /*!
-     * Last received Message integrity Code (MIC)
-     */
-    uint32_t LastRxMic;
-}LoRaMacNvmCtx_t;
-
-typedef struct sLoRaMacCtx
-{
-    /*
-    * Length of packet in PktBuffer
-    */
-    uint16_t PktBufferLen;
-    /*
-    * Buffer containing the data to be sent or received.
-    */
-    uint8_t PktBuffer[LORAMAC_PHY_MAXPAYLOAD];
-    /*!
-    * Current processed transmit message
-    */
-    LoRaMacMessage_t TxMsg;
-    /*!
-    * Buffer containing the data received by the application.
-    */
-    uint8_t AppData[LORAMAC_PHY_MAXPAYLOAD];
-    /*
-    * Size of buffer containing the application data.
-    */
-    uint8_t AppDataSize;
-    /*
-    * Buffer containing the upper layer data.
-    */
-    uint8_t RxPayload[LORAMAC_PHY_MAXPAYLOAD];
-    SysTime_t LastTxSysTime;
-    /*
-    * LoRaMac internal state
-    */
-    uint32_t MacState;
-    /*
-    * LoRaMac upper layer event functions
-    */
-    LoRaMacPrimitives_t* MacPrimitives;
-    /*
-    * LoRaMac upper layer callback functions
-    */
-    LoRaMacCallback_t* MacCallbacks;
-    /*
-    * Radio events function pointer
-    */
-    RadioEvents_t RadioEvents;
-    /*
-    * LoRaMac duty cycle delayed Tx timer
-    */
-    TimerEvent_t TxDelayedTimer;
-    /*
-    * LoRaMac reception windows timers
-    */
-    TimerEvent_t RxWindowTimer1;
-    TimerEvent_t RxWindowTimer2;
-    /*
-    * LoRaMac reception windows delay
-    * \remark normal frame: RxWindowXDelay = ReceiveDelayX - RADIO_WAKEUP_TIME
-    *         join frame  : RxWindowXDelay = JoinAcceptDelayX - RADIO_WAKEUP_TIME
-    */
-    uint32_t RxWindow1Delay;
-    uint32_t RxWindow2Delay;
-    /*
-    * LoRaMac Rx windows configuration
-    */
-    RxConfigParams_t RxWindow1Config;
-    RxConfigParams_t RxWindow2Config;
-    RxConfigParams_t RxWindowCConfig;
-    /*
-     * Limit of uplinks without any donwlink response before the ADRACKReq bit will be set.
-     */
-    uint16_t AdrAckLimit;
-    /*
-     * Limit of uplinks without any donwlink response after a the first frame with set ADRACKReq bit
-     * before the trying to regain the connectivity.
-     */
-    uint16_t AdrAckDelay;
-    /*
-    * Acknowledge timeout timer. Used for packet retransmissions.
-    */
-    TimerEvent_t AckTimeoutTimer;
-    /*
-     * Uplink messages repetitions counter
-     */
-    uint8_t ChannelsNbTransCounter;
-    /*
-     * Number of trials to get a frame acknowledged
-     */
-    uint8_t AckTimeoutRetries;
-    /*
-     * Number of trials to get a frame acknowledged
-     */
-    uint8_t AckTimeoutRetriesCounter;
-    /*
-     * Indicates if the AckTimeout timer has expired or not
-     */
-    bool AckTimeoutRetry;
-    /*
-     * If the node has sent a FRAME_TYPE_DATA_CONFIRMED_UP this variable indicates
-     * if the nodes needs to manage the server acknowledgement.
-     */
-    bool NodeAckRequested;
-    /*
-     * Current channel index
-     */
-    uint8_t Channel;
-    /*
-    * Last transmission time on air
-    */
-    TimerTime_t TxTimeOnAir;
-    /*
-    * Structure to hold an MCPS indication data.
-    */
-    McpsIndication_t McpsIndication;
-    /*
-    * Structure to hold MCPS confirm data.
-    */
-    McpsConfirm_t McpsConfirm;
-    /*
-    * Structure to hold MLME confirm data.
-    */
-    MlmeConfirm_t MlmeConfirm;
-    /*
-    * Structure to hold MLME indication data.
-    */
-    MlmeIndication_t MlmeIndication;
-    /*
-    * Holds the current rx window slot
-    */
-    LoRaMacRxSlot_t RxSlot;
-    /*
-    * LoRaMac tx/rx operation state
-    */
-    LoRaMacFlags_t MacFlags;
-    /*
-    * Data structure indicating if a request is allowed or not.
-    */
-    LoRaMacRequestHandling_t AllowRequests;
-    /*
-    * Non-volatile module context structure
-    */
-    LoRaMacNvmCtx_t* NvmCtx;
-}LoRaMacCtx_t;
-
-/*
- * Module context.
- */
-static LoRaMacCtx_t MacCtx;
-
-/*
- * Non-volatile module context.
- */
-static LoRaMacNvmCtx_t NvmMacCtx;
-
-
-
-/*
- * List of module contexts.
- */
-LoRaMacCtxs_t Contexts;
-
-/*!
- * Defines the LoRaMac radio events status
- */
-typedef union uLoRaMacRadioEvents
-{
-    uint32_t Value;
-    struct sEvents
-    {
-        uint32_t RxTimeout : 1;
-        uint32_t RxError   : 1;
-        uint32_t TxTimeout : 1;
-        uint32_t RxDone    : 1;
-        uint32_t TxDone    : 1;
-    }Events;
-}LoRaMacRadioEvents_t;
-
-/*!
- * LoRaMac radio events status
- */
-LoRaMacRadioEvents_t LoRaMacRadioEvents = { .Value = 0 };
-
-/*!
- * \brief Function to be executed on Radio Tx Done event
- */
-static void OnRadioTxDone( void ) LORAMAC_FUNC_LOCATION_ONRADIO_EVENT;
-
-/*!
- * \brief This function prepares the MAC to abort the execution of function
- *        OnRadioRxDone in case of a reception error.
- */
-static void PrepareRxDoneAbort( void );
-
-/*!
- * \brief Function to be executed on Radio Rx Done event
- */
-static void OnRadioRxDone( uint8_t* payload, uint16_t size, int16_t rssi, int8_t snr ) LORAMAC_FUNC_LOCATION_ONRADIO_EVENT;
-
-/*!
- * \brief Function executed on Radio Tx Timeout event
- */
-static void OnRadioTxTimeout( void ) LORAMAC_FUNC_LOCATION_ONRADIO_EVENT;
-
-/*!
- * \brief Function executed on Radio Rx error event
- */
-static void OnRadioRxError( void ) LORAMAC_FUNC_LOCATION_ONRADIO_EVENT;
-
-/*!
- * \brief Function executed on Radio Rx Timeout event
- */
-static void OnRadioRxTimeout( void ) LORAMAC_FUNC_LOCATION_ONRADIO_EVENT;
-
-/*!
- * \brief Function executed on duty cycle delayed Tx  timer event
- */
-static void OnTxDelayedTimerEvent( void* context ) LORAMAC_FUNC_LOCATION_ONRADIO_EVENT;
-
-/*!
- * \brief Function executed on first Rx window timer event
- */
-static void OnRxWindow1TimerEvent( void* context ) LORAMAC_FUNC_LOCATION_ONRADIO_EVENT;
-
-/*!
- * \brief Function executed on second Rx window timer event
- */
-static void OnRxWindow2TimerEvent( void* context ) LORAMAC_FUNC_LOCATION_ONRADIO_EVENT;
-
-/*!
- * \brief Function executed on AckTimeout timer event
- */
-static void OnAckTimeoutTimerEvent( void* context ) LORAMAC_FUNC_LOCATION_ONRADIO_EVENT;
-
-/*!
- * \brief Configures the events to trigger an MLME-Indication with
- *        a MLME type of MLME_SCHEDULE_UPLINK.
- */
-static void SetMlmeScheduleUplinkIndication( void );
-
-/*!
- * Computes next 32 bit downlink counter value and determines the frame counter ID.
- *
- * \param[IN]     addrID                - Address identifier
- * \param[IN]     fType                 - Frame type
- * \param[IN]     macMsg                - Data message object, holding the current 16 bit transmitted frame counter
- * \param[IN]     lrWanVersion          - LoRaWAN version
- * \param[IN]     maxFCntGap            - Maximum allowed frame counter difference (only for 1.0.X necessary)
- * \param[OUT]    fCntID                - Frame counter identifier
- * \param[OUT]    currentDown           - Current downlink counter value
- *
- * \retval                              - Status of the operation
- */
-static LoRaMacCryptoStatus_t GetFCntDown( AddressIdentifier_t addrID, FType_t fType, LoRaMacMessageData_t* macMsg, Version_t lrWanVersion,
-                                          uint16_t maxFCntGap, FCntIdentifier_t* fCntID, uint32_t* currentDown );
-
-/*!
- * \brief Switches the device class
- *
- * \param [IN] deviceClass Device class to switch to
- */
-static LoRaMacStatus_t SwitchClass( DeviceClass_t deviceClass );
-
-/*!
- * \brief Gets the maximum application payload length in the absence of the optional FOpt field.
- *
- * \param [IN] datarate        Current datarate
- *
- * \retval                    Max length
- */
-static uint8_t GetMaxAppPayloadWithoutFOptsLength( int8_t datarate );
-
-/*!
- * \brief Validates if the payload fits into the frame, taking the datarate
- *        into account.
- *
- * \details Refer to chapter 4.3.2 of the LoRaWAN specification, v1.0
- *
- * \param lenN Length of the application payload. The length depends on the
- *             datarate and is region specific
- *
- * \param datarate Current datarate
- *
- * \param fOptsLen Length of the fOpts field
- *
- * \retval [false: payload does not fit into the frame, true: payload fits into
- *          the frame]
- */
-static bool ValidatePayloadLength( uint8_t lenN, int8_t datarate, uint8_t fOptsLen );
-
-/*!
- * \brief Decodes MAC commands in the fOpts field and in the payload
- *
- * \param [IN] payload      A pointer to the payload
- * \param [IN] macIndex     The index of the payload where the MAC commands start
- * \param [IN] commandsSize The size of the MAC commands
- * \param [IN] snr          The SNR value  of the frame
- * \param [IN] rxSlot       The RX slot where the frame was received
- */
-static void ProcessMacCommands( uint8_t* payload, uint8_t macIndex, uint8_t commandsSize, int8_t snr, LoRaMacRxSlot_t rxSlot );
-
-/*!
- * \brief LoRaMAC layer generic send frame
- *
- * \param [IN] macHdr      MAC header field
- * \param [IN] fPort       MAC payload port
- * \param [IN] fBuffer     MAC data buffer to be sent
- * \param [IN] fBufferSize MAC data buffer size
- * \retval status          Status of the operation.
- */
-LoRaMacStatus_t Send( LoRaMacHeader_t* macHdr, uint8_t fPort, void* fBuffer, uint16_t fBufferSize );
-
-/*!
- * \brief LoRaMAC layer send join/rejoin request
- *
- * \param [IN] joinReqType Type of join-request or rejoin
- *
- * \retval status          Status of the operation.
- */
-LoRaMacStatus_t SendReJoinReq( JoinReqIdentifier_t joinReqType );
-
-/*!
- * \brief LoRaMAC layer frame buffer initialization
- *
- * \param [IN] macHdr      MAC header field
- * \param [IN] fCtrl       MAC frame control field
- * \param [IN] fOpts       MAC commands buffer
- * \param [IN] fPort       MAC payload port
- * \param [IN] fBuffer     MAC data buffer to be sent
- * \param [IN] fBufferSize MAC data buffer size
- * \retval status          Status of the operation.
- */
-LoRaMacStatus_t PrepareFrame( LoRaMacHeader_t* macHdr, LoRaMacFrameCtrl_t* fCtrl, uint8_t fPort, void* fBuffer, uint16_t fBufferSize );
-
-/*
- * \brief Schedules the frame according to the duty cycle
- *
- * \param [IN] allowDelayedTx When set to true, the a frame will be delayed,
- *                            the duty cycle restriction is active
- * \retval Status of the operation
- */
-static LoRaMacStatus_t ScheduleTx( bool allowDelayedTx );
-
-/*
- * \brief Secures the current processed frame ( TxMsg )
- * \param[IN]     txDr      Data rate used for the transmission
- * \param[IN]     txCh      Index of the channel used for the transmission
- * \retval status           Status of the operation
- */
-static LoRaMacStatus_t SecureFrame( uint8_t txDr, uint8_t txCh );
-
-/*
- * \brief Calculates the back-off time for the band of a channel.
- *
- * \param [IN] channel     The last Tx channel index
- */
-static void CalculateBackOff( uint8_t channel );
-
-/*
- * \brief Function to remove pending MAC commands
- *
- * \param [IN] rxSlot     The RX slot on which the frame was received
- * \param [IN] fCtrl      The frame control field of the received frame
- * \param [IN] request    The request type
- */
-static void RemoveMacCommands( LoRaMacRxSlot_t rxSlot, LoRaMacFrameCtrl_t fCtrl, Mcps_t request );
-
-/*!
- * \brief LoRaMAC layer prepared frame buffer transmission with channel specification
- *
- * \remark PrepareFrame must be called at least once before calling this
- *         function.
- *
- * \param [IN] channel     Channel to transmit on
- * \retval status          Status of the operation.
- */
-LoRaMacStatus_t SendFrameOnChannel( uint8_t channel );
-
-/*!
- * \brief Sets the radio in continuous transmission mode
- *
- * \remark Uses the radio parameters set on the previous transmission.
- *
- * \param [IN] timeout     Time in seconds while the radio is kept in continuous wave mode
- * \retval status          Status of the operation.
- */
-LoRaMacStatus_t SetTxContinuousWave( uint16_t timeout );
-
-/*!
- * \brief Sets the radio in continuous transmission mode
- *
- * \remark Uses the radio parameters set on the previous transmission.
- *
- * \param [IN] timeout     Time in seconds while the radio is kept in continuous wave mode
- * \param [IN] frequency   RF frequency to be set.
- * \param [IN] power       RF output power to be set.
- * \retval status          Status of the operation.
- */
-LoRaMacStatus_t SetTxContinuousWave1( uint16_t timeout, uint32_t frequency, uint8_t power );
-
-/*!
- * \brief Resets MAC specific parameters to default
- */
-static void ResetMacParameters( void );
-
-/*!
- * \brief Initializes and opens the reception window
- *
- * \param [IN] rxTimer  Window timer to be topped.
- * \param [IN] rxConfig Window parameters to be setup
- */
-static void RxWindowSetup( TimerEvent_t* rxTimer, RxConfigParams_t* rxConfig ) LORAMAC_FUNC_LOCATION_ONRADIO_EVENT;
-
-/*!
- * \brief Opens up a continuous RX C window. This is used for
- *        class c devices.
- */
-static void OpenContinuousRxCWindow( void );
-
-/*!
- * \brief   Returns a pointer to the internal contexts structure.
- *
- * \retval  void Points to a structure containing all contexts
- */
-LoRaMacCtxs_t* GetCtxs( void );
-
-/*!
- * \brief   Restoring of internal module contexts
- *
- * \details This function allows to restore module contexts by a given pointer.
- *
- *
- * \retval  LoRaMacStatus_t Status of the operation. Possible returns are:
- *          returns are:
- *          \ref LORAMAC_STATUS_OK,
- *          \ref LORAMAC_STATUS_PARAMETER_INVALID,
- */
-LoRaMacStatus_t RestoreCtxs( LoRaMacCtxs_t* contexts );
-
-/*!
- * \brief   Determines the frame type
- *
- * \param [IN] macMsg Data message object
- *
- * \param [OUT] fType Frame type
- *
- * \retval  LoRaMacStatus_t Status of the operation. Possible returns are:
- *          returns are:
- *          \ref LORAMAC_STATUS_OK,
- *          \ref LORAMAC_STATUS_PARAMETER_INVALID,
- */
-LoRaMacStatus_t DetermineFrameType( LoRaMacMessageData_t* macMsg, FType_t* fType );
-
-/*!
- * \brief Checks if the retransmission should be stopped in case of a unconfirmed uplink
- *
- * \retval Returns true if it should be stopped.
- */
-static bool CheckRetransUnconfirmedUplink( void );
-
-/*!
- * \brief Checks if the retransmission should be stopped in case of a confirmed uplink
- *
- * \retval Returns true it should be stopped.
- */
-static bool CheckRetransConfirmedUplink( void );
-
-/*!
- * \brief Stops the uplink retransmission
- *
- * \retval Returns true if successful.
- */
-static bool StopRetransmission( void );
-
-/*!
- * \brief Handles the ACK retries algorithm.
- *        Increments the re-tries counter up until the specified number of
- *        trials or the allowed maximum. Decrease the uplink datarate every 2
- *        trials.
- */
-static void AckTimeoutRetriesProcess( void );
-
-/*!
- * \brief Finalizes the ACK retries algorithm.
- *        If no ACK is received restores the default channels
- */
-static void AckTimeoutRetriesFinalize( void );
-
-/*!
- * \brief Calls the callback to indicate that a context changed
- */
-static void CallNvmCtxCallback( LoRaMacNvmCtxModule_t module );
-
-/*!
- * \brief MAC NVM Context has been changed
- */
-static void EventMacNvmCtxChanged( void );
-
-/*!
- * \brief Region NVM Context has been changed
- */
-static void EventRegionNvmCtxChanged( void );
-
-/*!
- * \brief Crypto NVM Context has been changed
- */
-static void EventCryptoNvmCtxChanged( void );
-
-/*!
- * \brief Secure Element NVM Context has been changed
- */
-static void EventSecureElementNvmCtxChanged( void );
-
-/*!
- * \brief MAC commands module nvm context has been changed
- */
-static void EventCommandsNvmCtxChanged( void );
-
-/*!
- * \brief Class B module nvm context has been changed
- */
-static void EventClassBNvmCtxChanged( void );
-
-/*!
- * \brief Confirm Queue module nvm context has been changed
- */
-static void EventConfirmQueueNvmCtxChanged( void );
-
-/*!
- * \brief Verifies if a request is pending currently
- *
- *\retval 1: Request pending, 0: request not pending
- */
-static uint8_t IsRequestPending( void );
-
-/*!
- * \brief Enabled the possibility to perform requests
- *
- * \param [IN] requestState Request permission state
- */
-static void LoRaMacEnableRequests( LoRaMacRequestHandling_t requestState );
-
-/*!
- * \brief This function verifies if a RX abort occurred
- */
-static void LoRaMacCheckForRxAbort( void );
-
-/*!
- * \brief This function verifies if a beacon acquisition MLME
- *        request was pending
- *
- * \retval 1: Request pending, 0: no request pending
- */
-static uint8_t LoRaMacCheckForBeaconAcquisition( void );
-
-/*!
- * \brief This function handles join request
- */
-static void LoRaMacHandleMlmeRequest( void );
-
-/*!
- * \brief This function handles mcps request
- */
-static void LoRaMacHandleMcpsRequest( void );
-
-/*!
- * \brief This function handles callback events for requests
- */
-static void LoRaMacHandleRequestEvents( void );
-
-/*!
- * \brief This function handles callback events for indications
- */
-static void LoRaMacHandleIndicationEvents( void );
-
-/*!
- * Structure used to store the radio Tx event data
- */
-struct
-{
-    TimerTime_t CurTime;
-}TxDoneParams;
-
-/*!
- * Structure used to store the radio Rx event data
- */
-struct
-{
-    TimerTime_t LastRxDone;
-    uint8_t *Payload;
-    uint16_t Size;
-    int16_t Rssi;
-    int8_t Snr;
-}RxDoneParams;
-
-static void OnRadioTxDone( void )
-{
-    TxDoneParams.CurTime = TimerGetCurrentTime( );
-    MacCtx.LastTxSysTime = SysTimeGet( );
-
-    LoRaMacRadioEvents.Events.TxDone = 1;
-
-    if( ( MacCtx.MacCallbacks != NULL ) && ( MacCtx.MacCallbacks->MacProcessNotify != NULL ) )
-    {
-        MacCtx.MacCallbacks->MacProcessNotify( );
-    }
-}
-
-static void OnRadioRxDone( uint8_t *payload, uint16_t size, int16_t rssi, int8_t snr )
-{
-    RxDoneParams.LastRxDone = TimerGetCurrentTime( );
-    RxDoneParams.Payload = payload;
-    RxDoneParams.Size = size;
-    RxDoneParams.Rssi = rssi;
-    RxDoneParams.Snr = snr;
-
-    LoRaMacRadioEvents.Events.RxDone = 1;
-
-    if( ( MacCtx.MacCallbacks != NULL ) && ( MacCtx.MacCallbacks->MacProcessNotify != NULL ) )
-    {
-        MacCtx.MacCallbacks->MacProcessNotify( );
-    }
-}
-
-static void OnRadioTxTimeout( void )
-{
-    LoRaMacRadioEvents.Events.TxTimeout = 1;
-
-    if( ( MacCtx.MacCallbacks != NULL ) && ( MacCtx.MacCallbacks->MacProcessNotify != NULL ) )
-    {
-        MacCtx.MacCallbacks->MacProcessNotify( );
-    }
-}
-
-static void OnRadioRxError( void )
-{
-    LoRaMacRadioEvents.Events.RxError = 1;
-
-    if( ( MacCtx.MacCallbacks != NULL ) && ( MacCtx.MacCallbacks->MacProcessNotify != NULL ) )
-    {
-        MacCtx.MacCallbacks->MacProcessNotify( );
-    }
-}
-
-static void OnRadioRxTimeout( void )
-{
-    LoRaMacRadioEvents.Events.RxTimeout = 1;
-
-    if( ( MacCtx.MacCallbacks != NULL ) && ( MacCtx.MacCallbacks->MacProcessNotify != NULL ) )
-    {
-        MacCtx.MacCallbacks->MacProcessNotify( );
-    }
-}
-
-static void UpdateRxSlotIdleState( void )
-{
-    if( MacCtx.NvmCtx->DeviceClass != CLASS_C )
-    {
-        MacCtx.RxSlot = RX_SLOT_NONE;
-    }
-    else
-    {
-        MacCtx.RxSlot = RX_SLOT_WIN_CLASS_C;
-    }
-}
-
-static void ProcessRadioTxDone( void )
-{
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-    SetBandTxDoneParams_t txDone;
-
-    if( MacCtx.NvmCtx->DeviceClass != CLASS_C )
-    {
-        Radio.Sleep( );
-    }
-    // Setup timers
-    TimerSetValue( &MacCtx.RxWindowTimer1, MacCtx.RxWindow1Delay );
-    TimerStart( &MacCtx.RxWindowTimer1 );
-    TimerSetValue( &MacCtx.RxWindowTimer2, MacCtx.RxWindow2Delay );
-    TimerStart( &MacCtx.RxWindowTimer2 );
-
-    if( ( MacCtx.NvmCtx->DeviceClass == CLASS_C ) || ( MacCtx.NodeAckRequested == true ) )
-    {
-        getPhy.Attribute = PHY_ACK_TIMEOUT;
-        phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-        TimerSetValue( &MacCtx.AckTimeoutTimer, MacCtx.RxWindow2Delay + phyParam.Value );
-        TimerStart( &MacCtx.AckTimeoutTimer );
-    }
-
-    // Store last Tx channel
-    MacCtx.NvmCtx->LastTxChannel = MacCtx.Channel;
-    // Update last tx done time for the current channel
-    txDone.Channel = MacCtx.Channel;
-    if( MacCtx.NvmCtx->NetworkActivation == ACTIVATION_TYPE_NONE )
-    {
-        txDone.Joined  = false;
-    }
-    else
-    {
-        txDone.Joined  = true;
-    }
-    txDone.LastTxDoneTime = TxDoneParams.CurTime;
-    RegionSetBandTxDone( MacCtx.NvmCtx->Region, &txDone );
-    // Update Aggregated last tx done time
-    MacCtx.NvmCtx->LastTxDoneTime = TxDoneParams.CurTime;
-
-    if( MacCtx.NodeAckRequested == false )
-    {
-        MacCtx.McpsConfirm.Status = LORAMAC_EVENT_INFO_STATUS_OK;
-    }
-}
-
-static void PrepareRxDoneAbort( void )
-{
-    MacCtx.MacState |= LORAMAC_RX_ABORT;
-
-    if( MacCtx.NodeAckRequested == true )
-    {
-        OnAckTimeoutTimerEvent( NULL );
-    }
-
-    MacCtx.MacFlags.Bits.McpsInd = 1;
-    MacCtx.MacFlags.Bits.MacDone = 1;
-
-    UpdateRxSlotIdleState( );
-}
-
-static void ProcessRadioRxDone( void )
-{
-    LoRaMacHeader_t macHdr;
-    ApplyCFListParams_t applyCFList;
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-    LoRaMacCryptoStatus_t macCryptoStatus = LORAMAC_CRYPTO_ERROR;
-
-    LoRaMacMessageData_t macMsgData;
-    LoRaMacMessageJoinAccept_t macMsgJoinAccept;
-    uint8_t *payload = RxDoneParams.Payload;
-    uint16_t size = RxDoneParams.Size;
-    int16_t rssi = RxDoneParams.Rssi;
-    int8_t snr = RxDoneParams.Snr;
-
-    uint8_t pktHeaderLen = 0;
-
-    uint32_t downLinkCounter = 0;
-    uint32_t address = MacCtx.NvmCtx->DevAddr;
-    uint8_t multicast = 0;
-    AddressIdentifier_t addrID = UNICAST_DEV_ADDR;
-    FCntIdentifier_t fCntID;
-
-    MacCtx.McpsConfirm.AckReceived = false;
-    MacCtx.McpsIndication.Rssi = rssi;
-    MacCtx.McpsIndication.Snr = snr;
-    MacCtx.McpsIndication.RxSlot = MacCtx.RxSlot;
-    MacCtx.McpsIndication.Port = 0;
-    MacCtx.McpsIndication.Multicast = 0;
-    MacCtx.McpsIndication.FramePending = 0;
-    MacCtx.McpsIndication.Buffer = NULL;
-    MacCtx.McpsIndication.BufferSize = 0;
-    MacCtx.McpsIndication.RxData = false;
-    MacCtx.McpsIndication.AckReceived = false;
-    MacCtx.McpsIndication.DownLinkCounter = 0;
-    MacCtx.McpsIndication.McpsIndication = MCPS_UNCONFIRMED;
-    MacCtx.McpsIndication.DevAddress = 0;
-    MacCtx.McpsIndication.DeviceTimeAnsReceived = false;
-
-    Radio.Sleep( );
-    TimerStop( &MacCtx.RxWindowTimer2 );
-
-    // This function must be called even if we are not in class b mode yet.
-    if( LoRaMacClassBRxBeacon( payload, size ) == true )
-    {
-        MacCtx.MlmeIndication.BeaconInfo.Rssi = rssi;
-        MacCtx.MlmeIndication.BeaconInfo.Snr = snr;
-        return;
-    }
-    // Check if we expect a ping or a multicast slot.
-    if( MacCtx.NvmCtx->DeviceClass == CLASS_B )
-    {
-        if( LoRaMacClassBIsPingExpected( ) == true )
-        {
-            LoRaMacClassBSetPingSlotState( PINGSLOT_STATE_CALC_PING_OFFSET );
-            LoRaMacClassBPingSlotTimerEvent( NULL );
-            MacCtx.McpsIndication.RxSlot = RX_SLOT_WIN_CLASS_B_PING_SLOT;
-        }
-        else if( LoRaMacClassBIsMulticastExpected( ) == true )
-        {
-            LoRaMacClassBSetMulticastSlotState( PINGSLOT_STATE_CALC_PING_OFFSET );
-            LoRaMacClassBMulticastSlotTimerEvent( NULL );
-            MacCtx.McpsIndication.RxSlot = RX_SLOT_WIN_CLASS_B_MULTICAST_SLOT;
-        }
-    }
-
-    macHdr.Value = payload[pktHeaderLen++];
-
-    switch( macHdr.Bits.MType )
-    {
-        case FRAME_TYPE_JOIN_ACCEPT:
-            macMsgJoinAccept.Buffer = payload;
-            macMsgJoinAccept.BufSize = size;
-
-            // Abort in case if the device isn't joined yet and no rejoin request is ongoing.
-            if( MacCtx.NvmCtx->NetworkActivation != ACTIVATION_TYPE_NONE )
-            {
-                MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
-                PrepareRxDoneAbort( );
-                return;
-            }
-            macCryptoStatus = LoRaMacCryptoHandleJoinAccept( JOIN_REQ, SecureElementGetJoinEui( ), &macMsgJoinAccept );
-
-            if( LORAMAC_CRYPTO_SUCCESS == macCryptoStatus )
-            {
-                // Network ID
-                MacCtx.NvmCtx->NetID = ( uint32_t ) macMsgJoinAccept.NetID[0];
-                MacCtx.NvmCtx->NetID |= ( ( uint32_t ) macMsgJoinAccept.NetID[1] << 8 );
-                MacCtx.NvmCtx->NetID |= ( ( uint32_t ) macMsgJoinAccept.NetID[2] << 16 );
-
-                // Device Address
-                MacCtx.NvmCtx->DevAddr = macMsgJoinAccept.DevAddr;
-
-                // DLSettings
-                MacCtx.NvmCtx->MacParams.Rx1DrOffset = macMsgJoinAccept.DLSettings.Bits.RX1DRoffset;
-                MacCtx.NvmCtx->MacParams.Rx2Channel.Datarate = macMsgJoinAccept.DLSettings.Bits.RX2DataRate;
-                MacCtx.NvmCtx->MacParams.RxCChannel.Datarate = macMsgJoinAccept.DLSettings.Bits.RX2DataRate;
-
-                // RxDelay
-                MacCtx.NvmCtx->MacParams.ReceiveDelay1 = macMsgJoinAccept.RxDelay;
-                if( MacCtx.NvmCtx->MacParams.ReceiveDelay1 == 0 )
-                {
-                    MacCtx.NvmCtx->MacParams.ReceiveDelay1 = 1;
-                }
-                MacCtx.NvmCtx->MacParams.ReceiveDelay1 *= 1000;
-                MacCtx.NvmCtx->MacParams.ReceiveDelay2 = MacCtx.NvmCtx->MacParams.ReceiveDelay1 + 1000;
-
-                MacCtx.NvmCtx->Version.Fields.Minor = 0;
-
-                // Apply CF list
-                applyCFList.Payload = macMsgJoinAccept.CFList;
-                // Size of the regular payload is 12. Plus 1 byte MHDR and 4 bytes MIC
-                applyCFList.Size = size - 17;
-
-                RegionApplyCFList( MacCtx.NvmCtx->Region, &applyCFList );
-
-                MacCtx.NvmCtx->NetworkActivation = ACTIVATION_TYPE_OTAA;
-
-                // MLME handling
-                if( LoRaMacConfirmQueueIsCmdActive( MLME_JOIN ) == true )
-                {
-                    LoRaMacConfirmQueueSetStatus( LORAMAC_EVENT_INFO_STATUS_OK, MLME_JOIN );
-                }
-            }
-            else
-            {
-                // MLME handling
-                if( LoRaMacConfirmQueueIsCmdActive( MLME_JOIN ) == true )
-                {
-                    LoRaMacConfirmQueueSetStatus( LORAMAC_EVENT_INFO_STATUS_JOIN_FAIL, MLME_JOIN );
-                }
-            }
-            break;
-        case FRAME_TYPE_DATA_CONFIRMED_DOWN:
-            MacCtx.McpsIndication.McpsIndication = MCPS_CONFIRMED;
-            // Intentional fall through
-        case FRAME_TYPE_DATA_UNCONFIRMED_DOWN:
-            // Check if the received payload size is valid
-            getPhy.UplinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
-            getPhy.Datarate = MacCtx.McpsIndication.RxDatarate;
-            getPhy.Attribute = PHY_MAX_PAYLOAD;
-            phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-            if( MAX( 0, ( int16_t )( ( int16_t ) size - ( int16_t ) LORA_MAC_FRMPAYLOAD_OVERHEAD ) ) > ( int16_t )phyParam.Value )
-            {
-                MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
-                PrepareRxDoneAbort( );
-                return;
-            }
-            macMsgData.Buffer = payload;
-            macMsgData.BufSize = size;
-            macMsgData.FRMPayload = MacCtx.RxPayload;
-            macMsgData.FRMPayloadSize = LORAMAC_PHY_MAXPAYLOAD;
-
-            if( LORAMAC_PARSER_SUCCESS != LoRaMacParserData( &macMsgData ) )
-            {
-                MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
-                PrepareRxDoneAbort( );
-                return;
-            }
-
-            // Store device address
-            MacCtx.McpsIndication.DevAddress = macMsgData.FHDR.DevAddr;
-
-            FType_t fType;
-            if( LORAMAC_STATUS_OK != DetermineFrameType( &macMsgData, &fType ) )
-            {
-                MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
-                PrepareRxDoneAbort( );
-                return;
-            }
-
-            //Check if it is a multicast message
-            multicast = 0;
-            downLinkCounter = 0;
-            for( uint8_t i = 0; i < LORAMAC_MAX_MC_CTX; i++ )
-            {
-                if( ( MacCtx.NvmCtx->MulticastChannelList[i].ChannelParams.Address == macMsgData.FHDR.DevAddr ) &&
-                    ( MacCtx.NvmCtx->MulticastChannelList[i].ChannelParams.IsEnabled == true ) )
-                {
-                    multicast = 1;
-                    addrID = MacCtx.NvmCtx->MulticastChannelList[i].ChannelParams.GroupID;
-                    downLinkCounter = *( MacCtx.NvmCtx->MulticastChannelList[i].DownLinkCounter );
-                    address = MacCtx.NvmCtx->MulticastChannelList[i].ChannelParams.Address;
-                    if( MacCtx.NvmCtx->DeviceClass == CLASS_C )
-                    {
-                        MacCtx.McpsIndication.RxSlot = RX_SLOT_WIN_CLASS_C_MULTICAST;
-                    }
-                    break;
-                }
-            }
-
-            // Get maximum allowed counter difference
-            getPhy.Attribute = PHY_MAX_FCNT_GAP;
-            phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-
-            // Get downlink frame counter value
-            macCryptoStatus = GetFCntDown( addrID, fType, &macMsgData, MacCtx.NvmCtx->Version, phyParam.Value, &fCntID, &downLinkCounter );
-            if( macCryptoStatus != LORAMAC_CRYPTO_SUCCESS )
-            {
-                if( macCryptoStatus == LORAMAC_CRYPTO_FAIL_FCNT_DUPLICATED )
-                {
-                    // Catch the case of repeated downlink frame counter
-                    MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_DOWNLINK_REPEATED;
-                    if( ( MacCtx.NvmCtx->Version.Fields.Minor == 0 ) && ( macHdr.Bits.MType == FRAME_TYPE_DATA_CONFIRMED_DOWN ) && ( MacCtx.NvmCtx->LastRxMic == macMsgData.MIC ) )
-                    {
-                        MacCtx.NvmCtx->SrvAckRequested = true;
-                    }
-                }
-                else if( macCryptoStatus == LORAMAC_CRYPTO_FAIL_MAX_GAP_FCNT )
-                {
-                    // Lost too many frames
-                    MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_DOWNLINK_TOO_MANY_FRAMES_LOSS;
-                }
-                else
-                {
-                    // Other errors
-                    MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
-                }
-                MacCtx.McpsIndication.DownLinkCounter = downLinkCounter;
-                PrepareRxDoneAbort( );
-                return;
-            }
-
-            macCryptoStatus = LoRaMacCryptoUnsecureMessage( addrID, address, fCntID, downLinkCounter, &macMsgData );
-            if( macCryptoStatus != LORAMAC_CRYPTO_SUCCESS )
-            {
-                if( macCryptoStatus == LORAMAC_CRYPTO_FAIL_ADDRESS )
-                {
-                    // We are not the destination of this frame.
-                    MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ADDRESS_FAIL;
-                }
-                else
-                {
-                    // MIC calculation fail
-                    MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_MIC_FAIL;
-                }
-                PrepareRxDoneAbort( );
-                return;
-            }
-
-            // Frame is valid
-            MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_OK;
-            MacCtx.McpsIndication.Multicast = multicast;
-            MacCtx.McpsIndication.FramePending = macMsgData.FHDR.FCtrl.Bits.FPending;
-            MacCtx.McpsIndication.Buffer = NULL;
-            MacCtx.McpsIndication.BufferSize = 0;
-            MacCtx.McpsIndication.DownLinkCounter = downLinkCounter;
-            MacCtx.McpsIndication.AckReceived = macMsgData.FHDR.FCtrl.Bits.Ack;
-
-            MacCtx.McpsConfirm.Status = LORAMAC_EVENT_INFO_STATUS_OK;
-            MacCtx.McpsConfirm.AckReceived = macMsgData.FHDR.FCtrl.Bits.Ack;
-
-            // Reset ADR ACK Counter only, when RX1 or RX2 slot
-            if( ( MacCtx.McpsIndication.RxSlot == RX_SLOT_WIN_1 ) ||
-                ( MacCtx.McpsIndication.RxSlot == RX_SLOT_WIN_2 ) )
-            {
-                MacCtx.NvmCtx->AdrAckCounter = 0;
-            }
-
-            // MCPS Indication and ack requested handling
-            if( multicast == 1 )
-            {
-                MacCtx.McpsIndication.McpsIndication = MCPS_MULTICAST;
-            }
-            else
-            {
-                if( macHdr.Bits.MType == FRAME_TYPE_DATA_CONFIRMED_DOWN )
-                {
-                    MacCtx.NvmCtx->SrvAckRequested = true;
-                    if( MacCtx.NvmCtx->Version.Fields.Minor == 0 )
-                    {
-                        MacCtx.NvmCtx->LastRxMic = macMsgData.MIC;
-                    }
-                    MacCtx.McpsIndication.McpsIndication = MCPS_CONFIRMED;
-                }
-                else
-                {
-                    MacCtx.NvmCtx->SrvAckRequested = false;
-                    MacCtx.McpsIndication.McpsIndication = MCPS_UNCONFIRMED;
-                }
-            }
-
-            RemoveMacCommands( MacCtx.McpsIndication.RxSlot, macMsgData.FHDR.FCtrl, MacCtx.McpsConfirm.McpsRequest );
-
-            switch( fType )
-            {
-                case FRAME_TYPE_A:
-                {  /* +----------+------+-------+--------------+
-                    * | FOptsLen | Fopt | FPort |  FRMPayload  |
-                    * +----------+------+-------+--------------+
-                    * |    > 0   |   X  |  > 0  |       X      |
-                    * +----------+------+-------+--------------+
-                    */
-
-                    // Decode MAC commands in FOpts field
-                    ProcessMacCommands( macMsgData.FHDR.FOpts, 0, macMsgData.FHDR.FCtrl.Bits.FOptsLen, snr, MacCtx.McpsIndication.RxSlot );
-                    MacCtx.McpsIndication.Port = macMsgData.FPort;
-                    MacCtx.McpsIndication.Buffer = macMsgData.FRMPayload;
-                    MacCtx.McpsIndication.BufferSize = macMsgData.FRMPayloadSize;
-                    MacCtx.McpsIndication.RxData = true;
-                    break;
-                }
-                case FRAME_TYPE_B:
-                {  /* +----------+------+-------+--------------+
-                    * | FOptsLen | Fopt | FPort |  FRMPayload  |
-                    * +----------+------+-------+--------------+
-                    * |    > 0   |   X  |   -   |       -      |
-                    * +----------+------+-------+--------------+
-                    */
-
-                    // Decode MAC commands in FOpts field
-                    ProcessMacCommands( macMsgData.FHDR.FOpts, 0, macMsgData.FHDR.FCtrl.Bits.FOptsLen, snr, MacCtx.McpsIndication.RxSlot );
-                    MacCtx.McpsIndication.Port = macMsgData.FPort;
-                    break;
-                }
-                case FRAME_TYPE_C:
-                {  /* +----------+------+-------+--------------+
-                    * | FOptsLen | Fopt | FPort |  FRMPayload  |
-                    * +----------+------+-------+--------------+
-                    * |    = 0   |   -  |  = 0  | MAC commands |
-                    * +----------+------+-------+--------------+
-                    */
-
-                    // Decode MAC commands in FRMPayload
-                    ProcessMacCommands( macMsgData.FRMPayload, 0, macMsgData.FRMPayloadSize, snr, MacCtx.McpsIndication.RxSlot );
-                    MacCtx.McpsIndication.Port = macMsgData.FPort;
-                    break;
-                }
-                case FRAME_TYPE_D:
-                {  /* +----------+------+-------+--------------+
-                    * | FOptsLen | Fopt | FPort |  FRMPayload  |
-                    * +----------+------+-------+--------------+
-                    * |    = 0   |   -  |  > 0  |       X      |
-                    * +----------+------+-------+--------------+
-                    */
-
-                    // No MAC commands just application payload
-                    MacCtx.McpsIndication.Port = macMsgData.FPort;
-                    MacCtx.McpsIndication.Buffer = macMsgData.FRMPayload;
-                    MacCtx.McpsIndication.BufferSize = macMsgData.FRMPayloadSize;
-                    MacCtx.McpsIndication.RxData = true;
-                    break;
-                }
-                default:
-                    MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
-                    PrepareRxDoneAbort( );
-                    break;
-            }
-
-            // Provide always an indication, skip the callback to the user application,
-            // in case of a confirmed downlink retransmission.
-            MacCtx.MacFlags.Bits.McpsInd = 1;
-
-            break;
-        case FRAME_TYPE_PROPRIETARY:
-            memcpy1( MacCtx.RxPayload, &payload[pktHeaderLen], size - pktHeaderLen );
-
-            MacCtx.McpsIndication.McpsIndication = MCPS_PROPRIETARY;
-            MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_OK;
-            MacCtx.McpsIndication.Buffer = MacCtx.RxPayload;
-            MacCtx.McpsIndication.BufferSize = size - pktHeaderLen;
-
-            MacCtx.MacFlags.Bits.McpsInd = 1;
-            break;
-        default:
-            MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
-            PrepareRxDoneAbort( );
-            break;
-    }
-
-    // Verify if we need to disable the AckTimeoutTimer
-    if( MacCtx.NodeAckRequested == true )
-    {
-        if( MacCtx.McpsConfirm.AckReceived == true )
-        {
-            OnAckTimeoutTimerEvent( NULL );
-        }
-    }
-    else
-    {
-        if( MacCtx.NvmCtx->DeviceClass == CLASS_C )
-        {
-            OnAckTimeoutTimerEvent( NULL );
-        }
-    }
-    MacCtx.MacFlags.Bits.MacDone = 1;
-
-    UpdateRxSlotIdleState( );
-}
-
-static void ProcessRadioTxTimeout( void )
-{
-    if( MacCtx.NvmCtx->DeviceClass != CLASS_C )
-    {
-        Radio.Sleep( );
-    }
-    UpdateRxSlotIdleState( );
-
-    MacCtx.McpsConfirm.Status = LORAMAC_EVENT_INFO_STATUS_TX_TIMEOUT;
-    LoRaMacConfirmQueueSetStatusCmn( LORAMAC_EVENT_INFO_STATUS_TX_TIMEOUT );
-    if( MacCtx.NodeAckRequested == true )
-    {
-        MacCtx.AckTimeoutRetry = true;
-    }
-    MacCtx.MacFlags.Bits.MacDone = 1;
-}
-
-static void HandleRadioRxErrorTimeout( LoRaMacEventInfoStatus_t rx1EventInfoStatus, LoRaMacEventInfoStatus_t rx2EventInfoStatus )
-{
-    bool classBRx = false;
-
-    if( MacCtx.NvmCtx->DeviceClass != CLASS_C )
-    {
-        Radio.Sleep( );
-    }
-
-    if( LoRaMacClassBIsBeaconExpected( ) == true )
-    {
-        LoRaMacClassBSetBeaconState( BEACON_STATE_TIMEOUT );
-        LoRaMacClassBBeaconTimerEvent( NULL );
-        classBRx = true;
-    }
-    if( MacCtx.NvmCtx->DeviceClass == CLASS_B )
-    {
-        if( LoRaMacClassBIsPingExpected( ) == true )
-        {
-            LoRaMacClassBSetPingSlotState( PINGSLOT_STATE_CALC_PING_OFFSET );
-            LoRaMacClassBPingSlotTimerEvent( NULL );
-            classBRx = true;
-        }
-        if( LoRaMacClassBIsMulticastExpected( ) == true )
-        {
-            LoRaMacClassBSetMulticastSlotState( PINGSLOT_STATE_CALC_PING_OFFSET );
-            LoRaMacClassBMulticastSlotTimerEvent( NULL );
-            classBRx = true;
-        }
-    }
-
-    if( classBRx == false )
-    {
-        if( MacCtx.RxSlot == RX_SLOT_WIN_1 )
-        {
-            if( MacCtx.NodeAckRequested == true )
-            {
-                MacCtx.McpsConfirm.Status = rx1EventInfoStatus;
-            }
-            LoRaMacConfirmQueueSetStatusCmn( rx1EventInfoStatus );
-
-            if( TimerGetElapsedTime( MacCtx.NvmCtx->LastTxDoneTime ) >= MacCtx.RxWindow2Delay )
-            {
-                TimerStop( &MacCtx.RxWindowTimer2 );
-                MacCtx.MacFlags.Bits.MacDone = 1;
-            }
-        }
-        else
-        {
-            if( MacCtx.NodeAckRequested == true )
-            {
-                MacCtx.McpsConfirm.Status = rx2EventInfoStatus;
-            }
-            LoRaMacConfirmQueueSetStatusCmn( rx2EventInfoStatus );
-
-            if( MacCtx.NvmCtx->DeviceClass != CLASS_C )
-            {
-                MacCtx.MacFlags.Bits.MacDone = 1;
-            }
-        }
-    }
-
-    UpdateRxSlotIdleState( );
-}
-
-static void ProcessRadioRxError( void )
-{
-    HandleRadioRxErrorTimeout( LORAMAC_EVENT_INFO_STATUS_RX1_ERROR, LORAMAC_EVENT_INFO_STATUS_RX2_ERROR );
-}
-
-static void ProcessRadioRxTimeout( void )
-{
-    HandleRadioRxErrorTimeout( LORAMAC_EVENT_INFO_STATUS_RX1_TIMEOUT, LORAMAC_EVENT_INFO_STATUS_RX2_TIMEOUT );
-}
-
-static void LoRaMacHandleIrqEvents( void )
-{
-    LoRaMacRadioEvents_t events;
-
-    CRITICAL_SECTION_BEGIN( );
-    events = LoRaMacRadioEvents;
-    LoRaMacRadioEvents.Value = 0;
-    CRITICAL_SECTION_END( );
-
-    if( events.Value != 0 )
-    {
-        if( events.Events.TxDone == 1 )
-        {
-            ProcessRadioTxDone( );
-        }
-        if( events.Events.RxDone == 1 )
-        {
-            ProcessRadioRxDone( );
-        }
-        if( events.Events.TxTimeout == 1 )
-        {
-            ProcessRadioTxTimeout( );
-        }
-        if( events.Events.RxError == 1 )
-        {
-            ProcessRadioRxError( );
-        }
-        if( events.Events.RxTimeout == 1 )
-        {
-            ProcessRadioRxTimeout( );
-        }
-    }
-}
-
-bool LoRaMacIsBusy( void )
-{
-    if( ( MacCtx.MacState == LORAMAC_IDLE ) &&
-        ( MacCtx.AllowRequests == LORAMAC_REQUEST_HANDLING_ON ) )
-    {
-        return false;
-    }
-    return true;
-}
-
-
-static void LoRaMacEnableRequests( LoRaMacRequestHandling_t requestState )
-{
-    MacCtx.AllowRequests = requestState;
-}
-
-static void LoRaMacHandleRequestEvents( void )
-{
-    // Handle events
-    LoRaMacFlags_t reqEvents = MacCtx.MacFlags;
-
-    if( MacCtx.MacState == LORAMAC_IDLE )
-    {
-        // Update event bits
-        if( MacCtx.MacFlags.Bits.McpsReq == 1 )
-        {
-            MacCtx.MacFlags.Bits.McpsReq = 0;
-        }
-
-        if( MacCtx.MacFlags.Bits.MlmeReq == 1 )
-        {
-            MacCtx.MacFlags.Bits.MlmeReq = 0;
-        }
-
-        // Allow requests again
-        LoRaMacEnableRequests( LORAMAC_REQUEST_HANDLING_ON );
-
-        // Handle callbacks
-        if( reqEvents.Bits.McpsReq == 1 )
-        {
-            MacCtx.MacPrimitives->MacMcpsConfirm( &MacCtx.McpsConfirm );
-        }
-
-        if( reqEvents.Bits.MlmeReq == 1 )
-        {
-            LoRaMacConfirmQueueHandleCb( &MacCtx.MlmeConfirm );
-            if( LoRaMacConfirmQueueGetCnt( ) > 0 )
-            {
-                MacCtx.MacFlags.Bits.MlmeReq = 1;
-            }
-        }
-
-        // Start beaconing again
-        LoRaMacClassBResumeBeaconing( );
-
-        // Procedure done. Reset variables.
-        MacCtx.MacFlags.Bits.MacDone = 0;
-    }
-}
-
-static void LoRaMacHandleScheduleUplinkEvent( void )
-{
-    // Handle events
-    if( MacCtx.MacState == LORAMAC_IDLE )
-    {
-        // Verify if sticky MAC commands are pending or not
-        bool isStickyMacCommandPending = false;
-        LoRaMacCommandsStickyCmdsPending( &isStickyMacCommandPending );
-        if( isStickyMacCommandPending == true )
-        {// Setup MLME indication
-            SetMlmeScheduleUplinkIndication( );
-        }
-    }
-}
-
-static void LoRaMacHandleIndicationEvents( void )
-{
-    // Handle MLME indication
-    if( MacCtx.MacFlags.Bits.MlmeInd == 1 )
-    {
-        MacCtx.MacFlags.Bits.MlmeInd = 0;
-        MacCtx.MacPrimitives->MacMlmeIndication( &MacCtx.MlmeIndication );
-    }
-
-    if( MacCtx.MacFlags.Bits.MlmeSchedUplinkInd == 1 )
-    {
-        MlmeIndication_t schduleUplinkIndication;
-        schduleUplinkIndication.MlmeIndication = MLME_SCHEDULE_UPLINK;
-        schduleUplinkIndication.Status = LORAMAC_EVENT_INFO_STATUS_OK;
-
-        MacCtx.MacPrimitives->MacMlmeIndication( &schduleUplinkIndication );
-        MacCtx.MacFlags.Bits.MlmeSchedUplinkInd = 0;
-    }
-
-    // Handle MCPS indication
-    if( MacCtx.MacFlags.Bits.McpsInd == 1 )
-    {
-        MacCtx.MacFlags.Bits.McpsInd = 0;
-        MacCtx.MacPrimitives->MacMcpsIndication( &MacCtx.McpsIndication );
-    }
-}
-
-static void LoRaMacHandleMcpsRequest( void )
-{
-    // Handle MCPS uplinks
-    if( MacCtx.MacFlags.Bits.McpsReq == 1 )
-    {
-        bool stopRetransmission = false;
-        bool waitForRetransmission = false;
-
-        if( ( MacCtx.McpsConfirm.McpsRequest == MCPS_UNCONFIRMED ) ||
-            ( MacCtx.McpsConfirm.McpsRequest == MCPS_PROPRIETARY ) )
-        {
-            stopRetransmission = CheckRetransUnconfirmedUplink( );
-        }
-        else if( MacCtx.McpsConfirm.McpsRequest == MCPS_CONFIRMED )
-        {
-            if( MacCtx.AckTimeoutRetry == true )
-            {
-                stopRetransmission = CheckRetransConfirmedUplink( );
-
-                if( MacCtx.NvmCtx->Version.Fields.Minor == 0 )
-                {
-                    if( stopRetransmission == false )
-                    {
-                        AckTimeoutRetriesProcess( );
-                    }
-                    else
-                    {
-                        AckTimeoutRetriesFinalize( );
-                    }
-                }
-            }
-            else
-            {
-                waitForRetransmission = true;
-            }
-        }
-
-        if( stopRetransmission == true )
-        {// Stop retransmission
-            TimerStop( &MacCtx.TxDelayedTimer );
-            MacCtx.MacState &= ~LORAMAC_TX_DELAYED;
-            StopRetransmission( );
-        }
-        else if( waitForRetransmission == false )
-        {// Arrange further retransmission
-            MacCtx.MacFlags.Bits.MacDone = 0;
-            // Reset the state of the AckTimeout
-            MacCtx.AckTimeoutRetry = false;
-            // Sends the same frame again
-            OnTxDelayedTimerEvent( NULL );
-        }
-    }
-}
-
-static void LoRaMacHandleMlmeRequest( void )
-{
-    // Handle join request
-    if( MacCtx.MacFlags.Bits.MlmeReq == 1 )
-    {
-        if( ( LoRaMacConfirmQueueIsCmdActive( MLME_JOIN ) == true ) )
-        {
-            if( LoRaMacConfirmQueueGetStatus( MLME_JOIN ) == LORAMAC_EVENT_INFO_STATUS_OK )
-            {// Node joined successfully
-                MacCtx.ChannelsNbTransCounter = 0;
-            }
-            MacCtx.MacState &= ~LORAMAC_TX_RUNNING;
-        }
-        else if( ( LoRaMacConfirmQueueIsCmdActive( MLME_TXCW ) == true ) ||
-                 ( LoRaMacConfirmQueueIsCmdActive( MLME_TXCW_1 ) == true ) )
-        {
-            MacCtx.MacState &= ~LORAMAC_TX_RUNNING;
-        }
-    }
-}
-
-static uint8_t LoRaMacCheckForBeaconAcquisition( void )
-{
-    if( ( LoRaMacConfirmQueueIsCmdActive( MLME_BEACON_ACQUISITION ) == true ) &&
-        ( MacCtx.MacFlags.Bits.McpsReq == 0 ) )
-    {
-        if( MacCtx.MacFlags.Bits.MlmeReq == 1 )
-        {
-            MacCtx.MacState &= ~LORAMAC_TX_RUNNING;
-            return 0x01;
-        }
-    }
-    return 0x00;
-}
-
-static void LoRaMacCheckForRxAbort( void )
-{
-    // A error occurs during receiving
-    if( ( MacCtx.MacState & LORAMAC_RX_ABORT ) == LORAMAC_RX_ABORT )
-    {
-        MacCtx.MacState &= ~LORAMAC_RX_ABORT;
-        MacCtx.MacState &= ~LORAMAC_TX_RUNNING;
-    }
-}
-
-
-void LoRaMacProcess( void )
-{
-    uint8_t noTx = false;
-
-    LoRaMacHandleIrqEvents( );
-    LoRaMacClassBProcess( );
-
-    // MAC proceeded a state and is ready to check
-    if( MacCtx.MacFlags.Bits.MacDone == 1 )
-    {
-        LoRaMacEnableRequests( LORAMAC_REQUEST_HANDLING_OFF );
-        LoRaMacCheckForRxAbort( );
-
-        // An error occurs during transmitting
-        if( IsRequestPending( ) > 0 )
-        {
-            noTx |= LoRaMacCheckForBeaconAcquisition( );
-        }
-
-        if( noTx == 0x00 )
-        {
-            LoRaMacHandleMlmeRequest( );
-            LoRaMacHandleMcpsRequest( );
-        }
-        LoRaMacHandleRequestEvents( );
-        LoRaMacHandleScheduleUplinkEvent( );
-        LoRaMacEnableRequests( LORAMAC_REQUEST_HANDLING_ON );
-    }
-    LoRaMacHandleIndicationEvents( );
-    if( MacCtx.RxSlot == RX_SLOT_WIN_CLASS_C )
-    {
-        OpenContinuousRxCWindow( );
-    }
-}
-
-static void OnTxDelayedTimerEvent( void* context )
-{
-    TimerStop( &MacCtx.TxDelayedTimer );
-    MacCtx.MacState &= ~LORAMAC_TX_DELAYED;
-
-    // Schedule frame, allow delayed frame transmissions
-    switch( ScheduleTx( true ) )
-    {
-        case LORAMAC_STATUS_OK:
-        case LORAMAC_STATUS_DUTYCYCLE_RESTRICTED:
-        {
-            break;
-        }
-        default:
-        {
-            // Stop retransmission attempt
-            MacCtx.McpsConfirm.Datarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
-            MacCtx.McpsConfirm.NbRetries = MacCtx.AckTimeoutRetriesCounter;
-            MacCtx.McpsConfirm.Status = LORAMAC_EVENT_INFO_STATUS_TX_DR_PAYLOAD_SIZE_ERROR;
-            LoRaMacConfirmQueueSetStatusCmn( LORAMAC_EVENT_INFO_STATUS_TX_DR_PAYLOAD_SIZE_ERROR );
-            StopRetransmission( );
-            break;
-        }
-    }
-}
-
-static void OnRxWindow1TimerEvent( void* context )
-{
-    MacCtx.RxWindow1Config.Channel = MacCtx.Channel;
-    MacCtx.RxWindow1Config.DrOffset = MacCtx.NvmCtx->MacParams.Rx1DrOffset;
-    MacCtx.RxWindow1Config.DownlinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
-    MacCtx.RxWindow1Config.RxContinuous = false;
-    MacCtx.RxWindow1Config.RxSlot = RX_SLOT_WIN_1;
-
-    RxWindowSetup( &MacCtx.RxWindowTimer1, &MacCtx.RxWindow1Config );
-}
-
-static void OnRxWindow2TimerEvent( void* context )
-{
-    // Check if we are processing Rx1 window.
-    // If yes, we don't setup the Rx2 window.
-    if( MacCtx.RxSlot == RX_SLOT_WIN_1 )
-    {
-        return;
-    }
-    MacCtx.RxWindow2Config.Channel = MacCtx.Channel;
-    MacCtx.RxWindow2Config.Frequency = MacCtx.NvmCtx->MacParams.Rx2Channel.Frequency;
-    MacCtx.RxWindow2Config.DownlinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
-    MacCtx.RxWindow2Config.RxContinuous = false;
-    MacCtx.RxWindow2Config.RxSlot = RX_SLOT_WIN_2;
-
-    RxWindowSetup( &MacCtx.RxWindowTimer2, &MacCtx.RxWindow2Config );
-}
-
-static void OnAckTimeoutTimerEvent( void* context )
-{
-    TimerStop( &MacCtx.AckTimeoutTimer );
-
-    if( MacCtx.NodeAckRequested == true )
-    {
-        MacCtx.AckTimeoutRetry = true;
-    }
-    if( MacCtx.NvmCtx->DeviceClass == CLASS_C )
-    {
-        MacCtx.MacFlags.Bits.MacDone = 1;
-    }
-    if( ( MacCtx.MacCallbacks != NULL ) && ( MacCtx.MacCallbacks->MacProcessNotify != NULL ) )
-    {
-        MacCtx.MacCallbacks->MacProcessNotify( );
-    }
-}
-
-static LoRaMacCryptoStatus_t GetFCntDown( AddressIdentifier_t addrID, FType_t fType, LoRaMacMessageData_t* macMsg, Version_t lrWanVersion,
-                                          uint16_t maxFCntGap, FCntIdentifier_t* fCntID, uint32_t* currentDown )
-{
-    if( ( macMsg == NULL ) || ( fCntID == NULL ) ||
-        ( currentDown == NULL ) )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-
-    // Determine the frame counter identifier and choose counter from FCntList
-    switch( addrID )
-    {
-        case UNICAST_DEV_ADDR:
-            if( lrWanVersion.Fields.Minor == 1 )
-            {
-                if( ( fType == FRAME_TYPE_A ) || ( fType == FRAME_TYPE_D ) )
-                {
-                    *fCntID = A_FCNT_DOWN;
-                }
-                else
-                {
-                    *fCntID = N_FCNT_DOWN;
-                }
-            }
-            else
-            { // For LoRaWAN 1.0.X
-                *fCntID = FCNT_DOWN;
-            }
-            break;
-        case MULTICAST_0_ADDR:
-            *fCntID = MC_FCNT_DOWN_0;
-            break;
-        case MULTICAST_1_ADDR:
-            *fCntID = MC_FCNT_DOWN_1;
-            break;
-        case MULTICAST_2_ADDR:
-            *fCntID = MC_FCNT_DOWN_2;
-            break;
-        case MULTICAST_3_ADDR:
-            *fCntID = MC_FCNT_DOWN_3;
-            break;
-        default:
-            return LORAMAC_CRYPTO_FAIL_FCNT_ID;
-    }
-
-    return LoRaMacCryptoGetFCntDown( *fCntID, maxFCntGap, macMsg->FHDR.FCnt, currentDown );
-}
-
-static LoRaMacStatus_t SwitchClass( DeviceClass_t deviceClass )
-{
-    LoRaMacStatus_t status = LORAMAC_STATUS_PARAMETER_INVALID;
-
-    switch( MacCtx.NvmCtx->DeviceClass )
-    {
-        case CLASS_A:
-        {
-            if( deviceClass == CLASS_A )
-            {
-                // Revert back RxC parameters
-                MacCtx.NvmCtx->MacParams.RxCChannel = MacCtx.NvmCtx->MacParams.Rx2Channel;
-            }
-            if( deviceClass == CLASS_B )
-            {
-                status = LoRaMacClassBSwitchClass( deviceClass );
-                if( status == LORAMAC_STATUS_OK )
-                {
-                    MacCtx.NvmCtx->DeviceClass = deviceClass;
-                }
-            }
-
-            if( deviceClass == CLASS_C )
-            {
-                MacCtx.NvmCtx->DeviceClass = deviceClass;
-
-                MacCtx.RxWindowCConfig = MacCtx.RxWindow2Config;
-                MacCtx.RxWindowCConfig.RxSlot = RX_SLOT_WIN_CLASS_C;
-
-                for( int8_t i = 0; i < LORAMAC_MAX_MC_CTX; i++ )
-                {
-                    if( MacCtx.NvmCtx->MulticastChannelList[i].ChannelParams.IsEnabled == true )
-                    // TODO: Check multicast channel device class.
-                    {
-                        MacCtx.NvmCtx->MacParams.RxCChannel.Frequency = MacCtx.NvmCtx->MulticastChannelList[i].ChannelParams.RxParams.ClassC.Frequency;
-                        MacCtx.NvmCtx->MacParams.RxCChannel.Datarate = MacCtx.NvmCtx->MulticastChannelList[i].ChannelParams.RxParams.ClassC.Datarate;
-
-                        MacCtx.RxWindowCConfig.Channel = MacCtx.Channel;
-                        MacCtx.RxWindowCConfig.Frequency = MacCtx.NvmCtx->MacParams.RxCChannel.Frequency;
-                        MacCtx.RxWindowCConfig.DownlinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
-                        MacCtx.RxWindowCConfig.RxSlot = RX_SLOT_WIN_CLASS_C_MULTICAST;
-                        MacCtx.RxWindowCConfig.RxContinuous = true;
-                        break;
-                    }
-                }
-
-                // Set the NodeAckRequested indicator to default
-                MacCtx.NodeAckRequested = false;
-                // Set the radio into sleep mode in case we are still in RX mode
-                Radio.Sleep( );
-
-                OpenContinuousRxCWindow( );
-
-                status = LORAMAC_STATUS_OK;
-            }
-            break;
-        }
-        case CLASS_B:
-        {
-            status = LoRaMacClassBSwitchClass( deviceClass );
-            if( status == LORAMAC_STATUS_OK )
-            {
-                MacCtx.NvmCtx->DeviceClass = deviceClass;
-            }
-            break;
-        }
-        case CLASS_C:
-        {
-            if( deviceClass == CLASS_A )
-            {
-                MacCtx.NvmCtx->DeviceClass = deviceClass;
-
-                // Set the radio into sleep to setup a defined state
-                Radio.Sleep( );
-
-                status = LORAMAC_STATUS_OK;
-            }
-            break;
-        }
-    }
-
-    return status;
-}
-
-static uint8_t GetMaxAppPayloadWithoutFOptsLength( int8_t datarate )
-{
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-
-    // Setup PHY request
-    getPhy.UplinkDwellTime = MacCtx.NvmCtx->MacParams.UplinkDwellTime;
-    getPhy.Datarate = datarate;
-    getPhy.Attribute = PHY_MAX_PAYLOAD;
-    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-
-    return phyParam.Value;
-}
-
-static bool ValidatePayloadLength( uint8_t lenN, int8_t datarate, uint8_t fOptsLen )
-{
-    uint16_t maxN = 0;
-    uint16_t payloadSize = 0;
-
-    maxN = GetMaxAppPayloadWithoutFOptsLength( datarate );
-
-    // Calculate the resulting payload size
-    payloadSize = ( lenN + fOptsLen );
-
-    // Validation of the application payload size
-    if( ( payloadSize <= maxN ) && ( payloadSize <= LORAMAC_PHY_MAXPAYLOAD ) )
-    {
-        return true;
-    }
-    return false;
-}
-
-static void SetMlmeScheduleUplinkIndication( void )
-{
-    MacCtx.MacFlags.Bits.MlmeSchedUplinkInd = 1;
-}
-
-static void ProcessMacCommands( uint8_t *payload, uint8_t macIndex, uint8_t commandsSize, int8_t snr, LoRaMacRxSlot_t rxSlot )
-{
-    uint8_t status = 0;
-    bool adrBlockFound = false;
-    uint8_t macCmdPayload[2] = { 0x00, 0x00 };
-
-    while( macIndex < commandsSize )
-    {
-        // Make sure to parse only complete MAC commands
-        if( ( LoRaMacCommandsGetCmdSize( payload[macIndex] ) + macIndex ) > commandsSize )
-        {
-            return;
-        }
-
-        // Decode Frame MAC commands
-        switch( payload[macIndex++] )
-        {
-            case SRV_MAC_LINK_CHECK_ANS:
-            {
-                if( LoRaMacConfirmQueueIsCmdActive( MLME_LINK_CHECK ) == true )
-                {
-                    LoRaMacConfirmQueueSetStatus( LORAMAC_EVENT_INFO_STATUS_OK, MLME_LINK_CHECK );
-                    MacCtx.MlmeConfirm.DemodMargin = payload[macIndex++];
-                    MacCtx.MlmeConfirm.NbGateways = payload[macIndex++];
-                }
-                break;
-            }
-            case SRV_MAC_LINK_ADR_REQ:
-            {
-                LinkAdrReqParams_t linkAdrReq;
-                int8_t linkAdrDatarate = DR_0;
-                int8_t linkAdrTxPower = TX_POWER_0;
-                uint8_t linkAdrNbRep = 0;
-                uint8_t linkAdrNbBytesParsed = 0;
-
-                if( adrBlockFound == false )
-                {
-                    adrBlockFound = true;
-
-                    // Fill parameter structure
-                    linkAdrReq.Payload = &payload[macIndex - 1];
-                    linkAdrReq.PayloadSize = commandsSize - ( macIndex - 1 );
-                    linkAdrReq.AdrEnabled = MacCtx.NvmCtx->AdrCtrlOn;
-                    linkAdrReq.UplinkDwellTime = MacCtx.NvmCtx->MacParams.UplinkDwellTime;
-                    linkAdrReq.CurrentDatarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
-                    linkAdrReq.CurrentTxPower = MacCtx.NvmCtx->MacParams.ChannelsTxPower;
-                    linkAdrReq.CurrentNbRep = MacCtx.NvmCtx->MacParams.ChannelsNbTrans;
-                    linkAdrReq.Version = MacCtx.NvmCtx->Version;
-
-                    // Process the ADR requests
-                    status = RegionLinkAdrReq( MacCtx.NvmCtx->Region, &linkAdrReq, &linkAdrDatarate,
-                                               &linkAdrTxPower, &linkAdrNbRep, &linkAdrNbBytesParsed );
-
-                    if( ( status & 0x07 ) == 0x07 )
-                    {
-                        MacCtx.NvmCtx->MacParams.ChannelsDatarate = linkAdrDatarate;
-                        MacCtx.NvmCtx->MacParams.ChannelsTxPower = linkAdrTxPower;
-                        MacCtx.NvmCtx->MacParams.ChannelsNbTrans = linkAdrNbRep;
-                    }
-
-                    // Add the answers to the buffer
-                    for( uint8_t i = 0; i < ( linkAdrNbBytesParsed / 5 ); i++ )
-                    {
-                        LoRaMacCommandsAddCmd( MOTE_MAC_LINK_ADR_ANS, &status, 1 );
-                    }
-                    // Update MAC index
-                    macIndex += linkAdrNbBytesParsed - 1;
-                }
-                break;
-            }
-            case SRV_MAC_DUTY_CYCLE_REQ:
-            {
-                MacCtx.NvmCtx->MaxDCycle = payload[macIndex++] & 0x0F;
-                MacCtx.NvmCtx->AggregatedDCycle = 1 << MacCtx.NvmCtx->MaxDCycle;
-                LoRaMacCommandsAddCmd( MOTE_MAC_DUTY_CYCLE_ANS, macCmdPayload, 0 );
-                break;
-            }
-            case SRV_MAC_RX_PARAM_SETUP_REQ:
-            {
-                RxParamSetupReqParams_t rxParamSetupReq;
-                status = 0x07;
-
-                rxParamSetupReq.DrOffset = ( payload[macIndex] >> 4 ) & 0x07;
-                rxParamSetupReq.Datarate = payload[macIndex] & 0x0F;
-                macIndex++;
-
-                rxParamSetupReq.Frequency = ( uint32_t ) payload[macIndex++];
-                rxParamSetupReq.Frequency |= ( uint32_t ) payload[macIndex++] << 8;
-                rxParamSetupReq.Frequency |= ( uint32_t ) payload[macIndex++] << 16;
-                rxParamSetupReq.Frequency *= 100;
-
-                // Perform request on region
-                status = RegionRxParamSetupReq( MacCtx.NvmCtx->Region, &rxParamSetupReq );
-
-                if( ( status & 0x07 ) == 0x07 )
-                {
-                    MacCtx.NvmCtx->MacParams.Rx2Channel.Datarate = rxParamSetupReq.Datarate;
-                    MacCtx.NvmCtx->MacParams.RxCChannel.Datarate = rxParamSetupReq.Datarate;
-                    MacCtx.NvmCtx->MacParams.Rx2Channel.Frequency = rxParamSetupReq.Frequency;
-                    MacCtx.NvmCtx->MacParams.RxCChannel.Frequency = rxParamSetupReq.Frequency;
-                    MacCtx.NvmCtx->MacParams.Rx1DrOffset = rxParamSetupReq.DrOffset;
-                }
-                macCmdPayload[0] = status;
-                LoRaMacCommandsAddCmd( MOTE_MAC_RX_PARAM_SETUP_ANS, macCmdPayload, 1 );
-                // Setup indication to inform the application
-                SetMlmeScheduleUplinkIndication( );
-                break;
-            }
-            case SRV_MAC_DEV_STATUS_REQ:
-            {
-                uint8_t batteryLevel = BAT_LEVEL_NO_MEASURE;
-                if( ( MacCtx.MacCallbacks != NULL ) && ( MacCtx.MacCallbacks->GetBatteryLevel != NULL ) )
-                {
-                    batteryLevel = MacCtx.MacCallbacks->GetBatteryLevel( );
-                }
-                macCmdPayload[0] = batteryLevel;
-                macCmdPayload[1] = ( uint8_t )( snr & 0x3F );
-                LoRaMacCommandsAddCmd( MOTE_MAC_DEV_STATUS_ANS, macCmdPayload, 2 );
-                break;
-            }
-            case SRV_MAC_NEW_CHANNEL_REQ:
-            {
-                NewChannelReqParams_t newChannelReq;
-                ChannelParams_t chParam;
-                status = 0x03;
-
-                newChannelReq.ChannelId = payload[macIndex++];
-                newChannelReq.NewChannel = &chParam;
-
-                chParam.Frequency = ( uint32_t ) payload[macIndex++];
-                chParam.Frequency |= ( uint32_t ) payload[macIndex++] << 8;
-                chParam.Frequency |= ( uint32_t ) payload[macIndex++] << 16;
-                chParam.Frequency *= 100;
-                chParam.Rx1Frequency = 0;
-                chParam.DrRange.Value = payload[macIndex++];
-
-                status = RegionNewChannelReq( MacCtx.NvmCtx->Region, &newChannelReq );
-
-                macCmdPayload[0] = status;
-                LoRaMacCommandsAddCmd( MOTE_MAC_NEW_CHANNEL_ANS, macCmdPayload, 1 );
-                break;
-            }
-            case SRV_MAC_RX_TIMING_SETUP_REQ:
-            {
-                uint8_t delay = payload[macIndex++] & 0x0F;
-
-                if( delay == 0 )
-                {
-                    delay++;
-                }
-                MacCtx.NvmCtx->MacParams.ReceiveDelay1 = delay * 1000;
-                MacCtx.NvmCtx->MacParams.ReceiveDelay2 = MacCtx.NvmCtx->MacParams.ReceiveDelay1 + 1000;
-                LoRaMacCommandsAddCmd( MOTE_MAC_RX_TIMING_SETUP_ANS, macCmdPayload, 0 );
-                // Setup indication to inform the application
-                SetMlmeScheduleUplinkIndication( );
-                break;
-            }
-            case SRV_MAC_TX_PARAM_SETUP_REQ:
-            {
-                TxParamSetupReqParams_t txParamSetupReq;
-                GetPhyParams_t getPhy;
-                PhyParam_t phyParam;
-                uint8_t eirpDwellTime = payload[macIndex++];
-
-                txParamSetupReq.UplinkDwellTime = 0;
-                txParamSetupReq.DownlinkDwellTime = 0;
-
-                if( ( eirpDwellTime & 0x20 ) == 0x20 )
-                {
-                    txParamSetupReq.DownlinkDwellTime = 1;
-                }
-                if( ( eirpDwellTime & 0x10 ) == 0x10 )
-                {
-                    txParamSetupReq.UplinkDwellTime = 1;
-                }
-                txParamSetupReq.MaxEirp = eirpDwellTime & 0x0F;
-
-                // Check the status for correctness
-                if( RegionTxParamSetupReq( MacCtx.NvmCtx->Region, &txParamSetupReq ) != -1 )
-                {
-                    // Accept command
-                    MacCtx.NvmCtx->MacParams.UplinkDwellTime = txParamSetupReq.UplinkDwellTime;
-                    MacCtx.NvmCtx->MacParams.DownlinkDwellTime = txParamSetupReq.DownlinkDwellTime;
-                    MacCtx.NvmCtx->MacParams.MaxEirp = LoRaMacMaxEirpTable[txParamSetupReq.MaxEirp];
-                    // Update the datarate in case of the new configuration limits it
-                    getPhy.Attribute = PHY_MIN_TX_DR;
-                    getPhy.UplinkDwellTime = MacCtx.NvmCtx->MacParams.UplinkDwellTime;
-                    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-                    MacCtx.NvmCtx->MacParams.ChannelsDatarate = MAX( MacCtx.NvmCtx->MacParams.ChannelsDatarate, ( int8_t )phyParam.Value );
-
-                    // Add command response
-                    LoRaMacCommandsAddCmd( MOTE_MAC_TX_PARAM_SETUP_ANS, macCmdPayload, 0 );
-                }
-                break;
-            }
-            case SRV_MAC_DL_CHANNEL_REQ:
-            {
-                DlChannelReqParams_t dlChannelReq;
-                status = 0x03;
-
-                dlChannelReq.ChannelId = payload[macIndex++];
-                dlChannelReq.Rx1Frequency = ( uint32_t ) payload[macIndex++];
-                dlChannelReq.Rx1Frequency |= ( uint32_t ) payload[macIndex++] << 8;
-                dlChannelReq.Rx1Frequency |= ( uint32_t ) payload[macIndex++] << 16;
-                dlChannelReq.Rx1Frequency *= 100;
-
-                status = RegionDlChannelReq( MacCtx.NvmCtx->Region, &dlChannelReq );
-                macCmdPayload[0] = status;
-                LoRaMacCommandsAddCmd( MOTE_MAC_DL_CHANNEL_ANS, macCmdPayload, 1 );
-                // Setup indication to inform the application
-                SetMlmeScheduleUplinkIndication( );
-                break;
-            }
-            case SRV_MAC_DEVICE_TIME_ANS:
-            {
-                SysTime_t gpsEpochTime = { 0 };
-                SysTime_t sysTime = { 0 };
-                SysTime_t sysTimeCurrent = { 0 };
-
-                gpsEpochTime.Seconds = ( uint32_t )payload[macIndex++];
-                gpsEpochTime.Seconds |= ( uint32_t )payload[macIndex++] << 8;
-                gpsEpochTime.Seconds |= ( uint32_t )payload[macIndex++] << 16;
-                gpsEpochTime.Seconds |= ( uint32_t )payload[macIndex++] << 24;
-                gpsEpochTime.SubSeconds = payload[macIndex++];
-
-                // Convert the fractional second received in ms
-                // round( pow( 0.5, 8.0 ) * 1000 ) = 3.90625
-                gpsEpochTime.SubSeconds = ( int16_t )( ( ( int32_t )gpsEpochTime.SubSeconds * 1000 ) >> 8 );
-
-                // Copy received GPS Epoch time into system time
-                sysTime = gpsEpochTime;
-                // Add Unix to Gps epcoh offset. The system time is based on Unix time.
-                sysTime.Seconds += UNIX_GPS_EPOCH_OFFSET;
-
-                // Compensate time difference between Tx Done time and now
-                sysTimeCurrent = SysTimeGet( );
-                sysTime = SysTimeAdd( sysTimeCurrent, SysTimeSub( sysTime, MacCtx.LastTxSysTime ) );
-
-                // Apply the new system time.
-                SysTimeSet( sysTime );
-                LoRaMacClassBDeviceTimeAns( );
-                MacCtx.McpsIndication.DeviceTimeAnsReceived = true;
-                break;
-            }
-            case SRV_MAC_PING_SLOT_INFO_ANS:
-            {
-                // According to the specification, it is not allowed to process this answer in
-                // a ping or multicast slot
-                if( ( MacCtx.RxSlot != RX_SLOT_WIN_CLASS_B_PING_SLOT ) && ( MacCtx.RxSlot != RX_SLOT_WIN_CLASS_B_MULTICAST_SLOT ) )
-                {
-                    LoRaMacClassBPingSlotInfoAns( );
-                }
-                break;
-            }
-            case SRV_MAC_PING_SLOT_CHANNEL_REQ:
-            {
-                uint8_t status = 0x03;
-                uint32_t frequency = 0;
-                uint8_t datarate;
-
-                frequency = ( uint32_t )payload[macIndex++];
-                frequency |= ( uint32_t )payload[macIndex++] << 8;
-                frequency |= ( uint32_t )payload[macIndex++] << 16;
-                frequency *= 100;
-                datarate = payload[macIndex++] & 0x0F;
-
-                status = LoRaMacClassBPingSlotChannelReq( datarate, frequency );
-                macCmdPayload[0] = status;
-                LoRaMacCommandsAddCmd( MOTE_MAC_PING_SLOT_FREQ_ANS, macCmdPayload, 1 );
-                break;
-            }
-            case SRV_MAC_BEACON_TIMING_ANS:
-            {
-                uint16_t beaconTimingDelay = 0;
-                uint8_t beaconTimingChannel = 0;
-
-                beaconTimingDelay = ( uint16_t )payload[macIndex++];
-                beaconTimingDelay |= ( uint16_t )payload[macIndex++] << 8;
-                beaconTimingChannel = payload[macIndex++];
-
-                LoRaMacClassBBeaconTimingAns( beaconTimingDelay, beaconTimingChannel, RxDoneParams.LastRxDone );
-                break;
-            }
-            case SRV_MAC_BEACON_FREQ_REQ:
-                {
-                    uint32_t frequency = 0;
-
-                    frequency = ( uint32_t )payload[macIndex++];
-                    frequency |= ( uint32_t )payload[macIndex++] << 8;
-                    frequency |= ( uint32_t )payload[macIndex++] << 16;
-                    frequency *= 100;
-
-                    if( LoRaMacClassBBeaconFreqReq( frequency ) == true )
-                    {
-                        macCmdPayload[0] = 1;
-                    }
-                    else
-                    {
-                        macCmdPayload[0] = 0;
-                    }
-                    LoRaMacCommandsAddCmd( MOTE_MAC_BEACON_FREQ_ANS, macCmdPayload, 1 );
-                }
-                break;
-            default:
-                // Unknown command. ABORT MAC commands processing
-                return;
-        }
-    }
-}
-
-LoRaMacStatus_t Send( LoRaMacHeader_t* macHdr, uint8_t fPort, void* fBuffer, uint16_t fBufferSize )
-{
-    LoRaMacFrameCtrl_t fCtrl;
-    LoRaMacStatus_t status = LORAMAC_STATUS_PARAMETER_INVALID;
-    int8_t datarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
-    int8_t txPower = MacCtx.NvmCtx->MacParams.ChannelsTxPower;
-    uint32_t adrAckCounter = MacCtx.NvmCtx->AdrAckCounter;
-    CalcNextAdrParams_t adrNext;
-
-    // Check if we are joined
-    if( MacCtx.NvmCtx->NetworkActivation == ACTIVATION_TYPE_NONE )
-    {
-        return LORAMAC_STATUS_NO_NETWORK_JOINED;
-    }
-    if( MacCtx.NvmCtx->MaxDCycle == 0 )
-    {
-        MacCtx.NvmCtx->AggregatedTimeOff = 0;
-    }
-
-    fCtrl.Value = 0;
-    fCtrl.Bits.FOptsLen      = 0;
-    fCtrl.Bits.Adr           = MacCtx.NvmCtx->AdrCtrlOn;
-
-    // Check class b
-    if( MacCtx.NvmCtx->DeviceClass == CLASS_B )
-    {
-        fCtrl.Bits.FPending      = 1;
-    }
-    else
-    {
-        fCtrl.Bits.FPending      = 0;
-    }
-
-    // Check server ack
-    if( MacCtx.NvmCtx->SrvAckRequested == true )
-    {
-        fCtrl.Bits.Ack = 1;
-    }
-
-    // ADR next request
-    adrNext.Version = MacCtx.NvmCtx->Version;
-    adrNext.UpdateChanMask = true;
-    adrNext.AdrEnabled = fCtrl.Bits.Adr;
-    adrNext.AdrAckCounter = MacCtx.NvmCtx->AdrAckCounter;
-    adrNext.AdrAckLimit = MacCtx.AdrAckLimit;
-    adrNext.AdrAckDelay = MacCtx.AdrAckDelay;
-    adrNext.Datarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
-    adrNext.TxPower = MacCtx.NvmCtx->MacParams.ChannelsTxPower;
-    adrNext.UplinkDwellTime = MacCtx.NvmCtx->MacParams.UplinkDwellTime;
-    adrNext.Region = MacCtx.NvmCtx->Region;
-
-    fCtrl.Bits.AdrAckReq = LoRaMacAdrCalcNext( &adrNext, &MacCtx.NvmCtx->MacParams.ChannelsDatarate,
-                                               &MacCtx.NvmCtx->MacParams.ChannelsTxPower, &adrAckCounter );
-
-    // Prepare the frame
-    status = PrepareFrame( macHdr, &fCtrl, fPort, fBuffer, fBufferSize );
-
-    // Validate status
-    if( ( status == LORAMAC_STATUS_OK ) || ( status == LORAMAC_STATUS_SKIPPED_APP_DATA ) )
-    {
-        // Schedule frame, do not allow delayed transmissions
-        status = ScheduleTx( false );
-    }
-
-    // Post processing
-    if( status != LORAMAC_STATUS_OK )
-    {
-        // Bad case - restore
-        // Store local variables
-        MacCtx.NvmCtx->MacParams.ChannelsDatarate = datarate;
-        MacCtx.NvmCtx->MacParams.ChannelsTxPower = txPower;
-    }
-    else
-    {
-        // Good case
-        MacCtx.NvmCtx->SrvAckRequested = false;
-        MacCtx.NvmCtx->AdrAckCounter = adrAckCounter;
-        // Remove all none sticky MAC commands
-        if( LoRaMacCommandsRemoveNoneStickyCmds( ) != LORAMAC_COMMANDS_SUCCESS )
-        {
-            return LORAMAC_STATUS_MAC_COMMAD_ERROR;
-        }
-    }
-    return status;
-}
-
-LoRaMacStatus_t SendReJoinReq( JoinReqIdentifier_t joinReqType )
-{
-    LoRaMacStatus_t status = LORAMAC_STATUS_OK;
-    LoRaMacHeader_t macHdr;
-    macHdr.Value = 0;
-    bool allowDelayedTx = true;
-
-    // Setup join/rejoin message
-    switch( joinReqType )
-    {
-        case JOIN_REQ:
-        {
-            SwitchClass( CLASS_A );
-
-            MacCtx.TxMsg.Type = LORAMAC_MSG_TYPE_JOIN_REQUEST;
-            MacCtx.TxMsg.Message.JoinReq.Buffer = MacCtx.PktBuffer;
-            MacCtx.TxMsg.Message.JoinReq.BufSize = LORAMAC_PHY_MAXPAYLOAD;
-
-            macHdr.Bits.MType = FRAME_TYPE_JOIN_REQ;
-            MacCtx.TxMsg.Message.JoinReq.MHDR.Value = macHdr.Value;
-
-            memcpy1( MacCtx.TxMsg.Message.JoinReq.JoinEUI, SecureElementGetJoinEui( ), LORAMAC_JOIN_EUI_FIELD_SIZE );
-            memcpy1( MacCtx.TxMsg.Message.JoinReq.DevEUI, SecureElementGetDevEui( ), LORAMAC_DEV_EUI_FIELD_SIZE );
-
-            allowDelayedTx = false;
-
-            break;
-        }
-        default:
-            status = LORAMAC_STATUS_SERVICE_UNKNOWN;
-            break;
-    }
-
-    // Schedule frame
-    status = ScheduleTx( allowDelayedTx );
-    return status;
-}
-
-static LoRaMacStatus_t CheckForClassBCollision( void )
-{
-    if( LoRaMacClassBIsBeaconExpected( ) == true )
-    {
-        return LORAMAC_STATUS_BUSY_BEACON_RESERVED_TIME;
-    }
-
-    if( MacCtx.NvmCtx->DeviceClass == CLASS_B )
-    {
-        if( LoRaMacClassBIsPingExpected( ) == true )
-        {
-            return LORAMAC_STATUS_BUSY_PING_SLOT_WINDOW_TIME;
-        }
-        else if( LoRaMacClassBIsMulticastExpected( ) == true )
-        {
-            return LORAMAC_STATUS_BUSY_PING_SLOT_WINDOW_TIME;
-        }
-    }
-    return LORAMAC_STATUS_OK;
-}
-
-static LoRaMacStatus_t ScheduleTx( bool allowDelayedTx )
-{
-    LoRaMacStatus_t status = LORAMAC_STATUS_PARAMETER_INVALID;
-    TimerTime_t dutyCycleTimeOff = 0;
-    NextChanParams_t nextChan;
-    size_t macCmdsSize = 0;
-
-    // Check class b collisions
-    status = CheckForClassBCollision( );
-
-    if( status != LORAMAC_STATUS_OK )
-    {
-        return status;
-    }
-
-    // Update back-off
-    CalculateBackOff( MacCtx.NvmCtx->LastTxChannel );
-
-    nextChan.AggrTimeOff = MacCtx.NvmCtx->AggregatedTimeOff;
-    nextChan.Datarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
-    nextChan.DutyCycleEnabled = MacCtx.NvmCtx->DutyCycleOn;
-    nextChan.QueryNextTxDelayOnly = false;
-    if( MacCtx.NvmCtx->NetworkActivation == ACTIVATION_TYPE_NONE )
-    {
-        nextChan.Joined = false;
-    }
-    else
-    {
-        nextChan.Joined = true;
-    }
-    nextChan.LastAggrTx = MacCtx.NvmCtx->LastTxDoneTime;
-
-    // Select channel
-    status = RegionNextChannel( MacCtx.NvmCtx->Region, &nextChan, &MacCtx.Channel, &dutyCycleTimeOff, &MacCtx.NvmCtx->AggregatedTimeOff );
-
-    if( status != LORAMAC_STATUS_OK )
-    {
-        if( ( status == LORAMAC_STATUS_DUTYCYCLE_RESTRICTED ) &&
-            ( allowDelayedTx == true ) )
-        {
-            // Allow delayed transmissions. We have to allow it in case
-            // the MAC must retransmit a frame with the frame repetitions
-            if( dutyCycleTimeOff != 0 )
-            {// Send later - prepare timer
-                MacCtx.MacState |= LORAMAC_TX_DELAYED;
-                TimerSetValue( &MacCtx.TxDelayedTimer, dutyCycleTimeOff );
-                TimerStart( &MacCtx.TxDelayedTimer );
-            }
-            return LORAMAC_STATUS_OK;
-        }
-        else
-        {// State where the MAC cannot send a frame
-            return status;
-        }
-    }
-
-    // Compute Rx1 windows parameters
-    RegionComputeRxWindowParameters( MacCtx.NvmCtx->Region,
-                                     RegionApplyDrOffset( MacCtx.NvmCtx->Region, MacCtx.NvmCtx->MacParams.DownlinkDwellTime, MacCtx.NvmCtx->MacParams.ChannelsDatarate, MacCtx.NvmCtx->MacParams.Rx1DrOffset ),
-                                     MacCtx.NvmCtx->MacParams.MinRxSymbols,
-                                     MacCtx.NvmCtx->MacParams.SystemMaxRxError,
-                                     &MacCtx.RxWindow1Config );
-    // Compute Rx2 windows parameters
-    RegionComputeRxWindowParameters( MacCtx.NvmCtx->Region,
-                                     MacCtx.NvmCtx->MacParams.Rx2Channel.Datarate,
-                                     MacCtx.NvmCtx->MacParams.MinRxSymbols,
-                                     MacCtx.NvmCtx->MacParams.SystemMaxRxError,
-                                     &MacCtx.RxWindow2Config );
-
-    if( MacCtx.NvmCtx->NetworkActivation == ACTIVATION_TYPE_NONE )
-    {
-        MacCtx.RxWindow1Delay = MacCtx.NvmCtx->MacParams.JoinAcceptDelay1 + MacCtx.RxWindow1Config.WindowOffset;
-        MacCtx.RxWindow2Delay = MacCtx.NvmCtx->MacParams.JoinAcceptDelay2 + MacCtx.RxWindow2Config.WindowOffset;
-    }
-    else
-    {
-        if( LoRaMacCommandsGetSizeSerializedCmds( &macCmdsSize ) != LORAMAC_COMMANDS_SUCCESS )
-        {
-            return LORAMAC_STATUS_MAC_COMMAD_ERROR;
-        }
-
-        if( ValidatePayloadLength( MacCtx.AppDataSize, MacCtx.NvmCtx->MacParams.ChannelsDatarate, macCmdsSize ) == false )
-        {
-            return LORAMAC_STATUS_LENGTH_ERROR;
-        }
-        MacCtx.RxWindow1Delay = MacCtx.NvmCtx->MacParams.ReceiveDelay1 + MacCtx.RxWindow1Config.WindowOffset;
-        MacCtx.RxWindow2Delay = MacCtx.NvmCtx->MacParams.ReceiveDelay2 + MacCtx.RxWindow2Config.WindowOffset;
-    }
-
-    // Secure frame
-    LoRaMacStatus_t retval = SecureFrame( MacCtx.NvmCtx->MacParams.ChannelsDatarate, MacCtx.Channel );
-    if( retval != LORAMAC_STATUS_OK )
-    {
-        return retval;
-    }
-
-    // Try to send now
-    return SendFrameOnChannel( MacCtx.Channel );
-}
-
-static LoRaMacStatus_t SecureFrame( uint8_t txDr, uint8_t txCh )
-{
-    LoRaMacCryptoStatus_t macCryptoStatus = LORAMAC_CRYPTO_ERROR;
-    uint32_t fCntUp = 0;
-
-    switch( MacCtx.TxMsg.Type )
-    {
-        case LORAMAC_MSG_TYPE_JOIN_REQUEST:
-            macCryptoStatus = LoRaMacCryptoPrepareJoinRequest( &MacCtx.TxMsg.Message.JoinReq );
-            if( LORAMAC_CRYPTO_SUCCESS != macCryptoStatus )
-            {
-                return LORAMAC_STATUS_CRYPTO_ERROR;
-            }
-            MacCtx.PktBufferLen = MacCtx.TxMsg.Message.JoinReq.BufSize;
-            break;
-        case LORAMAC_MSG_TYPE_DATA:
-
-            if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoGetFCntUp( &fCntUp ) )
-            {
-                return LORAMAC_STATUS_FCNT_HANDLER_ERROR;
-            }
-
-            if( ( MacCtx.ChannelsNbTransCounter >= 1 ) || ( MacCtx.AckTimeoutRetriesCounter > 1 ) )
-            {
-                fCntUp -= 1;
-            }
-
-            macCryptoStatus = LoRaMacCryptoSecureMessage( fCntUp, txDr, txCh, &MacCtx.TxMsg.Message.Data );
-            if( LORAMAC_CRYPTO_SUCCESS != macCryptoStatus )
-            {
-                return LORAMAC_STATUS_CRYPTO_ERROR;
-            }
-            MacCtx.PktBufferLen = MacCtx.TxMsg.Message.Data.BufSize;
-            break;
-        case LORAMAC_MSG_TYPE_JOIN_ACCEPT:
-        case LORAMAC_MSG_TYPE_UNDEF:
-        default:
-            return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-    return LORAMAC_STATUS_OK;
-}
-
-static void CalculateBackOff( uint8_t channel )
-{
-    CalcBackOffParams_t calcBackOff;
-
-    if( MacCtx.NvmCtx->NetworkActivation == ACTIVATION_TYPE_NONE )
-    {
-        calcBackOff.Joined = false;
-    }
-    else
-    {
-        calcBackOff.Joined = true;
-    }
-    calcBackOff.DutyCycleEnabled = MacCtx.NvmCtx->DutyCycleOn;
-    calcBackOff.Channel = channel;
-    calcBackOff.ElapsedTime = SysTimeSub( SysTimeGetMcuTime( ), MacCtx.NvmCtx->InitializationTime );
-    calcBackOff.TxTimeOnAir = MacCtx.TxTimeOnAir;
-    calcBackOff.LastTxIsJoinRequest = false;
-    if( ( MacCtx.MacFlags.Bits.MlmeReq == 1 ) && ( LoRaMacConfirmQueueIsCmdActive( MLME_JOIN ) == true ) )
-    {
-        calcBackOff.LastTxIsJoinRequest = true;
-    }
-
-    // Update regional back-off
-    RegionCalcBackOff( MacCtx.NvmCtx->Region, &calcBackOff );
-
-    // Update aggregated time-off. This must be an assignment and no incremental
-    // update as we do only calculate the time-off based on the last transmission
-    MacCtx.NvmCtx->AggregatedTimeOff = ( MacCtx.TxTimeOnAir * MacCtx.NvmCtx->AggregatedDCycle - MacCtx.TxTimeOnAir );
-}
-
-static void RemoveMacCommands( LoRaMacRxSlot_t rxSlot, LoRaMacFrameCtrl_t fCtrl, Mcps_t request )
-{
-    if( rxSlot == RX_SLOT_WIN_1 || rxSlot == RX_SLOT_WIN_2  )
-    {
-        // Remove all sticky MAC commands answers since we can assume
-        // that they have been received by the server.
-        if( request == MCPS_CONFIRMED )
-        {
-            if( fCtrl.Bits.Ack == 1 )
-            {  // For confirmed uplinks only if we have received an ACK.
-                LoRaMacCommandsRemoveStickyAnsCmds( );
-            }
-        }
-        else
-        {
-            LoRaMacCommandsRemoveStickyAnsCmds( );
-        }
-    }
-}
-
-
-static void ResetMacParameters( void )
-{
-    MacCtx.NvmCtx->NetworkActivation = ACTIVATION_TYPE_NONE;
-
-    // ADR counter
-    MacCtx.NvmCtx->AdrAckCounter = 0;
-
-    MacCtx.ChannelsNbTransCounter = 0;
-    MacCtx.AckTimeoutRetries = 1;
-    MacCtx.AckTimeoutRetriesCounter = 1;
-    MacCtx.AckTimeoutRetry = false;
-
-    MacCtx.NvmCtx->MaxDCycle = 0;
-    MacCtx.NvmCtx->AggregatedDCycle = 1;
-
-    MacCtx.NvmCtx->MacParams.ChannelsTxPower = MacCtx.NvmCtx->MacParamsDefaults.ChannelsTxPower;
-    MacCtx.NvmCtx->MacParams.ChannelsDatarate = MacCtx.NvmCtx->MacParamsDefaults.ChannelsDatarate;
-    MacCtx.NvmCtx->MacParams.Rx1DrOffset = MacCtx.NvmCtx->MacParamsDefaults.Rx1DrOffset;
-    MacCtx.NvmCtx->MacParams.Rx2Channel = MacCtx.NvmCtx->MacParamsDefaults.Rx2Channel;
-    MacCtx.NvmCtx->MacParams.RxCChannel = MacCtx.NvmCtx->MacParamsDefaults.RxCChannel;
-    MacCtx.NvmCtx->MacParams.UplinkDwellTime = MacCtx.NvmCtx->MacParamsDefaults.UplinkDwellTime;
-    MacCtx.NvmCtx->MacParams.DownlinkDwellTime = MacCtx.NvmCtx->MacParamsDefaults.DownlinkDwellTime;
-    MacCtx.NvmCtx->MacParams.MaxEirp = MacCtx.NvmCtx->MacParamsDefaults.MaxEirp;
-    MacCtx.NvmCtx->MacParams.AntennaGain = MacCtx.NvmCtx->MacParamsDefaults.AntennaGain;
-
-    MacCtx.NodeAckRequested = false;
-    MacCtx.NvmCtx->SrvAckRequested = false;
-
-    // Reset to application defaults
-    InitDefaultsParams_t params;
-    params.Type = INIT_TYPE_INIT;
-    params.NvmCtx = NULL;
-    RegionInitDefaults( MacCtx.NvmCtx->Region, &params );
-
-    // Initialize channel index.
-    MacCtx.Channel = 0;
-    MacCtx.NvmCtx->LastTxChannel = MacCtx.Channel;
-
-    // Initialize Rx2 config parameters.
-    MacCtx.RxWindow2Config.Channel = MacCtx.Channel;
-    MacCtx.RxWindow2Config.Frequency = MacCtx.NvmCtx->MacParams.Rx2Channel.Frequency;
-    MacCtx.RxWindow2Config.DownlinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
-    MacCtx.RxWindow2Config.RxContinuous = false;
-    MacCtx.RxWindow2Config.RxSlot = RX_SLOT_WIN_2;
-
-    // Initialize RxC config parameters.
-    MacCtx.RxWindowCConfig = MacCtx.RxWindow2Config;
-    MacCtx.RxWindowCConfig.RxContinuous = true;
-    MacCtx.RxWindowCConfig.RxSlot = RX_SLOT_WIN_CLASS_C;
-
-}
-
-/*!
- * \brief Initializes and opens the reception window
- *
- * \param [IN] rxTimer  Window timer to be topped.
- * \param [IN] rxConfig Window parameters to be setup
- */
-static void RxWindowSetup( TimerEvent_t* rxTimer, RxConfigParams_t* rxConfig )
-{
-    TimerStop( rxTimer );
-
-    // Ensure the radio is Idle
-    Radio.Standby( );
-
-    if( RegionRxConfig( MacCtx.NvmCtx->Region, rxConfig, ( int8_t* )&MacCtx.McpsIndication.RxDatarate ) == true )
-    {
-        Radio.Rx( MacCtx.NvmCtx->MacParams.MaxRxWindow );
-        MacCtx.RxSlot = rxConfig->RxSlot;
-    }
-}
-
-static void OpenContinuousRxCWindow( void )
-{
-    // Compute RxC windows parameters
-    RegionComputeRxWindowParameters( MacCtx.NvmCtx->Region,
-                                     MacCtx.NvmCtx->MacParams.RxCChannel.Datarate,
-                                     MacCtx.NvmCtx->MacParams.MinRxSymbols,
-                                     MacCtx.NvmCtx->MacParams.SystemMaxRxError,
-                                     &MacCtx.RxWindowCConfig );
-
-    MacCtx.RxWindowCConfig.RxSlot = RX_SLOT_WIN_CLASS_C;
-    // Setup continuous listening
-    MacCtx.RxWindowCConfig.RxContinuous = true;
-
-    // At this point the Radio should be idle.
-    // Thus, there is no need to set the radio in standby mode.
-    if( RegionRxConfig( MacCtx.NvmCtx->Region, &MacCtx.RxWindowCConfig, ( int8_t* )&MacCtx.McpsIndication.RxDatarate ) == true )
-    {
-        Radio.Rx( 0 ); // Continuous mode
-        MacCtx.RxSlot = MacCtx.RxWindowCConfig.RxSlot;
-    }
-}
-
-LoRaMacStatus_t PrepareFrame( LoRaMacHeader_t* macHdr, LoRaMacFrameCtrl_t* fCtrl, uint8_t fPort, void* fBuffer, uint16_t fBufferSize )
-{
-    MacCtx.PktBufferLen = 0;
-    MacCtx.NodeAckRequested = false;
-    uint32_t fCntUp = 0;
-    size_t macCmdsSize = 0;
-    uint8_t availableSize = 0;
-
-    if( fBuffer == NULL )
-    {
-        fBufferSize = 0;
-    }
-
-    memcpy1( MacCtx.AppData, ( uint8_t* ) fBuffer, fBufferSize );
-    MacCtx.AppDataSize = fBufferSize;
-    MacCtx.PktBuffer[0] = macHdr->Value;
-
-    switch( macHdr->Bits.MType )
-    {
-        case FRAME_TYPE_DATA_CONFIRMED_UP:
-            MacCtx.NodeAckRequested = true;
-            // Intentional fall through
-        case FRAME_TYPE_DATA_UNCONFIRMED_UP:
-            MacCtx.TxMsg.Type = LORAMAC_MSG_TYPE_DATA;
-            MacCtx.TxMsg.Message.Data.Buffer = MacCtx.PktBuffer;
-            MacCtx.TxMsg.Message.Data.BufSize = LORAMAC_PHY_MAXPAYLOAD;
-            MacCtx.TxMsg.Message.Data.MHDR.Value = macHdr->Value;
-            MacCtx.TxMsg.Message.Data.FPort = fPort;
-            MacCtx.TxMsg.Message.Data.FHDR.DevAddr = MacCtx.NvmCtx->DevAddr;
-            MacCtx.TxMsg.Message.Data.FHDR.FCtrl.Value = fCtrl->Value;
-            MacCtx.TxMsg.Message.Data.FRMPayloadSize = MacCtx.AppDataSize;
-            MacCtx.TxMsg.Message.Data.FRMPayload = MacCtx.AppData;
-
-            if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoGetFCntUp( &fCntUp ) )
-            {
-                return LORAMAC_STATUS_FCNT_HANDLER_ERROR;
-            }
-            MacCtx.TxMsg.Message.Data.FHDR.FCnt = ( uint16_t )fCntUp;
-
-            // Reset confirm parameters
-            MacCtx.McpsConfirm.NbRetries = 0;
-            MacCtx.McpsConfirm.AckReceived = false;
-            MacCtx.McpsConfirm.UpLinkCounter = fCntUp;
-
-            // Handle the MAC commands if there are any available
-            if( LoRaMacCommandsGetSizeSerializedCmds( &macCmdsSize ) != LORAMAC_COMMANDS_SUCCESS )
-            {
-                return LORAMAC_STATUS_MAC_COMMAD_ERROR;
-            }
-
-            if( macCmdsSize > 0 )
-            {
-                availableSize = GetMaxAppPayloadWithoutFOptsLength( MacCtx.NvmCtx->MacParams.ChannelsDatarate );
-
-                // There is application payload available and the MAC commands fit into FOpts field.
-                if( ( MacCtx.AppDataSize > 0 ) && ( macCmdsSize <= LORA_MAC_COMMAND_MAX_FOPTS_LENGTH ) )
-                {
-                    if( LoRaMacCommandsSerializeCmds( LORA_MAC_COMMAND_MAX_FOPTS_LENGTH, &macCmdsSize, MacCtx.TxMsg.Message.Data.FHDR.FOpts ) != LORAMAC_COMMANDS_SUCCESS )
-                    {
-                        return LORAMAC_STATUS_MAC_COMMAD_ERROR;
-                    }
-                    fCtrl->Bits.FOptsLen = macCmdsSize;
-                    // Update FCtrl field with new value of FOptionsLength
-                    MacCtx.TxMsg.Message.Data.FHDR.FCtrl.Value = fCtrl->Value;
-                }
-                // There is application payload available but the MAC commands does NOT fit into FOpts field.
-                else if( ( MacCtx.AppDataSize > 0 ) && ( macCmdsSize > LORA_MAC_COMMAND_MAX_FOPTS_LENGTH ) )
-                {
-
-                    if( LoRaMacCommandsSerializeCmds( availableSize, &macCmdsSize, MacCtx.NvmCtx->MacCommandsBuffer ) != LORAMAC_COMMANDS_SUCCESS )
-                    {
-                        return LORAMAC_STATUS_MAC_COMMAD_ERROR;
-                    }
-                    return LORAMAC_STATUS_SKIPPED_APP_DATA;
-                }
-                // No application payload available therefore add all mac commands to the FRMPayload.
-                else
-                {
-                    if( LoRaMacCommandsSerializeCmds( availableSize, &macCmdsSize, MacCtx.NvmCtx->MacCommandsBuffer ) != LORAMAC_COMMANDS_SUCCESS )
-                    {
-                        return LORAMAC_STATUS_MAC_COMMAD_ERROR;
-                    }
-                    // Force FPort to be zero
-                    MacCtx.TxMsg.Message.Data.FPort = 0;
-
-                    MacCtx.TxMsg.Message.Data.FRMPayload = MacCtx.NvmCtx->MacCommandsBuffer;
-                    MacCtx.TxMsg.Message.Data.FRMPayloadSize = macCmdsSize;
-                }
-            }
-
-            break;
-        case FRAME_TYPE_PROPRIETARY:
-            if( ( fBuffer != NULL ) && ( MacCtx.AppDataSize > 0 ) )
-            {
-                memcpy1( MacCtx.PktBuffer + LORAMAC_MHDR_FIELD_SIZE, ( uint8_t* ) fBuffer, MacCtx.AppDataSize );
-                MacCtx.PktBufferLen = LORAMAC_MHDR_FIELD_SIZE + MacCtx.AppDataSize;
-            }
-            break;
-        default:
-            return LORAMAC_STATUS_SERVICE_UNKNOWN;
-    }
-
-    return LORAMAC_STATUS_OK;
-}
-
-LoRaMacStatus_t SendFrameOnChannel( uint8_t channel )
-{
-    TxConfigParams_t txConfig;
-    int8_t txPower = 0;
-
-    txConfig.Channel = channel;
-    txConfig.Datarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
-    txConfig.TxPower = MacCtx.NvmCtx->MacParams.ChannelsTxPower;
-    txConfig.MaxEirp = MacCtx.NvmCtx->MacParams.MaxEirp;
-    txConfig.AntennaGain = MacCtx.NvmCtx->MacParams.AntennaGain;
-    txConfig.PktLen = MacCtx.PktBufferLen;
-
-    RegionTxConfig( MacCtx.NvmCtx->Region, &txConfig, &txPower, &MacCtx.TxTimeOnAir );
-
-    MacCtx.McpsConfirm.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
-    MacCtx.McpsConfirm.Datarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
-    MacCtx.McpsConfirm.TxPower = txPower;
-    MacCtx.McpsConfirm.Channel = channel;
-
-    // Store the time on air
-    MacCtx.McpsConfirm.TxTimeOnAir = MacCtx.TxTimeOnAir;
-    MacCtx.MlmeConfirm.TxTimeOnAir = MacCtx.TxTimeOnAir;
-
-    if( LoRaMacClassBIsBeaconModeActive( ) == true )
-    {
-        // Currently, the Time-On-Air can only be computed when the radio is configured with
-        // the TX configuration
-        TimerTime_t collisionTime = LoRaMacClassBIsUplinkCollision( MacCtx.TxTimeOnAir );
-
-        if( collisionTime > 0 )
-        {
-            return LORAMAC_STATUS_BUSY_UPLINK_COLLISION;
-        }
-    }
-
-    if( MacCtx.NvmCtx->DeviceClass == CLASS_B )
-    {
-        // Stop slots for class b
-        LoRaMacClassBStopRxSlots( );
-    }
-
-    LoRaMacClassBHaltBeaconing( );
-
-    MacCtx.MacState |= LORAMAC_TX_RUNNING;
-    if( MacCtx.NodeAckRequested == false )
-    {
-        MacCtx.ChannelsNbTransCounter++;
-    }
-
-    // Send now
-    Radio.Send( MacCtx.PktBuffer, MacCtx.PktBufferLen );
-
-    return LORAMAC_STATUS_OK;
-}
-
-LoRaMacStatus_t SetTxContinuousWave( uint16_t timeout )
-{
-    ContinuousWaveParams_t continuousWave;
-
-    continuousWave.Channel = MacCtx.Channel;
-    continuousWave.Datarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
-    continuousWave.TxPower = MacCtx.NvmCtx->MacParams.ChannelsTxPower;
-    continuousWave.MaxEirp = MacCtx.NvmCtx->MacParams.MaxEirp;
-    continuousWave.AntennaGain = MacCtx.NvmCtx->MacParams.AntennaGain;
-    continuousWave.Timeout = timeout;
-
-    RegionSetContinuousWave( MacCtx.NvmCtx->Region, &continuousWave );
-
-    MacCtx.MacState |= LORAMAC_TX_RUNNING;
-
-    return LORAMAC_STATUS_OK;
-}
-
-LoRaMacStatus_t SetTxContinuousWave1( uint16_t timeout, uint32_t frequency, uint8_t power )
-{
-    Radio.SetTxContinuousWave( frequency, power, timeout );
-
-    MacCtx.MacState |= LORAMAC_TX_RUNNING;
-
-    return LORAMAC_STATUS_OK;
-}
-
-LoRaMacCtxs_t* GetCtxs( void )
-{
-    Contexts.MacNvmCtx = &NvmMacCtx;
-    Contexts.MacNvmCtxSize = sizeof( NvmMacCtx );
-    Contexts.CryptoNvmCtx = LoRaMacCryptoGetNvmCtx( &Contexts.CryptoNvmCtxSize );
-    GetNvmCtxParams_t params ={ 0 };
-    Contexts.RegionNvmCtx = RegionGetNvmCtx( MacCtx.NvmCtx->Region, &params );
-    Contexts.RegionNvmCtxSize = params.nvmCtxSize;
-    Contexts.SecureElementNvmCtx = SecureElementGetNvmCtx( &Contexts.SecureElementNvmCtxSize );
-    Contexts.CommandsNvmCtx = LoRaMacCommandsGetNvmCtx( &Contexts.CommandsNvmCtxSize );
-    Contexts.ClassBNvmCtx = LoRaMacClassBGetNvmCtx( &Contexts.ClassBNvmCtxSize );
-    Contexts.ConfirmQueueNvmCtx = LoRaMacConfirmQueueGetNvmCtx( &Contexts.ConfirmQueueNvmCtxSize );
-    return &Contexts;
-}
-
-LoRaMacStatus_t RestoreCtxs( LoRaMacCtxs_t* contexts )
-{
-    if( contexts == NULL )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-    if( MacCtx.MacState != LORAMAC_STOPPED )
-    {
-        return LORAMAC_STATUS_BUSY;
-    }
-
-    if( contexts->MacNvmCtx != NULL )
-    {
-        memcpy1( ( uint8_t* ) &NvmMacCtx, ( uint8_t* ) contexts->MacNvmCtx, contexts->MacNvmCtxSize );
-    }
-
-    InitDefaultsParams_t params;
-    params.Type = INIT_TYPE_RESTORE_CTX;
-    params.NvmCtx = contexts->RegionNvmCtx;
-    RegionInitDefaults( MacCtx.NvmCtx->Region, &params );
-
-    // Initialize RxC config parameters.
-    MacCtx.RxWindowCConfig.Channel = MacCtx.Channel;
-    MacCtx.RxWindowCConfig.Frequency = MacCtx.NvmCtx->MacParams.RxCChannel.Frequency;
-    MacCtx.RxWindowCConfig.DownlinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
-    MacCtx.RxWindowCConfig.RxContinuous = true;
-    MacCtx.RxWindowCConfig.RxSlot = RX_SLOT_WIN_CLASS_C;
-
-    if( SecureElementRestoreNvmCtx( contexts->SecureElementNvmCtx ) != SECURE_ELEMENT_SUCCESS )
-    {
-        return LORAMAC_STATUS_CRYPTO_ERROR;
-    }
-
-    if( LoRaMacCryptoRestoreNvmCtx( contexts->CryptoNvmCtx ) != LORAMAC_CRYPTO_SUCCESS )
-    {
-        return LORAMAC_STATUS_CRYPTO_ERROR;
-    }
-
-    if( LoRaMacCommandsRestoreNvmCtx( contexts->CommandsNvmCtx ) != LORAMAC_COMMANDS_SUCCESS )
-    {
-        return LORAMAC_STATUS_MAC_COMMAD_ERROR;
-    }
-
-    if( LoRaMacClassBRestoreNvmCtx( contexts->ClassBNvmCtx ) != true )
-    {
-        return LORAMAC_STATUS_CLASS_B_ERROR;
-    }
-
-    if( LoRaMacConfirmQueueRestoreNvmCtx( contexts->ConfirmQueueNvmCtx ) != true )
-    {
-        return LORAMAC_STATUS_CONFIRM_QUEUE_ERROR;
-    }
-
-    return LORAMAC_STATUS_OK;
-}
-
-LoRaMacStatus_t DetermineFrameType( LoRaMacMessageData_t* macMsg, FType_t* fType )
-{
-    if( ( macMsg == NULL ) || ( fType == NULL ) )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-
-    /* The LoRaWAN specification allows several possible configurations how data up/down frames are built up.
-     * In sake of clearness the following naming is applied. Please keep in mind that this is
-     * implementation specific since there is no definition in the LoRaWAN specification included.
-     *
-     * X -> Field is available
-     * - -> Field is not available
-     *
-     * +-------+  +----------+------+-------+--------------+
-     * | FType |  | FOptsLen | Fopt | FPort |  FRMPayload  |
-     * +-------+  +----------+------+-------+--------------+
-     * |   A   |  |    > 0   |   X  |  > 0  |       X      |
-     * +-------+  +----------+------+-------+--------------+
-     * |   B   |  |   >= 0   |  X/- |   -   |       -      |
-     * +-------+  +----------+------+-------+--------------+
-     * |   C   |  |    = 0   |   -  |  = 0  | MAC commands |
-     * +-------+  +----------+------+-------+--------------+
-     * |   D   |  |    = 0   |   -  |  > 0  |       X      |
-     * +-------+  +----------+------+-------+--------------+
-     */
-
-    if( ( macMsg->FHDR.FCtrl.Bits.FOptsLen > 0 ) && ( macMsg->FPort > 0 ) )
-    {
-        *fType = FRAME_TYPE_A;
-    }
-    else if( macMsg->FRMPayloadSize == 0 )
-    {
-        *fType = FRAME_TYPE_B;
-    }
-    else if( ( macMsg->FHDR.FCtrl.Bits.FOptsLen == 0 ) && ( macMsg->FPort == 0 ) )
-    {
-        *fType = FRAME_TYPE_C;
-    }
-    else if( ( macMsg->FHDR.FCtrl.Bits.FOptsLen == 0 ) && ( macMsg->FPort > 0 ) )
-    {
-        *fType = FRAME_TYPE_D;
-    }
-    else
-    {
-        // Should never happen.
-        return LORAMAC_STATUS_ERROR;
-    }
-
-    return LORAMAC_STATUS_OK;
-}
-
-static bool CheckRetransUnconfirmedUplink( void )
-{
-    // Unconfirmed uplink, when all retransmissions are done.
-    if( MacCtx.ChannelsNbTransCounter >=
-        MacCtx.NvmCtx->MacParams.ChannelsNbTrans )
-    {
-        return true;
-    }
-    else if( MacCtx.MacFlags.Bits.McpsInd == 1 )
-    {
-        // For Class A stop in each case
-        if( MacCtx.NvmCtx->DeviceClass == CLASS_A )
-        {
-            return true;
-        }
-        else
-        {// For Class B & C stop only if the frame was received in RX1 window
-            if( MacCtx.McpsIndication.RxSlot == RX_SLOT_WIN_1 )
-            {
-                return true;
-            }
-        }
-    }
-    return false;
-}
-
-static bool CheckRetransConfirmedUplink( void )
-{
-    // Confirmed uplink, when all retransmissions ( tries to get a ack ) are done.
-    if( MacCtx.AckTimeoutRetriesCounter >=
-        MacCtx.AckTimeoutRetries )
-    {
-        return true;
-    }
-    else if( MacCtx.MacFlags.Bits.McpsInd == 1 )
-    {
-        if( MacCtx.McpsConfirm.AckReceived == true )
-        {
-            return true;
-        }
-    }
-    return false;
-}
-
-static bool StopRetransmission( void )
-{
-    if( ( MacCtx.MacFlags.Bits.McpsInd == 0 ) ||
-        ( ( MacCtx.McpsIndication.RxSlot != RX_SLOT_WIN_1 ) &&
-          ( MacCtx.McpsIndication.RxSlot != RX_SLOT_WIN_2 ) ) )
-    {   // Maximum repetitions without downlink. Increase ADR Ack counter.
-        // Only process the case when the MAC did not receive a downlink.
-        if( MacCtx.NvmCtx->AdrCtrlOn == true )
-        {
-            MacCtx.NvmCtx->AdrAckCounter++;
-        }
-    }
-
-    MacCtx.ChannelsNbTransCounter = 0;
-    MacCtx.NodeAckRequested = false;
-    MacCtx.AckTimeoutRetry = false;
-    MacCtx.MacState &= ~LORAMAC_TX_RUNNING;
-
-    return true;
-}
-
-static void AckTimeoutRetriesProcess( void )
-{
-    if( MacCtx.AckTimeoutRetriesCounter < MacCtx.AckTimeoutRetries )
-    {
-        MacCtx.AckTimeoutRetriesCounter++;
-        if( ( MacCtx.AckTimeoutRetriesCounter % 2 ) == 1 )
-        {
-            GetPhyParams_t getPhy;
-            PhyParam_t phyParam;
-
-            getPhy.Attribute = PHY_NEXT_LOWER_TX_DR;
-            getPhy.UplinkDwellTime = MacCtx.NvmCtx->MacParams.UplinkDwellTime;
-            getPhy.Datarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
-            phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-            MacCtx.NvmCtx->MacParams.ChannelsDatarate = phyParam.Value;
-        }
-    }
-}
-
-static void AckTimeoutRetriesFinalize( void )
-{
-    if( MacCtx.McpsConfirm.AckReceived == false )
-    {
-        InitDefaultsParams_t params;
-        params.Type = INIT_TYPE_RESTORE_DEFAULT_CHANNELS;
-        params.NvmCtx = Contexts.RegionNvmCtx;
-        RegionInitDefaults( MacCtx.NvmCtx->Region, &params );
-
-        MacCtx.NodeAckRequested = false;
-        MacCtx.McpsConfirm.AckReceived = false;
-    }
-    MacCtx.McpsConfirm.NbRetries = MacCtx.AckTimeoutRetriesCounter;
-}
-
-static void CallNvmCtxCallback( LoRaMacNvmCtxModule_t module )
-{
-    if( ( MacCtx.MacCallbacks != NULL ) && ( MacCtx.MacCallbacks->NvmContextChange != NULL ) )
-    {
-        MacCtx.MacCallbacks->NvmContextChange( module );
-    }
-}
-
-static void EventMacNvmCtxChanged( void )
-{
-    CallNvmCtxCallback( LORAMAC_NVMCTXMODULE_MAC );
-}
-
-static void EventRegionNvmCtxChanged( void )
-{
-    CallNvmCtxCallback( LORAMAC_NVMCTXMODULE_REGION );
-}
-
-static void EventCryptoNvmCtxChanged( void )
-{
-    CallNvmCtxCallback( LORAMAC_NVMCTXMODULE_CRYPTO );
-}
-
-static void EventSecureElementNvmCtxChanged( void )
-{
-    CallNvmCtxCallback( LORAMAC_NVMCTXMODULE_SECURE_ELEMENT );
-}
-
-static void EventCommandsNvmCtxChanged( void )
-{
-    CallNvmCtxCallback( LORAMAC_NVMCTXMODULE_COMMANDS );
-}
-
-static void EventClassBNvmCtxChanged( void )
-{
-    CallNvmCtxCallback( LORAMAC_NVMCTXMODULE_CLASS_B );
-}
-
-static void EventConfirmQueueNvmCtxChanged( void )
-{
-    CallNvmCtxCallback( LORAMAC_NVMCTXMODULE_CONFIRM_QUEUE );
-}
-
-static uint8_t IsRequestPending( void )
-{
-    if( ( MacCtx.MacFlags.Bits.MlmeReq == 1 ) ||
-        ( MacCtx.MacFlags.Bits.McpsReq == 1 ) )
-    {
-        return 1;
-    }
-    return 0;
-}
-
-
-LoRaMacStatus_t LoRaMacInitialization( LoRaMacPrimitives_t* primitives, LoRaMacCallback_t* callbacks, LoRaMacRegion_t region )
-{
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-    LoRaMacClassBCallback_t classBCallbacks;
-    LoRaMacClassBParams_t classBParams;
-
-    if( ( primitives == NULL ) ||
-        ( callbacks == NULL ) )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-
-    if( ( primitives->MacMcpsConfirm == NULL ) ||
-        ( primitives->MacMcpsIndication == NULL ) ||
-        ( primitives->MacMlmeConfirm == NULL ) ||
-        ( primitives->MacMlmeIndication == NULL ) )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-    // Verify if the region is supported
-    if( RegionIsActive( region ) == false )
-    {
-        return LORAMAC_STATUS_REGION_NOT_SUPPORTED;
-    }
-
-    // Confirm queue reset
-    LoRaMacConfirmQueueInit( primitives, EventConfirmQueueNvmCtxChanged );
-
-    // Initialize the module context with zeros
-    memset1( ( uint8_t* ) &NvmMacCtx, 0x00, sizeof( LoRaMacNvmCtx_t ) );
-    memset1( ( uint8_t* ) &MacCtx, 0x00, sizeof( LoRaMacCtx_t ) );
-    MacCtx.NvmCtx = &NvmMacCtx;
-
-    // Set non zero variables to its default value
-    MacCtx.AckTimeoutRetriesCounter = 1;
-    MacCtx.AckTimeoutRetries = 1;
-    MacCtx.NvmCtx->Region = region;
-    MacCtx.NvmCtx->DeviceClass = CLASS_A;
-
-    // Setup version
-    MacCtx.NvmCtx->Version.Value = LORAMAC_VERSION;
-
-    // Reset to defaults
-    getPhy.Attribute = PHY_DUTY_CYCLE;
-    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-    MacCtx.NvmCtx->DutyCycleOn = ( bool ) phyParam.Value;
-
-    getPhy.Attribute = PHY_DEF_TX_POWER;
-    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-    MacCtx.NvmCtx->MacParamsDefaults.ChannelsTxPower = phyParam.Value;
-
-    getPhy.Attribute = PHY_DEF_TX_DR;
-    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-    MacCtx.NvmCtx->MacParamsDefaults.ChannelsDatarate = phyParam.Value;
-
-    getPhy.Attribute = PHY_MAX_RX_WINDOW;
-    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-    MacCtx.NvmCtx->MacParamsDefaults.MaxRxWindow = phyParam.Value;
-
-    getPhy.Attribute = PHY_RECEIVE_DELAY1;
-    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-    MacCtx.NvmCtx->MacParamsDefaults.ReceiveDelay1 = phyParam.Value;
-
-    getPhy.Attribute = PHY_RECEIVE_DELAY2;
-    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-    MacCtx.NvmCtx->MacParamsDefaults.ReceiveDelay2 = phyParam.Value;
-
-    getPhy.Attribute = PHY_JOIN_ACCEPT_DELAY1;
-    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-    MacCtx.NvmCtx->MacParamsDefaults.JoinAcceptDelay1 = phyParam.Value;
-
-    getPhy.Attribute = PHY_JOIN_ACCEPT_DELAY2;
-    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-    MacCtx.NvmCtx->MacParamsDefaults.JoinAcceptDelay2 = phyParam.Value;
-
-    getPhy.Attribute = PHY_DEF_DR1_OFFSET;
-    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-    MacCtx.NvmCtx->MacParamsDefaults.Rx1DrOffset = phyParam.Value;
-
-    getPhy.Attribute = PHY_DEF_RX2_FREQUENCY;
-    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-    MacCtx.NvmCtx->MacParamsDefaults.Rx2Channel.Frequency = phyParam.Value;
-    MacCtx.NvmCtx->MacParamsDefaults.RxCChannel.Frequency = phyParam.Value;
-
-    getPhy.Attribute = PHY_DEF_RX2_DR;
-    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-    MacCtx.NvmCtx->MacParamsDefaults.Rx2Channel.Datarate = phyParam.Value;
-    MacCtx.NvmCtx->MacParamsDefaults.RxCChannel.Datarate = phyParam.Value;
-
-    getPhy.Attribute = PHY_DEF_UPLINK_DWELL_TIME;
-    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-    MacCtx.NvmCtx->MacParamsDefaults.UplinkDwellTime = phyParam.Value;
-
-    getPhy.Attribute = PHY_DEF_DOWNLINK_DWELL_TIME;
-    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-    MacCtx.NvmCtx->MacParamsDefaults.DownlinkDwellTime = phyParam.Value;
-
-    getPhy.Attribute = PHY_DEF_MAX_EIRP;
-    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-    MacCtx.NvmCtx->MacParamsDefaults.MaxEirp = phyParam.fValue;
-
-    getPhy.Attribute = PHY_DEF_ANTENNA_GAIN;
-    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-    MacCtx.NvmCtx->MacParamsDefaults.AntennaGain = phyParam.fValue;
-
-    getPhy.Attribute = PHY_DEF_ADR_ACK_LIMIT;
-    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-    MacCtx.AdrAckLimit = phyParam.Value;
-
-    getPhy.Attribute = PHY_DEF_ADR_ACK_DELAY;
-    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-    MacCtx.AdrAckDelay = phyParam.Value;
-
-    // Init parameters which are not set in function ResetMacParameters
-    MacCtx.NvmCtx->MacParamsDefaults.ChannelsNbTrans = 1;
-    MacCtx.NvmCtx->MacParamsDefaults.SystemMaxRxError = 10;
-    MacCtx.NvmCtx->MacParamsDefaults.MinRxSymbols = 6;
-
-    MacCtx.NvmCtx->MacParams.SystemMaxRxError = MacCtx.NvmCtx->MacParamsDefaults.SystemMaxRxError;
-    MacCtx.NvmCtx->MacParams.MinRxSymbols = MacCtx.NvmCtx->MacParamsDefaults.MinRxSymbols;
-    MacCtx.NvmCtx->MacParams.MaxRxWindow = MacCtx.NvmCtx->MacParamsDefaults.MaxRxWindow;
-    MacCtx.NvmCtx->MacParams.ReceiveDelay1 = MacCtx.NvmCtx->MacParamsDefaults.ReceiveDelay1;
-    MacCtx.NvmCtx->MacParams.ReceiveDelay2 = MacCtx.NvmCtx->MacParamsDefaults.ReceiveDelay2;
-    MacCtx.NvmCtx->MacParams.JoinAcceptDelay1 = MacCtx.NvmCtx->MacParamsDefaults.JoinAcceptDelay1;
-    MacCtx.NvmCtx->MacParams.JoinAcceptDelay2 = MacCtx.NvmCtx->MacParamsDefaults.JoinAcceptDelay2;
-    MacCtx.NvmCtx->MacParams.ChannelsNbTrans = MacCtx.NvmCtx->MacParamsDefaults.ChannelsNbTrans;
-
-    InitDefaultsParams_t params;
-    params.Type = INIT_TYPE_BANDS;
-    params.NvmCtx = NULL;
-    RegionInitDefaults( MacCtx.NvmCtx->Region, &params );
-
-    ResetMacParameters( );
-
-    MacCtx.NvmCtx->PublicNetwork = true;
-
-    MacCtx.MacPrimitives = primitives;
-    MacCtx.MacCallbacks = callbacks;
-    MacCtx.MacFlags.Value = 0;
-    MacCtx.MacState = LORAMAC_STOPPED;
-
-    // Reset duty cycle times
-    MacCtx.NvmCtx->LastTxDoneTime = 0;
-    MacCtx.NvmCtx->AggregatedTimeOff = 0;
-
-    // Initialize timers
-    TimerInit( &MacCtx.TxDelayedTimer, OnTxDelayedTimerEvent );
-    TimerInit( &MacCtx.RxWindowTimer1, OnRxWindow1TimerEvent );
-    TimerInit( &MacCtx.RxWindowTimer2, OnRxWindow2TimerEvent );
-    TimerInit( &MacCtx.AckTimeoutTimer, OnAckTimeoutTimerEvent );
-
-    // Store the current initialization time
-    MacCtx.NvmCtx->InitializationTime = SysTimeGetMcuTime( );
-
-    // Initialize Radio driver
-    MacCtx.RadioEvents.TxDone = OnRadioTxDone;
-    MacCtx.RadioEvents.RxDone = OnRadioRxDone;
-    MacCtx.RadioEvents.RxError = OnRadioRxError;
-    MacCtx.RadioEvents.TxTimeout = OnRadioTxTimeout;
-    MacCtx.RadioEvents.RxTimeout = OnRadioRxTimeout;
-    Radio.Init( &MacCtx.RadioEvents );
-
-    // Initialize the Secure Element driver
-    if( SecureElementInit( EventSecureElementNvmCtxChanged ) != SECURE_ELEMENT_SUCCESS )
-    {
-        return LORAMAC_STATUS_CRYPTO_ERROR;
-    }
-
-    // Initialize Crypto module
-    if( LoRaMacCryptoInit( EventCryptoNvmCtxChanged ) != LORAMAC_CRYPTO_SUCCESS )
-    {
-        return LORAMAC_STATUS_CRYPTO_ERROR;
-    }
-
-    // Initialize MAC commands module
-    if( LoRaMacCommandsInit( EventCommandsNvmCtxChanged ) != LORAMAC_COMMANDS_SUCCESS )
-    {
-        return LORAMAC_STATUS_MAC_COMMAD_ERROR;
-    }
-
-    // Set multicast downlink counter reference
-    if( LoRaMacCryptoSetMulticastReference( MacCtx.NvmCtx->MulticastChannelList ) != LORAMAC_CRYPTO_SUCCESS )
-    {
-        return LORAMAC_STATUS_CRYPTO_ERROR;
-    }
-
-    // Random seed initialization
-    srand1( Radio.Random( ) );
-
-    Radio.SetPublicNetwork( MacCtx.NvmCtx->PublicNetwork );
-    Radio.Sleep( );
-
-    // Initialize class b
-    // Apply callback
-    classBCallbacks.GetTemperatureLevel = NULL;
-    classBCallbacks.MacProcessNotify = NULL;
-    if( callbacks != NULL )
-    {
-        classBCallbacks.GetTemperatureLevel = callbacks->GetTemperatureLevel;
-        classBCallbacks.MacProcessNotify = callbacks->MacProcessNotify;
-    }
-
-    // Must all be static. Don't use local references.
-    classBParams.MlmeIndication = &MacCtx.MlmeIndication;
-    classBParams.McpsIndication = &MacCtx.McpsIndication;
-    classBParams.MlmeConfirm = &MacCtx.MlmeConfirm;
-    classBParams.LoRaMacFlags = &MacCtx.MacFlags;
-    classBParams.LoRaMacDevAddr = &MacCtx.NvmCtx->DevAddr;
-    classBParams.LoRaMacRegion = &MacCtx.NvmCtx->Region;
-    classBParams.LoRaMacParams = &MacCtx.NvmCtx->MacParams;
-    classBParams.MulticastChannels = &MacCtx.NvmCtx->MulticastChannelList[0];
-
-    LoRaMacClassBInit( &classBParams, &classBCallbacks, &EventClassBNvmCtxChanged );
-
-    LoRaMacEnableRequests( LORAMAC_REQUEST_HANDLING_ON );
-
-    return LORAMAC_STATUS_OK;
-}
-
-LoRaMacStatus_t LoRaMacStart( void )
-{
-    MacCtx.MacState = LORAMAC_IDLE;
-    return LORAMAC_STATUS_OK;
-}
-
-LoRaMacStatus_t LoRaMacStop( void )
-{
-    if( LoRaMacIsBusy( ) == false )
-    {
-        MacCtx.MacState = LORAMAC_STOPPED;
-        return LORAMAC_STATUS_OK;
-    }
-    else if(  MacCtx.MacState == LORAMAC_STOPPED )
-    {
-        return LORAMAC_STATUS_OK;
-    }
-    return LORAMAC_STATUS_BUSY;
-}
-
-LoRaMacStatus_t LoRaMacQueryNextTxDelay( int8_t datarate, TimerTime_t* time )
-{
-    NextChanParams_t nextChan;
-    uint8_t channel = 0;
-
-    CalcNextAdrParams_t adrNext;
-    uint32_t adrAckCounter = MacCtx.NvmCtx->AdrAckCounter;
-    int8_t txPower = MacCtx.NvmCtx->MacParamsDefaults.ChannelsTxPower;
-
-    if( time == NULL )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-
-    if( MacCtx.NvmCtx->LastTxDoneTime == 0 )
-    {
-        *time = 0;
-        return LORAMAC_STATUS_OK;
-    }
-
-    // Update back-off
-    CalculateBackOff( MacCtx.NvmCtx->LastTxChannel );
-
-    nextChan.AggrTimeOff = MacCtx.NvmCtx->AggregatedTimeOff;
-    nextChan.Datarate = datarate;
-    nextChan.DutyCycleEnabled = MacCtx.NvmCtx->DutyCycleOn;
-    nextChan.QueryNextTxDelayOnly = true;
-    nextChan.Joined = true;
-    nextChan.LastAggrTx = MacCtx.NvmCtx->LastTxDoneTime;
-
-    if( MacCtx.NvmCtx->NetworkActivation == ACTIVATION_TYPE_NONE )
-    {
-        nextChan.Joined = false;
-    }
-    if( MacCtx.NvmCtx->AdrCtrlOn == true )
-    {
-        // Setup ADR request
-        adrNext.UpdateChanMask = false;
-        adrNext.AdrEnabled = MacCtx.NvmCtx->AdrCtrlOn;
-        adrNext.AdrAckCounter = MacCtx.NvmCtx->AdrAckCounter;
-        adrNext.AdrAckLimit = MacCtx.AdrAckLimit;
-        adrNext.AdrAckDelay = MacCtx.AdrAckDelay;
-        adrNext.Datarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
-        adrNext.TxPower = MacCtx.NvmCtx->MacParams.ChannelsTxPower;
-        adrNext.UplinkDwellTime = MacCtx.NvmCtx->MacParams.UplinkDwellTime;
-        adrNext.Region = MacCtx.NvmCtx->Region;
-
-        // We call the function for information purposes only. We don't want to
-        // apply the datarate, the tx power and the ADR ack counter.
-        LoRaMacAdrCalcNext( &adrNext, &nextChan.Datarate, &txPower, &adrAckCounter );
-    }
-
-    // Select channel
-    return RegionNextChannel( MacCtx.NvmCtx->Region, &nextChan, &channel, time, &MacCtx.NvmCtx->AggregatedTimeOff );
-}
-
-LoRaMacStatus_t LoRaMacQueryTxPossible( uint8_t size, LoRaMacTxInfo_t* txInfo )
-{
-    CalcNextAdrParams_t adrNext;
-    uint32_t adrAckCounter = MacCtx.NvmCtx->AdrAckCounter;
-    int8_t datarate = MacCtx.NvmCtx->MacParamsDefaults.ChannelsDatarate;
-    int8_t txPower = MacCtx.NvmCtx->MacParamsDefaults.ChannelsTxPower;
-    size_t macCmdsSize = 0;
-
-    if( txInfo == NULL )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-
-    // Setup ADR request
-    adrNext.Version = MacCtx.NvmCtx->Version;
-    adrNext.UpdateChanMask = false;
-    adrNext.AdrEnabled = MacCtx.NvmCtx->AdrCtrlOn;
-    adrNext.AdrAckCounter = MacCtx.NvmCtx->AdrAckCounter;
-    adrNext.AdrAckLimit = MacCtx.AdrAckLimit;
-    adrNext.AdrAckDelay = MacCtx.AdrAckDelay;
-    adrNext.Datarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
-    adrNext.TxPower = MacCtx.NvmCtx->MacParams.ChannelsTxPower;
-    adrNext.UplinkDwellTime = MacCtx.NvmCtx->MacParams.UplinkDwellTime;
-    adrNext.Region = MacCtx.NvmCtx->Region;
-
-    // We call the function for information purposes only. We don't want to
-    // apply the datarate, the tx power and the ADR ack counter.
-    LoRaMacAdrCalcNext( &adrNext, &datarate, &txPower, &adrAckCounter );
-
-    txInfo->CurrentPossiblePayloadSize = GetMaxAppPayloadWithoutFOptsLength( datarate );
-
-    if( LoRaMacCommandsGetSizeSerializedCmds( &macCmdsSize ) != LORAMAC_COMMANDS_SUCCESS )
-    {
-        return LORAMAC_STATUS_MAC_COMMAD_ERROR;
-    }
-
-    // Verify if the MAC commands fit into the FOpts and into the maximum payload.
-    if( ( LORA_MAC_COMMAND_MAX_FOPTS_LENGTH >= macCmdsSize ) && ( txInfo->CurrentPossiblePayloadSize >= macCmdsSize ) )
-    {
-        txInfo->MaxPossibleApplicationDataSize = txInfo->CurrentPossiblePayloadSize - macCmdsSize;
-
-        // Verify if the application data together with MAC command fit into the maximum payload.
-        if( txInfo->CurrentPossiblePayloadSize >= ( macCmdsSize + size ) )
-        {
-            return LORAMAC_STATUS_OK;
-        }
-        else
-        {
-           return LORAMAC_STATUS_LENGTH_ERROR;
-        }
-    }
-    else
-    {
-        txInfo->MaxPossibleApplicationDataSize = 0;
-        return LORAMAC_STATUS_LENGTH_ERROR;
-    }
-}
-
-LoRaMacStatus_t LoRaMacMibGetRequestConfirm( MibRequestConfirm_t* mibGet )
-{
-    LoRaMacStatus_t status = LORAMAC_STATUS_OK;
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-
-    if( mibGet == NULL )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-
-    switch( mibGet->Type )
-    {
-        case MIB_DEVICE_CLASS:
-        {
-            mibGet->Param.Class = MacCtx.NvmCtx->DeviceClass;
-            break;
-        }
-        case MIB_NETWORK_ACTIVATION:
-        {
-            mibGet->Param.NetworkActivation = MacCtx.NvmCtx->NetworkActivation;
-            break;
-        }
-        case MIB_DEV_EUI:
-        {
-            mibGet->Param.DevEui = SecureElementGetDevEui( );
-            break;
-        }
-        case MIB_JOIN_EUI:
-        {
-            mibGet->Param.JoinEui = SecureElementGetJoinEui( );
-            break;
-        }
-        case MIB_ADR:
-        {
-            mibGet->Param.AdrEnable = MacCtx.NvmCtx->AdrCtrlOn;
-            break;
-        }
-        case MIB_NET_ID:
-        {
-            mibGet->Param.NetID = MacCtx.NvmCtx->NetID;
-            break;
-        }
-        case MIB_DEV_ADDR:
-        {
-            mibGet->Param.DevAddr = MacCtx.NvmCtx->DevAddr;
-            break;
-        }
-        case MIB_PUBLIC_NETWORK:
-        {
-            mibGet->Param.EnablePublicNetwork = MacCtx.NvmCtx->PublicNetwork;
-            break;
-        }
-        case MIB_CHANNELS:
-        {
-            getPhy.Attribute = PHY_CHANNELS;
-            phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-
-            mibGet->Param.ChannelList = phyParam.Channels;
-            break;
-        }
-        case MIB_RX2_CHANNEL:
-        {
-            mibGet->Param.Rx2Channel = MacCtx.NvmCtx->MacParams.Rx2Channel;
-            break;
-        }
-        case MIB_RX2_DEFAULT_CHANNEL:
-        {
-            mibGet->Param.Rx2Channel = MacCtx.NvmCtx->MacParamsDefaults.Rx2Channel;
-            break;
-        }
-        case MIB_RXC_CHANNEL:
-        {
-            mibGet->Param.RxCChannel = MacCtx.NvmCtx->MacParams.RxCChannel;
-            break;
-        }
-        case MIB_RXC_DEFAULT_CHANNEL:
-        {
-            mibGet->Param.RxCChannel = MacCtx.NvmCtx->MacParamsDefaults.RxCChannel;
-            break;
-        }
-        case MIB_CHANNELS_DEFAULT_MASK:
-        {
-            getPhy.Attribute = PHY_CHANNELS_DEFAULT_MASK;
-            phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-
-            mibGet->Param.ChannelsDefaultMask = phyParam.ChannelsMask;
-            break;
-        }
-        case MIB_CHANNELS_MASK:
-        {
-            getPhy.Attribute = PHY_CHANNELS_MASK;
-            phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-
-            mibGet->Param.ChannelsMask = phyParam.ChannelsMask;
-            break;
-        }
-        case MIB_CHANNELS_NB_TRANS:
-        {
-            mibGet->Param.ChannelsNbTrans = MacCtx.NvmCtx->MacParams.ChannelsNbTrans;
-            break;
-        }
-        case MIB_MAX_RX_WINDOW_DURATION:
-        {
-            mibGet->Param.MaxRxWindow = MacCtx.NvmCtx->MacParams.MaxRxWindow;
-            break;
-        }
-        case MIB_RECEIVE_DELAY_1:
-        {
-            mibGet->Param.ReceiveDelay1 = MacCtx.NvmCtx->MacParams.ReceiveDelay1;
-            break;
-        }
-        case MIB_RECEIVE_DELAY_2:
-        {
-            mibGet->Param.ReceiveDelay2 = MacCtx.NvmCtx->MacParams.ReceiveDelay2;
-            break;
-        }
-        case MIB_JOIN_ACCEPT_DELAY_1:
-        {
-            mibGet->Param.JoinAcceptDelay1 = MacCtx.NvmCtx->MacParams.JoinAcceptDelay1;
-            break;
-        }
-        case MIB_JOIN_ACCEPT_DELAY_2:
-        {
-            mibGet->Param.JoinAcceptDelay2 = MacCtx.NvmCtx->MacParams.JoinAcceptDelay2;
-            break;
-        }
-        case MIB_CHANNELS_DEFAULT_DATARATE:
-        {
-            mibGet->Param.ChannelsDefaultDatarate = MacCtx.NvmCtx->MacParamsDefaults.ChannelsDatarate;
-            break;
-        }
-        case MIB_CHANNELS_DATARATE:
-        {
-            mibGet->Param.ChannelsDatarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
-            break;
-        }
-        case MIB_CHANNELS_DEFAULT_TX_POWER:
-        {
-            mibGet->Param.ChannelsDefaultTxPower = MacCtx.NvmCtx->MacParamsDefaults.ChannelsTxPower;
-            break;
-        }
-        case MIB_CHANNELS_TX_POWER:
-        {
-            mibGet->Param.ChannelsTxPower = MacCtx.NvmCtx->MacParams.ChannelsTxPower;
-            break;
-        }
-        case MIB_SYSTEM_MAX_RX_ERROR:
-        {
-            mibGet->Param.SystemMaxRxError = MacCtx.NvmCtx->MacParams.SystemMaxRxError;
-            break;
-        }
-        case MIB_MIN_RX_SYMBOLS:
-        {
-            mibGet->Param.MinRxSymbols = MacCtx.NvmCtx->MacParams.MinRxSymbols;
-            break;
-        }
-        case MIB_ANTENNA_GAIN:
-        {
-            mibGet->Param.AntennaGain = MacCtx.NvmCtx->MacParams.AntennaGain;
-            break;
-        }
-        case MIB_NVM_CTXS:
-        {
-            mibGet->Param.Contexts = GetCtxs( );
-            break;
-        }
-        case MIB_DEFAULT_ANTENNA_GAIN:
-        {
-            mibGet->Param.DefaultAntennaGain = MacCtx.NvmCtx->MacParamsDefaults.AntennaGain;
-            break;
-        }
-        case MIB_LORAWAN_VERSION:
-        {
-            mibGet->Param.LrWanVersion.LoRaWan = MacCtx.NvmCtx->Version;
-            mibGet->Param.LrWanVersion.LoRaWanRegion = RegionGetVersion( );
-            break;
-        }
-        default:
-        {
-            status = LoRaMacClassBMibGetRequestConfirm( mibGet );
-            break;
-        }
-    }
-    return status;
-}
-
-LoRaMacStatus_t LoRaMacMibSetRequestConfirm( MibRequestConfirm_t* mibSet )
-{
-    LoRaMacStatus_t status = LORAMAC_STATUS_OK;
-    ChanMaskSetParams_t chanMaskSet;
-    VerifyParams_t verify;
-
-    if( mibSet == NULL )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-    if( ( MacCtx.MacState & LORAMAC_TX_RUNNING ) == LORAMAC_TX_RUNNING )
-    {
-        return LORAMAC_STATUS_BUSY;
-    }
-
-    switch( mibSet->Type )
-    {
-        case MIB_DEVICE_CLASS:
-        {
-            status = SwitchClass( mibSet->Param.Class );
-            break;
-        }
-        case MIB_NETWORK_ACTIVATION:
-        {
-            if( mibSet->Param.NetworkActivation != ACTIVATION_TYPE_OTAA  )
-            {
-                MacCtx.NvmCtx->NetworkActivation = mibSet->Param.NetworkActivation;
-            }
-            else
-            {   // Do not allow to set ACTIVATION_TYPE_OTAA since the MAC will set it automatically after a successful join process.
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_DEV_EUI:
-        {
-            if( SecureElementSetDevEui( mibSet->Param.DevEui ) != SECURE_ELEMENT_SUCCESS )
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_JOIN_EUI:
-        {
-            if( SecureElementSetJoinEui( mibSet->Param.JoinEui ) != SECURE_ELEMENT_SUCCESS )
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_ADR:
-        {
-            MacCtx.NvmCtx->AdrCtrlOn = mibSet->Param.AdrEnable;
-            break;
-        }
-        case MIB_NET_ID:
-        {
-            MacCtx.NvmCtx->NetID = mibSet->Param.NetID;
-            break;
-        }
-        case MIB_DEV_ADDR:
-        {
-            MacCtx.NvmCtx->DevAddr = mibSet->Param.DevAddr;
-            break;
-        }
-        case MIB_GEN_APP_KEY:
-        {
-            if( mibSet->Param.GenAppKey != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( GEN_APP_KEY, mibSet->Param.GenAppKey ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_APP_KEY:
-        {
-            if( mibSet->Param.AppKey != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( APP_KEY, mibSet->Param.AppKey ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_NWK_KEY:
-        {
-            if( mibSet->Param.NwkKey != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( NWK_KEY, mibSet->Param.NwkKey ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_J_S_INT_KEY:
-        {
-            if( mibSet->Param.JSIntKey != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( J_S_INT_KEY, mibSet->Param.JSIntKey ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_J_S_ENC_KEY:
-        {
-            if( mibSet->Param.JSEncKey != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( J_S_ENC_KEY, mibSet->Param.JSEncKey ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_F_NWK_S_INT_KEY:
-        {
-            if( mibSet->Param.FNwkSIntKey != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( F_NWK_S_INT_KEY, mibSet->Param.FNwkSIntKey ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_S_NWK_S_INT_KEY:
-        {
-            if( mibSet->Param.SNwkSIntKey != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( S_NWK_S_INT_KEY, mibSet->Param.SNwkSIntKey ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_NWK_S_ENC_KEY:
-        {
-            if( mibSet->Param.NwkSEncKey != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( NWK_S_ENC_KEY, mibSet->Param.NwkSEncKey ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_APP_S_KEY:
-        {
-            if( mibSet->Param.AppSKey != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( APP_S_KEY, mibSet->Param.AppSKey ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_MC_KE_KEY:
-        {
-            if( mibSet->Param.McKEKey != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( MC_KE_KEY, mibSet->Param.McKEKey ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_MC_KEY_0:
-        {
-            if( mibSet->Param.McKey0 != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( MC_KEY_0, mibSet->Param.McKey0 ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_MC_APP_S_KEY_0:
-        {
-            if( mibSet->Param.McAppSKey0 != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( MC_APP_S_KEY_0, mibSet->Param.McAppSKey0 ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_MC_NWK_S_KEY_0:
-        {
-            if( mibSet->Param.McNwkSKey0 != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( MC_NWK_S_KEY_0, mibSet->Param.McNwkSKey0 ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_MC_KEY_1:
-        {
-            if( mibSet->Param.McKey1 != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( MC_KEY_1, mibSet->Param.McKey1 ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_MC_APP_S_KEY_1:
-        {
-            if( mibSet->Param.McAppSKey1 != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( MC_APP_S_KEY_1, mibSet->Param.McAppSKey1 ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_MC_NWK_S_KEY_1:
-        {
-            if( mibSet->Param.McNwkSKey1 != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( MC_NWK_S_KEY_1, mibSet->Param.McNwkSKey1 ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_MC_KEY_2:
-        {
-            if( mibSet->Param.McKey2 != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( MC_KEY_2, mibSet->Param.McKey2 ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_MC_APP_S_KEY_2:
-        {
-            if( mibSet->Param.McAppSKey2 != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( MC_APP_S_KEY_2, mibSet->Param.McAppSKey2 ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_MC_NWK_S_KEY_2:
-        {
-            if( mibSet->Param.McNwkSKey2 != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( MC_NWK_S_KEY_2, mibSet->Param.McNwkSKey2 ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_MC_KEY_3:
-        {
-            if( mibSet->Param.McKey3 != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( MC_KEY_3, mibSet->Param.McKey3 ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_MC_APP_S_KEY_3:
-        {
-            if( mibSet->Param.McAppSKey3 != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( MC_APP_S_KEY_3, mibSet->Param.McAppSKey3 ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_MC_NWK_S_KEY_3:
-        {
-            if( mibSet->Param.McNwkSKey3 != NULL )
-            {
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( MC_NWK_S_KEY_3, mibSet->Param.McNwkSKey3 ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_PUBLIC_NETWORK:
-        {
-            MacCtx.NvmCtx->PublicNetwork = mibSet->Param.EnablePublicNetwork;
-            Radio.SetPublicNetwork( MacCtx.NvmCtx->PublicNetwork );
-            break;
-        }
-        case MIB_RX2_CHANNEL:
-        {
-            verify.DatarateParams.Datarate = mibSet->Param.Rx2Channel.Datarate;
-            verify.DatarateParams.DownlinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
-
-            if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_RX_DR ) == true )
-            {
-                MacCtx.NvmCtx->MacParams.Rx2Channel = mibSet->Param.Rx2Channel;
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_RX2_DEFAULT_CHANNEL:
-        {
-            verify.DatarateParams.Datarate = mibSet->Param.Rx2Channel.Datarate;
-            verify.DatarateParams.DownlinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
-
-            if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_RX_DR ) == true )
-            {
-                MacCtx.NvmCtx->MacParamsDefaults.Rx2Channel = mibSet->Param.Rx2DefaultChannel;
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_RXC_CHANNEL:
-        {
-            verify.DatarateParams.Datarate = mibSet->Param.RxCChannel.Datarate;
-            verify.DatarateParams.DownlinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
-
-            if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_RX_DR ) == true )
-            {
-                MacCtx.NvmCtx->MacParams.RxCChannel = mibSet->Param.RxCChannel;
-
-                if( ( MacCtx.NvmCtx->DeviceClass == CLASS_C ) && ( MacCtx.NvmCtx->NetworkActivation != ACTIVATION_TYPE_NONE ) )
-                {
-                    // We can only compute the RX window parameters directly, if we are already
-                    // in class c mode and joined. We cannot setup an RX window in case of any other
-                    // class type.
-                    // Set the radio into sleep mode in case we are still in RX mode
-                    Radio.Sleep( );
-
-                    OpenContinuousRxCWindow( );
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_RXC_DEFAULT_CHANNEL:
-        {
-            verify.DatarateParams.Datarate = mibSet->Param.RxCChannel.Datarate;
-            verify.DatarateParams.DownlinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
-
-            if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_RX_DR ) == true )
-            {
-                MacCtx.NvmCtx->MacParamsDefaults.RxCChannel = mibSet->Param.RxCDefaultChannel;
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_CHANNELS_DEFAULT_MASK:
-        {
-            chanMaskSet.ChannelsMaskIn = mibSet->Param.ChannelsDefaultMask;
-            chanMaskSet.ChannelsMaskType = CHANNELS_DEFAULT_MASK;
-
-            if( RegionChanMaskSet( MacCtx.NvmCtx->Region, &chanMaskSet ) == false )
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_CHANNELS_MASK:
-        {
-            chanMaskSet.ChannelsMaskIn = mibSet->Param.ChannelsMask;
-            chanMaskSet.ChannelsMaskType = CHANNELS_MASK;
-
-            if( RegionChanMaskSet( MacCtx.NvmCtx->Region, &chanMaskSet ) == false )
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_CHANNELS_NB_TRANS:
-        {
-            if( ( mibSet->Param.ChannelsNbTrans >= 1 ) &&
-                ( mibSet->Param.ChannelsNbTrans <= 15 ) )
-            {
-                MacCtx.NvmCtx->MacParams.ChannelsNbTrans = mibSet->Param.ChannelsNbTrans;
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_MAX_RX_WINDOW_DURATION:
-        {
-            MacCtx.NvmCtx->MacParams.MaxRxWindow = mibSet->Param.MaxRxWindow;
-            break;
-        }
-        case MIB_RECEIVE_DELAY_1:
-        {
-            MacCtx.NvmCtx->MacParams.ReceiveDelay1 = mibSet->Param.ReceiveDelay1;
-            break;
-        }
-        case MIB_RECEIVE_DELAY_2:
-        {
-            MacCtx.NvmCtx->MacParams.ReceiveDelay2 = mibSet->Param.ReceiveDelay2;
-            break;
-        }
-        case MIB_JOIN_ACCEPT_DELAY_1:
-        {
-            MacCtx.NvmCtx->MacParams.JoinAcceptDelay1 = mibSet->Param.JoinAcceptDelay1;
-            break;
-        }
-        case MIB_JOIN_ACCEPT_DELAY_2:
-        {
-            MacCtx.NvmCtx->MacParams.JoinAcceptDelay2 = mibSet->Param.JoinAcceptDelay2;
-            break;
-        }
-        case MIB_CHANNELS_DEFAULT_DATARATE:
-        {
-            verify.DatarateParams.Datarate = mibSet->Param.ChannelsDefaultDatarate;
-
-            if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_DEF_TX_DR ) == true )
-            {
-                MacCtx.NvmCtx->MacParamsDefaults.ChannelsDatarate = verify.DatarateParams.Datarate;
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_CHANNELS_DATARATE:
-        {
-            verify.DatarateParams.Datarate = mibSet->Param.ChannelsDatarate;
-            verify.DatarateParams.UplinkDwellTime = MacCtx.NvmCtx->MacParams.UplinkDwellTime;
-
-            if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_TX_DR ) == true )
-            {
-                MacCtx.NvmCtx->MacParams.ChannelsDatarate = verify.DatarateParams.Datarate;
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_CHANNELS_DEFAULT_TX_POWER:
-        {
-            verify.TxPower = mibSet->Param.ChannelsDefaultTxPower;
-
-            if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_DEF_TX_POWER ) == true )
-            {
-                MacCtx.NvmCtx->MacParamsDefaults.ChannelsTxPower = verify.TxPower;
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_CHANNELS_TX_POWER:
-        {
-            verify.TxPower = mibSet->Param.ChannelsTxPower;
-
-            if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_TX_POWER ) == true )
-            {
-                MacCtx.NvmCtx->MacParams.ChannelsTxPower = verify.TxPower;
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_SYSTEM_MAX_RX_ERROR:
-        {
-            MacCtx.NvmCtx->MacParams.SystemMaxRxError = MacCtx.NvmCtx->MacParamsDefaults.SystemMaxRxError = mibSet->Param.SystemMaxRxError;
-            break;
-        }
-        case MIB_MIN_RX_SYMBOLS:
-        {
-            MacCtx.NvmCtx->MacParams.MinRxSymbols = MacCtx.NvmCtx->MacParamsDefaults.MinRxSymbols = mibSet->Param.MinRxSymbols;
-            break;
-        }
-        case MIB_ANTENNA_GAIN:
-        {
-            MacCtx.NvmCtx->MacParams.AntennaGain = mibSet->Param.AntennaGain;
-            break;
-        }
-        case MIB_DEFAULT_ANTENNA_GAIN:
-        {
-            MacCtx.NvmCtx->MacParamsDefaults.AntennaGain = mibSet->Param.DefaultAntennaGain;
-            break;
-        }
-        case MIB_NVM_CTXS:
-        {
-            if( mibSet->Param.Contexts != 0 )
-            {
-                status = RestoreCtxs( mibSet->Param.Contexts );
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        case MIB_ABP_LORAWAN_VERSION:
-        {
-            if( mibSet->Param.AbpLrWanVersion.Fields.Minor <= 1 )
-            {
-                MacCtx.NvmCtx->Version = mibSet->Param.AbpLrWanVersion;
-
-                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetLrWanVersion( mibSet->Param.AbpLrWanVersion ) )
-                {
-                    return LORAMAC_STATUS_CRYPTO_ERROR;
-                }
-            }
-            else
-            {
-                status = LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-            break;
-        }
-        default:
-        {
-            status = LoRaMacMibClassBSetRequestConfirm( mibSet );
-            break;
-        }
-    }
-    EventRegionNvmCtxChanged( );
-    EventMacNvmCtxChanged( );
-    return status;
-}
-
-LoRaMacStatus_t LoRaMacChannelAdd( uint8_t id, ChannelParams_t params )
-{
-    ChannelAddParams_t channelAdd;
-
-    // Validate if the MAC is in a correct state
-    if( ( MacCtx.MacState & LORAMAC_TX_RUNNING ) == LORAMAC_TX_RUNNING )
-    {
-        if( ( MacCtx.MacState & LORAMAC_TX_CONFIG ) != LORAMAC_TX_CONFIG )
-        {
-            return LORAMAC_STATUS_BUSY;
-        }
-    }
-
-    channelAdd.NewChannel = &params;
-    channelAdd.ChannelId = id;
-
-    EventRegionNvmCtxChanged( );
-    return RegionChannelAdd( MacCtx.NvmCtx->Region, &channelAdd );
-}
-
-LoRaMacStatus_t LoRaMacChannelRemove( uint8_t id )
-{
-    ChannelRemoveParams_t channelRemove;
-
-    if( ( MacCtx.MacState & LORAMAC_TX_RUNNING ) == LORAMAC_TX_RUNNING )
-    {
-        if( ( MacCtx.MacState & LORAMAC_TX_CONFIG ) != LORAMAC_TX_CONFIG )
-        {
-            return LORAMAC_STATUS_BUSY;
-        }
-    }
-
-    channelRemove.ChannelId = id;
-
-    if( RegionChannelsRemove( MacCtx.NvmCtx->Region, &channelRemove ) == false )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-
-    EventRegionNvmCtxChanged( );
-    return LORAMAC_STATUS_OK;
-}
-
-LoRaMacStatus_t LoRaMacMcChannelSetup( McChannelParams_t *channel )
-{
-    if( ( MacCtx.MacState & LORAMAC_TX_RUNNING ) == LORAMAC_TX_RUNNING )
-    {
-        return LORAMAC_STATUS_BUSY;
-    }
-
-    if( channel->GroupID >= LORAMAC_MAX_MC_CTX )
-    {
-        return LORAMAC_STATUS_MC_GROUP_UNDEFINED;
-    }
-
-    MacCtx.NvmCtx->MulticastChannelList[channel->GroupID].ChannelParams = *channel;
-
-    if( channel->IsRemotelySetup == true )
-    {
-        const KeyIdentifier_t mcKeys[LORAMAC_MAX_MC_CTX] = { MC_KEY_0, MC_KEY_1, MC_KEY_2, MC_KEY_3 };
-        if( LoRaMacCryptoSetKey( mcKeys[channel->GroupID], channel->McKeys.McKeyE ) != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return LORAMAC_STATUS_CRYPTO_ERROR;
-        }
-
-        if( LoRaMacCryptoDeriveMcSessionKeyPair( channel->GroupID, channel->Address ) != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return LORAMAC_STATUS_CRYPTO_ERROR;
-        }
-    }
-    else
-    {
-        const KeyIdentifier_t mcAppSKeys[LORAMAC_MAX_MC_CTX] = { MC_APP_S_KEY_0, MC_APP_S_KEY_1, MC_APP_S_KEY_2, MC_APP_S_KEY_3 };
-        const KeyIdentifier_t mcNwkSKeys[LORAMAC_MAX_MC_CTX] = { MC_NWK_S_KEY_0, MC_NWK_S_KEY_1, MC_NWK_S_KEY_2, MC_NWK_S_KEY_3 };
-        if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( mcAppSKeys[channel->GroupID], channel->McKeys.McAppSKey ) )
-        {
-            return LORAMAC_STATUS_CRYPTO_ERROR;
-        }
-        if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( mcNwkSKeys[channel->GroupID], channel->McKeys.McNwkSKey ) )
-        {
-            return LORAMAC_STATUS_CRYPTO_ERROR;
-        }
-    }
-
-    if( channel->Class == CLASS_B )
-    {
-        // Calculate class b parameters
-        LoRaMacClassBSetMulticastPeriodicity( &MacCtx.NvmCtx->MulticastChannelList[channel->GroupID] );
-    }
-
-    // Reset multicast channel downlink counter to initial value.
-    *MacCtx.NvmCtx->MulticastChannelList[channel->GroupID].DownLinkCounter = FCNT_DOWN_INITAL_VALUE;
-
-    EventMacNvmCtxChanged( );
-    EventRegionNvmCtxChanged( );
-    return LORAMAC_STATUS_OK;
-}
-
-LoRaMacStatus_t LoRaMacMcChannelDelete( AddressIdentifier_t groupID )
-{
-    if( ( MacCtx.MacState & LORAMAC_TX_RUNNING ) == LORAMAC_TX_RUNNING )
-    {
-        return LORAMAC_STATUS_BUSY;
-    }
-
-    if( ( groupID >= LORAMAC_MAX_MC_CTX ) || 
-        ( MacCtx.NvmCtx->MulticastChannelList[groupID].ChannelParams.IsEnabled == false ) )
-    {
-        return LORAMAC_STATUS_MC_GROUP_UNDEFINED;
-    }
-
-    McChannelParams_t channel;
-
-    // Set all channel fields with 0
-    memset1( ( uint8_t* )&channel, 0, sizeof( McChannelParams_t ) );
-
-    MacCtx.NvmCtx->MulticastChannelList[groupID].ChannelParams = channel;
-
-    EventMacNvmCtxChanged( );
-    EventRegionNvmCtxChanged( );
-    return LORAMAC_STATUS_OK;
-}
-
-uint8_t LoRaMacMcChannelGetGroupId( uint32_t mcAddress )
-{
-    for( uint8_t i = 0; i < LORAMAC_MAX_MC_CTX; i++ )
-    {
-        if( mcAddress == MacCtx.NvmCtx->MulticastChannelList[i].ChannelParams.Address )
-        {
-            return i;
-        }
-    }
-    return 0xFF;
-}
-
-LoRaMacStatus_t LoRaMacMcChannelSetupRxParams( AddressIdentifier_t groupID, McRxParams_t *rxParams, uint8_t *status )
-{
-   *status = 0x1C + ( groupID & 0x03 );
-
-    if( ( MacCtx.MacState & LORAMAC_TX_RUNNING ) == LORAMAC_TX_RUNNING )
-    {
-        return LORAMAC_STATUS_BUSY;
-    }
-
-    DeviceClass_t devClass = MacCtx.NvmCtx->MulticastChannelList[groupID].ChannelParams.Class;
-    if( ( devClass == CLASS_A ) || ( devClass > CLASS_C ) )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-
-    if( ( groupID >= LORAMAC_MAX_MC_CTX ) || 
-        ( MacCtx.NvmCtx->MulticastChannelList[groupID].ChannelParams.IsEnabled == false ) )
-    {
-        return LORAMAC_STATUS_MC_GROUP_UNDEFINED;
-    }
-    *status &= 0x0F; // groupID OK
-
-    VerifyParams_t verify;
-    // Check datarate
-    if( devClass == CLASS_B )
-    {
-        verify.DatarateParams.Datarate = rxParams->ClassB.Datarate;
-    }
-    else
-    {
-        verify.DatarateParams.Datarate = rxParams->ClassC.Datarate;
-    }
-    verify.DatarateParams.DownlinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
-
-    if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_RX_DR ) == true )
-    {
-        *status &= 0xFB; // datarate OK
-    }
-
-    // Check frequency
-    if( devClass == CLASS_B )
-    {
-        verify.Frequency = rxParams->ClassB.Frequency;
-    }
-    else
-    {
-        verify.Frequency = rxParams->ClassC.Frequency;
-    }
-    if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_FREQUENCY ) == true )
-    {
-        *status &= 0xF7; // frequency OK
-    }
-
-    if( *status == ( groupID & 0x03 ) )
-    {
-        // Apply parameters
-        MacCtx.NvmCtx->MulticastChannelList[groupID].ChannelParams.RxParams = *rxParams;
-    }
-
-    EventMacNvmCtxChanged( );
-    EventRegionNvmCtxChanged( );
-    return LORAMAC_STATUS_OK;
-}
-
-LoRaMacStatus_t LoRaMacMlmeRequest( MlmeReq_t* mlmeRequest )
-{
-    LoRaMacStatus_t status = LORAMAC_STATUS_SERVICE_UNKNOWN;
-    MlmeConfirmQueue_t queueElement;
-    uint8_t macCmdPayload[2] = { 0x00, 0x00 };
-
-    if( mlmeRequest == NULL )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-    if( LoRaMacIsBusy( ) == true )
-    {
-        return LORAMAC_STATUS_BUSY;
-    }
-    if( LoRaMacConfirmQueueIsFull( ) == true )
-    {
-        return LORAMAC_STATUS_BUSY;
-    }
-
-    if( LoRaMacConfirmQueueGetCnt( ) == 0 )
-    {
-        memset1( ( uint8_t* ) &MacCtx.MlmeConfirm, 0, sizeof( MacCtx.MlmeConfirm ) );
-    }
-    MacCtx.MlmeConfirm.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
-
-    MacCtx.MacFlags.Bits.MlmeReq = 1;
-    queueElement.Request = mlmeRequest->Type;
-    queueElement.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
-    queueElement.RestrictCommonReadyToHandle = false;
-
-    switch( mlmeRequest->Type )
-    {
-        case MLME_JOIN:
-        {
-            if( ( MacCtx.MacState & LORAMAC_TX_DELAYED ) == LORAMAC_TX_DELAYED )
-            {
-                return LORAMAC_STATUS_BUSY;
-            }
-
-            ResetMacParameters( );
-
-            MacCtx.NvmCtx->MacParams.ChannelsDatarate = RegionAlternateDr( MacCtx.NvmCtx->Region, mlmeRequest->Req.Join.Datarate, ALTERNATE_DR );
-
-            queueElement.Status = LORAMAC_EVENT_INFO_STATUS_JOIN_FAIL;
-
-            status = SendReJoinReq( JOIN_REQ );
-
-            if( status != LORAMAC_STATUS_OK )
-            {
-                // Revert back the previous datarate ( mainly used for US915 like regions )
-                MacCtx.NvmCtx->MacParams.ChannelsDatarate = RegionAlternateDr( MacCtx.NvmCtx->Region, mlmeRequest->Req.Join.Datarate, ALTERNATE_DR_RESTORE );
-            }
-            break;
-        }
-        case MLME_LINK_CHECK:
-        {
-            // LoRaMac will send this command piggy-pack
-            status = LORAMAC_STATUS_OK;
-            if( LoRaMacCommandsAddCmd( MOTE_MAC_LINK_CHECK_REQ, macCmdPayload, 0 ) != LORAMAC_COMMANDS_SUCCESS )
-            {
-                status = LORAMAC_STATUS_MAC_COMMAD_ERROR;
-            }
-            break;
-        }
-        case MLME_TXCW:
-        {
-            status = SetTxContinuousWave( mlmeRequest->Req.TxCw.Timeout );
-            break;
-        }
-        case MLME_TXCW_1:
-        {
-
-            status = SetTxContinuousWave1( mlmeRequest->Req.TxCw.Timeout, mlmeRequest->Req.TxCw.Frequency, mlmeRequest->Req.TxCw.Power );
-            break;
-        }
-        case MLME_DEVICE_TIME:
-        {
-            // LoRaMac will send this command piggy-pack
-            status = LORAMAC_STATUS_OK;
-            if( LoRaMacCommandsAddCmd( MOTE_MAC_DEVICE_TIME_REQ, macCmdPayload, 0 ) != LORAMAC_COMMANDS_SUCCESS )
-            {
-                status = LORAMAC_STATUS_MAC_COMMAD_ERROR;
-            }
-            break;
-        }
-        case MLME_PING_SLOT_INFO:
-        {
-            if( MacCtx.NvmCtx->DeviceClass == CLASS_A )
-            {
-                uint8_t value = mlmeRequest->Req.PingSlotInfo.PingSlot.Value;
-
-                // LoRaMac will send this command piggy-pack
-                LoRaMacClassBSetPingSlotInfo( mlmeRequest->Req.PingSlotInfo.PingSlot.Fields.Periodicity );
-                macCmdPayload[0] = value;
-                status = LORAMAC_STATUS_OK;
-                if( LoRaMacCommandsAddCmd( MOTE_MAC_PING_SLOT_INFO_REQ, macCmdPayload, 1 ) != LORAMAC_COMMANDS_SUCCESS )
-                {
-                    status = LORAMAC_STATUS_MAC_COMMAD_ERROR;
-                }
-            }
-            break;
-        }
-        case MLME_BEACON_TIMING:
-        {
-            // LoRaMac will send this command piggy-pack
-            status = LORAMAC_STATUS_OK;
-            if( LoRaMacCommandsAddCmd( MOTE_MAC_BEACON_TIMING_REQ, macCmdPayload, 0 ) != LORAMAC_COMMANDS_SUCCESS )
-            {
-                status = LORAMAC_STATUS_MAC_COMMAD_ERROR;
-            }
-            break;
-        }
-        case MLME_BEACON_ACQUISITION:
-        {
-            // Apply the request
-            queueElement.RestrictCommonReadyToHandle = true;
-
-            if( LoRaMacClassBIsAcquisitionInProgress( ) == false )
-            {
-                // Start class B algorithm
-                LoRaMacClassBSetBeaconState( BEACON_STATE_ACQUISITION );
-                LoRaMacClassBBeaconTimerEvent( NULL );
-
-                status = LORAMAC_STATUS_OK;
-            }
-            else
-            {
-                status = LORAMAC_STATUS_BUSY;
-            }
-            break;
-        }
-        default:
-            break;
-    }
-
-    if( status != LORAMAC_STATUS_OK )
-    {
-        if( LoRaMacConfirmQueueGetCnt( ) == 0 )
-        {
-            MacCtx.NodeAckRequested = false;
-            MacCtx.MacFlags.Bits.MlmeReq = 0;
-        }
-    }
-    else
-    {
-        LoRaMacConfirmQueueAdd( &queueElement );
-        EventMacNvmCtxChanged( );
-    }
-    return status;
-}
-
-LoRaMacStatus_t LoRaMacMcpsRequest( McpsReq_t* mcpsRequest )
-{
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-    LoRaMacStatus_t status = LORAMAC_STATUS_SERVICE_UNKNOWN;
-    LoRaMacHeader_t macHdr;
-    VerifyParams_t verify;
-    uint8_t fPort = 0;
-    void* fBuffer;
-    uint16_t fBufferSize;
-    int8_t datarate = DR_0;
-    bool readyToSend = false;
-
-    if( mcpsRequest == NULL )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-    if( LoRaMacIsBusy( ) == true )
-    {
-        return LORAMAC_STATUS_BUSY;
-    }
-
-    macHdr.Value = 0;
-    memset1( ( uint8_t* ) &MacCtx.McpsConfirm, 0, sizeof( MacCtx.McpsConfirm ) );
-    MacCtx.McpsConfirm.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
-
-    // AckTimeoutRetriesCounter must be reset every time a new request (unconfirmed or confirmed) is performed.
-    MacCtx.AckTimeoutRetriesCounter = 1;
-
-    switch( mcpsRequest->Type )
-    {
-        case MCPS_UNCONFIRMED:
-        {
-            readyToSend = true;
-            MacCtx.AckTimeoutRetries = 1;
-
-            macHdr.Bits.MType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
-            fPort = mcpsRequest->Req.Unconfirmed.fPort;
-            fBuffer = mcpsRequest->Req.Unconfirmed.fBuffer;
-            fBufferSize = mcpsRequest->Req.Unconfirmed.fBufferSize;
-            datarate = mcpsRequest->Req.Unconfirmed.Datarate;
-            break;
-        }
-        case MCPS_CONFIRMED:
-        {
-            readyToSend = true;
-            MacCtx.AckTimeoutRetries = MIN( mcpsRequest->Req.Confirmed.NbTrials, MAX_ACK_RETRIES );
-
-            macHdr.Bits.MType = FRAME_TYPE_DATA_CONFIRMED_UP;
-            fPort = mcpsRequest->Req.Confirmed.fPort;
-            fBuffer = mcpsRequest->Req.Confirmed.fBuffer;
-            fBufferSize = mcpsRequest->Req.Confirmed.fBufferSize;
-            datarate = mcpsRequest->Req.Confirmed.Datarate;
-            break;
-        }
-        case MCPS_PROPRIETARY:
-        {
-            readyToSend = true;
-            MacCtx.AckTimeoutRetries = 1;
-
-            macHdr.Bits.MType = FRAME_TYPE_PROPRIETARY;
-            fBuffer = mcpsRequest->Req.Proprietary.fBuffer;
-            fBufferSize = mcpsRequest->Req.Proprietary.fBufferSize;
-            datarate = mcpsRequest->Req.Proprietary.Datarate;
-            break;
-        }
-        default:
-            break;
-    }
-
-    // Get the minimum possible datarate
-    getPhy.Attribute = PHY_MIN_TX_DR;
-    getPhy.UplinkDwellTime = MacCtx.NvmCtx->MacParams.UplinkDwellTime;
-    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
-    // Apply the minimum possible datarate.
-    // Some regions have limitations for the minimum datarate.
-    datarate = MAX( datarate, ( int8_t )phyParam.Value );
-
-    if( readyToSend == true )
-    {
-        if( MacCtx.NvmCtx->AdrCtrlOn == false )
-        {
-            verify.DatarateParams.Datarate = datarate;
-            verify.DatarateParams.UplinkDwellTime = MacCtx.NvmCtx->MacParams.UplinkDwellTime;
-
-            if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_TX_DR ) == true )
-            {
-                MacCtx.NvmCtx->MacParams.ChannelsDatarate = verify.DatarateParams.Datarate;
-            }
-            else
-            {
-                return LORAMAC_STATUS_PARAMETER_INVALID;
-            }
-        }
-
-        status = Send( &macHdr, fPort, fBuffer, fBufferSize );
-        if( status == LORAMAC_STATUS_OK )
-        {
-            MacCtx.McpsConfirm.McpsRequest = mcpsRequest->Type;
-            MacCtx.MacFlags.Bits.McpsReq = 1;
-        }
-        else
-        {
-            MacCtx.NodeAckRequested = false;
-        }
-    }
-
-    EventMacNvmCtxChanged( );
-    return status;
-}
-
-void LoRaMacTestSetDutyCycleOn( bool enable )
-{
-    VerifyParams_t verify;
-
-    verify.DutyCycle = enable;
-
-    if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_DUTY_CYCLE ) == true )
-    {
-        MacCtx.NvmCtx->DutyCycleOn = enable;
-    }
-}
-
-LoRaMacStatus_t LoRaMacDeInitialization( void )
-{
-    // Check the current state of the LoRaMac
-    if ( LoRaMacStop( ) == LORAMAC_STATUS_OK )
-    {
-        // Stop Timers
-        TimerStop( &MacCtx.TxDelayedTimer );
-        TimerStop( &MacCtx.RxWindowTimer1 );
-        TimerStop( &MacCtx.RxWindowTimer2 );
-        TimerStop( &MacCtx.AckTimeoutTimer );
-
-        // Take care about class B
-        LoRaMacClassBHaltBeaconing( );
-
-        // Reset Mac parameters
-        ResetMacParameters( );
-
-        // Switch off Radio
-        Radio.Sleep( );
-
-        // Return success
-        return LORAMAC_STATUS_OK;
-    }
-    else
-    {
-        return LORAMAC_STATUS_BUSY;
-    }
-}
diff --git a/mac/LoRaMac.h b/mac/LoRaMac.h
deleted file mode 100644
index d258b11..0000000
--- a/mac/LoRaMac.h
+++ /dev/null
@@ -1,2749 +0,0 @@
-/*!
- * \file      LoRaMac.h
- *
- * \brief     LoRa MAC layer implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * \defgroup  LORAMAC LoRa MAC layer implementation
- *            This module specifies the API implementation of the LoRaMAC layer.
- *            This is a placeholder for a detailed description of the LoRaMac
- *            layer and the supported features.
- * \{
- *
- * \example   classA/B-L072Z-LRWAN1/main.c
- *            LoRaWAN class A application example for the B-L072Z-LRWAN1.
- *
- * \example   classB/B-L072Z-LRWAN1/main.c
- *            LoRaWAN class B application example for the B-L072Z-LRWAN1.
- *
- * \example   classC/B-L072Z-LRWAN1/main.c
- *            LoRaWAN class C application example for the B-L072Z-LRWAN1.
- *
- * \example   classA/NAMote72/main.c
- *            LoRaWAN class A application example for the NAMote72.
- *
- * \example   classB/NAMote72/main.c
- *            LoRaWAN class B application example for the NAMote72.
- *
- * \example   classC/NAMote72/main.c
- *            LoRaWAN class C application example for the NAMote72.
- *
- * \example   classA/NucleoL073/main.c
- *            LoRaWAN class A application example for the NucleoL073.
- *
- * \example   classB/NucleoL073/main.c
- *            LoRaWAN class B application example for the NucleoL073.
- *
- * \example   classC/NucleoL073/main.c
- *            LoRaWAN class C application example for the NucleoL073.
- *
- * \example   classA/NucleoL152/main.c
- *            LoRaWAN class A application example for the NucleoL152.
- *
- * \example   classB/NucleoL152/main.c
- *            LoRaWAN class B application example for the NucleoL152.
- *
- * \example   classC/NucleoL152/main.c
- *            LoRaWAN class C application example for the NucleoL152.
- *
- * \example   classA/NucleoL476/main.c
- *            LoRaWAN class A application example for the NucleoL476.
- *
- * \example   classB/NucleoL476/main.c
- *            LoRaWAN class B application example for the NucleoL476.
- *
- * \example   classC/NucleoL476/main.c
- *            LoRaWAN class C application example for the NucleoL476.
- *
- * \example   classA/SAML21/main.c
- *            LoRaWAN class A application example for the SAML21.
- *
- * \example   classB/SAML21/main.c
- *            LoRaWAN class B application example for the SAML21.
- *
- * \example   classC/SAML21/main.c
- *            LoRaWAN class C application example for the SAML21.
- *
- * \example   classA/SKiM880B/main.c
- *            LoRaWAN class A application example for the SKiM880B.
- *
- * \example   classB/SKiM880B/main.c
- *            LoRaWAN class B application example for the SKiM880B.
- *
- * \example   classC/SKiM880B/main.c
- *            LoRaWAN class C application example for the SKiM880B.
- *
- * \example   classA/SKiM881AXL/main.c
- *            LoRaWAN class A application example for the SKiM881AXL.
- *
- * \example   classB/SKiM881AXL/main.c
- *            LoRaWAN class B application example for the SKiM881AXL.
- *
- * \example   classC/SKiM881AXL/main.c
- *            LoRaWAN class C application example for the SKiM881AXL.
- *
- * \example   classA/SKiM980A/main.c
- *            LoRaWAN class A application example for the SKiM980A.
- *
- * \example   classB/SKiM980A/main.c
- *            LoRaWAN class B application example for the SKiM980A.
- *
- * \example   classC/SKiM980A/main.c
- *            LoRaWAN class C application example for the SKiM980A.
- *
- */
-#ifndef __LORAMAC_H__
-#define __LORAMAC_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-#include <stdbool.h>
-#include "utilities.h"
-#include "timer.h"
-#include "systime.h"
-#include "radio.h"
-#include "LoRaMacTypes.h"
-
-/*!
- * Maximum number of times the MAC layer tries to get an acknowledge.
- */
-#define MAX_ACK_RETRIES                             8
-
-/*!
- * Frame direction definition for up-link communications
- */
-#define UP_LINK                                     0
-
-/*!
- * Frame direction definition for down-link communications
- */
-#define DOWN_LINK                                   1
-
-/*!
- * Sets the length of the LoRaMAC footer field.
- * Mainly indicates the MIC field length
- */
-#define LORAMAC_MFR_LEN                             4
-
-/*!
- * LoRaMac MLME-Confirm queue length
- */
-#define LORA_MAC_MLME_CONFIRM_QUEUE_LEN             5
-
-/*!
- * FRMPayload overhead to be used when setting the Radio.SetMaxPayloadLength
- * in RxWindowSetup function.
- * Maximum PHYPayload = MaxPayloadOfDatarate + LORA_MAC_FRMPAYLOAD_OVERHEAD
- */
-#define LORA_MAC_FRMPAYLOAD_OVERHEAD                13 // MHDR(1) + FHDR(7) + Port(1) + MIC(4)
-
-/*!
- * Maximum number of multicast context
- */
-#define   LORAMAC_MAX_MC_CTX       4
-
-/*!
- * Start value for multicast keys enumeration
- */
-#define LORAMAC_CRYPTO_MULTICAST_KEYS   127
-
-/*!
- * End-Device activation type
- */
-typedef enum eActivationType
-{
-    /*!
-     * None
-     */
-    ACTIVATION_TYPE_NONE = 0,
-    /*!
-     * Activation By Personalization (ACTIVATION_TYPE_ABP)
-     */
-    ACTIVATION_TYPE_ABP = 1,
-    /*!
-     * Over-The-Air Activation (ACTIVATION_TYPE_OTAA)
-     */
-    ACTIVATION_TYPE_OTAA = 2,
-}ActivationType_t;
-
-/*!
- * LoRaMAC channels parameters definition
- */
-typedef union uDrRange
-{
-    /*!
-     * Byte-access to the bits
-     */
-    int8_t Value;
-    /*!
-     * Structure to store the minimum and the maximum datarate
-     */
-    struct sFields
-    {
-        /*!
-         * Minimum data rate
-         *
-         * LoRaWAN Regional Parameters V1.0.2rB
-         *
-         * The allowed ranges are region specific. Please refer to \ref DR_0 to \ref DR_15 for details.
-         */
-        int8_t Min : 4;
-        /*!
-         * Maximum data rate
-         *
-         * LoRaWAN Regional Parameters V1.0.2rB
-         *
-         * The allowed ranges are region specific. Please refer to \ref DR_0 to \ref DR_15 for details.
-         */
-        int8_t Max : 4;
-    }Fields;
-}DrRange_t;
-
-/*!
- * LoRaMAC channel definition
- */
-typedef struct sChannelParams
-{
-    /*!
-     * Frequency in Hz
-     */
-    uint32_t Frequency;
-    /*!
-     * Alternative frequency for RX window 1
-     */
-    uint32_t Rx1Frequency;
-    /*!
-     * Data rate definition
-     */
-    DrRange_t DrRange;
-    /*!
-     * Band index
-     */
-    uint8_t Band;
-}ChannelParams_t;
-
-/*!
- * LoRaMAC receive window channel parameters
- */
-typedef struct sRxChannelParams
-{
-    /*!
-     * Frequency in Hz
-     */
-    uint32_t Frequency;
-    /*!
-     * Data rate
-     *
-     * LoRaWAN Regional Parameters V1.0.2rB
-     *
-     * The allowed ranges are region specific. Please refer to \ref DR_0 to \ref DR_15 for details.
-     */
-    uint8_t  Datarate;
-}RxChannelParams_t;
-
-/*!
- * LoRaMAC receive window enumeration
- */
-typedef enum eLoRaMacRxSlot
-{
-    /*!
-     * LoRaMAC receive window 1
-     */
-    RX_SLOT_WIN_1,
-    /*!
-     * LoRaMAC receive window 2
-     */
-    RX_SLOT_WIN_2,
-    /*!
-     * LoRaMAC receive window 2 for class c - continuous listening
-     */
-    RX_SLOT_WIN_CLASS_C,
-    /*!
-     * LoRaMAC class c multicast downlink
-     */
-    RX_SLOT_WIN_CLASS_C_MULTICAST,
-    /*!
-     * LoRaMAC class b ping slot window
-     */
-    RX_SLOT_WIN_CLASS_B_PING_SLOT,
-    /*!
-     * LoRaMAC class b multicast slot window
-     */
-    RX_SLOT_WIN_CLASS_B_MULTICAST_SLOT,
-    /*!
-     * LoRaMAC no active receive window
-     */
-    RX_SLOT_NONE,
-}LoRaMacRxSlot_t;
-
-/*!
- * LoRaMAC structure to hold internal context pointers and its lengths
- */
-typedef struct sLoRaMacCtxs
-{
-    /*!
-     * \brief   Pointer to Mac context
-     */
-    void* MacNvmCtx;
-    /*!
-     * \brief   Size of Mac context
-     */
-    size_t MacNvmCtxSize;
-    /*!
-     * \brief   Pointer to region context
-     */
-    void* RegionNvmCtx;
-    /*!
-     * \brief   Size of region context
-     */
-    size_t RegionNvmCtxSize;
-    /*!
-     * \brief   Pointer to crypto module context
-     */
-    void* CryptoNvmCtx;
-    /*!
-     * \brief   Size of crypto module context
-     */
-    size_t CryptoNvmCtxSize;
-    /*!
-     * \brief   Pointer to secure element driver context
-     */
-    void* SecureElementNvmCtx;
-    /*!
-     * \brief   Size of secure element driver context
-     */
-    size_t SecureElementNvmCtxSize;
-    /*!
-     * \brief   Pointer to MAC commands module context
-     */
-    void* CommandsNvmCtx;
-    /*!
-     * \brief   Size of MAC commands module context
-     */
-    size_t CommandsNvmCtxSize;
-    /*!
-     * \brief   Pointer to Class B module context
-     */
-    void* ClassBNvmCtx;
-    /*!
-     * \brief   Size of MAC Class B module context
-     */
-    size_t ClassBNvmCtxSize;
-    /*!
-     * \brief   Pointer to MLME Confirm queue module context
-     */
-    void* ConfirmQueueNvmCtx;
-    /*!
-     * \brief   Size of MLME Confirm queue module context
-     */
-    size_t ConfirmQueueNvmCtxSize;
-}LoRaMacCtxs_t;
-
-/*!
- * Global MAC layer parameters
- */
-typedef struct sLoRaMacParams
-{
-    /*!
-     * Channels TX power
-     */
-    int8_t ChannelsTxPower;
-    /*!
-     * Channels data rate
-     */
-    int8_t ChannelsDatarate;
-    /*!
-     * System overall timing error in milliseconds.
-     * [-SystemMaxRxError : +SystemMaxRxError]
-     * Default: +/-10 ms
-     */
-    uint32_t SystemMaxRxError;
-    /*!
-     * Minimum required number of symbols to detect an Rx frame
-     * Default: 6 symbols
-     */
-    uint8_t MinRxSymbols;
-    /*!
-     * LoRaMac maximum time a reception window stays open
-     */
-    uint32_t MaxRxWindow;
-    /*!
-     * Receive delay 1
-     */
-    uint32_t ReceiveDelay1;
-    /*!
-     * Receive delay 2
-     */
-    uint32_t ReceiveDelay2;
-    /*!
-     * Join accept delay 1
-     */
-    uint32_t JoinAcceptDelay1;
-    /*!
-     * Join accept delay 1
-     */
-    uint32_t JoinAcceptDelay2;
-    /*!
-     * Number of uplink messages repetitions [1:15] (unconfirmed messages only)
-     */
-    uint8_t ChannelsNbTrans;
-    /*!
-     * Datarate offset between uplink and downlink on first window
-     */
-    uint8_t Rx1DrOffset;
-    /*!
-     * LoRaMAC 2nd reception window settings
-     */
-    RxChannelParams_t Rx2Channel;
-    /*!
-     * LoRaMAC continuous reception window settings
-     */
-    RxChannelParams_t RxCChannel;
-    /*!
-     * Uplink dwell time configuration. 0: No limit, 1: 400ms
-     */
-    uint8_t UplinkDwellTime;
-    /*!
-     * Downlink dwell time configuration. 0: No limit, 1: 400ms
-     */
-    uint8_t DownlinkDwellTime;
-    /*!
-     * Maximum possible EIRP
-     */
-    float MaxEirp;
-    /*!
-     * Antenna gain of the node
-     */
-    float AntennaGain;
-}LoRaMacParams_t;
-
-/*!
- * LoRaMAC data structure for a PingSlotInfoReq \ref MLME_PING_SLOT_INFO
- *
- * LoRaWAN Specification
- */
-typedef union uPingSlotInfo
-{
-    /*!
-     * Parameter for byte access
-     */
-    uint8_t Value;
-    /*!
-     * Structure containing the parameters for the PingSlotInfoReq
-     */
-    struct sInfoFields
-    {
-        /*!
-         * Periodicity = 0: ping slot every second
-         * Periodicity = 7: ping slot every 128 seconds
-         */
-        uint8_t Periodicity     : 3;
-        /*!
-         * RFU
-         */
-        uint8_t RFU             : 5;
-    }Fields;
-}PingSlotInfo_t;
-
-/*!
- * LoRaMAC data structure for the \ref MLME_BEACON MLME-Indication
- *
- * LoRaWAN Specification
- */
-typedef struct sBeaconInfo
-{
-    /*!
-     * Timestamp in seconds since 00:00:00, Sunday 6th of January 1980
-     * (start of the GPS epoch) modulo 2^32
-     */
-    SysTime_t Time;
-    /*!
-     * Frequency
-     */
-    uint32_t Frequency;
-    /*!
-     * Datarate
-     */
-    uint8_t Datarate;
-    /*!
-     * RSSI
-     */
-    int16_t Rssi;
-    /*!
-     * SNR
-     */
-    int8_t Snr;
-    /*!
-     * Data structure for the gateway specific part. The
-     * content of the values may differ for each gateway
-     */
-    struct sGwSpecific
-    {
-        /*!
-         * Info descriptor - can differ for each gateway
-         */
-        uint8_t InfoDesc;
-        /*!
-         * Info - can differ for each gateway
-         */
-        uint8_t Info[6];
-    }GwSpecific;
-}BeaconInfo_t;
-
-/*!
- * Enumeration containing the status of the operation of a MAC service
- */
-typedef enum eLoRaMacEventInfoStatus
-{
-    /*!
-     * Service performed successfully
-     */
-    LORAMAC_EVENT_INFO_STATUS_OK = 0,
-    /*!
-     * An error occurred during the execution of the service
-     */
-    LORAMAC_EVENT_INFO_STATUS_ERROR,
-    /*!
-     * A Tx timeout occurred
-     */
-    LORAMAC_EVENT_INFO_STATUS_TX_TIMEOUT,
-    /*!
-     * An Rx timeout occurred on receive window 1
-     */
-    LORAMAC_EVENT_INFO_STATUS_RX1_TIMEOUT,
-    /*!
-     * An Rx timeout occurred on receive window 2
-     */
-    LORAMAC_EVENT_INFO_STATUS_RX2_TIMEOUT,
-    /*!
-     * An Rx error occurred on receive window 1
-     */
-    LORAMAC_EVENT_INFO_STATUS_RX1_ERROR,
-    /*!
-     * An Rx error occurred on receive window 2
-     */
-    LORAMAC_EVENT_INFO_STATUS_RX2_ERROR,
-    /*!
-     * An error occurred in the join procedure
-     */
-    LORAMAC_EVENT_INFO_STATUS_JOIN_FAIL,
-    /*!
-     * A frame with an invalid downlink counter was received. The
-     * downlink counter of the frame was equal to the local copy
-     * of the downlink counter of the node.
-     */
-    LORAMAC_EVENT_INFO_STATUS_DOWNLINK_REPEATED,
-    /*!
-     * The MAC could not retransmit a frame since the MAC decreased the datarate. The
-     * payload size is not applicable for the datarate.
-     */
-    LORAMAC_EVENT_INFO_STATUS_TX_DR_PAYLOAD_SIZE_ERROR,
-    /*!
-     * The node has lost MAX_FCNT_GAP or more frames.
-     */
-    LORAMAC_EVENT_INFO_STATUS_DOWNLINK_TOO_MANY_FRAMES_LOSS,
-    /*!
-     * An address error occurred
-     */
-    LORAMAC_EVENT_INFO_STATUS_ADDRESS_FAIL,
-    /*!
-     * Message integrity check failure
-     */
-    LORAMAC_EVENT_INFO_STATUS_MIC_FAIL,
-    /*!
-     * ToDo
-     */
-    LORAMAC_EVENT_INFO_STATUS_MULTICAST_FAIL,
-    /*!
-     * ToDo
-     */
-    LORAMAC_EVENT_INFO_STATUS_BEACON_LOCKED,
-    /*!
-     * ToDo
-     */
-    LORAMAC_EVENT_INFO_STATUS_BEACON_LOST,
-    /*!
-     * ToDo
-     */
-    LORAMAC_EVENT_INFO_STATUS_BEACON_NOT_FOUND,
-}LoRaMacEventInfoStatus_t;
-
-/*!
- * LoRaMac tx/rx operation state
- */
-typedef union eLoRaMacFlags_t
-{
-    /*!
-     * Byte-access to the bits
-     */
-    uint8_t Value;
-    /*!
-     * Structure containing single access to bits
-     */
-    struct sMacFlagBits
-    {
-        /*!
-         * MCPS-Req pending
-         */
-        uint8_t McpsReq                 : 1;
-        /*!
-         * MCPS-Ind pending
-         */
-        uint8_t McpsInd                 : 1;
-        /*!
-         * MLME-Req pending
-         */
-        uint8_t MlmeReq                 : 1;
-        /*!
-         * MLME-Ind pending
-         */
-        uint8_t MlmeInd                 : 1;
-        /*!
-         * MLME-Ind to schedule an uplink pending
-         */
-        uint8_t MlmeSchedUplinkInd      : 1;
-        /*!
-         * MAC cycle done
-         */
-        uint8_t MacDone                 : 1;
-    }Bits;
-}LoRaMacFlags_t;
-
-/*!
- *
- * \brief   LoRaMAC data services
- *
- * \details The following table list the primitives which are supported by the
- *          specific MAC data service:
- *
- * Name                  | Request | Indication | Response | Confirm
- * --------------------- | :-----: | :--------: | :------: | :-----:
- * \ref MCPS_UNCONFIRMED | YES     | YES        | NO       | YES
- * \ref MCPS_CONFIRMED   | YES     | YES        | NO       | YES
- * \ref MCPS_MULTICAST   | NO      | YES        | NO       | NO
- * \ref MCPS_PROPRIETARY | YES     | YES        | NO       | YES
- *
- * The following table provides links to the function implementations of the
- * related MCPS primitives:
- *
- * Primitive        | Function
- * ---------------- | :---------------------:
- * MCPS-Request     | \ref LoRaMacMlmeRequest
- * MCPS-Confirm     | MacMcpsConfirm in \ref LoRaMacPrimitives_t
- * MCPS-Indication  | MacMcpsIndication in \ref LoRaMacPrimitives_t
- */
-typedef enum eMcps
-{
-    /*!
-     * Unconfirmed LoRaMAC frame
-     */
-    MCPS_UNCONFIRMED,
-    /*!
-     * Confirmed LoRaMAC frame
-     */
-    MCPS_CONFIRMED,
-    /*!
-     * Multicast LoRaMAC frame
-     */
-    MCPS_MULTICAST,
-    /*!
-     * Proprietary frame
-     */
-    MCPS_PROPRIETARY,
-}Mcps_t;
-
-/*!
- * LoRaMAC MCPS-Request for an unconfirmed frame
- */
-typedef struct sMcpsReqUnconfirmed
-{
-    /*!
-     * Frame port field. Must be set if the payload is not empty. Use the
-     * application specific frame port values: [1...223]
-     *
-     * LoRaWAN Specification V1.0.2, chapter 4.3.2
-     */
-    uint8_t fPort;
-    /*!
-     * Pointer to the buffer of the frame payload
-     */
-    void* fBuffer;
-    /*!
-     * Size of the frame payload
-     */
-    uint16_t fBufferSize;
-    /*!
-     * Uplink datarate, if ADR is off
-     */
-    int8_t Datarate;
-}McpsReqUnconfirmed_t;
-
-/*!
- * LoRaMAC MCPS-Request for a confirmed frame
- */
-typedef struct sMcpsReqConfirmed
-{
-    /*!
-     * Frame port field. Must be set if the payload is not empty. Use the
-     * application specific frame port values: [1...223]
-     *
-     * LoRaWAN Specification V1.0.2, chapter 4.3.2
-     */
-    uint8_t fPort;
-    /*!
-     * Pointer to the buffer of the frame payload
-     */
-    void* fBuffer;
-    /*!
-     * Size of the frame payload
-     */
-    uint16_t fBufferSize;
-    /*!
-     * Uplink datarate, if ADR is off
-     */
-    int8_t Datarate;
-    /*!
-     * Number of trials to transmit the frame, if the LoRaMAC layer did not
-     * receive an acknowledgment. The MAC performs a datarate adaptation,
-     * according to the LoRaWAN Specification V1.0.2, chapter 18.4, according
-     * to the following table:
-     *
-     * Transmission nb | Data Rate
-     * ----------------|-----------
-     * 1 (first)       | DR
-     * 2               | DR
-     * 3               | max(DR-1,0)
-     * 4               | max(DR-1,0)
-     * 5               | max(DR-2,0)
-     * 6               | max(DR-2,0)
-     * 7               | max(DR-3,0)
-     * 8               | max(DR-3,0)
-     *
-     * Note, that if NbTrials is set to 1 or 2, the MAC will not decrease
-     * the datarate, in case the LoRaMAC layer did not receive an acknowledgment
-     */
-    uint8_t NbTrials;
-}McpsReqConfirmed_t;
-
-/*!
- * LoRaMAC MCPS-Request for a proprietary frame
- */
-typedef struct sMcpsReqProprietary
-{
-    /*!
-     * Pointer to the buffer of the frame payload
-     */
-    void* fBuffer;
-    /*!
-     * Size of the frame payload
-     */
-    uint16_t fBufferSize;
-    /*!
-     * Uplink datarate, if ADR is off
-     */
-    int8_t Datarate;
-}McpsReqProprietary_t;
-
-/*!
- * LoRaMAC MCPS-Request structure
- */
-typedef struct sMcpsReq
-{
-    /*!
-     * MCPS-Request type
-     */
-    Mcps_t Type;
-
-    /*!
-     * MCPS-Request parameters
-     */
-    union uMcpsParam
-    {
-        /*!
-         * MCPS-Request parameters for an unconfirmed frame
-         */
-        McpsReqUnconfirmed_t Unconfirmed;
-        /*!
-         * MCPS-Request parameters for a confirmed frame
-         */
-        McpsReqConfirmed_t Confirmed;
-        /*!
-         * MCPS-Request parameters for a proprietary frame
-         */
-        McpsReqProprietary_t Proprietary;
-    }Req;
-}McpsReq_t;
-
-/*!
- * LoRaMAC MCPS-Confirm
- */
-typedef struct sMcpsConfirm
-{
-    /*!
-     * Holds the previously performed MCPS-Request
-     */
-    Mcps_t McpsRequest;
-    /*!
-     * Status of the operation
-     */
-    LoRaMacEventInfoStatus_t Status;
-    /*!
-     * Uplink datarate
-     */
-    uint8_t Datarate;
-    /*!
-     * Transmission power
-     */
-    int8_t TxPower;
-    /*!
-     * Set if an acknowledgement was received
-     */
-    bool AckReceived;
-    /*!
-     * Provides the number of retransmissions
-     */
-    uint8_t NbRetries;
-    /*!
-     * The transmission time on air of the frame
-     */
-    TimerTime_t TxTimeOnAir;
-    /*!
-     * The uplink counter value related to the frame
-     */
-    uint32_t UpLinkCounter;
-    /*!
-     * The uplink channel related to the frame
-     */
-    uint32_t Channel;
-}McpsConfirm_t;
-
-/*!
- * LoRaMAC MCPS-Indication primitive
- */
-typedef struct sMcpsIndication
-{
-    /*!
-     * MCPS-Indication type
-     */
-    Mcps_t McpsIndication;
-    /*!
-     * Status of the operation
-     */
-    LoRaMacEventInfoStatus_t Status;
-    /*!
-     * Multicast
-     */
-    uint8_t Multicast;
-    /*!
-     * Application port
-     */
-    uint8_t Port;
-    /*!
-     * Downlink datarate
-     */
-    uint8_t RxDatarate;
-    /*!
-     * Frame pending status
-     */
-    uint8_t FramePending;
-    /*!
-     * Pointer to the received data stream
-     */
-    uint8_t* Buffer;
-    /*!
-     * Size of the received data stream
-     */
-    uint8_t BufferSize;
-    /*!
-     * Indicates, if data is available
-     */
-    bool RxData;
-    /*!
-     * Rssi of the received packet
-     */
-    int16_t Rssi;
-    /*!
-     * Snr of the received packet
-     */
-    int8_t Snr;
-    /*!
-     * Receive window
-     */
-    LoRaMacRxSlot_t RxSlot;
-    /*!
-     * Set if an acknowledgement was received
-     */
-    bool AckReceived;
-    /*!
-     * The downlink counter value for the received frame
-     */
-    uint32_t DownLinkCounter;
-    /*!
-     * The device address of the frame
-     */
-    uint32_t DevAddress;
-    /*!
-     * Set if a DeviceTimeAns MAC command was received.
-     */
-    bool DeviceTimeAnsReceived;
-}McpsIndication_t;
-
-/*!
- * \brief LoRaMAC management services
- *
- * \details The following table list the primitives which are supported by the
- *          specific MAC management service:
- *
- * Name                         | Request | Indication | Response | Confirm
- * ---------------------------- | :-----: | :--------: | :------: | :-----:
- * \ref MLME_JOIN               | YES     | NO         | NO       | YES
- * \ref MLME_LINK_CHECK         | YES     | NO         | NO       | YES
- * \ref MLME_TXCW               | YES     | NO         | NO       | YES
- * \ref MLME_SCHEDULE_UPLINK    | NO      | YES        | NO       | NO
- * \ref MLME_DERIVE_MC_KE_KEY   | YES     | NO         | NO       | YES
- * \ref MLME_DERIVE_MC_KEY_PAIR | YES     | NO         | NO       | YES
- *
- * The following table provides links to the function implementations of the
- * related MLME primitives.
- *
- * Primitive        | Function
- * ---------------- | :---------------------:
- * MLME-Request     | \ref LoRaMacMlmeRequest
- * MLME-Confirm     | MacMlmeConfirm in \ref LoRaMacPrimitives_t
- * MLME-Indication  | MacMlmeIndication in \ref LoRaMacPrimitives_t
- */
-typedef enum eMlme
-{
-    /*!
-     * Initiates the Over-the-Air activation
-     *
-     * LoRaWAN Specification V1.0.2, chapter 6.2
-     */
-    MLME_JOIN,
-    /*!
-     * Initiates sending a ReJoin-request type 0
-     *
-     * LoRaWAN Specification V1.1.0, chapter 6.2.4.1
-     */
-    MLME_REJOIN_0,
-    /*!
-     * Initiates sending a ReJoin-request type 1
-     *
-     * LoRaWAN Specification V1.1.0, chapter 6.2.4.2
-     */
-    MLME_REJOIN_1,
-    /*!
-     * LinkCheckReq - Connectivity validation
-     *
-     * LoRaWAN Specification V1.0.2, chapter 5, table 4
-     */
-    MLME_LINK_CHECK,
-    /*!
-     * Sets Tx continuous wave mode
-     *
-     * LoRaWAN end-device certification
-     */
-    MLME_TXCW,
-    /*!
-     * Sets Tx continuous wave mode (new LoRa-Alliance CC definition)
-     *
-     * LoRaWAN end-device certification
-     */
-    MLME_TXCW_1,
-    /*!
-     * Indicates that the application shall perform an uplink as
-     * soon as possible.
-     */
-    MLME_SCHEDULE_UPLINK,
-    /*!
-     * Derives the McKEKey from the AppKey or NwkKey.
-     */
-    MLME_DERIVE_MC_KE_KEY,
-    /*!
-     * Derives a Multicast group key pair ( McAppSKey, McNwkSKey ) from McKey
-     */
-    MLME_DERIVE_MC_KEY_PAIR,
-    /*!
-     * Initiates a DeviceTimeReq
-     *
-     * LoRaWAN end-device certification
-     */
-    MLME_DEVICE_TIME,
-    /*!
-     * The MAC uses this MLME primitive to indicate a beacon reception
-     * status.
-     *
-     * LoRaWAN end-device certification
-     */
-    MLME_BEACON,
-    /*!
-     * Initiate a beacon acquisition. The MAC will search for a beacon.
-     * It will search for XX_BEACON_INTERVAL milliseconds.
-     *
-     * LoRaWAN end-device certification
-     */
-    MLME_BEACON_ACQUISITION,
-    /*!
-     * Initiates a PingSlotInfoReq
-     *
-     * LoRaWAN end-device certification
-     */
-    MLME_PING_SLOT_INFO,
-    /*!
-     * Initiates a BeaconTimingReq
-     *
-     * LoRaWAN end-device certification
-     */
-    MLME_BEACON_TIMING,
-    /*!
-     * Primitive which indicates that the beacon has been lost
-     *
-     * \remark The upper layer is required to switch the device class to ClassA
-     *
-     * LoRaWAN end-device certification
-     */
-    MLME_BEACON_LOST,
-}Mlme_t;
-
-/*!
- * LoRaMAC MLME-Request for the join service
- */
-typedef struct sMlmeReqJoin
-{
-    /*!
-     * Datarate used for join request.
-     */
-    uint8_t Datarate;
-}MlmeReqJoin_t;
-
-/*!
- * LoRaMAC MLME-Request for Tx continuous wave mode
- */
-typedef struct sMlmeReqTxCw
-{
-    /*!
-     * Time in seconds while the radio is kept in continuous wave mode
-     */
-    uint16_t Timeout;
-    /*!
-     * RF frequency to set (Only used with new way)
-     */
-    uint32_t Frequency;
-    /*!
-     * RF output power to set (Only used with new way)
-     */
-    uint8_t Power;
-}MlmeReqTxCw_t;
-
-/*!
- * LoRaMAC MLME-Request for the ping slot info service
- */
-typedef struct sMlmeReqPingSlotInfo
-{
-    PingSlotInfo_t PingSlot;
-}MlmeReqPingSlotInfo_t;
-
-/*!
- * LoRaMAC MLME-Request to derive the McKEKey from the AppKey or NwkKey
- */
-typedef struct sMlmeReqDeriveMcKEKey
-{
-    /*!
-     *  Key identifier of the root key to use to perform the derivation ( NwkKey or AppKey )
-     */
-    KeyIdentifier_t KeyID;
-    /*!
-     * Nonce value ( nonce <= 15)
-     */
-    uint16_t Nonce;
-    /*!
-     * DevEUI Value
-     */
-    uint8_t* DevEUI;
-}MlmeReqDeriveMcKEKey_t;
-
-/*!
- * LoRaMAC MLME-Request to derive a Multicast group key pair ( McAppSKey, McNwkSKey ) from McKey
- */
-typedef struct sMlmeReqDeriveMcSessionKeyPair
-{
-    /*!
-     *  Address identifier to select the multicast group
-     */
-    AddressIdentifier_t GroupID;
-}MlmeReqDeriveMcSessionKeyPair_t;
-
-/*!
- * LoRaMAC MLME-Request structure
- */
-typedef struct sMlmeReq
-{
-    /*!
-     * MLME-Request type
-     */
-    Mlme_t Type;
-
-    /*!
-     * MLME-Request parameters
-     */
-    union uMlmeParam
-    {
-        /*!
-         * MLME-Request parameters for a join request
-         */
-        MlmeReqJoin_t Join;
-        /*!
-         * MLME-Request parameters for Tx continuous mode request
-         */
-        MlmeReqTxCw_t TxCw;
-        /*!
-         * MLME-Request parameters for a ping slot info request
-         */
-        MlmeReqPingSlotInfo_t PingSlotInfo;
-        /*!
-         * MLME-Request to derive the McKEKey from the AppKey or NwkKey
-         */
-        MlmeReqDeriveMcKEKey_t DeriveMcKEKey;
-        /*!
-         * MLME-Request to derive a Multicast group key pair ( McAppSKey, McNwkSKey ) from McKey
-         */
-        MlmeReqDeriveMcSessionKeyPair_t DeriveMcSessionKeyPair;
-    }Req;
-}MlmeReq_t;
-
-/*!
- * LoRaMAC MLME-Confirm primitive
- */
-typedef struct sMlmeConfirm
-{
-    /*!
-     * Holds the previously performed MLME-Request
-     */
-    Mlme_t MlmeRequest;
-    /*!
-     * Status of the operation
-     */
-    LoRaMacEventInfoStatus_t Status;
-    /*!
-     * The transmission time on air of the frame
-     */
-    TimerTime_t TxTimeOnAir;
-    /*!
-     * Demodulation margin. Contains the link margin [dB] of the last
-     * successfully received LinkCheckReq
-     */
-    uint8_t DemodMargin;
-    /*!
-     * Number of gateways which received the last LinkCheckReq
-     */
-    uint8_t NbGateways;
-    /*!
-     * Provides the number of retransmissions
-     */
-    uint8_t NbRetries;
-    /*!
-     * The delay which we have received through the
-     * BeaconTimingAns
-     */
-    TimerTime_t BeaconTimingDelay;
-    /*!
-     * The channel of the next beacon
-     */
-    uint8_t BeaconTimingChannel;
-}MlmeConfirm_t;
-
-/*!
- * LoRaMAC MLME-Indication primitive
- */
-typedef struct sMlmeIndication
-{
-    /*!
-     * MLME-Indication type
-     */
-    Mlme_t MlmeIndication;
-    /*!
-     * Status of the operation
-     */
-    LoRaMacEventInfoStatus_t Status;
-    /*!
-     * Beacon information. Only valid for \ref MLME_BEACON,
-     * status \ref LORAMAC_EVENT_INFO_STATUS_BEACON_LOCKED
-     */
-    BeaconInfo_t BeaconInfo;
-}MlmeIndication_t;
-
-/*!
- * LoRa Mac Information Base (MIB)
- *
- * The following table lists the MIB parameters and the related attributes:
- *
- * Attribute                                     | Get | Set
- * ----------------------------------------------| :-: | :-:
- * \ref MIB_DEVICE_CLASS                         | YES | YES
- * \ref MIB_NETWORK_ACTIVATION                   | YES | YES
- * \ref MIB_DEV_EUI                              | YES | YES
- * \ref MIB_JOIN_EUI                             | YES | YES
- * \ref MIB_ADR                                  | YES | YES
- * \ref MIB_NET_ID                               | YES | YES
- * \ref MIB_DEV_ADDR                             | YES | YES
- * \ref MIB_GEN_APP_KEY                          | NO  | YES
- * \ref MIB_APP_KEY                              | NO  | YES
- * \ref MIB_NWK_KEY                              | NO  | YES
- * \ref MIB_J_S_INT_KEY                          | NO  | YES
- * \ref MIB_J_S_ENC_KEY                          | NO  | YES
- * \ref MIB_F_NWK_S_INT_KEY                      | NO  | YES
- * \ref MIB_S_NWK_S_INT_KEY                      | NO  | YES
- * \ref MIB_NWK_S_ENC_KEY                        | NO  | YES
- * \ref MIB_APP_S_KEY                            | NO  | YES
- * \ref MIB_MC_KE_KEY                            | NO  | YES
- * \ref MIB_MC_KEY_0                             | NO  | YES
- * \ref MIB_MC_APP_S_KEY_0                       | NO  | YES
- * \ref MIB_MC_NWK_S_KEY_0                       | NO  | YES
- * \ref MIB_MC_KEY_1                             | NO  | YES
- * \ref MIB_MC_APP_S_KEY_1                       | NO  | YES
- * \ref MIB_MC_NWK_S_KEY_1                       | NO  | YES
- * \ref MIB_MC_KEY_2                             | NO  | YES
- * \ref MIB_MC_APP_S_KEY_2                       | NO  | YES
- * \ref MIB_MC_NWK_S_KEY_2                       | NO  | YES
- * \ref MIB_MC_KEY_3                             | NO  | YES
- * \ref MIB_MC_APP_S_KEY_3                       | NO  | YES
- * \ref MIB_MC_NWK_S_KEY_3                       | NO  | YES
- * \ref MIB_PUBLIC_NETWORK                       | YES | YES
- * \ref MIB_CHANNELS                             | YES | NO
- * \ref MIB_RX2_CHANNEL                          | YES | YES
- * \ref MIB_RX2_DFAULT_CHANNEL                   | YES | YES
- * \ref MIB_RXC_CHANNEL                          | YES | YES
- * \ref MIB_RXC_DFAULT_CHANNEL                   | YES | YES
- * \ref MIB_CHANNELS_MASK                        | YES | YES
- * \ref MIB_CHANNELS_DEFAULT_MASK                | YES | YES
- * \ref MIB_CHANNELS_NB_TRANS                    | YES | YES
- * \ref MIB_MAX_RX_WINDOW_DURATION               | YES | YES
- * \ref MIB_RECEIVE_DELAY_1                      | YES | YES
- * \ref MIB_RECEIVE_DELAY_2                      | YES | YES
- * \ref MIB_JOIN_ACCEPT_DELAY_1                  | YES | YES
- * \ref MIB_JOIN_ACCEPT_DELAY_2                  | YES | YES
- * \ref MIB_CHANNELS_DATARATE                    | YES | YES
- * \ref MIB_CHANNELS_DEFAULT_DATARATE            | YES | YES
- * \ref MIB_CHANNELS_TX_POWER                    | YES | YES
- * \ref MIB_CHANNELS_DEFAULT_TX_POWER            | YES | YES
- * \ref MIB_SYSTEM_MAX_RX_ERROR                  | YES | YES
- * \ref MIB_MIN_RX_SYMBOLS                       | YES | YES
- * \ref MIB_BEACON_INTERVAL                      | YES | YES
- * \ref MIB_BEACON_RESERVED                      | YES | YES
- * \ref MIB_BEACON_GUARD                         | YES | YES
- * \ref MIB_BEACON_WINDOW                        | YES | YES
- * \ref MIB_BEACON_WINDOW_SLOTS                  | YES | YES
- * \ref MIB_PING_SLOT_WINDOW                     | YES | YES
- * \ref MIB_BEACON_SYMBOL_TO_DEFAULT             | YES | YES
- * \ref MIB_BEACON_SYMBOL_TO_EXPANSION_MAX       | YES | YES
- * \ref MIB_PING_SLOT_SYMBOL_TO_EXPANSION_MAX    | YES | YES
- * \ref MIB_BEACON_SYMBOL_TO_EXPANSION_FACTOR    | YES | YES
- * \ref MIB_PING_SLOT_SYMBOL_TO_EXPANSION_FACTOR | YES | YES
- * \ref MIB_MAX_BEACON_LESS_PERIOD               | YES | YES
- * \ref MIB_ANTENNA_GAIN                         | YES | YES
- * \ref MIB_DEFAULT_ANTENNA_GAIN                 | YES | YES
- * \ref MIB_NVM_CTXS                             | YES | YES
- * \ref MIB_ABP_LORAWAN_VERSION                  | NO  | YES
- * \ref MIB_LORAWAN_VERSION                      | YES | NO
- *
- * The following table provides links to the function implementations of the
- * related MIB primitives:
- *
- * Primitive        | Function
- * ---------------- | :---------------------:
- * MIB-Set          | \ref LoRaMacMibSetRequestConfirm
- * MIB-Get          | \ref LoRaMacMibGetRequestConfirm
- */
-typedef enum eMib
-{
-    /*!
-     * LoRaWAN device class
-     *
-     * LoRaWAN Specification V1.0.2
-     */
-    MIB_DEVICE_CLASS,
-    /*!
-     * LoRaWAN Network End-Device Activation
-     *
-     * LoRaWAN Specification V1.0.2
-     */
-    MIB_NETWORK_ACTIVATION,
-    /*!
-     * LoRaWAN device EUI
-     *
-     * LoRaWAN Specification V1.0.2
-     */
-    MIB_DEV_EUI,
-    /*!
-     * LoRaWAN join EUI
-     *
-     * LoRaWAN Specification V1.0.2
-     */
-    MIB_JOIN_EUI,
-    /*!
-     * Adaptive data rate
-     *
-     * LoRaWAN Specification V1.0.2, chapter 4.3.1.1
-     *
-     * [true: ADR enabled, false: ADR disabled]
-     */
-    MIB_ADR,
-    /*!
-     * Network identifier
-     *
-     * LoRaWAN Specification V1.0.2, chapter 6.1.1
-     */
-    MIB_NET_ID,
-    /*!
-     * End-device address
-     *
-     * LoRaWAN Specification V1.0.2, chapter 6.1.1
-     */
-    MIB_DEV_ADDR,
-    /*!
-     * Application root key - 1.0.x devices only.
-     *
-     * LoRaWAN Remote Multicast Setup v1.0.0 Specification, chapter 4.3
-     */
-    MIB_GEN_APP_KEY,
-    /*!
-     * Application root key
-     *
-     * LoRaWAN Specification V1.1.0, chapter 6.1.1.3
-     */
-    MIB_APP_KEY,
-    /*!
-     * Network root key
-     *
-     * LoRaWAN Specification V1.1.0, chapter 6.1.1.3
-     */
-    MIB_NWK_KEY,
-    /*!
-     * Join session integrity key
-     *
-     * LoRaWAN Specification V1.1.0, chapter 6.1.1.4
-     */
-    MIB_J_S_INT_KEY,
-    /*!
-     * Join session encryption key
-     *
-     * LoRaWAN Specification V1.1.0, chapter 6.1.1.4
-     */
-    MIB_J_S_ENC_KEY,
-    /*!
-     * Forwarding Network session integrity key
-     *
-     * LoRaWAN Specification V1.1.0, chapter 6.1.2.2
-     */
-    MIB_F_NWK_S_INT_KEY,
-    /*!
-     * Serving Network session integrity key
-     *
-     * LoRaWAN Specification V1.1.0, chapter 6.1.2.3
-     */
-    MIB_S_NWK_S_INT_KEY,
-    /*!
-     * Network session encryption key
-     *
-     * LoRaWAN Specification V1.1.0, chapter 6.1.2.4
-     */
-    MIB_NWK_S_ENC_KEY,
-    /*!
-     * Application session key
-     *
-     * LoRaWAN Specification V1.1.0, chapter 6.1.1.3
-     */
-    MIB_APP_S_KEY,
-    /*!
-     * Multicast key encryption key
-     *
-     * LoRaWAN - Secure element specification v1
-     */
-    MIB_MC_KE_KEY,
-    /*!
-     * Multicast root key index 0
-     *
-     * LoRaWAN - Secure element specification v1
-     */
-    MIB_MC_KEY_0,
-    /*!
-     * Multicast Application session key index 0
-     *
-     * LoRaWAN - Secure element specification v1
-     */
-    MIB_MC_APP_S_KEY_0,
-    /*!
-     * Multicast Network session key index 0
-     *
-     * LoRaWAN - Secure element specification v1
-     */
-    MIB_MC_NWK_S_KEY_0,
-    /*!
-     * Multicast root key index 1
-     *
-     * LoRaWAN - Secure element specification v1
-     */
-    MIB_MC_KEY_1,
-    /*!
-     * Multicast Application session key index 1
-     *
-     * LoRaWAN - Secure element specification v1
-     */
-    MIB_MC_APP_S_KEY_1,
-    /*!
-     * Multicast Network session key index 1
-     *
-     * LoRaWAN - Secure element specification v1
-     */
-    MIB_MC_NWK_S_KEY_1,
-    /*!
-     * Multicast root key index 2
-     *
-     * LoRaWAN - Secure element specification v1
-     */
-    MIB_MC_KEY_2,
-    /*!
-     * Multicast Application session key index 2
-     *
-     * LoRaWAN - Secure element specification v1
-     */
-    MIB_MC_APP_S_KEY_2,
-    /*!
-     * Multicast Network session key index 2
-     *
-     * LoRaWAN - Secure element specification v1
-     */
-    MIB_MC_NWK_S_KEY_2,
-    /*!
-     * Multicast root key index 3
-     *
-     * LoRaWAN - Secure element specification v1
-     */
-    MIB_MC_KEY_3,
-    /*!
-     * Multicast Application session key index 3
-     *
-     * LoRaWAN - Secure element specification v1
-     */
-    MIB_MC_APP_S_KEY_3,
-    /*!
-     * Multicast Network session key index 3
-     *
-     * LoRaWAN - Secure element specification v1
-     */
-    MIB_MC_NWK_S_KEY_3,
-    /*!
-     * Set the network type to public or private
-     *
-     * LoRaWAN Regional Parameters V1.0.2rB
-     *
-     * [true: public network, false: private network]
-     */
-    MIB_PUBLIC_NETWORK,
-    /*!
-     * Communication channels. A get request will return a
-     * pointer which references the first entry of the channel list. The
-     * list is of size LORA_MAX_NB_CHANNELS
-     *
-     * LoRaWAN Regional Parameters V1.0.2rB
-     */
-    MIB_CHANNELS,
-    /*!
-     * Set receive window 2 channel
-     *
-     * LoRaWAN Specification V1.0.2, chapter 3.3.1
-     */
-    MIB_RX2_CHANNEL,
-    /*!
-     * Set receive window 2 channel
-     *
-     * LoRaWAN Specification V1.0.2, chapter 3.3.2
-     */
-    MIB_RX2_DEFAULT_CHANNEL,
-    /*!
-     * Set receive window C channel
-     *
-     * LoRaWAN Specification V1.0.2, chapter 3.3.1
-     */
-    MIB_RXC_CHANNEL,
-    /*!
-     * Set receive window C channel
-     *
-     * LoRaWAN Specification V1.0.2, chapter 3.3.2
-     */
-    MIB_RXC_DEFAULT_CHANNEL,
-    /*!
-     * LoRaWAN channels mask
-     *
-     * LoRaWAN Regional Parameters V1.0.2rB
-     */
-    MIB_CHANNELS_MASK,
-    /*!
-     * LoRaWAN default channels mask
-     *
-     * LoRaWAN Regional Parameters V1.0.2rB
-     */
-    MIB_CHANNELS_DEFAULT_MASK,
-    /*!
-     * Set the number of repetitions on a channel
-     *
-     * LoRaWAN Specification V1.0.2, chapter 5.2
-     */
-    MIB_CHANNELS_NB_TRANS,
-    /*!
-     * Maximum receive window duration in [ms]
-     *
-     * LoRaWAN Specification V1.0.2, chapter 3.3.3
-     */
-    MIB_MAX_RX_WINDOW_DURATION,
-    /*!
-     * Receive delay 1 in [ms]
-     *
-     * LoRaWAN Regional Parameters V1.0.2rB
-     */
-    MIB_RECEIVE_DELAY_1,
-    /*!
-     * Receive delay 2 in [ms]
-     *
-     * LoRaWAN Regional Parameters V1.0.2rB
-     */
-    MIB_RECEIVE_DELAY_2,
-    /*!
-     * Join accept delay 1 in [ms]
-     *
-     * LoRaWAN Regional Parameters V1.0.2rB
-     */
-    MIB_JOIN_ACCEPT_DELAY_1,
-    /*!
-     * Join accept delay 2 in [ms]
-     *
-     * LoRaWAN Regional Parameters V1.0.2rB
-     */
-    MIB_JOIN_ACCEPT_DELAY_2,
-    /*!
-     * Default Data rate of a channel
-     *
-     * LoRaWAN Regional Parameters V1.0.2rB
-     *
-     * The allowed ranges are region specific. Please refer to \ref DR_0 to \ref DR_15 for details.
-     */
-    MIB_CHANNELS_DEFAULT_DATARATE,
-    /*!
-     * Data rate of a channel
-     *
-     * LoRaWAN Regional Parameters V1.0.2rB
-     *
-     * The allowed ranges are region specific. Please refer to \ref DR_0 to \ref DR_15 for details.
-     */
-    MIB_CHANNELS_DATARATE,
-    /*!
-     * Transmission power of a channel
-     *
-     * LoRaWAN Regional Parameters V1.0.2rB
-     *
-     * The allowed ranges are region specific. Please refer to \ref TX_POWER_0 to \ref TX_POWER_15 for details.
-     */
-    MIB_CHANNELS_TX_POWER,
-    /*!
-     * Transmission power of a channel
-     *
-     * LoRaWAN Regional Parameters V1.0.2rB
-     *
-     * The allowed ranges are region specific. Please refer to \ref TX_POWER_0 to \ref TX_POWER_15 for details.
-     */
-    MIB_CHANNELS_DEFAULT_TX_POWER,
-    /*!
-     * System overall timing error in milliseconds.
-     * [-SystemMaxRxError : +SystemMaxRxError]
-     * Default: +/-10 ms
-     */
-    MIB_SYSTEM_MAX_RX_ERROR,
-    /*!
-     * Minimum required number of symbols to detect an Rx frame
-     * Default: 6 symbols
-     */
-    MIB_MIN_RX_SYMBOLS,
-    /*!
-     * Antenna gain of the node. Default value is region specific.
-     * The antenna gain is used to calculate the TX power of the node.
-     * The formula is:
-     * radioTxPower = ( int8_t )floor( maxEirp - antennaGain )
-     *
-     * \remark The antenna gain value is referenced to the isotropic antenna.
-     *         The value is in dBi.
-     *         MIB_ANTENNA_GAIN[dBi] = measuredAntennaGain[dBd] + 2.15
-     */
-    MIB_ANTENNA_GAIN,
-    /*!
-     * Default antenna gain of the node. Default value is region specific.
-     * The antenna gain is used to calculate the TX power of the node.
-     * The formula is:
-     * radioTxPower = ( int8_t )floor( maxEirp - antennaGain )
-     *
-     * \remark The antenna gain value is referenced to the isotropic antenna.
-     *         The value is in dBi.
-     *         MIB_DEFAULT_ANTENNA_GAIN[dBi] = measuredAntennaGain[dBd] + 2.15
-     */
-    MIB_DEFAULT_ANTENNA_GAIN,
-    /*!
-     * Structure holding pointers to internal contexts and its size
-     */
-    MIB_NVM_CTXS,
-    /*!
-     * LoRaWAN MAC layer operating version when activated by ABP.
-     */
-    MIB_ABP_LORAWAN_VERSION,
-    /*!
-     * LoRaWAN MAC and regional parameter version.
-     */
-    MIB_LORAWAN_VERSION,
-    /*!
-     * Beacon interval in ms
-     */
-    MIB_BEACON_INTERVAL,
-    /*!
-     * Beacon reserved time in ms
-     */
-    MIB_BEACON_RESERVED,
-    /*!
-     * Beacon guard time in ms
-     */
-    MIB_BEACON_GUARD,
-    /*!
-     * Beacon window time in ms
-     */
-    MIB_BEACON_WINDOW,
-    /*!
-     * Beacon window time in number of slots
-     */
-    MIB_BEACON_WINDOW_SLOTS,
-    /*!
-     * Ping slot length time in ms
-     */
-    MIB_PING_SLOT_WINDOW,
-    /*!
-     * Default symbol timeout for beacons and ping slot windows
-     */
-    MIB_BEACON_SYMBOL_TO_DEFAULT,
-    /*!
-     * Maximum symbol timeout for beacons
-     */
-    MIB_BEACON_SYMBOL_TO_EXPANSION_MAX,
-    /*!
-     * Maximum symbol timeout for ping slots
-     */
-    MIB_PING_SLOT_SYMBOL_TO_EXPANSION_MAX,
-    /*!
-     * Symbol expansion value for beacon windows in case of beacon
-     * loss in symbols
-     */
-    MIB_BEACON_SYMBOL_TO_EXPANSION_FACTOR,
-    /*!
-     * Symbol expansion value for ping slot windows in case of beacon
-     * loss in symbols
-     */
-    MIB_PING_SLOT_SYMBOL_TO_EXPANSION_FACTOR,
-    /*!
-     * Maximum allowed beacon less time in ms
-     */
-    MIB_MAX_BEACON_LESS_PERIOD,
-    /*!
-     * Ping slot data rate
-     *
-     * LoRaWAN Regional Parameters V1.0.2rB
-     *
-     * The allowed ranges are region specific. Please refer to \ref DR_0 to \ref DR_15 for details.
-     */
-     MIB_PING_SLOT_DATARATE,
-}Mib_t;
-
-/*!
- * LoRaMAC MIB parameters
- */
-typedef union uMibParam
-{
-    /*!
-     * LoRaWAN device class
-     *
-     * Related MIB type: \ref MIB_DEVICE_CLASS
-     */
-    DeviceClass_t Class;
-    /*!
-     * LoRaWAN Network End-Device Activation ( ACTIVATION_TYPE_NONE, ACTIVATION_TYPE_ABP or OTTA )
-     *
-     * Related MIB type: \ref MIB_NETWORK_ACTIVATION
-     */
-    ActivationType_t NetworkActivation;
-    /*!
-     * LoRaWAN device class
-     *
-     * Related MIB type: \ref MIB_DEV_EUI
-     */
-    uint8_t* DevEui;
-    /*!
-     * LoRaWAN device class
-     *
-     * Related MIB type: \ref MIB_JOIN_EUI
-     */
-    uint8_t* JoinEui;
-    /*!
-     * Activation state of ADR
-     *
-     * Related MIB type: \ref MIB_ADR
-     */
-    bool AdrEnable;
-    /*!
-     * Network identifier
-     *
-     * Related MIB type: \ref MIB_NET_ID
-     */
-    uint32_t NetID;
-    /*!
-     * End-device address
-     *
-     * Related MIB type: \ref MIB_DEV_ADDR
-     */
-    uint32_t DevAddr;
-    /*!
-     * Application root key - 1.0.x device only
-     *
-     * Related MIB type: \ref MIB_GEN_APP_KEY
-     */
-    uint8_t* GenAppKey;
-    /*!
-     * Application root key
-     *
-     * Related MIB type: \ref MIB_APP_KEY
-     */
-    uint8_t* AppKey;
-    /*!
-     * Network root key
-     *
-     * Related MIB type: \ref MIB_NWK_KEY
-     */
-    uint8_t* NwkKey;
-    /*!
-     * Join session integrity key
-     *
-     * Related MIB type: \ref MIB_J_S_INT_KEY
-     */
-    uint8_t* JSIntKey;
-    /*!
-     * Join session encryption key
-     *
-     * Related MIB type: \ref MIB_J_S_ENC_KEY
-     */
-    uint8_t* JSEncKey;
-    /*!
-     * Forwarding Network session integrity key
-     *
-     * Related MIB type: \ref MIB_F_NWK_S_INT_KEY
-     */
-    uint8_t* FNwkSIntKey;
-    /*!
-     * Serving Network session integrity key
-     *
-     * Related MIB type: \ref MIB_S_NWK_S_INT_KEY
-     */
-    uint8_t* SNwkSIntKey;
-    /*!
-     * Network session encryption key
-     *
-     * Related MIB type: \ref MIB_NWK_S_ENC_KEY
-     */
-    uint8_t* NwkSEncKey;
-    /*!
-     * Application session key
-     *
-     * Related MIB type: \ref MIB_APP_S_KEY
-     */
-    uint8_t* AppSKey;
-    /*!
-     * Multicast key encryption key
-     *
-     * Related MIB type: \ref MIB_MC_KE_KEY
-     */
-    uint8_t* McKEKey;
-    /*!
-     * Multicast root key index 0
-     *
-     * Related MIB type: \ref MIB_MC_KEY_0
-     */
-    uint8_t* McKey0;
-    /*!
-     * Multicast Application session key index 0
-     *
-     * Related MIB type: \ref MIB_MC_APP_S_KEY_0
-     */
-    uint8_t* McAppSKey0;
-    /*!
-     * Multicast Network session key index 0
-     *
-     * Related MIB type: \ref MIB_MC_NWK_S_KEY_0
-     */
-    uint8_t* McNwkSKey0;
-    /*!
-     * Multicast root key index 0
-     *
-     * Related MIB type: \ref MIB_MC_KEY_0
-     */
-    uint8_t* McKey1;
-    /*!
-     * Multicast Application session key index 1
-     *
-     * Related MIB type: \ref MIB_MC_APP_S_KEY_1
-     */
-    uint8_t* McAppSKey1;
-    /*!
-     * Multicast Network session key index 1
-     *
-     * Related MIB type: \ref MIB_MC_NWK_S_KEY_1
-     */
-    uint8_t* McNwkSKey1;
-    /*!
-     * Multicast root key index 2
-     *
-     * Related MIB type: \ref MIB_MC_KEY_2
-     */
-    uint8_t* McKey2;
-    /*!
-     * Multicast Application session key index 2
-     *
-     * Related MIB type: \ref MIB_MC_APP_S_KEY_2
-     */
-    uint8_t* McAppSKey2;
-    /*!
-     * Multicast Network session key index 2
-     *
-     * Related MIB type: \ref MIB_MC_NWK_S_KEY_2
-     */
-    uint8_t* McNwkSKey2;
-    /*!
-     * Multicast root key index 2
-     *
-     * Related MIB type: \ref MIB_MC_KEY_2
-     */
-    uint8_t* McKey3;
-    /*!
-     * Multicast Application session key index 2
-     *
-     * Related MIB type: \ref MIB_MC_APP_S_KEY_2
-     */
-    uint8_t* McAppSKey3;
-    /*!
-     * Multicast Network session key index 2
-     *
-     * Related MIB type: \ref MIB_MC_NWK_S_KEY_2
-     */
-    uint8_t* McNwkSKey3;
-    /*!
-     * Enable or disable a public network
-     *
-     * Related MIB type: \ref MIB_PUBLIC_NETWORK
-     */
-    bool EnablePublicNetwork;
-    /*!
-     * LoRaWAN Channel
-     *
-     * Related MIB type: \ref MIB_CHANNELS
-     */
-    ChannelParams_t* ChannelList;
-    /*!
-     * Channel for the receive window 2
-     *
-     * Related MIB type: \ref MIB_RX2_CHANNEL
-     */
-    RxChannelParams_t Rx2Channel;
-    /*!
-     * Channel for the receive window 2
-     *
-     * Related MIB type: \ref MIB_RX2_DEFAULT_CHANNEL
-     */
-    RxChannelParams_t Rx2DefaultChannel;
-    /*!
-     * Channel for the receive window C
-     *
-     * Related MIB type: \ref MIB_RXC_CHANNEL
-     */
-    RxChannelParams_t RxCChannel;
-    /*!
-     * Channel for the receive window C
-     *
-     * Related MIB type: \ref MIB_RXC_DEFAULT_CHANNEL
-     */
-    RxChannelParams_t RxCDefaultChannel;
-    /*!
-     * Channel mask
-     *
-     * Related MIB type: \ref MIB_CHANNELS_MASK
-     */
-    uint16_t* ChannelsMask;
-    /*!
-     * Default channel mask
-     *
-     * Related MIB type: \ref MIB_CHANNELS_DEFAULT_MASK
-     */
-    uint16_t* ChannelsDefaultMask;
-    /*!
-     * Number of frame repetitions
-     *
-     * Related MIB type: \ref MIB_CHANNELS_NB_TRANS
-     */
-    uint8_t ChannelsNbTrans;
-    /*!
-     * Maximum receive window duration
-     *
-     * Related MIB type: \ref MIB_MAX_RX_WINDOW_DURATION
-     */
-    uint32_t MaxRxWindow;
-    /*!
-     * Receive delay 1
-     *
-     * Related MIB type: \ref MIB_RECEIVE_DELAY_1
-     */
-    uint32_t ReceiveDelay1;
-    /*!
-     * Receive delay 2
-     *
-     * Related MIB type: \ref MIB_RECEIVE_DELAY_2
-     */
-    uint32_t ReceiveDelay2;
-    /*!
-     * Join accept delay 1
-     *
-     * Related MIB type: \ref MIB_JOIN_ACCEPT_DELAY_1
-     */
-    uint32_t JoinAcceptDelay1;
-    /*!
-     * Join accept delay 2
-     *
-     * Related MIB type: \ref MIB_JOIN_ACCEPT_DELAY_2
-     */
-    uint32_t JoinAcceptDelay2;
-    /*!
-     * Channels data rate
-     *
-     * Related MIB type: \ref MIB_CHANNELS_DEFAULT_DATARATE
-     */
-    int8_t ChannelsDefaultDatarate;
-    /*!
-     * Channels data rate
-     *
-     * Related MIB type: \ref MIB_CHANNELS_DATARATE
-     */
-    int8_t ChannelsDatarate;
-    /*!
-     * Channels TX power
-     *
-     * Related MIB type: \ref MIB_CHANNELS_DEFAULT_TX_POWER
-     */
-    int8_t ChannelsDefaultTxPower;
-    /*!
-     * Channels TX power
-     *
-     * Related MIB type: \ref MIB_CHANNELS_TX_POWER
-     */
-    int8_t ChannelsTxPower;
-    /*!
-     * Multicast channels
-     *
-     * Related MIB type: \ref MIB_MULTICAST_CHANNEL
-     */
-    McChannelParams_t MulticastChannel;
-    /*!
-     * System overall timing error in milliseconds.
-     *
-     * Related MIB type: \ref MIB_SYSTEM_MAX_RX_ERROR
-     */
-    uint32_t SystemMaxRxError;
-    /*!
-     * Minimum required number of symbols to detect an Rx frame
-     *
-     * Related MIB type: \ref MIB_MIN_RX_SYMBOLS
-     */
-    uint8_t MinRxSymbols;
-    /*!
-     * Antenna gain
-     *
-     * Related MIB type: \ref MIB_ANTENNA_GAIN
-     */
-    float AntennaGain;
-    /*!
-     * Default antenna gain
-     *
-     * Related MIB type: \ref MIB_DEFAULT_ANTENNA_GAIN
-     */
-    float DefaultAntennaGain;
-    /*!
-     * Structure holding pointers to internal non-volatile contexts and its lengths.
-     *
-     * Related MIB type: \ref MIB_NVM_CTXS
-     */
-    LoRaMacCtxs_t* Contexts;
-    /*
-     * LoRaWAN MAC layer operating version when activated by ABP.
-     *
-     * Related MIB type: \ref MIB_ABP_LORAWAN_VERSION
-     */
-    Version_t AbpLrWanVersion;
-    /*
-     * LoRaWAN MAC regional parameter version.
-     *
-     * Related MIB type: \ref MIB_LORAWAN_VERSION
-     */
-    struct sLrWanVersion
-    {
-        Version_t LoRaWan;
-        Version_t LoRaWanRegion;
-    }LrWanVersion;
-    /*!
-     * Beacon interval in ms
-     *
-     * Related MIB type: \ref MIB_BEACON_INTERVAL
-     */
-    uint32_t BeaconInterval;
-    /*!
-     * Beacon reserved time in ms
-     *
-     * Related MIB type: \ref MIB_BEACON_RESERVED
-     */
-    uint32_t BeaconReserved;
-    /*!
-     * Beacon guard time in ms
-     *
-     * Related MIB type: \ref MIB_BEACON_GUARD
-     */
-    uint32_t BeaconGuard;
-    /*!
-     * Beacon window time in ms
-     *
-     * Related MIB type: \ref MIB_BEACON_WINDOW
-     */
-    uint32_t BeaconWindow;
-    /*!
-     * Beacon window time in number of slots
-     *
-     * Related MIB type: \ref MIB_BEACON_WINDOW_SLOTS
-     */
-    uint32_t BeaconWindowSlots;
-    /*!
-     * Ping slot length time in ms
-     *
-     * Related MIB type: \ref MIB_PING_SLOT_WINDOW
-     */
-    uint32_t PingSlotWindow;
-    /*!
-     * Default symbol timeout for beacons and ping slot windows
-     *
-     * Related MIB type: \ref MIB_BEACON_SYMBOL_TO_DEFAULT
-     */
-    uint32_t BeaconSymbolToDefault;
-    /*!
-     * Maximum symbol timeout for beacons
-     *
-     * Related MIB type: \ref MIB_BEACON_SYMBOL_TO_EXPANSION_MAX
-     */
-    uint32_t BeaconSymbolToExpansionMax;
-    /*!
-     * Maximum symbol timeout for ping slots
-     *
-     * Related MIB type: \ref MIB_PING_SLOT_SYMBOL_TO_EXPANSION_MAX
-     */
-    uint32_t PingSlotSymbolToExpansionMax;
-    /*!
-     * Symbol expansion value for beacon windows in case of beacon
-     * loss in symbols
-     *
-     * Related MIB type: \ref MIB_BEACON_SYMBOL_TO_EXPANSION_FACTOR
-     */
-    uint32_t BeaconSymbolToExpansionFactor;
-    /*!
-     * Symbol expansion value for ping slot windows in case of beacon
-     * loss in symbols
-     *
-     * Related MIB type: \ref MIB_PING_SLOT_SYMBOL_TO_EXPANSION_FACTOR
-     */
-    uint32_t PingSlotSymbolToExpansionFactor;
-    /*!
-     * Maximum allowed beacon less time in ms
-     *
-     * Related MIB type: \ref MIB_MAX_BEACON_LESS_PERIOD
-     */
-    uint32_t MaxBeaconLessPeriod;
-    /*!
-     * Ping slots data rate
-     *
-     * Related MIB type: \ref MIB_PING_SLOT_DATARATE
-     */
-    int8_t PingSlotDatarate;
-}MibParam_t;
-
-/*!
- * LoRaMAC MIB-RequestConfirm structure
- */
-typedef struct eMibRequestConfirm
-{
-    /*!
-     * MIB-Request type
-     */
-    Mib_t Type;
-
-    /*!
-     * MLME-RequestConfirm parameters
-     */
-    MibParam_t Param;
-}MibRequestConfirm_t;
-
-/*!
- * LoRaMAC tx information
- */
-typedef struct sLoRaMacTxInfo
-{
-    /*!
-     * Size of the application data payload which can be transmitted.
-     */
-    uint8_t MaxPossibleApplicationDataSize;
-    /*!
-     * The current maximum possible payload size without MAC commands
-     * which is dependent on the current datarate.
-     */
-    uint8_t CurrentPossiblePayloadSize;
-}LoRaMacTxInfo_t;
-
-/*!
- * LoRaMAC Status
- */
-typedef enum eLoRaMacStatus
-{
-    /*!
-     * Service started successfully
-     */
-    LORAMAC_STATUS_OK,
-    /*!
-     * Service not started - LoRaMAC is busy
-     */
-    LORAMAC_STATUS_BUSY,
-    /*!
-     * Service unknown
-     */
-    LORAMAC_STATUS_SERVICE_UNKNOWN,
-    /*!
-     * Service not started - invalid parameter
-     */
-    LORAMAC_STATUS_PARAMETER_INVALID,
-    /*!
-     * Service not started - invalid frequency
-     */
-    LORAMAC_STATUS_FREQUENCY_INVALID,
-    /*!
-     * Service not started - invalid datarate
-     */
-    LORAMAC_STATUS_DATARATE_INVALID,
-    /*!
-     * Service not started - invalid frequency and datarate
-     */
-    LORAMAC_STATUS_FREQ_AND_DR_INVALID,
-    /*!
-     * Service not started - the device is not in a LoRaWAN
-     */
-    LORAMAC_STATUS_NO_NETWORK_JOINED,
-    /*!
-     * Service not started - payload length error
-     */
-    LORAMAC_STATUS_LENGTH_ERROR,
-    /*!
-     * Service not started - the specified region is not supported
-     * or not activated with preprocessor definitions.
-     */
-    LORAMAC_STATUS_REGION_NOT_SUPPORTED,
-    /*!
-     * The application data was not transmitted
-     * because prioritized pending MAC commands had to be sent.
-     */
-    LORAMAC_STATUS_SKIPPED_APP_DATA,
-    /*!
-     * ToDo
-     */
-    LORAMAC_STATUS_DUTYCYCLE_RESTRICTED,
-    /*!
-     *
-     */
-    LORAMAC_STATUS_NO_CHANNEL_FOUND,
-    /*!
-     *
-     */
-    LORAMAC_STATUS_NO_FREE_CHANNEL_FOUND,
-     /*!
-      * ToDo
-      */
-    LORAMAC_STATUS_BUSY_BEACON_RESERVED_TIME,
-     /*!
-      * ToDo
-      */
-    LORAMAC_STATUS_BUSY_PING_SLOT_WINDOW_TIME,
-     /*!
-      * ToDo
-      */
-    LORAMAC_STATUS_BUSY_UPLINK_COLLISION,
-    /*!
-     * An error in the cryptographic module is occurred
-     */
-    LORAMAC_STATUS_CRYPTO_ERROR,
-    /*!
-     * An error in the frame counter handler module is occurred
-     */
-    LORAMAC_STATUS_FCNT_HANDLER_ERROR,
-    /*!
-     * An error in the MAC command module is occurred
-     */
-    LORAMAC_STATUS_MAC_COMMAD_ERROR,
-    /*!
-     * An error in the Class B module is occurred
-     */
-    LORAMAC_STATUS_CLASS_B_ERROR,
-    /*!
-     * An error in the Confirm Queue module is occurred
-     */
-    LORAMAC_STATUS_CONFIRM_QUEUE_ERROR,
-    /*!
-     * The multicast group doesn't exist
-     */
-    LORAMAC_STATUS_MC_GROUP_UNDEFINED,
-    /*!
-     * Undefined error occurred
-     */
-    LORAMAC_STATUS_ERROR
-}LoRaMacStatus_t;
-
-/*!
- * LoRaMAC region enumeration
- */
-typedef enum eLoRaMacRegion_t
-{
-    /*!
-     * AS band on 923MHz
-     */
-    LORAMAC_REGION_AS923,
-    /*!
-     * Australian band on 915MHz
-     */
-    LORAMAC_REGION_AU915,
-    /*!
-     * Chinese band on 470MHz
-     */
-    LORAMAC_REGION_CN470,
-    /*!
-     * Chinese band on 779MHz
-     */
-    LORAMAC_REGION_CN779,
-    /*!
-     * European band on 433MHz
-     */
-    LORAMAC_REGION_EU433,
-    /*!
-     * European band on 868MHz
-     */
-    LORAMAC_REGION_EU868,
-    /*!
-     * South korean band on 920MHz
-     */
-    LORAMAC_REGION_KR920,
-    /*!
-     * India band on 865MHz
-     */
-    LORAMAC_REGION_IN865,
-    /*!
-     * North american band on 915MHz
-     */
-    LORAMAC_REGION_US915,
-    /*!
-     * Russia band on 864MHz
-     */
-    LORAMAC_REGION_RU864,
-}LoRaMacRegion_t;
-
-/*!
- * Enumeration of modules which have a context
- */
-typedef enum LoRaMacNvmCtxModule_e
-{
-    /*!
-     * Context for the MAC
-     */
-    LORAMAC_NVMCTXMODULE_MAC,
-    /*!
-     * Context for the regions
-     */
-    LORAMAC_NVMCTXMODULE_REGION,
-    /*!
-     * Context for the crypto module
-     */
-    LORAMAC_NVMCTXMODULE_CRYPTO,
-    /*!
-     * Context for the secure element
-     */
-    LORAMAC_NVMCTXMODULE_SECURE_ELEMENT,
-    /*!
-     * Context for the command queue
-     */
-    LORAMAC_NVMCTXMODULE_COMMANDS,
-    /*!
-     * Context for class b
-     */
-    LORAMAC_NVMCTXMODULE_CLASS_B,
-    /*!
-     * Context for the confirm queue
-     */
-    LORAMAC_NVMCTXMODULE_CONFIRM_QUEUE,
-}LoRaMacNvmCtxModule_t;
-
-
-/*!
- * LoRaMAC events structure
- * Used to notify upper layers of MAC events
- */
-typedef struct sLoRaMacPrimitives
-{
-    /*!
-     * \brief   MCPS-Confirm primitive
-     *
-     * \param   [OUT] MCPS-Confirm parameters
-     */
-    void ( *MacMcpsConfirm )( McpsConfirm_t* McpsConfirm );
-    /*!
-     * \brief   MCPS-Indication primitive
-     *
-     * \param   [OUT] MCPS-Indication parameters
-     */
-    void ( *MacMcpsIndication )( McpsIndication_t* McpsIndication );
-    /*!
-     * \brief   MLME-Confirm primitive
-     *
-     * \param   [OUT] MLME-Confirm parameters
-     */
-    void ( *MacMlmeConfirm )( MlmeConfirm_t* MlmeConfirm );
-    /*!
-     * \brief   MLME-Indication primitive
-     *
-     * \param   [OUT] MLME-Indication parameters
-     */
-    void ( *MacMlmeIndication )( MlmeIndication_t* MlmeIndication );
-}LoRaMacPrimitives_t;
-
-/*!
- * LoRaMAC callback structure
- */
-typedef struct sLoRaMacCallback
-{
-    /*!
-     * \brief   Measures the battery level
-     *
-     * \retval  Battery level [0: node is connected to an external
-     *          power source, 1..254: battery level, where 1 is the minimum
-     *          and 254 is the maximum value, 255: the node was not able
-     *          to measure the battery level]
-     */
-    uint8_t ( *GetBatteryLevel )( void );
-    /*!
-     * \brief   Measures the temperature level
-     *
-     * \retval  Temperature level
-     */
-    float ( *GetTemperatureLevel )( void );
-    /*!
-     * \brief   Will be called when an attribute has changed in one of the context.
-     *
-     * \param   Context that changed
-     */
-    void ( *NvmContextChange )( LoRaMacNvmCtxModule_t module );
-    /*!
-     *\brief    Will be called each time a Radio IRQ is handled by the MAC
-     *          layer.
-     * 
-     *\warning  Runs in a IRQ context. Should only change variables state.
-     */
-    void ( *MacProcessNotify )( void );
-}LoRaMacCallback_t;
-
-
-/*!
- * LoRaMAC Max EIRP (dBm) table
- */
-static const uint8_t LoRaMacMaxEirpTable[] = { 8, 10, 12, 13, 14, 16, 18, 20, 21, 24, 26, 27, 29, 30, 33, 36 };
-
-/*!
- * \brief   LoRaMAC layer initialization
- *
- * \details In addition to the initialization of the LoRaMAC layer, this
- *          function initializes the callback primitives of the MCPS and
- *          MLME services. Every data field of \ref LoRaMacPrimitives_t must be
- *          set to a valid callback function.
- *
- * \param   [IN] primitives - Pointer to a structure defining the LoRaMAC
- *                            event functions. Refer to \ref LoRaMacPrimitives_t.
- *
- * \param   [IN] callbacks  - Pointer to a structure defining the LoRaMAC
- *                            callback functions. Refer to \ref LoRaMacCallback_t.
- *
- * \param   [IN] region     - The region to start.
- *
- * \retval  LoRaMacStatus_t Status of the operation. Possible returns are:
- *          returns are:
- *          \ref LORAMAC_STATUS_OK,
- *          \ref LORAMAC_STATUS_PARAMETER_INVALID,
- *          \ref LORAMAC_STATUS_REGION_NOT_SUPPORTED.
- */
-LoRaMacStatus_t LoRaMacInitialization( LoRaMacPrimitives_t* primitives, LoRaMacCallback_t* callbacks, LoRaMacRegion_t region );
-
-/*!
- * \brief   Starts LoRaMAC layer
- *
- * \retval  LoRaMacStatus_t Status of the operation. Possible returns are:
- *          returns are:
- *          \ref LORAMAC_STATUS_OK,
- */
-LoRaMacStatus_t LoRaMacStart( void );
-
-/*!
- * \brief   Stops LoRaMAC layer
- *
- * \retval  LoRaMacStatus_t Status of the operation. Possible returns are:
- *          returns are:
- *          \ref LORAMAC_STATUS_OK,
- */
-LoRaMacStatus_t LoRaMacStop( void );
-
-/*!
- * \brief Returns a value indicating if the MAC layer is busy or not.
- * 
- * \retval isBusy Mac layer is busy.
- */
-bool LoRaMacIsBusy( void );
-
-/*!
- * Processes the LoRaMac events.
- *
- * \remark This function must be called in the main loop.
- */
-void LoRaMacProcess( void );
-
-/*!
- * \brief   Queries the LoRaMAC if it is possible to send the next frame with
- *          a given datarate.
- *
- * \param   [IN] datarate - The datarate which should be used for the next uplink. Please
- *                          note that in case ADR is enabled, the function will utilize
- *                          the datarate defined by ADR and will disregard this input parameter.
- *
- * \param   [OUT] time    - The remaining time for which the next uplink tranmission
- *                          is restricted. Will be 0, if the MAC is able to perform
- *                          a transmission without duty cycle restriction resp. delay.
- *
- * \retval  LoRaMacStatus_t Status of the operation. When the parameters are
- *          not valid, the function returns \ref LORAMAC_STATUS_PARAMETER_INVALID.
- *          In case the MAC is limited due to a duty cycle restriction, the function
- *          returns \ref LORAMAC_STATUS_DUTYCYCLE_RESTRICTED. If the MAC has not found
- *          a valid channel for the given datarate, it returns \ref LORAMAC_STATUS_NO_CHANNEL_FOUND.
- *          In the latter case, this function does not reenable default channels
- *          automatically.
- *          In case there is no delay due to the duty cycle,
- *          the function returns \ref LORAMAC_STATUS_OK.
- */
-LoRaMacStatus_t LoRaMacQueryNextTxDelay( int8_t datarate, TimerTime_t* time );
-
-/*!
- * \brief   Queries the LoRaMAC if it is possible to send the next frame with
- *          a given application data payload size. The LoRaMAC takes scheduled
- *          MAC commands into account and reports, when the frame can be send or not.
- *
- * \param   [IN] size - Size of application data payload to be send next
- *
- * \param   [OUT] txInfo - The structure \ref LoRaMacTxInfo_t contains
- *                         information about the actual maximum payload possible
- *                         ( according to the configured datarate or the next
- *                         datarate according to ADR ), and the maximum frame
- *                         size, taking the scheduled MAC commands into account.
- *
- * \retval  LoRaMacStatus_t Status of the operation. When the parameters are
- *          not valid, the function returns \ref LORAMAC_STATUS_PARAMETER_INVALID.
- *          In case of a length error caused by the application data payload in combination
- *          with the MAC commands, the function returns \ref LORAMAC_STATUS_LENGTH_ERROR.
- *          In this case its recommended to send a frame without application data to flush
- *          the MAC commands. Otherwise the LoRaMAC will prioritize the MAC commands and
- *          if needed it will skip the application data. Please note that if MAC commands do
- *          not fit at all into the payload size on the related datarate, the LoRaMAC will
- *          automatically clip the MAC commands.
- *          In case the query is valid, and the LoRaMAC is able to send the frame,
- *          the function returns \ref LORAMAC_STATUS_OK.
- */
-LoRaMacStatus_t LoRaMacQueryTxPossible( uint8_t size, LoRaMacTxInfo_t* txInfo );
-
-/*!
- * \brief   LoRaMAC channel add service
- *
- * \details Adds a new channel to the channel list and activates the id in
- *          the channel mask. Please note that this functionality is not available
- *          on all regions. Information about allowed ranges are available at the LoRaWAN Regional Parameters V1.0.2rB
- *
- * \param   [IN] id - Id of the channel.
- *
- * \param   [IN] params - Channel parameters to set.
- *
- * \retval  LoRaMacStatus_t Status of the operation. Possible returns are:
- *          \ref LORAMAC_STATUS_OK,
- *          \ref LORAMAC_STATUS_BUSY,
- *          \ref LORAMAC_STATUS_PARAMETER_INVALID.
- */
-LoRaMacStatus_t LoRaMacChannelAdd( uint8_t id, ChannelParams_t params );
-
-/*!
- * \brief   LoRaMAC channel remove service
- *
- * \details Deactivates the id in the channel mask.
- *
- * \param   [IN] id - Id of the channel.
- *
- * \retval  LoRaMacStatus_t Status of the operation. Possible returns are:
- *          \ref LORAMAC_STATUS_OK,
- *          \ref LORAMAC_STATUS_BUSY,
- *          \ref LORAMAC_STATUS_PARAMETER_INVALID.
- */
-LoRaMacStatus_t LoRaMacChannelRemove( uint8_t id );
-
-/*!
- * \brief   LoRaMAC multicast channel setup service
- *
- * \details Sets up a multicast channel.
- *
- * \param   [IN] channel - Multicast channel to set.
- *
- * \retval  LoRaMacStatus_t Status of the operation. Possible returns are:
- *          \ref LORAMAC_STATUS_OK,
- *          \ref LORAMAC_STATUS_BUSY,
- *          \ref LORAMAC_STATUS_PARAMETER_INVALID,
- *          \ref LORAMAC_STATUS_MC_GROUP_UNDEFINED.
- */
-LoRaMacStatus_t LoRaMacMcChannelSetup( McChannelParams_t *channel );
-
-/*!
- * \brief   LoRaMAC multicast channel removal service
- *
- * \details Removes/Disables a multicast channel.
- *
- * \param   [IN] groupID - Multicast channel ID to be removed/disabled
- *
- * \retval  LoRaMacStatus_t Status of the operation. Possible returns are:
- *          \ref LORAMAC_STATUS_OK,
- *          \ref LORAMAC_STATUS_BUSY,
- *          \ref LORAMAC_STATUS_MC_GROUP_UNDEFINED.
- */
-LoRaMacStatus_t LoRaMacMcChannelDelete( AddressIdentifier_t groupID );
-
-/*!
- * \brief   LoRaMAC multicast channel get groupId from MC address.
- *
- * \param   [IN]  mcAddress - Multicast address to be checked
- *
- * \retval  groupID           Multicast channel ID associated to the address.
- *                            Returns 0xFF if the address isn't found.
- */
-uint8_t LoRaMacMcChannelGetGroupId( uint32_t mcAddress );
-
-/*!
- * \brief   LoRaMAC multicast channel Rx parameters setup service
- *
- * \details Sets up a multicast channel reception parameters.
- *
- * \param   [IN]  groupID  - Multicast channel ID
- * \param   [IN]  rxParams - Reception parameters
- * \param   [OUT] status   - Status mask [UNDEF_ID | FREQ_ERR | DR_ERR | GROUP_ID]
- *
- * \retval  LoRaMacStatus_t Status of the operation. Possible returns are:
- *          \ref LORAMAC_STATUS_OK,
- *          \ref LORAMAC_STATUS_BUSY,
- *          \ref LORAMAC_STATUS_PARAMETER_INVALID,
- *          \ref LORAMAC_STATUS_MC_GROUP_UNDEFINED.
- */
-LoRaMacStatus_t LoRaMacMcChannelSetupRxParams( AddressIdentifier_t groupID, McRxParams_t *rxParams, uint8_t *status );
-
-/*!
- * \brief   LoRaMAC MIB-Get
- *
- * \details The mac information base service to get attributes of the LoRaMac
- *          layer.
- *
- *          The following code-snippet shows how to use the API to get the
- *          parameter AdrEnable, defined by the enumeration type
- *          \ref MIB_ADR.
- * \code
- * MibRequestConfirm_t mibReq;
- * mibReq.Type = MIB_ADR;
- *
- * if( LoRaMacMibGetRequestConfirm( &mibReq ) == LORAMAC_STATUS_OK )
- * {
- *   // LoRaMAC updated the parameter mibParam.AdrEnable
- * }
- * \endcode
- *
- * \param   [IN] mibRequest - MIB-GET-Request to perform. Refer to \ref MibRequestConfirm_t.
- *
- * \retval  LoRaMacStatus_t Status of the operation. Possible returns are:
- *          \ref LORAMAC_STATUS_OK,
- *          \ref LORAMAC_STATUS_SERVICE_UNKNOWN,
- *          \ref LORAMAC_STATUS_PARAMETER_INVALID.
- */
-LoRaMacStatus_t LoRaMacMibGetRequestConfirm( MibRequestConfirm_t* mibGet ) __attribute__ ((section(".ramfunc")));
-
-/*!
- * \brief   LoRaMAC MIB-Set
- *
- * \details The mac information base service to set attributes of the LoRaMac
- *          layer.
- *
- *          The following code-snippet shows how to use the API to set the
- *          parameter AdrEnable, defined by the enumeration type
- *          \ref MIB_ADR.
- *
- * \code
- * MibRequestConfirm_t mibReq;
- * mibReq.Type = MIB_ADR;
- * mibReq.Param.AdrEnable = true;
- *
- * if( LoRaMacMibGetRequestConfirm( &mibReq ) == LORAMAC_STATUS_OK )
- * {
- *   // LoRaMAC updated the parameter
- * }
- * \endcode
- *
- * \param   [IN] mibRequest - MIB-SET-Request to perform. Refer to \ref MibRequestConfirm_t.
- *
- * \retval  LoRaMacStatus_t Status of the operation. Possible returns are:
- *          \ref LORAMAC_STATUS_OK,
- *          \ref LORAMAC_STATUS_BUSY,
- *          \ref LORAMAC_STATUS_SERVICE_UNKNOWN,
- *          \ref LORAMAC_STATUS_PARAMETER_INVALID.
- */
-LoRaMacStatus_t LoRaMacMibSetRequestConfirm( MibRequestConfirm_t* mibSet );
-
-/*!
- * \brief   LoRaMAC MLME-Request
- *
- * \details The Mac layer management entity handles management services. The
- *          following code-snippet shows how to use the API to perform a
- *          network join request. Please note that for a join request, the
- *          DevEUI and the JoinEUI must be set previously via the MIB. Please
- *          also refer to the sample implementations.
- *
- * \code
- *
- * MlmeReq_t mlmeReq;
- * mlmeReq.Type = MLME_JOIN;
- * mlmeReq.Req.Join.Datarate = LORAWAN_DEFAULT_DATARATE;
- *
- * if( LoRaMacMlmeRequest( &mlmeReq ) == LORAMAC_STATUS_OK )
- * {
- *   // Service started successfully. Waiting for the Mlme-Confirm event
- * }
- * \endcode
- *
- * \param   [IN] mlmeRequest - MLME-Request to perform. Refer to \ref MlmeReq_t.
- *
- * \retval  LoRaMacStatus_t Status of the operation. Possible returns are:
- *          \ref LORAMAC_STATUS_OK,
- *          \ref LORAMAC_STATUS_BUSY,
- *          \ref LORAMAC_STATUS_SERVICE_UNKNOWN,
- *          \ref LORAMAC_STATUS_PARAMETER_INVALID,
- *          \ref LORAMAC_STATUS_NO_NETWORK_JOINED,
- *          \ref LORAMAC_STATUS_LENGTH_ERROR,
- */
-LoRaMacStatus_t LoRaMacMlmeRequest( MlmeReq_t* mlmeRequest );
-
-/*!
- * \brief   LoRaMAC MCPS-Request
- *
- * \details The Mac Common Part Sublayer handles data services. The following
- *          code-snippet shows how to use the API to send an unconfirmed
- *          LoRaMAC frame.
- *
- * \code
- * uint8_t myBuffer[] = { 1, 2, 3 };
- *
- * McpsReq_t mcpsReq;
- * mcpsReq.Type = MCPS_UNCONFIRMED;
- * mcpsReq.Req.Unconfirmed.fPort = 1;
- * mcpsReq.Req.Unconfirmed.fBuffer = myBuffer;
- * mcpsReq.Req.Unconfirmed.fBufferSize = sizeof( myBuffer );
- *
- * if( LoRaMacMcpsRequest( &mcpsReq ) == LORAMAC_STATUS_OK )
- * {
- *   // Service started successfully. Waiting for the MCPS-Confirm event
- * }
- * \endcode
- *
- * \param   [IN] mcpsRequest - MCPS-Request to perform. Refer to \ref McpsReq_t.
- *
- * \retval  LoRaMacStatus_t Status of the operation. Possible returns are:
- *          \ref LORAMAC_STATUS_OK,
- *          \ref LORAMAC_STATUS_BUSY,
- *          \ref LORAMAC_STATUS_SERVICE_UNKNOWN,
- *          \ref LORAMAC_STATUS_PARAMETER_INVALID,
- *          \ref LORAMAC_STATUS_NO_NETWORK_JOINED,
- *          \ref LORAMAC_STATUS_LENGTH_ERROR,
- */
-LoRaMacStatus_t LoRaMacMcpsRequest( McpsReq_t* mcpsRequest );
-
-/*!
- * \brief   LoRaMAC deinitialization
- *
- * \details This function stops the timers, re-initializes MAC & regional parameters to default
- *          and sets radio into sleep state.
- *
- * \retval  LoRaMacStatus_t Status of the operation. Possible returns are:
- *          \ref LORAMAC_STATUS_OK,
- *          \ref LORAMAC_STATUS_BUSY
- */
-LoRaMacStatus_t LoRaMacDeInitialization( void );
-
-/*!
- * Automatically add the Region.h file at the end of LoRaMac.h file.
- * This is required because Region.h uses definitions from LoRaMac.h
- */
-#include "region/Region.h"
-
-/*! \} defgroup LORAMAC */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __LORAMAC_H__
diff --git a/mac/LoRaMacAdr.c b/mac/LoRaMacAdr.c
deleted file mode 100644
index 732bc8e..0000000
--- a/mac/LoRaMacAdr.c
+++ /dev/null
@@ -1,130 +0,0 @@
-/*!
- * \file      LoRaMacAdr.c
- *
- * \brief     LoRa MAC ADR implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- */
-
-#include "region/Region.h"
-#include "LoRaMacAdr.h"
-
-static bool CalcNextV10X( CalcNextAdrParams_t* adrNext, int8_t* drOut, int8_t* txPowOut, uint32_t* adrAckCounter )
-{
-    bool adrAckReq = false;
-    int8_t datarate = adrNext->Datarate;
-    int8_t txPower = adrNext->TxPower;
-    int8_t minTxDatarate;
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-
-    // Report back the adr ack counter
-    *adrAckCounter = adrNext->AdrAckCounter;
-
-    if( adrNext->AdrEnabled == true )
-    {
-        // Query minimum TX Datarate
-        getPhy.Attribute = PHY_MIN_TX_DR;
-        getPhy.UplinkDwellTime = adrNext->UplinkDwellTime;
-        phyParam = RegionGetPhyParam( adrNext->Region, &getPhy );
-        minTxDatarate = phyParam.Value;
-        datarate = MAX( datarate, minTxDatarate );
-
-        if( datarate == minTxDatarate )
-        {
-            *adrAckCounter = 0;
-            adrAckReq = false;
-        }
-        else
-        {
-            if( adrNext->AdrAckCounter >=  adrNext->AdrAckLimit )
-            {
-                adrAckReq = true;
-            }
-            else
-            {
-                adrAckReq = false;
-            }
-            if( adrNext->AdrAckCounter >= ( adrNext->AdrAckLimit + adrNext->AdrAckDelay ) )
-            {
-                // Set TX Power to maximum
-                getPhy.Attribute = PHY_MAX_TX_POWER;
-                phyParam = RegionGetPhyParam( adrNext->Region, &getPhy );
-                txPower = phyParam.Value;
-
-                if( ( adrNext->AdrAckCounter % adrNext->AdrAckDelay ) == 1 )
-                {
-                    // Decrease the datarate
-                    getPhy.Attribute = PHY_NEXT_LOWER_TX_DR;
-                    getPhy.Datarate = datarate;
-                    getPhy.UplinkDwellTime = adrNext->UplinkDwellTime;
-                    phyParam = RegionGetPhyParam( adrNext->Region, &getPhy );
-                    datarate = phyParam.Value;
-
-                    if( datarate == minTxDatarate )
-                    {
-                        // We must set adrAckReq to false as soon as we reach the lowest datarate
-                        adrAckReq = false;
-                        if( adrNext->UpdateChanMask == true )
-                        {
-                            InitDefaultsParams_t params;
-                            params.Type = INIT_TYPE_RESTORE_DEFAULT_CHANNELS;
-                            RegionInitDefaults( adrNext->Region, &params );
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    *drOut = datarate;
-    *txPowOut = txPower;
-    return adrAckReq;
-}
-
-/*!
- * \brief Calculates the next datarate to set, when ADR is on or off.
- *
- * \param [IN] adrNext Pointer to the function parameters.
- *
- * \param [OUT] drOut The calculated datarate for the next TX.
- *
- * \param [OUT] txPowOut The TX power for the next TX.
- *
- * \param [OUT] adrAckCounter The calculated ADR acknowledgement counter.
- *
- * \retval Returns true, if an ADR request should be performed.
- */
-bool LoRaMacAdrCalcNext( CalcNextAdrParams_t* adrNext, int8_t* drOut, int8_t* txPowOut, uint32_t* adrAckCounter )
-{
-    if( adrNext->Version.Fields.Minor == 0 )
-    {
-        return CalcNextV10X( adrNext, drOut, txPowOut, adrAckCounter );
-    }
-    return false;
-}
diff --git a/mac/LoRaMacAdr.h b/mac/LoRaMacAdr.h
deleted file mode 100644
index b19a43b..0000000
--- a/mac/LoRaMacAdr.h
+++ /dev/null
@@ -1,113 +0,0 @@
-/*!
- * \file      LoRaMacAdr.h
- *
- * \brief     LoRa MAC ADR implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * \defgroup  LORAMACADR LoRa MAC ADR implementation
- *            Implementation of the ADR algorithm for LoRa.
- * \{
- */
-#ifndef __LORAMACADR_H__
-#define __LORAMACADR_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-/*! \} defgroup LORAMACADR */
-
-/*
- * Parameter structure for the function CalcNextAdr.
- */
-typedef struct sCalcNextAdrParams
-{
-    /*!
-     * LoRaWAN Minor Version 1.X
-     */
-    Version_t Version;
-    /*!
-     * Set to true, if the function should update the channels mask.
-     */
-    bool UpdateChanMask;
-    /*!
-     * Set to true, if ADR is enabled.
-     */
-    bool AdrEnabled;
-    /*!
-     * ADR ack counter.
-     */
-    uint32_t AdrAckCounter;
-    /*!
-     * ADR Ack limit
-     */
-    uint16_t AdrAckLimit;
-    /*!
-     * ADR Ack delay
-     */
-    uint16_t AdrAckDelay;
-    /*!
-     * Datarate used currently.
-     */
-    int8_t Datarate;
-    /*!
-     * TX power used currently.
-     */
-    int8_t TxPower;
-    /*!
-     * UplinkDwellTime
-     */
-    uint8_t UplinkDwellTime;
-    /*!
-     * Region
-     */
-    LoRaMacRegion_t Region;
-}CalcNextAdrParams_t;
-
-/*!
- * \brief Calculates the next datarate to set, when ADR is on or off.
- *
- * \param [IN] adrNext Pointer to the function parameters.
- *
- * \param [OUT] drOut The calculated datarate for the next TX.
- *
- * \param [OUT] txPowOut The TX power for the next TX.
- *
- * \param [OUT] adrAckCounter The calculated ADR acknowledgement counter.
- *
- * \retval Returns true, if an ADR request should be performed.
- */
-bool LoRaMacAdrCalcNext( CalcNextAdrParams_t* adrNext, int8_t* drOut, int8_t* txPowOut, uint32_t* adrAckCounter );
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __LORAMACADR_H__
diff --git a/mac/LoRaMacClassB.c b/mac/LoRaMacClassB.c
deleted file mode 100644
index 2420e70..0000000
--- a/mac/LoRaMacClassB.c
+++ /dev/null
@@ -1,1765 +0,0 @@
-/*
- / _____)             _              | |
-( (____  _____ ____ _| |_ _____  ____| |__
- \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- _____) ) ____| | | || |_| ____( (___| | | |
-(______/|_____)_|_|_| \__)_____)\____)_| |_|
-    (C)2013 Semtech
- ___ _____ _   ___ _  _____ ___  ___  ___ ___
-/ __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
-\__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
-|___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
-embedded.connectivity.solutions===============
-
-Description: LoRa MAC Class B layer implementation
-
-License: Revised BSD License, see LICENSE.TXT file include in the project
-
-Maintainer: Miguel Luis ( Semtech ), Gregory Cristian ( Semtech ) and Daniel Jaeckle ( STACKFORCE )
-*/
-#include <math.h>
-#include "utilities.h"
-#include "secure-element.h"
-#include "LoRaMac.h"
-#include "LoRaMacClassB.h"
-#include "LoRaMacClassBConfig.h"
-#include "LoRaMacCrypto.h"
-#include "LoRaMacConfirmQueue.h"
-
-#ifdef LORAMAC_CLASSB_ENABLED
-
-
-/*
- * LoRaMac Class B Context structure for NVM parameters
- * related to ping slots
- */
-typedef struct sLoRaMacClassBPingSlotNvmCtx
-{
-    struct sPingSlotCtrlNvm
-    {
-        /*!
-         * Set when the server assigned a ping slot to the node
-         */
-        uint8_t Assigned         : 1;
-        /*!
-         * Set when a custom frequency is used
-         */
-        uint8_t CustomFreq       : 1;
-    }Ctrl;
-    /*!
-     * Number of ping slots
-     */
-    uint8_t PingNb;
-    /*!
-     * Period of the ping slots
-     */
-    uint16_t PingPeriod;
-    /*!
-     * Reception frequency of the ping slot windows
-     */
-    uint32_t Frequency;
-    /*!
-     * Datarate of the ping slot
-     */
-    int8_t Datarate;
-} LoRaMacClassBPingSlotNvmCtx_t;
-
-/*
- * LoRaMac Class B Context structure for NVM parameters
- * related to beaconing
- */
-typedef struct sLoRaMacClassBBeaconNvmCtx
-{
-    struct sBeaconCtrlNvm
-    {
-        /*!
-         * Set if the node has a custom frequency for beaconing and ping slots
-         */
-        uint8_t CustomFreq          : 1;
-    }Ctrl;
-    /*!
-     * Beacon reception frequency
-     */
-    uint32_t Frequency;
-} LoRaMacClassBBeaconNvmCtx_t;
-
-/*
- * LoRaMac Class B Context structure
- */
-typedef struct sLoRaMacClassBNvmCtx
-{
-    /*!
-    * Class B ping slot context
-    */
-    LoRaMacClassBPingSlotNvmCtx_t PingSlotCtx;
-    /*!
-    * Class B beacon context
-    */
-    LoRaMacClassBBeaconNvmCtx_t BeaconCtx;
-} LoRaMacClassBNvmCtx_t;
-
-/*
- * LoRaMac Class B Context structure
- */
-typedef struct sLoRaMacClassBCtx
-{
-    /*!
-    * Class B ping slot context
-    */
-    PingSlotContext_t PingSlotCtx;
-    /*!
-    * Class B beacon context
-    */
-    BeaconContext_t BeaconCtx;
-    /*!
-    * State of the beaconing mechanism
-    */
-    BeaconState_t BeaconState;
-    /*!
-    * State of the ping slot mechanism
-    */
-    PingSlotState_t PingSlotState;
-    /*!
-    * State of the multicast slot mechanism
-    */
-    PingSlotState_t MulticastSlotState;
-    /*!
-    * Timer for CLASS B beacon acquisition and tracking.
-    */
-    TimerEvent_t BeaconTimer;
-    /*!
-    * Timer for CLASS B ping slot timer.
-    */
-    TimerEvent_t PingSlotTimer;
-    /*!
-    * Timer for CLASS B multicast ping slot timer.
-    */
-    TimerEvent_t MulticastSlotTimer;
-    /*!
-    * Container for the callbacks related to class b.
-    */
-    LoRaMacClassBCallback_t LoRaMacClassBCallbacks;
-    /*!
-    * Data structure which holds the parameters which needs to be set
-    * in class b operation.
-    */
-    LoRaMacClassBParams_t LoRaMacClassBParams;
-    /*
-     * Callback function to notify the upper layer about context change
-     */
-    LoRaMacClassBNvmEvent LoRaMacClassBNvmEvent;
-    /*!
-    * Non-volatile module context.
-    */
-    LoRaMacClassBNvmCtx_t* NvmCtx;
-} LoRaMacClassBCtx_t;
-
-/*!
- * Defines the LoRaMac radio events status
- */
-typedef union uLoRaMacClassBEvents
-{
-    uint32_t Value;
-    struct sEvents
-    {
-        uint32_t Beacon        : 1;
-        uint32_t PingSlot      : 1;
-        uint32_t MulticastSlot : 1;
-    }Events;
-}LoRaMacClassBEvents_t;
-
-LoRaMacClassBEvents_t LoRaMacClassBEvents = { .Value = 0 };
-
-/*
- * Non-volatile module context.
- */
-static LoRaMacClassBNvmCtx_t NvmCtx;
-
-/*
- * Module context.
- */
-static LoRaMacClassBCtx_t Ctx;
-
-/*!
- * Computes the Ping Offset
- *
- * \param [IN]  beaconTime      - Time of the recent received beacon
- * \param [IN]  address         - Frame address
- * \param [IN]  pingPeriod      - Ping period of the node
- * \param [OUT] pingOffset      - Pseudo random ping offset
- */
-static void ComputePingOffset( uint64_t beaconTime, uint32_t address, uint16_t pingPeriod, uint16_t *pingOffset )
-{
-    uint8_t buffer[16];
-    uint8_t cipher[16];
-    uint32_t result = 0;
-    /* Refer to chapter 15.2 of the LoRaWAN specification v1.1. The beacon time
-     * GPS time in seconds modulo 2^32
-     */
-    uint32_t time = ( beaconTime % ( ( ( uint64_t ) 1 ) << 32 ) );
-
-    memset1( buffer, 0, 16 );
-    memset1( cipher, 0, 16 );
-
-    buffer[0] = ( time ) & 0xFF;
-    buffer[1] = ( time >> 8 ) & 0xFF;
-    buffer[2] = ( time >> 16 ) & 0xFF;
-    buffer[3] = ( time >> 24 ) & 0xFF;
-
-    buffer[4] = ( address ) & 0xFF;
-    buffer[5] = ( address >> 8 ) & 0xFF;
-    buffer[6] = ( address >> 16 ) & 0xFF;
-    buffer[7] = ( address >> 24 ) & 0xFF;
-
-    SecureElementAesEncrypt( buffer, 16, SLOT_RAND_ZERO_KEY, cipher );
-
-    result = ( ( ( uint32_t ) cipher[0] ) + ( ( ( uint32_t ) cipher[1] ) * 256 ) );
-
-    *pingOffset = ( uint16_t )( result % pingPeriod );
-}
-
-/*!
- * \brief Calculates the downlink frequency for a given channel.
- *
- * \param [IN] channel The channel according to the channel plan.
- *
- * \retval The downlink frequency
- */
-static uint32_t CalcDownlinkFrequency( uint8_t channel )
-{
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-    uint32_t frequency = 0;
-    uint32_t stepwidth = 0;
-
-    getPhy.Attribute = PHY_BEACON_CHANNEL_FREQ;
-    phyParam = RegionGetPhyParam( *Ctx.LoRaMacClassBParams.LoRaMacRegion, &getPhy );
-    frequency = phyParam.Value;
-
-    getPhy.Attribute = PHY_BEACON_CHANNEL_STEPWIDTH;
-    phyParam = RegionGetPhyParam( *Ctx.LoRaMacClassBParams.LoRaMacRegion, &getPhy );
-    stepwidth = phyParam.Value;
-
-    // Calculate the frequency
-    return frequency + ( channel * stepwidth );
-}
-
-/*!
- * \brief Calculates the downlink channel for the beacon and for
- *        ping slot downlinks.
- *
- * \param [IN] devAddr The address of the device
- *
- * \param [IN] beaconTime The beacon time of the beacon.
- *
- * \param [IN] beaconInterval The beacon interval
- *
- * \retval The downlink channel
- */
-static uint32_t CalcDownlinkChannelAndFrequency( uint32_t devAddr, TimerTime_t beaconTime, TimerTime_t beaconInterval )
-{
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-    uint32_t channel = 0;
-    uint8_t nbChannels = 0;
-    uint32_t frequency = 0;
-
-    getPhy.Attribute = PHY_BEACON_NB_CHANNELS;
-    phyParam = RegionGetPhyParam( *Ctx.LoRaMacClassBParams.LoRaMacRegion, &getPhy );
-    nbChannels = (uint8_t) phyParam.Value;
-
-    if( nbChannels > 1 )
-    {
-        // Calculate the channel for the next downlink
-        channel = devAddr + ( beaconTime / ( beaconInterval / 1000 ) );
-        channel = channel % nbChannels;
-    }
-
-    // Calculate the frequency for the next downlink
-    frequency = CalcDownlinkFrequency( channel );
-
-    // Calculate the frequency for the next downlink
-    return frequency;
-}
-
-/*!
- * \brief Calculates the correct frequency and opens up the beacon reception window.
- *
- * \param [IN] rxTime The reception time which should be setup
- *
- * \param [IN] activateDefaultChannel Set to true, if the function shall setup the default channel
- */
-static void RxBeaconSetup( TimerTime_t rxTime, bool activateDefaultChannel )
-{
-    RxBeaconSetup_t rxBeaconSetup;
-    uint32_t frequency = 0;
-    RxConfigParams_t beaconRxConfig;
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-    uint16_t windowTimeout = Ctx.BeaconCtx.SymbolTimeout;
-
-    if( activateDefaultChannel == true )
-    {
-        // This is the default frequency in case we don't know when the next
-        // beacon will be transmitted. We select channel 0 as default.
-        frequency = CalcDownlinkFrequency( 0 );
-    }
-    else
-    {
-        // This is the frequency according to the channel plan
-        frequency = CalcDownlinkChannelAndFrequency( 0, Ctx.BeaconCtx.BeaconTime.Seconds + ( CLASSB_BEACON_INTERVAL / 1000 ),
-                                                     CLASSB_BEACON_INTERVAL );
-    }
-
-    if( Ctx.NvmCtx->BeaconCtx.Ctrl.CustomFreq == 1 )
-    {
-        // Set the frequency from the BeaconFreqReq
-        frequency = Ctx.NvmCtx->BeaconCtx.Frequency;
-    }
-
-    if( Ctx.BeaconCtx.Ctrl.BeaconChannelSet == 1 )
-    {
-        // Set the frequency which was provided by BeaconTimingAns MAC command
-        Ctx.BeaconCtx.Ctrl.BeaconChannelSet = 0;
-        frequency = CalcDownlinkFrequency( Ctx.BeaconCtx.BeaconTimingChannel );
-    }
-
-    if( ( Ctx.BeaconCtx.Ctrl.BeaconAcquired == 1 ) || ( Ctx.BeaconCtx.Ctrl.AcquisitionPending == 1 ) )
-    {
-        // Apply the symbol timeout only if we have acquired the beacon
-        // Otherwise, take the window enlargement into account
-        // Read beacon datarate
-        getPhy.Attribute = PHY_BEACON_CHANNEL_DR;
-        phyParam = RegionGetPhyParam( *Ctx.LoRaMacClassBParams.LoRaMacRegion, &getPhy );
-
-        // Calculate downlink symbols
-        RegionComputeRxWindowParameters( *Ctx.LoRaMacClassBParams.LoRaMacRegion,
-                                        ( int8_t )phyParam.Value, // datarate
-                                        Ctx.LoRaMacClassBParams.LoRaMacParams->MinRxSymbols,
-                                        Ctx.LoRaMacClassBParams.LoRaMacParams->SystemMaxRxError,
-                                        &beaconRxConfig );
-        windowTimeout = beaconRxConfig.WindowTimeout;
-    }
-
-    rxBeaconSetup.SymbolTimeout = windowTimeout;
-    rxBeaconSetup.RxTime = rxTime;
-    rxBeaconSetup.Frequency = frequency;
-
-    RegionRxBeaconSetup( *Ctx.LoRaMacClassBParams.LoRaMacRegion, &rxBeaconSetup, &Ctx.LoRaMacClassBParams.McpsIndication->RxDatarate );
-
-    Ctx.LoRaMacClassBParams.MlmeIndication->BeaconInfo.Frequency = frequency;
-    Ctx.LoRaMacClassBParams.MlmeIndication->BeaconInfo.Datarate = Ctx.LoRaMacClassBParams.McpsIndication->RxDatarate;
-}
-
-/*!
- * \brief Calculates the next ping slot time.
- *
- * \param [IN] slotOffset The ping slot offset
- * \param [IN] pingPeriod The ping period
- * \param [OUT] timeOffset Time offset of the next slot, based on current time
- *
- * \retval [true: ping slot found, false: no ping slot found]
- */
-static bool CalcNextSlotTime( uint16_t slotOffset, uint16_t pingPeriod, uint16_t pingNb, TimerTime_t* timeOffset )
-{
-    uint8_t currentPingSlot = 0;
-    TimerTime_t slotTime = 0;
-    TimerTime_t currentTime = TimerGetCurrentTime( );
-
-    // Calculate the point in time of the last beacon even if we missed it
-    slotTime = ( ( currentTime - SysTimeToMs( Ctx.BeaconCtx.LastBeaconRx ) ) % CLASSB_BEACON_INTERVAL );
-    slotTime = currentTime - slotTime;
-
-    // Add the reserved time and the ping offset
-    slotTime += CLASSB_BEACON_RESERVED;
-    slotTime += slotOffset * CLASSB_PING_SLOT_WINDOW;
-
-    if( slotTime < currentTime )
-    {
-        currentPingSlot = ( ( currentTime - slotTime ) /
-                          ( pingPeriod * CLASSB_PING_SLOT_WINDOW ) ) + 1;
-        slotTime += ( ( TimerTime_t )( currentPingSlot * pingPeriod ) *
-                    CLASSB_PING_SLOT_WINDOW );
-    }
-
-    if( currentPingSlot < pingNb )
-    {
-        if( slotTime <= ( SysTimeToMs( Ctx.BeaconCtx.NextBeaconRx ) - CLASSB_BEACON_GUARD - CLASSB_PING_SLOT_WINDOW ) )
-        {
-            // Calculate the relative ping slot time
-            slotTime -= currentTime;
-            slotTime -= Radio.GetWakeupTime( );
-            slotTime = TimerTempCompensation( slotTime, Ctx.BeaconCtx.Temperature );
-            *timeOffset = slotTime;
-            return true;
-        }
-    }
-    return false;
-}
-
-/*!
- * \brief Calculates CRC's of the beacon frame
- *
- * \param [IN] buffer Pointer to the data
- * \param [IN] length Length of the data
- *
- * \retval CRC
- */
-static uint16_t BeaconCrc( uint8_t *buffer, uint16_t length )
-{
-    // The CRC calculation follows CCITT
-    const uint16_t polynom = 0x1021;
-    // CRC initial value
-    uint16_t crc = 0x0000;
-
-    if( buffer == NULL )
-    {
-        return 0;
-    }
-
-    for( uint16_t i = 0; i < length; ++i )
-    {
-        crc ^= ( uint16_t ) buffer[i] << 8;
-        for( uint16_t j = 0; j < 8; ++j )
-        {
-            crc = ( crc & 0x8000 ) ? ( crc << 1 ) ^ polynom : ( crc << 1 );
-        }
-    }
-
-    return crc;
-}
-
-static void GetTemperatureLevel( LoRaMacClassBCallback_t *callbacks, BeaconContext_t *beaconCtx )
-{
-    // Measure temperature, if available
-    if( ( callbacks != NULL ) && ( callbacks->GetTemperatureLevel != NULL ) )
-    {
-        beaconCtx->Temperature = callbacks->GetTemperatureLevel( );
-    }
-}
-
-static void InitClassB( void )
-{
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-
-    // Init events
-    LoRaMacClassBEvents.Value = 0;
-
-    // Init variables to default
-    memset1( ( uint8_t* ) &NvmCtx, 0, sizeof( LoRaMacClassBNvmCtx_t ) );
-    memset1( ( uint8_t* ) &Ctx.PingSlotCtx, 0, sizeof( PingSlotContext_t ) );
-    memset1( ( uint8_t* ) &Ctx.BeaconCtx, 0, sizeof( BeaconContext_t ) );
-
-    // Setup default temperature
-    Ctx.BeaconCtx.Temperature = 25.0;
-    GetTemperatureLevel( &Ctx.LoRaMacClassBCallbacks, &Ctx.BeaconCtx );
-
-    // Setup default ping slot datarate
-    getPhy.Attribute = PHY_PING_SLOT_CHANNEL_DR;
-    phyParam = RegionGetPhyParam( *Ctx.LoRaMacClassBParams.LoRaMacRegion, &getPhy );
-    Ctx.NvmCtx->PingSlotCtx.Datarate = (int8_t)( phyParam.Value );
-
-    // Setup default states
-    Ctx.BeaconState = BEACON_STATE_ACQUISITION;
-    Ctx.PingSlotState = PINGSLOT_STATE_CALC_PING_OFFSET;
-    Ctx.MulticastSlotState = PINGSLOT_STATE_CALC_PING_OFFSET;
-}
-
-static void InitClassBDefaults( void )
-{
-    // This function shall reset the Class B settings to default,
-    // but should keep important configurations
-    LoRaMacClassBBeaconNvmCtx_t beaconCtx = Ctx.NvmCtx->BeaconCtx;
-    LoRaMacClassBPingSlotNvmCtx_t pingSlotCtx = Ctx.NvmCtx->PingSlotCtx;
-
-    InitClassB( );
-
-    // Parameters from BeaconFreqReq
-    Ctx.NvmCtx->BeaconCtx.Frequency = beaconCtx.Frequency;
-    Ctx.NvmCtx->BeaconCtx.Ctrl.CustomFreq = beaconCtx.Ctrl.CustomFreq;
-
-    // Parameters from PingSlotChannelReq
-    Ctx.NvmCtx->PingSlotCtx.Ctrl.CustomFreq = pingSlotCtx.Ctrl.CustomFreq;
-    Ctx.NvmCtx->PingSlotCtx.Frequency = pingSlotCtx.Frequency;
-    Ctx.NvmCtx->PingSlotCtx.Datarate = pingSlotCtx.Datarate;
-}
-
-static void EnlargeWindowTimeout( void )
-{
-    // Update beacon movement
-    Ctx.BeaconCtx.BeaconWindowMovement *= CLASSB_WINDOW_MOVE_EXPANSION_FACTOR;
-    if( Ctx.BeaconCtx.BeaconWindowMovement > CLASSB_WINDOW_MOVE_EXPANSION_MAX )
-    {
-        Ctx.BeaconCtx.BeaconWindowMovement = CLASSB_WINDOW_MOVE_EXPANSION_MAX;
-    }
-    // Update symbol timeout
-    Ctx.BeaconCtx.SymbolTimeout *= CLASSB_BEACON_SYMBOL_TO_EXPANSION_FACTOR;
-    if( Ctx.BeaconCtx.SymbolTimeout > CLASSB_BEACON_SYMBOL_TO_EXPANSION_MAX )
-    {
-        Ctx.BeaconCtx.SymbolTimeout = CLASSB_BEACON_SYMBOL_TO_EXPANSION_MAX;
-    }
-    Ctx.PingSlotCtx.SymbolTimeout *= CLASSB_BEACON_SYMBOL_TO_EXPANSION_FACTOR;
-    if( Ctx.PingSlotCtx.SymbolTimeout > CLASSB_PING_SLOT_SYMBOL_TO_EXPANSION_MAX )
-    {
-        Ctx.PingSlotCtx.SymbolTimeout = CLASSB_PING_SLOT_SYMBOL_TO_EXPANSION_MAX;
-    }
-}
-
-static void ResetWindowTimeout( void )
-{
-    Ctx.BeaconCtx.SymbolTimeout = CLASSB_BEACON_SYMBOL_TO_DEFAULT;
-    Ctx.PingSlotCtx.SymbolTimeout = CLASSB_BEACON_SYMBOL_TO_DEFAULT;
-    Ctx.BeaconCtx.BeaconWindowMovement  = CLASSB_WINDOW_MOVE_DEFAULT;
-}
-
-static TimerTime_t CalcDelayForNextBeacon( TimerTime_t currentTime, TimerTime_t lastBeaconRx )
-{
-    TimerTime_t nextBeaconRxTime = 0;
-
-    // Calculate the point in time of the next beacon
-    nextBeaconRxTime = ( ( currentTime - lastBeaconRx ) % CLASSB_BEACON_INTERVAL );
-    return ( CLASSB_BEACON_INTERVAL - nextBeaconRxTime );
-}
-
-static void IndicateBeaconStatus( LoRaMacEventInfoStatus_t status )
-{
-    if( Ctx.BeaconCtx.Ctrl.ResumeBeaconing == 0 )
-    {
-        Ctx.LoRaMacClassBParams.MlmeIndication->MlmeIndication = MLME_BEACON;
-        Ctx.LoRaMacClassBParams.MlmeIndication->Status = status;
-        Ctx.LoRaMacClassBParams.LoRaMacFlags->Bits.MlmeInd = 1;
-
-        Ctx.LoRaMacClassBParams.LoRaMacFlags->Bits.MacDone = 1;
-    }
-    Ctx.BeaconCtx.Ctrl.ResumeBeaconing = 0;
-}
-
-static TimerTime_t ApplyGuardTime( TimerTime_t beaconEventTime )
-{
-    TimerTime_t timeGuard = beaconEventTime;
-
-    if( timeGuard > CLASSB_BEACON_GUARD )
-    {
-        timeGuard -= CLASSB_BEACON_GUARD;
-    }
-    return timeGuard;
-}
-
-static TimerTime_t UpdateBeaconState( LoRaMacEventInfoStatus_t status,
-                                      TimerTime_t windowMovement, TimerTime_t currentTime )
-
-{
-    TimerTime_t beaconEventTime = 0;
-
-    // Calculate the next beacon RX time
-    beaconEventTime = CalcDelayForNextBeacon( currentTime, SysTimeToMs( Ctx.BeaconCtx.LastBeaconRx ) );
-    Ctx.BeaconCtx.NextBeaconRx = SysTimeFromMs( currentTime + beaconEventTime );
-
-    // Take temperature compensation into account
-    beaconEventTime = TimerTempCompensation( beaconEventTime, Ctx.BeaconCtx.Temperature );
-
-    // Move the window
-    if( beaconEventTime > windowMovement )
-    {
-        beaconEventTime -= windowMovement;
-    }
-    Ctx.BeaconCtx.NextBeaconRxAdjusted = currentTime + beaconEventTime;
-
-    // Start the RX slot state machine for ping and multicast slots
-    LoRaMacClassBStartRxSlots( );
-
-    // Setup an MLME_BEACON indication to inform the upper layer
-    IndicateBeaconStatus( status );
-
-    // Apply guard time
-    return ApplyGuardTime( beaconEventTime );
-}
-
-static uint8_t CalcPingNb( uint16_t periodicity )
-{
-    return 128 / ( 1 << periodicity );
-}
-
-static uint16_t CalcPingPeriod( uint8_t pingNb )
-{
-    return CLASSB_BEACON_WINDOW_SLOTS / pingNb;
-}
-
-/*
- * Dummy callback in case if the user provides NULL function pointer
- */
-static void NvmContextChange( void )
-{
-    if( Ctx.LoRaMacClassBNvmEvent != NULL )
-    {
-        Ctx.LoRaMacClassBNvmEvent( );
-    }
-}
-
-#endif // LORAMAC_CLASSB_ENABLED
-
-void LoRaMacClassBInit( LoRaMacClassBParams_t *classBParams, LoRaMacClassBCallback_t *callbacks, LoRaMacClassBNvmEvent classBNvmCtxChanged )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    // Store callbacks
-    Ctx.LoRaMacClassBCallbacks = *callbacks;
-
-    // Store parameter pointers
-    Ctx.LoRaMacClassBParams = *classBParams;
-
-    // Assign non-volatile context
-    Ctx.NvmCtx = &NvmCtx;
-
-    // Assign callback
-    Ctx.LoRaMacClassBNvmEvent = classBNvmCtxChanged;
-
-    // Initialize timers
-    TimerInit( &Ctx.BeaconTimer, LoRaMacClassBBeaconTimerEvent );
-    TimerInit( &Ctx.PingSlotTimer, LoRaMacClassBPingSlotTimerEvent );
-    TimerInit( &Ctx.MulticastSlotTimer, LoRaMacClassBMulticastSlotTimerEvent );
-
-    InitClassB( );
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-bool LoRaMacClassBRestoreNvmCtx( void* classBNvmCtx )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    // Restore module context
-    if( classBNvmCtx != NULL )
-    {
-        memcpy1( ( uint8_t* ) &NvmCtx, ( uint8_t* ) classBNvmCtx, sizeof( NvmCtx ) );
-        return true;
-    }
-    else
-    {
-        return false;
-    }
-#else
-    return true;
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-void* LoRaMacClassBGetNvmCtx( size_t* classBNvmCtxSize )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    *classBNvmCtxSize = sizeof( NvmCtx );
-    return &NvmCtx;
-#else
-    *classBNvmCtxSize = 0;
-    return NULL;
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-void LoRaMacClassBSetBeaconState( BeaconState_t beaconState )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    if( beaconState == BEACON_STATE_ACQUISITION )
-    {
-        // If the MAC has received a time reference for the beacon,
-        // apply the state BEACON_STATE_ACQUISITION_BY_TIME.
-        if( ( Ctx.BeaconCtx.Ctrl.BeaconDelaySet == 1 ) &&
-            ( LoRaMacClassBIsAcquisitionPending( ) == false ) )
-        {
-            Ctx.BeaconState = BEACON_STATE_ACQUISITION_BY_TIME;
-        }
-        else
-        {
-           Ctx.BeaconState = beaconState;
-        }
-    }
-    else
-    {
-        if( ( Ctx.BeaconState != BEACON_STATE_ACQUISITION ) &&
-            ( Ctx.BeaconState != BEACON_STATE_ACQUISITION_BY_TIME ) )
-        {
-            Ctx.BeaconState = beaconState;
-        }
-    }
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-void LoRaMacClassBSetPingSlotState( PingSlotState_t pingSlotState )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    Ctx.PingSlotState = pingSlotState;
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-void LoRaMacClassBSetMulticastSlotState( PingSlotState_t multicastSlotState )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    Ctx.MulticastSlotState = multicastSlotState;
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-bool LoRaMacClassBIsAcquisitionInProgress( void )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    if( Ctx.BeaconState == BEACON_STATE_ACQUISITION_BY_TIME )
-    {
-        // In this case the acquisition is in progress, as the MAC has
-        // a time reference for the next beacon RX.
-        return true;
-    }
-    if( LoRaMacClassBIsAcquisitionPending( ) == true )
-    {
-        // In this case the acquisition is in progress, as the MAC
-        // searches for a beacon.
-        return true;
-    }
-    return false;
-#else
-    return false;
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-void LoRaMacClassBBeaconTimerEvent( void* context )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    Ctx.BeaconCtx.TimeStamp = TimerGetCurrentTime( );
-    TimerStop( &Ctx.BeaconTimer );
-    LoRaMacClassBEvents.Events.Beacon = 1;
-
-    if( Ctx.LoRaMacClassBCallbacks.MacProcessNotify != NULL )
-    {
-        Ctx.LoRaMacClassBCallbacks.MacProcessNotify( );
-    }
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-#ifdef LORAMAC_CLASSB_ENABLED
-static void LoRaMacClassBProcessBeacon( void )
-{
-    bool activateTimer = false;
-    TimerTime_t beaconEventTime = 1;
-    TimerTime_t currentTime = Ctx.BeaconCtx.TimeStamp;
-
-    // Beacon state machine
-    switch( Ctx.BeaconState )
-    {
-        case BEACON_STATE_ACQUISITION_BY_TIME:
-        {
-            activateTimer = true;
-
-            if( Ctx.BeaconCtx.Ctrl.AcquisitionPending == 1 )
-            {
-                Radio.Sleep();
-                Ctx.BeaconState = BEACON_STATE_LOST;
-            }
-            else
-            {
-                // Default symbol timeouts
-                ResetWindowTimeout( );
-
-                if( Ctx.BeaconCtx.Ctrl.BeaconDelaySet == 1 )
-                {
-                    if( Ctx.BeaconCtx.BeaconTimingDelay > 0 )
-                    {
-                        if( SysTimeToMs( Ctx.BeaconCtx.NextBeaconRx ) > currentTime )
-                        {
-                            beaconEventTime = TimerTempCompensation( SysTimeToMs( Ctx.BeaconCtx.NextBeaconRx ) - currentTime, Ctx.BeaconCtx.Temperature );
-                        }
-                        else
-                        {
-                            // Reset status provides by BeaconTimingAns
-                            Ctx.BeaconCtx.Ctrl.BeaconDelaySet = 0;
-                            Ctx.BeaconCtx.Ctrl.BeaconChannelSet = 0;
-                            Ctx.BeaconState = BEACON_STATE_ACQUISITION;
-                        }
-                        Ctx.BeaconCtx.BeaconTimingDelay = 0;
-                    }
-                    else
-                    {
-                        activateTimer = false;
-
-                        // Reset status provides by BeaconTimingAns
-                        Ctx.BeaconCtx.Ctrl.BeaconDelaySet = 0;
-                        // Set the node into acquisition mode
-                        Ctx.BeaconCtx.Ctrl.AcquisitionPending = 1;
-
-                        // Don't use the default channel. We know on which
-                        // channel the next beacon will be transmitted
-                        RxBeaconSetup( CLASSB_BEACON_RESERVED, false );
-                    }
-                }
-                else
-                {
-                    Ctx.BeaconCtx.NextBeaconRx.Seconds = 0;
-                    Ctx.BeaconCtx.NextBeaconRx.SubSeconds = 0;
-                    Ctx.BeaconCtx.BeaconTimingDelay = 0;
-
-                    Ctx.BeaconState = BEACON_STATE_ACQUISITION;
-                }
-            }
-            break;
-        }
-        case BEACON_STATE_ACQUISITION:
-        {
-            activateTimer = true;
-
-            if( Ctx.BeaconCtx.Ctrl.AcquisitionPending == 1 )
-            {
-                Radio.Sleep();
-                Ctx.BeaconState = BEACON_STATE_LOST;
-            }
-            else
-            {
-                // Default symbol timeouts
-                ResetWindowTimeout( );
-
-                Ctx.BeaconCtx.Ctrl.AcquisitionPending = 1;
-                beaconEventTime = CLASSB_BEACON_INTERVAL;
-
-                // Start the beacon acquisition. When the MAC has received a beacon in function
-                // RxBeacon successfully, the next state is BEACON_STATE_LOCKED. If the MAC does not
-                // find a beacon, the state machine will stay in state BEACON_STATE_ACQUISITION.
-                // This state detects that a acquisition was pending previously and will change the next
-                // state to BEACON_STATE_LOST.
-                RxBeaconSetup( 0, true );
-            }
-            break;
-        }
-        case BEACON_STATE_TIMEOUT:
-        {
-            // We have to update the beacon time, since we missed a beacon
-            Ctx.BeaconCtx.BeaconTime.Seconds += ( CLASSB_BEACON_INTERVAL / 1000 );
-            Ctx.BeaconCtx.BeaconTime.SubSeconds = 0;
-
-            // Enlarge window timeouts to increase the chance to receive the next beacon
-            EnlargeWindowTimeout( );
-
-            // Setup next state
-            Ctx.BeaconState = BEACON_STATE_REACQUISITION;
-        }
-            // Intentional fall through
-        case BEACON_STATE_REACQUISITION:
-        {
-            activateTimer = true;
-
-            // The beacon is no longer acquired
-            Ctx.BeaconCtx.Ctrl.BeaconAcquired = 0;
-
-            // Verify if the maximum beacon less period has been elapsed
-            if( ( currentTime - SysTimeToMs( Ctx.BeaconCtx.LastBeaconRx ) ) > CLASSB_MAX_BEACON_LESS_PERIOD )
-            {
-                Ctx.BeaconState = BEACON_STATE_LOST;
-            }
-            else
-            {
-                // Handle beacon miss
-                beaconEventTime = UpdateBeaconState( LORAMAC_EVENT_INFO_STATUS_BEACON_LOST,
-                                                     Ctx.BeaconCtx.BeaconWindowMovement, currentTime );
-
-                // Setup next state
-                Ctx.BeaconState = BEACON_STATE_IDLE;
-            }
-            break;
-        }
-        case BEACON_STATE_LOCKED:
-        {
-            activateTimer = true;
-
-            // We have received a beacon. Acquisition is no longer pending.
-            Ctx.BeaconCtx.Ctrl.AcquisitionPending = 0;
-
-            // Handle beacon reception
-            beaconEventTime = UpdateBeaconState( LORAMAC_EVENT_INFO_STATUS_BEACON_LOCKED,
-                                                 0, currentTime );
-
-            // Setup the MLME confirm for the MLME_BEACON_ACQUISITION
-            if( Ctx.LoRaMacClassBParams.LoRaMacFlags->Bits.MlmeReq == 1 )
-            {
-                if( LoRaMacConfirmQueueIsCmdActive( MLME_BEACON_ACQUISITION ) == true )
-                {
-                    LoRaMacConfirmQueueSetStatus( LORAMAC_EVENT_INFO_STATUS_OK, MLME_BEACON_ACQUISITION );
-                    Ctx.LoRaMacClassBParams.MlmeConfirm->TxTimeOnAir = 0;
-                }
-            }
-
-            // Setup next state
-            Ctx.BeaconState = BEACON_STATE_IDLE;
-            break;
-        }
-        case BEACON_STATE_IDLE:
-        {
-            activateTimer = true;
-            GetTemperatureLevel( &Ctx.LoRaMacClassBCallbacks, &Ctx.BeaconCtx );
-            beaconEventTime = Ctx.BeaconCtx.NextBeaconRxAdjusted - Radio.GetWakeupTime( );
-            currentTime = TimerGetCurrentTime( );
-
-            if( beaconEventTime > currentTime )
-            {
-                Ctx.BeaconState = BEACON_STATE_GUARD;
-                beaconEventTime -= currentTime;
-                beaconEventTime = TimerTempCompensation( beaconEventTime, Ctx.BeaconCtx.Temperature );
-            }
-            else
-            {
-                Ctx.BeaconState = BEACON_STATE_REACQUISITION;
-                beaconEventTime = 1;
-            }
-            break;
-        }
-        case BEACON_STATE_GUARD:
-        {
-            Ctx.BeaconState = BEACON_STATE_RX;
-
-            // Stop slot timers
-            LoRaMacClassBStopRxSlots( );
-
-            // Don't use the default channel. We know on which
-            // channel the next beacon will be transmitted
-            RxBeaconSetup( CLASSB_BEACON_RESERVED, false );
-            break;
-        }
-        case BEACON_STATE_LOST:
-        {
-            // Handle events
-            if( Ctx.LoRaMacClassBParams.LoRaMacFlags->Bits.MlmeReq == 1 )
-            {
-                if( LoRaMacConfirmQueueIsCmdActive( MLME_BEACON_ACQUISITION ) == true )
-                {
-                    LoRaMacConfirmQueueSetStatus( LORAMAC_EVENT_INFO_STATUS_BEACON_NOT_FOUND, MLME_BEACON_ACQUISITION );
-                }
-            }
-            else
-            {
-                Ctx.LoRaMacClassBParams.MlmeIndication->MlmeIndication = MLME_BEACON_LOST;
-                Ctx.LoRaMacClassBParams.MlmeIndication->Status = LORAMAC_EVENT_INFO_STATUS_OK;
-                Ctx.LoRaMacClassBParams.LoRaMacFlags->Bits.MlmeInd = 1;
-            }
-
-            // Stop slot timers
-            LoRaMacClassBStopRxSlots( );
-
-            // Initialize default state for class b
-            InitClassBDefaults( );
-
-            Ctx.LoRaMacClassBParams.LoRaMacFlags->Bits.MacDone = 1;
-
-            break;
-        }
-        default:
-        {
-            Ctx.BeaconState = BEACON_STATE_ACQUISITION;
-            break;
-        }
-    }
-
-    if( activateTimer == true )
-    {
-        TimerSetValue( &Ctx.BeaconTimer, beaconEventTime );
-        TimerStart( &Ctx.BeaconTimer );
-    }
-}
-#endif // LORAMAC_CLASSB_ENABLED
-
-void LoRaMacClassBPingSlotTimerEvent( void* context )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    LoRaMacClassBEvents.Events.PingSlot = 1;
-
-    if( Ctx.LoRaMacClassBCallbacks.MacProcessNotify != NULL )
-    {
-        Ctx.LoRaMacClassBCallbacks.MacProcessNotify( );
-    }
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-#ifdef LORAMAC_CLASSB_ENABLED
-static void LoRaMacClassBProcessPingSlot( void )
-{
-    static RxConfigParams_t pingSlotRxConfig;
-    TimerTime_t pingSlotTime = 0;
-
-    switch( Ctx.PingSlotState )
-    {
-        case PINGSLOT_STATE_CALC_PING_OFFSET:
-        {
-            ComputePingOffset( Ctx.BeaconCtx.BeaconTime.Seconds,
-                               *Ctx.LoRaMacClassBParams.LoRaMacDevAddr,
-                               Ctx.NvmCtx->PingSlotCtx.PingPeriod,
-                               &( Ctx.PingSlotCtx.PingOffset ) );
-            Ctx.PingSlotState = PINGSLOT_STATE_SET_TIMER;
-        }
-            // Intentional fall through
-        case PINGSLOT_STATE_SET_TIMER:
-        {
-            if( CalcNextSlotTime( Ctx.PingSlotCtx.PingOffset, Ctx.NvmCtx->PingSlotCtx.PingPeriod, Ctx.NvmCtx->PingSlotCtx.PingNb, &pingSlotTime ) == true )
-            {
-                if( Ctx.BeaconCtx.Ctrl.BeaconAcquired == 1 )
-                {
-                    // Compute the symbol timeout. Apply it only, if the beacon is acquired
-                    // Otherwise, take the enlargement of the symbols into account.
-                    RegionComputeRxWindowParameters( *Ctx.LoRaMacClassBParams.LoRaMacRegion,
-                                                     Ctx.NvmCtx->PingSlotCtx.Datarate,
-                                                     Ctx.LoRaMacClassBParams.LoRaMacParams->MinRxSymbols,
-                                                     Ctx.LoRaMacClassBParams.LoRaMacParams->SystemMaxRxError,
-                                                     &pingSlotRxConfig );
-                    Ctx.PingSlotCtx.SymbolTimeout = pingSlotRxConfig.WindowTimeout;
-
-                    if( ( int32_t )pingSlotTime > pingSlotRxConfig.WindowOffset )
-                    {// Apply the window offset
-                        pingSlotTime += pingSlotRxConfig.WindowOffset;
-                    }
-                }
-
-                // Start the timer if the ping slot time is in range
-                Ctx.PingSlotState = PINGSLOT_STATE_IDLE;
-                TimerSetValue( &Ctx.PingSlotTimer, pingSlotTime );
-                TimerStart( &Ctx.PingSlotTimer );
-            }
-            break;
-        }
-        case PINGSLOT_STATE_IDLE:
-        {
-            uint32_t frequency = Ctx.NvmCtx->PingSlotCtx.Frequency;
-
-            // Apply a custom frequency if the following bit is set
-            if( Ctx.NvmCtx->PingSlotCtx.Ctrl.CustomFreq == 0 )
-            {
-                // Restore floor plan
-                frequency = CalcDownlinkChannelAndFrequency( *Ctx.LoRaMacClassBParams.LoRaMacDevAddr, Ctx.BeaconCtx.BeaconTime.Seconds, CLASSB_BEACON_INTERVAL );
-            }
-
-            // Open the ping slot window only, if there is no multicast ping slot
-            // open. Multicast ping slots have always priority
-            if( Ctx.MulticastSlotState != PINGSLOT_STATE_RX )
-            {
-                Ctx.PingSlotState = PINGSLOT_STATE_RX;
-
-                pingSlotRxConfig.Datarate = Ctx.NvmCtx->PingSlotCtx.Datarate;
-                pingSlotRxConfig.DownlinkDwellTime = Ctx.LoRaMacClassBParams.LoRaMacParams->DownlinkDwellTime;
-                pingSlotRxConfig.Frequency = frequency;
-                pingSlotRxConfig.RxContinuous = false;
-                pingSlotRxConfig.RxSlot = RX_SLOT_WIN_CLASS_B_PING_SLOT;
-
-                RegionRxConfig( *Ctx.LoRaMacClassBParams.LoRaMacRegion, &pingSlotRxConfig, ( int8_t* )&Ctx.LoRaMacClassBParams.McpsIndication->RxDatarate );
-
-                if( pingSlotRxConfig.RxContinuous == false )
-                {
-                    Radio.Rx( Ctx.LoRaMacClassBParams.LoRaMacParams->MaxRxWindow );
-                }
-                else
-                {
-                    Radio.Rx( 0 ); // Continuous mode
-                }
-            }
-            else
-            {
-                // Multicast slots have priority. Skip Rx
-                Ctx.PingSlotState = PINGSLOT_STATE_CALC_PING_OFFSET;
-                TimerSetValue( &Ctx.PingSlotTimer, CLASSB_PING_SLOT_WINDOW );
-                TimerStart( &Ctx.PingSlotTimer );
-            }
-            break;
-        }
-        default:
-        {
-            Ctx.PingSlotState = PINGSLOT_STATE_CALC_PING_OFFSET;
-            break;
-        }
-    }
-}
-#endif // LORAMAC_CLASSB_ENABLED
-
-void LoRaMacClassBMulticastSlotTimerEvent( void* context )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    LoRaMacClassBEvents.Events.MulticastSlot = 1;
-
-    if( Ctx.LoRaMacClassBCallbacks.MacProcessNotify != NULL )
-    {
-        Ctx.LoRaMacClassBCallbacks.MacProcessNotify( );
-    }
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-#ifdef LORAMAC_CLASSB_ENABLED
-static void LoRaMacClassBProcessMulticastSlot( void )
-{
-    static RxConfigParams_t multicastSlotRxConfig;
-    TimerTime_t multicastSlotTime = 0;
-    TimerTime_t slotTime = 0;
-    MulticastCtx_t *cur = Ctx.LoRaMacClassBParams.MulticastChannels;
-
-
-    if( cur == NULL )
-    {
-        return;
-    }
-
-    if( Ctx.MulticastSlotState == PINGSLOT_STATE_RX )
-    {
-        // A multicast slot is already open
-        return;
-    }
-
-    switch( Ctx.MulticastSlotState )
-    {
-        case PINGSLOT_STATE_CALC_PING_OFFSET:
-        {
-            // Compute all offsets for every multicast slots
-            for( uint8_t i = 0; i < 4; i++ )
-            {
-                ComputePingOffset( Ctx.BeaconCtx.BeaconTime.Seconds,
-                                   cur->ChannelParams.Address,
-                                   cur->PingPeriod,
-                                   &( cur->PingOffset ) );
-                cur++;
-            }
-            Ctx.MulticastSlotState = PINGSLOT_STATE_SET_TIMER;
-        }
-            // Intentional fall through
-        case PINGSLOT_STATE_SET_TIMER:
-        {
-            cur = Ctx.LoRaMacClassBParams.MulticastChannels;
-            Ctx.PingSlotCtx.NextMulticastChannel = NULL;
-
-            for( uint8_t i = 0; i < 4; i++ )
-            {
-                // Calculate the next slot time for every multicast slot
-                if( CalcNextSlotTime( cur->PingOffset, cur->PingPeriod, cur->PingNb, &slotTime ) == true )
-                {
-                    if( ( multicastSlotTime == 0 ) || ( multicastSlotTime > slotTime ) )
-                    {
-                        // Update the slot time and the next multicast channel
-                        multicastSlotTime = slotTime;
-                        Ctx.PingSlotCtx.NextMulticastChannel = cur;
-                    }
-                }
-                cur++;
-            }
-
-            // Schedule the next multicast slot
-            if( Ctx.PingSlotCtx.NextMulticastChannel != NULL )
-            {
-                if( Ctx.BeaconCtx.Ctrl.BeaconAcquired == 1 )
-                {
-                    RegionComputeRxWindowParameters( *Ctx.LoRaMacClassBParams.LoRaMacRegion,
-                                                    Ctx.NvmCtx->PingSlotCtx.Datarate,
-                                                    Ctx.LoRaMacClassBParams.LoRaMacParams->MinRxSymbols,
-                                                    Ctx.LoRaMacClassBParams.LoRaMacParams->SystemMaxRxError,
-                                                    &multicastSlotRxConfig );
-                    Ctx.PingSlotCtx.SymbolTimeout = multicastSlotRxConfig.WindowTimeout;
-                }
-
-                if( ( int32_t )multicastSlotTime > multicastSlotRxConfig.WindowOffset )
-                {// Apply the window offset
-                    multicastSlotTime += multicastSlotRxConfig.WindowOffset;
-                }
-
-                // Start the timer if the ping slot time is in range
-                Ctx.MulticastSlotState = PINGSLOT_STATE_IDLE;
-                TimerSetValue( &Ctx.MulticastSlotTimer, multicastSlotTime );
-                TimerStart( &Ctx.MulticastSlotTimer );
-            }
-            break;
-        }
-        case PINGSLOT_STATE_IDLE:
-        {
-            uint32_t frequency = 0;
-
-            // Verify if the multicast channel is valid
-            if( Ctx.PingSlotCtx.NextMulticastChannel == NULL )
-            {
-                Ctx.MulticastSlotState = PINGSLOT_STATE_CALC_PING_OFFSET;
-                TimerSetValue( &Ctx.MulticastSlotTimer, 1 );
-                TimerStart( &Ctx.MulticastSlotTimer );
-                break;
-            }
-
-            // Apply frequency
-            frequency = Ctx.PingSlotCtx.NextMulticastChannel->ChannelParams.RxParams.ClassB.Frequency;
-
-            // Restore the floor plan frequency if there is no individual frequency assigned
-            if( frequency == 0 )
-            {
-                // Restore floor plan
-                frequency = CalcDownlinkChannelAndFrequency( Ctx.PingSlotCtx.NextMulticastChannel->ChannelParams.Address, Ctx.BeaconCtx.BeaconTime.Seconds, CLASSB_BEACON_INTERVAL );
-            }
-
-            Ctx.MulticastSlotState = PINGSLOT_STATE_RX;
-
-            multicastSlotRxConfig.Datarate = Ctx.PingSlotCtx.NextMulticastChannel->ChannelParams.RxParams.ClassB.Datarate;
-            multicastSlotRxConfig.DownlinkDwellTime = Ctx.LoRaMacClassBParams.LoRaMacParams->DownlinkDwellTime;
-            multicastSlotRxConfig.Frequency = frequency;
-            multicastSlotRxConfig.RxContinuous = false;
-            multicastSlotRxConfig.RxSlot = RX_SLOT_WIN_CLASS_B_MULTICAST_SLOT;
-
-            RegionRxConfig( *Ctx.LoRaMacClassBParams.LoRaMacRegion, &multicastSlotRxConfig, ( int8_t* )&Ctx.LoRaMacClassBParams.McpsIndication->RxDatarate );
-
-            if( Ctx.PingSlotState == PINGSLOT_STATE_RX )
-            {
-                // Close ping slot window, if necessary. Multicast slots have priority
-                Radio.Standby( );
-                Ctx.PingSlotState = PINGSLOT_STATE_CALC_PING_OFFSET;
-                TimerSetValue( &Ctx.PingSlotTimer, CLASSB_PING_SLOT_WINDOW );
-                TimerStart( &Ctx.PingSlotTimer );
-            }
-
-            if( multicastSlotRxConfig.RxContinuous == false )
-            {
-                Radio.Rx( Ctx.LoRaMacClassBParams.LoRaMacParams->MaxRxWindow );
-            }
-            else
-            {
-                Radio.Rx( 0 ); // Continuous mode
-            }
-            break;
-        }
-        default:
-        {
-            Ctx.MulticastSlotState = PINGSLOT_STATE_CALC_PING_OFFSET;
-            break;
-        }
-    }
-}
-#endif // LORAMAC_CLASSB_ENABLED
-
-bool LoRaMacClassBRxBeacon( uint8_t *payload, uint16_t size )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-    bool beaconProcessed = false;
-    uint16_t crc0 = 0;
-    uint16_t crc1 = 0;
-    uint16_t beaconCrc0 = 0;
-    uint16_t beaconCrc1 = 0;
-
-    getPhy.Attribute = PHY_BEACON_FORMAT;
-    phyParam = RegionGetPhyParam( *Ctx.LoRaMacClassBParams.LoRaMacRegion, &getPhy );
-
-    // Verify if we are in the state where we expect a beacon
-    if( ( Ctx.BeaconState == BEACON_STATE_RX ) || ( Ctx.BeaconCtx.Ctrl.AcquisitionPending == 1 ) )
-    {
-        if( size == phyParam.BeaconFormat.BeaconSize )
-        {
-            // A beacon frame is defined as:
-            // Bytes: |  x   |  4   |  2   |     7      |  y   |  2   |
-            //        |------|------|------|------------|------|------|
-            // Field: | RFU1 | Time | CRC1 | GwSpecific | RFU2 | CRC2 |
-            //
-            // Field RFU1 and RFU2 have variable sizes. It depends on the region specific implementation
-
-            // Read CRC1 field from the frame
-            beaconCrc0 = ( ( uint16_t )payload[phyParam.BeaconFormat.Rfu1Size + 4] ) & 0x00FF;
-            beaconCrc0 |= ( ( uint16_t )payload[phyParam.BeaconFormat.Rfu1Size + 4 + 1] << 8 ) & 0xFF00;
-            crc0 = BeaconCrc( payload, phyParam.BeaconFormat.Rfu1Size + 4 );
-
-            // Validate the first crc of the beacon frame
-            if( crc0 == beaconCrc0 )
-            {
-                // Read Time field from the frame
-                Ctx.BeaconCtx.BeaconTime.Seconds  = ( ( uint32_t )payload[phyParam.BeaconFormat.Rfu1Size] ) & 0x000000FF;
-                Ctx.BeaconCtx.BeaconTime.Seconds |= ( ( uint32_t )( payload[phyParam.BeaconFormat.Rfu1Size + 1] << 8 ) ) & 0x0000FF00;
-                Ctx.BeaconCtx.BeaconTime.Seconds |= ( ( uint32_t )( payload[phyParam.BeaconFormat.Rfu1Size + 2] << 16 ) ) & 0x00FF0000;
-                Ctx.BeaconCtx.BeaconTime.Seconds |= ( ( uint32_t )( payload[phyParam.BeaconFormat.Rfu1Size + 3] << 24 ) ) & 0xFF000000;
-                Ctx.BeaconCtx.BeaconTime.SubSeconds = 0;
-                Ctx.LoRaMacClassBParams.MlmeIndication->BeaconInfo.Time = Ctx.BeaconCtx.BeaconTime;
-                beaconProcessed = true;
-            }
-
-            // Read CRC2 field from the frame
-            beaconCrc1 = ( ( uint16_t )payload[phyParam.BeaconFormat.Rfu1Size + 4 + 2 + 7 + phyParam.BeaconFormat.Rfu2Size] ) & 0x00FF;
-            beaconCrc1 |= ( ( uint16_t )payload[phyParam.BeaconFormat.Rfu1Size + 4 + 2 + 7 + phyParam.BeaconFormat.Rfu2Size + 1] << 8 ) & 0xFF00;
-            crc1 = BeaconCrc( &payload[phyParam.BeaconFormat.Rfu1Size + 4 + 2], 7 + phyParam.BeaconFormat.Rfu2Size );
-
-            // Validate the second crc of the beacon frame
-            if( crc1 == beaconCrc1 )
-            {
-                // Read GwSpecific field from the frame
-                // The GwSpecific field contains 1 byte InfoDesc and 6 bytes Info
-                Ctx.LoRaMacClassBParams.MlmeIndication->BeaconInfo.GwSpecific.InfoDesc = payload[phyParam.BeaconFormat.Rfu1Size + 4 + 2];
-                memcpy1( Ctx.LoRaMacClassBParams.MlmeIndication->BeaconInfo.GwSpecific.Info, &payload[phyParam.BeaconFormat.Rfu1Size + 4 + 2 + 1], 6 );
-            }
-
-            // Reset beacon variables, if one of the crc is valid
-            if( beaconProcessed == true )
-            {
-                TimerTime_t time = Radio.TimeOnAir( MODEM_LORA, size );
-                SysTime_t timeOnAir;
-                timeOnAir.Seconds = time / 1000;
-                timeOnAir.SubSeconds = time - timeOnAir.Seconds * 1000;
-
-                Ctx.BeaconCtx.LastBeaconRx = Ctx.BeaconCtx.BeaconTime;
-                Ctx.BeaconCtx.LastBeaconRx.Seconds += UNIX_GPS_EPOCH_OFFSET;
-
-                // Update system time.
-                SysTimeSet( SysTimeAdd( Ctx.BeaconCtx.LastBeaconRx, timeOnAir ) );
-
-                Ctx.BeaconCtx.Ctrl.BeaconAcquired = 1;
-                Ctx.BeaconCtx.Ctrl.BeaconMode = 1;
-                ResetWindowTimeout( );
-                Ctx.BeaconState = BEACON_STATE_LOCKED;
-
-                LoRaMacClassBBeaconTimerEvent( NULL );
-            }
-        }
-
-        if( Ctx.BeaconState == BEACON_STATE_RX )
-        {
-            Ctx.BeaconState = BEACON_STATE_TIMEOUT;
-            LoRaMacClassBBeaconTimerEvent( NULL );
-        }
-        // When the MAC listens for a beacon, it is not allowed to process any other
-        // downlink except the beacon frame itself. The reason for this is that no valid downlink window is open.
-        // If it receives a frame which is
-        // 1. not a beacon or
-        // 2. a beacon with a crc fail
-        // the MAC shall ignore the frame completely. Thus, the function must always return true, even if no
-        // valid beacon has been received.
-        beaconProcessed = true;
-    }
-    return beaconProcessed;
-#else
-    return false;
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-bool LoRaMacClassBIsBeaconExpected( void )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    if( ( Ctx.BeaconCtx.Ctrl.AcquisitionPending == 1 ) ||
-        ( Ctx.BeaconState == BEACON_STATE_RX ) )
-    {
-        return true;
-    }
-    return false;
-#else
-    return false;
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-bool LoRaMacClassBIsPingExpected( void )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    if( Ctx.PingSlotState == PINGSLOT_STATE_RX )
-    {
-        return true;
-    }
-    return false;
-#else
-    return false;
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-bool LoRaMacClassBIsMulticastExpected( void )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    if( Ctx.MulticastSlotState == PINGSLOT_STATE_RX )
-    {
-        return true;
-    }
-    return false;
-#else
-    return false;
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-bool LoRaMacClassBIsAcquisitionPending( void )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    if( Ctx.BeaconCtx.Ctrl.AcquisitionPending == 1 )
-    {
-        return true;
-    }
-    return false;
-#else
-    return false;
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-bool LoRaMacClassBIsBeaconModeActive( void )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    if( ( Ctx.BeaconCtx.Ctrl.BeaconMode == 1 ) ||
-        ( Ctx.BeaconState == BEACON_STATE_ACQUISITION_BY_TIME ) )
-    {
-        return true;
-    }
-    return false;
-#else
-    return false;
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-void LoRaMacClassBSetPingSlotInfo( uint8_t periodicity )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    Ctx.NvmCtx->PingSlotCtx.PingNb = CalcPingNb( periodicity );
-    Ctx.NvmCtx->PingSlotCtx.PingPeriod = CalcPingPeriod( Ctx.NvmCtx->PingSlotCtx.PingNb );
-    NvmContextChange( );
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-void LoRaMacClassBHaltBeaconing( void )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    if( Ctx.BeaconCtx.Ctrl.BeaconMode == 1 )
-    {
-        if( ( Ctx.BeaconState == BEACON_STATE_TIMEOUT ) ||
-            ( Ctx.BeaconState == BEACON_STATE_LOST ) )
-        {
-            // Update the state machine before halt
-            LoRaMacClassBBeaconTimerEvent( NULL );
-        }
-
-        CRITICAL_SECTION_BEGIN( );
-        LoRaMacClassBEvents.Events.Beacon = 0;
-        CRITICAL_SECTION_END( );
-
-        // Halt ping slot state machine
-        TimerStop( &Ctx.BeaconTimer );
-
-        // Halt beacon state machine
-        Ctx.BeaconState = BEACON_STATE_HALT;
-
-        // Halt ping and multicast slot state machines
-        LoRaMacClassBStopRxSlots( );
-    }
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-void LoRaMacClassBResumeBeaconing( void )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    if( Ctx.BeaconState == BEACON_STATE_HALT )
-    {
-        Ctx.BeaconCtx.Ctrl.ResumeBeaconing = 1;
-
-        // Set default state
-        Ctx.BeaconState = BEACON_STATE_LOCKED;
-
-        if( Ctx.BeaconCtx.Ctrl.BeaconAcquired == 0 )
-        {
-            // Set the default state for beacon less operation
-            Ctx.BeaconState = BEACON_STATE_REACQUISITION;
-        }
-
-        LoRaMacClassBBeaconTimerEvent( NULL );
-    }
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-LoRaMacStatus_t LoRaMacClassBSwitchClass( DeviceClass_t nextClass )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    if( nextClass == CLASS_B )
-    {// Switch to from class a to class b
-        if( ( Ctx.BeaconCtx.Ctrl.BeaconMode == 1 ) && ( Ctx.NvmCtx->PingSlotCtx.Ctrl.Assigned == 1 ) )
-        {
-            return LORAMAC_STATUS_OK;
-        }
-    }
-    if( nextClass == CLASS_A )
-    {// Switch from class b to class a
-        LoRaMacClassBHaltBeaconing( );
-
-        // Initialize default state for class b
-        InitClassBDefaults( );
-
-        return LORAMAC_STATUS_OK;
-    }
-    return LORAMAC_STATUS_SERVICE_UNKNOWN;
-#else
-    return LORAMAC_STATUS_SERVICE_UNKNOWN;
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-LoRaMacStatus_t LoRaMacClassBMibGetRequestConfirm( MibRequestConfirm_t *mibGet )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    LoRaMacStatus_t status;
-
-    switch( mibGet->Type )
-    {
-        case MIB_PING_SLOT_DATARATE:
-        {
-            mibGet->Param.PingSlotDatarate = Ctx.NvmCtx->PingSlotCtx.Datarate;
-            break;
-        }
-        default:
-        {
-            status = LORAMAC_STATUS_SERVICE_UNKNOWN;
-            break;
-        }
-    }
-    return status;
-#else
-    return LORAMAC_STATUS_SERVICE_UNKNOWN;
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-LoRaMacStatus_t LoRaMacMibClassBSetRequestConfirm( MibRequestConfirm_t *mibSet )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    LoRaMacStatus_t status;
-
-    switch( mibSet->Type )
-    {
-        case MIB_PING_SLOT_DATARATE:
-        {
-            Ctx.NvmCtx->PingSlotCtx.Datarate = mibSet->Param.PingSlotDatarate;
-            NvmContextChange( );
-            break;
-        }
-        default:
-        {
-            status = LORAMAC_STATUS_SERVICE_UNKNOWN;
-            break;
-        }
-    }
-    return status;
-#else
-    return LORAMAC_STATUS_SERVICE_UNKNOWN;
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-void LoRaMacClassBPingSlotInfoAns( void )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    if( LoRaMacConfirmQueueIsCmdActive( MLME_PING_SLOT_INFO ) == true )
-    {
-        LoRaMacConfirmQueueSetStatus( LORAMAC_EVENT_INFO_STATUS_OK, MLME_PING_SLOT_INFO );
-        Ctx.NvmCtx->PingSlotCtx.Ctrl.Assigned = 1;
-        NvmContextChange( );
-    }
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-uint8_t LoRaMacClassBPingSlotChannelReq( uint8_t datarate, uint32_t frequency )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    uint8_t status = 0x03;
-    VerifyParams_t verify;
-    bool isCustomFreq = false;
-
-    if( frequency != 0 )
-    {
-        isCustomFreq = true;
-        verify.Frequency = frequency;
-        if( RegionVerify( *Ctx.LoRaMacClassBParams.LoRaMacRegion, &verify, PHY_FREQUENCY ) == false )
-        {
-            status &= 0xFE; // Channel frequency KO
-        }
-    }
-
-    verify.DatarateParams.Datarate = datarate;
-    verify.DatarateParams.DownlinkDwellTime = Ctx.LoRaMacClassBParams.LoRaMacParams->DownlinkDwellTime;
-
-    if( RegionVerify( *Ctx.LoRaMacClassBParams.LoRaMacRegion, &verify, PHY_RX_DR ) == false )
-    {
-        status &= 0xFD; // Datarate range KO
-    }
-
-    if( status == 0x03 )
-    {
-        if( isCustomFreq == true )
-        {
-            Ctx.NvmCtx->PingSlotCtx.Ctrl.CustomFreq = 1;
-            Ctx.NvmCtx->PingSlotCtx.Frequency = frequency;
-        }
-        else
-        {
-            Ctx.NvmCtx->PingSlotCtx.Ctrl.CustomFreq = 0;
-            Ctx.NvmCtx->PingSlotCtx.Frequency = 0;
-        }
-        Ctx.NvmCtx->PingSlotCtx.Datarate = datarate;
-        NvmContextChange( );
-    }
-
-    return status;
-#else
-    return 0;
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-void LoRaMacClassBBeaconTimingAns( uint16_t beaconTimingDelay, uint8_t beaconTimingChannel, TimerTime_t lastRxDone )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    Ctx.BeaconCtx.BeaconTimingDelay = ( CLASSB_BEACON_DELAY_BEACON_TIMING_ANS * beaconTimingDelay );
-    Ctx.BeaconCtx.BeaconTimingChannel = beaconTimingChannel;
-
-    if( LoRaMacConfirmQueueIsCmdActive( MLME_BEACON_TIMING ) == true )
-    {
-        if( Ctx.BeaconCtx.BeaconTimingDelay > CLASSB_BEACON_INTERVAL )
-        {
-            // We missed the beacon already
-            Ctx.BeaconCtx.BeaconTimingDelay = 0;
-            Ctx.BeaconCtx.BeaconTimingChannel = 0;
-            LoRaMacConfirmQueueSetStatus( LORAMAC_EVENT_INFO_STATUS_BEACON_NOT_FOUND, MLME_BEACON_TIMING );
-        }
-        else
-        {
-            Ctx.BeaconCtx.Ctrl.BeaconDelaySet = 1;
-            Ctx.BeaconCtx.Ctrl.BeaconChannelSet = 1;
-            Ctx.BeaconCtx.NextBeaconRx = SysTimeFromMs( lastRxDone + Ctx.BeaconCtx.BeaconTimingDelay );
-            LoRaMacConfirmQueueSetStatus( LORAMAC_EVENT_INFO_STATUS_OK, MLME_BEACON_TIMING );
-        }
-
-        Ctx.LoRaMacClassBParams.MlmeConfirm->BeaconTimingDelay = Ctx.BeaconCtx.BeaconTimingDelay;
-        Ctx.LoRaMacClassBParams.MlmeConfirm->BeaconTimingChannel = Ctx.BeaconCtx.BeaconTimingChannel;
-    }
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-void LoRaMacClassBDeviceTimeAns( void )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-
-    SysTime_t nextBeacon = SysTimeGet( );
-    uint32_t currentTimeMs = SysTimeToMs( nextBeacon );
-
-    nextBeacon.Seconds = nextBeacon.Seconds + ( 128 - ( nextBeacon.Seconds % 128 ) );
-    nextBeacon.SubSeconds = 0;
-
-    Ctx.BeaconCtx.NextBeaconRx = nextBeacon;
-    Ctx.BeaconCtx.LastBeaconRx = SysTimeSub( Ctx.BeaconCtx.NextBeaconRx, ( SysTime_t ){ .Seconds = CLASSB_BEACON_INTERVAL / 1000, .SubSeconds = 0 } );
-
-    if( LoRaMacConfirmQueueIsCmdActive( MLME_DEVICE_TIME ) == true )
-    {
-        if( currentTimeMs > SysTimeToMs( Ctx.BeaconCtx.NextBeaconRx ) )
-        {
-            // We missed the beacon already
-            Ctx.BeaconCtx.LastBeaconRx.Seconds = 0;
-            Ctx.BeaconCtx.LastBeaconRx.SubSeconds = 0;
-            Ctx.BeaconCtx.NextBeaconRx.Seconds = 0;
-            Ctx.BeaconCtx.NextBeaconRx.SubSeconds = 0;
-            LoRaMacConfirmQueueSetStatus( LORAMAC_EVENT_INFO_STATUS_BEACON_NOT_FOUND, MLME_DEVICE_TIME );
-        }
-        else
-        {
-            Ctx.BeaconCtx.Ctrl.BeaconDelaySet = 1;
-            Ctx.BeaconCtx.BeaconTimingDelay = SysTimeToMs( Ctx.BeaconCtx.NextBeaconRx ) - currentTimeMs;
-            Ctx.BeaconCtx.BeaconTime.Seconds = nextBeacon.Seconds - UNIX_GPS_EPOCH_OFFSET - 128;
-            Ctx.BeaconCtx.BeaconTime.SubSeconds = 0;
-            LoRaMacConfirmQueueSetStatus( LORAMAC_EVENT_INFO_STATUS_OK, MLME_DEVICE_TIME );
-        }
-    }
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-bool LoRaMacClassBBeaconFreqReq( uint32_t frequency )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    VerifyParams_t verify;
-
-    if( frequency != 0 )
-    {
-        verify.Frequency = frequency;
-
-        if( RegionVerify( *Ctx.LoRaMacClassBParams.LoRaMacRegion, &verify, PHY_FREQUENCY ) == true )
-        {
-            Ctx.NvmCtx->BeaconCtx.Ctrl.CustomFreq = 1;
-            Ctx.NvmCtx->BeaconCtx.Frequency = frequency;
-            NvmContextChange( );
-            return true;
-        }
-    }
-    else
-    {
-        Ctx.NvmCtx->BeaconCtx.Ctrl.CustomFreq = 0;
-        NvmContextChange( );
-        return true;
-    }
-    return false;
-#else
-    return false;
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-TimerTime_t LoRaMacClassBIsUplinkCollision( TimerTime_t txTimeOnAir )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    TimerTime_t currentTime = TimerGetCurrentTime( );
-    TimerTime_t beaconReserved = 0;
-    TimerTime_t nextBeacon = SysTimeToMs( Ctx.BeaconCtx.NextBeaconRx );
-
-    beaconReserved = nextBeacon -
-                     CLASSB_BEACON_GUARD -
-                     Ctx.LoRaMacClassBParams.LoRaMacParams->ReceiveDelay1 -
-                     Ctx.LoRaMacClassBParams.LoRaMacParams->ReceiveDelay2 -
-                     txTimeOnAir;
-
-    // Check if the next beacon will be received during the next uplink.
-    if( ( currentTime >= beaconReserved ) && ( currentTime < ( nextBeacon + CLASSB_BEACON_RESERVED ) ) )
-    {// Next beacon will be sent during the next uplink.
-        return CLASSB_BEACON_RESERVED;
-    }
-    return 0;
-#else
-    return 0;
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-void LoRaMacClassBStopRxSlots( void )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    TimerStop( &Ctx.PingSlotTimer );
-    TimerStop( &Ctx.MulticastSlotTimer );
-
-    CRITICAL_SECTION_BEGIN( );
-    LoRaMacClassBEvents.Events.PingSlot = 0;
-    LoRaMacClassBEvents.Events.MulticastSlot = 0;
-    CRITICAL_SECTION_END( );
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-void LoRaMacClassBStartRxSlots( void )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    if( Ctx.NvmCtx->PingSlotCtx.Ctrl.Assigned == 1 )
-    {
-        Ctx.PingSlotState = PINGSLOT_STATE_CALC_PING_OFFSET;
-        TimerSetValue( &Ctx.PingSlotTimer, 1 );
-        TimerStart( &Ctx.PingSlotTimer );
-
-        Ctx.MulticastSlotState = PINGSLOT_STATE_CALC_PING_OFFSET;
-        TimerSetValue( &Ctx.MulticastSlotTimer, 1 );
-        TimerStart( &Ctx.MulticastSlotTimer );
-    }
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-void LoRaMacClassBSetMulticastPeriodicity( MulticastCtx_t* multicastChannel )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    if( multicastChannel != NULL )
-    {
-        multicastChannel->PingNb = CalcPingNb( multicastChannel->ChannelParams.RxParams.ClassB.Periodicity );
-        multicastChannel->PingPeriod = CalcPingPeriod( multicastChannel->PingNb );
-    }
-#endif // LORAMAC_CLASSB_ENABLED
-}
-
-void LoRaMacClassBProcess( void )
-{
-#ifdef LORAMAC_CLASSB_ENABLED
-    LoRaMacClassBEvents_t events;
-
-    CRITICAL_SECTION_BEGIN( );
-    events = LoRaMacClassBEvents;
-    LoRaMacClassBEvents.Value = 0;
-    CRITICAL_SECTION_END( );
-
-    if( events.Value != 0 )
-    {
-        if( events.Events.Beacon == 1 )
-        {
-            LoRaMacClassBProcessBeacon( );
-        }
-        if( events.Events.PingSlot == 1 )
-        {
-            LoRaMacClassBProcessPingSlot( );
-        }
-        if( events.Events.MulticastSlot == 1 )
-        {
-            LoRaMacClassBProcessMulticastSlot( );
-        }
-    }
-#endif // LORAMAC_CLASSB_ENABLED
-}
diff --git a/mac/LoRaMacClassB.h b/mac/LoRaMacClassB.h
deleted file mode 100644
index eca7391..0000000
--- a/mac/LoRaMacClassB.h
+++ /dev/null
@@ -1,539 +0,0 @@
-/*!
- * \file      LoRaMacClassB.h
- *
- * \brief     LoRa MAC Class B layer implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \defgroup  LORAMACCLASSB LoRa MAC Class B layer implementation
- *            This module specifies the API implementation of the LoRaMAC Class B layer.
- *            This is a placeholder for a detailed description of the LoRaMac
- *            layer and the supported features.
- * \{
- */
-#ifndef __LORAMACCLASSB_H__
-#define __LORAMACCLASSB_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include "systime.h"
-#include "LoRaMacTypes.h"
-
-/*!
- * States of the class B beacon acquisition and tracking
- */
-typedef enum eBeaconState
-{
-    /*!
-     * Initial state to acquire the beacon
-     */
-    BEACON_STATE_ACQUISITION,
-    /*!
-     * Beacon acquisition state when a time reference is available
-     */
-    BEACON_STATE_ACQUISITION_BY_TIME,
-    /*!
-     * Handles the state when the beacon reception fails
-     */
-    BEACON_STATE_TIMEOUT,
-    /*!
-     * Handles the state when the beacon was missed due to an uplink
-     */
-    BEACON_STATE_BEACON_MISSED,
-    /*!
-     * Reacquisition state which applies the algorithm to enlarge the reception
-     * windows
-     */
-    BEACON_STATE_REACQUISITION,
-    /*!
-     * The node has locked a beacon successfully
-     */
-    BEACON_STATE_LOCKED,
-    /*!
-     * The beacon state machine is stopped due to operations with higher priority
-     */
-    BEACON_STATE_HALT,
-    /*!
-     * The node currently operates in the beacon window and is idle. In this
-     * state, the temperature measurement takes place
-     */
-    BEACON_STATE_IDLE,
-    /*!
-     * The node operates in the guard time of class B
-     */
-    BEACON_STATE_GUARD,
-    /*!
-     * The node is in receive mode to lock a beacon
-     */
-    BEACON_STATE_RX,
-    /*!
-     * The nodes switches the device class
-     */
-    BEACON_STATE_LOST,
-}BeaconState_t;
-
-/*!
- * States of the class B ping slot mechanism
- */
-typedef enum ePingSlotState
-{
-    /*!
-     * Calculation of the ping slot offset
-     */
-    PINGSLOT_STATE_CALC_PING_OFFSET,
-    /*!
-     * State to set the timer to open the next ping slot
-     */
-    PINGSLOT_STATE_SET_TIMER,
-    /*!
-     * The node is in idle state
-     */
-    PINGSLOT_STATE_IDLE,
-    /*!
-     * The node opens up a ping slot window
-     */
-    PINGSLOT_STATE_RX,
-}PingSlotState_t;
-
-/*!
- * Class B ping slot context structure
- */
-typedef struct sPingSlotContext
-{
-
-    /*!
-     * Ping slot length time in ms
-     */
-    uint32_t PingSlotWindow;
-    /*!
-     * Ping offset
-     */
-    uint16_t PingOffset;
-    /*!
-     * Current symbol timeout. The node enlarges this variable in case of beacon
-     * loss.
-     */
-    uint16_t SymbolTimeout;
-    /*!
-     * The multicast channel which will be enabled next.
-     */
-    MulticastCtx_t *NextMulticastChannel;
-}PingSlotContext_t;
-
-
-/*!
- * Class B beacon context structure
- */
-typedef struct sBeaconContext
-{
-    struct sBeaconCtrl
-    {
-        /*!
-         * Set if the node receives beacons
-         */
-        uint8_t BeaconMode          : 1;
-        /*!
-         * Set if the node has acquired the beacon
-         */
-        uint8_t BeaconAcquired      : 1;
-        /*!
-         * Set if a beacon delay was set for the beacon acquisition
-         */
-        uint8_t BeaconDelaySet      : 1;
-        /*!
-         * Set if a beacon channel was set for the beacon acquisition
-         */
-        uint8_t BeaconChannelSet    : 1;
-        /*!
-         * Set if beacon acquisition is pending
-         */
-        uint8_t AcquisitionPending  : 1;
-        /*!
-         * Set if the beacon state machine will be resumed
-         */
-        uint8_t ResumeBeaconing      : 1;
-    }Ctrl;
-
-    /*!
-     * Current temperature
-     */
-    float Temperature;
-    /*!
-     * Beacon time received with the beacon frame
-     */
-    SysTime_t BeaconTime;
-    /*!
-     * Time when the last beacon was received
-     */
-    SysTime_t LastBeaconRx;
-    /*!
-     * Time when the next beacon will be received
-     */
-    SysTime_t NextBeaconRx;
-    /*!
-     * This is the time where the RX window will be opened.
-     * Its base is NextBeaconRx with temperature compensations
-     * and RX window movement.
-     */
-    TimerTime_t NextBeaconRxAdjusted;
-    /*!
-     * Current symbol timeout. The node enlarges this variable in case of beacon
-     * loss.
-     */
-    uint16_t SymbolTimeout;
-    /*!
-     * Specifies how much time the beacon window will be moved.
-     */
-    TimerTime_t BeaconWindowMovement;
-    /*!
-     * Beacon timing channel for next beacon
-     */
-    uint8_t BeaconTimingChannel;
-    /*!
-     * Delay for next beacon in ms
-     */
-    TimerTime_t BeaconTimingDelay;
-    TimerTime_t TimeStamp;
-}BeaconContext_t;
-
-/*!
- * Data structure which contains the callbacks
- */
-typedef struct sLoRaMacClassBCallback
-{
-    /*!
-     * \brief   Measures the temperature level
-     *
-     * \retval  Temperature level
-     */
-    float ( *GetTemperatureLevel )( void );
-    /*!
-     *\brief    Will be called each time a Radio IRQ is handled by the MAC
-     *          layer.
-     *
-     *\warning  Runs in a IRQ context. Should only change variables state.
-     */
-    void ( *MacProcessNotify )( void );
-}LoRaMacClassBCallback_t;
-
-/*!
- * Data structure which pointers to the properties LoRaMAC
- */
-typedef struct sLoRaMacClassBParams
-{
-    /*!
-     * Pointer to the MlmeIndication structure
-     */
-    MlmeIndication_t *MlmeIndication;
-    /*!
-     * Pointer to the McpsIndication structure
-     */
-    McpsIndication_t *McpsIndication;
-    /*!
-     * Pointer to the MlmeConfirm structure
-     */
-    MlmeConfirm_t *MlmeConfirm;
-    /*!
-     * Pointer to the LoRaMacFlags structure
-     */
-    LoRaMacFlags_t *LoRaMacFlags;
-    /*!
-     * Pointer to the LoRaMac device address
-     */
-    uint32_t *LoRaMacDevAddr;
-    /*!
-     * Pointer to the LoRaMac region definition
-     */
-    LoRaMacRegion_t *LoRaMacRegion;
-    /*!
-     * Pointer to the LoRaMacParams structure
-     */
-    LoRaMacParams_t *LoRaMacParams;
-    /*!
-     * Pointer to the multicast channel list
-     */
-    MulticastCtx_t *MulticastChannels;
-}LoRaMacClassBParams_t;
-
-/*!
- * Signature of callback function to be called by this module when the
- * non-volatile needs to be saved.
- */
-typedef void ( *LoRaMacClassBNvmEvent )( void );
-
-/*!
- * \brief Initialize LoRaWAN Class B
- *
- * \param [IN] classBParams Information and feedback parameter
- * \param [IN] callbacks Contains the callback which the Class B implementation needs
- * \param [IN] callback function which will be called when the non-volatile context needs to be saved.
- */
-void LoRaMacClassBInit( LoRaMacClassBParams_t *classBParams, LoRaMacClassBCallback_t *callbacks, LoRaMacClassBNvmEvent classBNvmCtxChanged );
-
-/*!
- * Restores the internal non-volatile context from passed pointer.
- *
- * \param [IN]     classBNvmCtx     - Pointer to non-volatile class B module context to be restored.
- *
- * \retval                     - Status of the operation
- */
-bool LoRaMacClassBRestoreNvmCtx( void* classBNvmCtx );
-
-/*!
- * Returns a pointer to the internal non-volatile context.
- *
- * \param [IN]     classBNvmCtxSize - Size of the module non-volatile context
- *
- * \retval                    - Points to a structure where the module store its non-volatile context
- */
-void* LoRaMacClassBGetNvmCtx( size_t* classBNvmCtxSize );
-
-/*!
- * \brief Set the state of the beacon state machine
- *
- * \param [IN] beaconState Beacon state.
- */
-void LoRaMacClassBSetBeaconState( BeaconState_t beaconState );
-
-/*!
- * \brief Set the state of the ping slot state machine
- *
- * \param [IN] pingSlotState Ping slot state.
- */
-void LoRaMacClassBSetPingSlotState( PingSlotState_t pingSlotState );
-
-/*!
- * \brief Set the state of the multicast slot state machine
- *
- * \param [IN] pingSlotState multicast slot state.
- */
-void LoRaMacClassBSetMulticastSlotState( PingSlotState_t multicastSlotState );
-
-/*!
- * \brief Verifies if an acquisition procedure is in progress
- *
- * \retval [true, if the acquisition is in progress; false, if not]
- */
-bool LoRaMacClassBIsAcquisitionInProgress( void );
-
-/*!
- * \brief State machine of the Class B for beaconing
- */
-void LoRaMacClassBBeaconTimerEvent( void* context );
-
-/*!
- * \brief State machine of the Class B for ping slots
- */
-void LoRaMacClassBPingSlotTimerEvent( void* context );
-
-/*!
- * \brief State machine of the Class B for multicast slots
- */
-void LoRaMacClassBMulticastSlotTimerEvent( void* context );
-
-/*!
- * \brief Receives and decodes the beacon frame
- *
- * \param [IN] payload Pointer to the payload
- * \param [IN] size Size of the payload
- * \retval [true, if the node has received a beacon; false, if not]
- */
-bool LoRaMacClassBRxBeacon( uint8_t *payload, uint16_t size );
-
-/*!
- * \brief The function validates, if the node expects a beacon
- *        at the current time.
- *
- * \retval [true, if the node expects a beacon; false, if not]
- */
-bool LoRaMacClassBIsBeaconExpected( void );
-
-/*!
- * \brief The function validates, if the node expects a ping slot
- *        at the current time.
- *
- * \retval [true, if the node expects a ping slot; false, if not]
- */
-bool LoRaMacClassBIsPingExpected( void );
-
-/*!
- * \brief The function validates, if the node expects a multicast slot
- *        at the current time.
- *
- * \retval [true, if the node expects a multicast slot; false, if not]
- */
-bool LoRaMacClassBIsMulticastExpected( void );
-
-/*!
- * \brief Verifies if the acquisition pending bit is set
- *
- * \retval [true, if the bit is set; false, if not]
- */
-bool LoRaMacClassBIsAcquisitionPending( void );
-
-/*!
- * \brief Verifies if the beacon mode active bit is set
- *
- * \retval [true, if the bit is set; false, if not]
- */
-bool LoRaMacClassBIsBeaconModeActive( void );
-
-/*!
- * \brief Stops the beacon and ping slot operation
- */
-void LoRaMacClassBHaltBeaconing( void );
-
-/*!
- * \brief Resumes the beacon and ping slot operation
- */
-void LoRaMacClassBResumeBeaconing( void );
-
-/*!
- * \brief Sets the periodicity of the ping slots
- *
- * \param [IN] periodicity Periodicity
- */
-void LoRaMacClassBSetPingSlotInfo( uint8_t periodicity );
-
-/*!
- * \brief Switches the device class
- *
- * \param [IN] nextClass Device class to switch to
- *
- * \retval LoRaMacStatus_t Status of the operation.
- */
-LoRaMacStatus_t LoRaMacClassBSwitchClass( DeviceClass_t nextClass );
-
-/*!
- * \brief   LoRaMAC ClassB MIB-Get
- *
- * \details The mac information base service to get attributes of the LoRaMac
- *          Class B layer.
- *
- * \param   [IN] mibRequest - MIB-GET-Request to perform. Refer to \ref MibRequestConfirm_t.
- *
- * \retval  LoRaMacStatus_t Status of the operation. Possible returns are:
- *          \ref LORAMAC_STATUS_OK,
- *          \ref LORAMAC_STATUS_SERVICE_UNKNOWN,
- *          \ref LORAMAC_STATUS_PARAMETER_INVALID.
- */
-LoRaMacStatus_t LoRaMacClassBMibGetRequestConfirm( MibRequestConfirm_t *mibGet );
-
-/*!
- * \brief   LoRaMAC Class B MIB-Set
- *
- * \details The mac information base service to set attributes of the LoRaMac
- *          Class B layer.
- *
- * \param   [IN] mibRequest - MIB-SET-Request to perform. Refer to \ref MibRequestConfirm_t.
- *
- * \retval  LoRaMacStatus_t Status of the operation. Possible returns are:
- *          \ref LORAMAC_STATUS_OK,
- *          \ref LORAMAC_STATUS_BUSY,
- *          \ref LORAMAC_STATUS_SERVICE_UNKNOWN,
- *          \ref LORAMAC_STATUS_PARAMETER_INVALID.
- */
-LoRaMacStatus_t LoRaMacMibClassBSetRequestConfirm( MibRequestConfirm_t *mibSet );
-
-/*!
- * \brief This function handles the PING_SLOT_FREQ_ANS
- */
-void LoRaMacClassBPingSlotInfoAns( void );
-
-/*!
- * \brief This function handles the PING_SLOT_CHANNEL_REQ
- *
- * \param [IN] datarate Device class to switch to
- * \param [IN] frequency Device class to switch to
- *
- * \retval Status for the MAC answer.
- */
-uint8_t LoRaMacClassBPingSlotChannelReq( uint8_t datarate, uint32_t frequency );
-
-/*!
- * \brief This function handles the BEACON_TIMING_ANS
- *
- * \param [IN] beaconTimingDelay The beacon timing delay
- * \param [IN] beaconTimingChannel The beacon timing channel
- * \param [IN] lastRxDone The time of the last frame reception
- */
-void LoRaMacClassBBeaconTimingAns( uint16_t beaconTimingDelay, uint8_t beaconTimingChannel, TimerTime_t lastRxDone );
-
-/*!
- * \brief This function handles the ClassB DEVICE_TIME_ANS
- */
-void LoRaMacClassBDeviceTimeAns( void );
-
-/*!
- * \brief This function handles the BEACON_FREQ_REQ
- *
- * \param [IN] frequency Frequency to set
- *
- * \retval [true, if MAC shall send an answer; false, if not]
- */
-bool LoRaMacClassBBeaconFreqReq( uint32_t frequency );
-
-/*!
- * \brief Queries the ping slot window time
- *
- * \param [IN] txTimeOnAir TX time on air for the next uplink
- *
- * \retval Returns the time the uplink should be delayed
- */
-TimerTime_t LoRaMacClassBIsUplinkCollision( TimerTime_t txTimeOnAir );
-
-/*!
- * \brief Stops the timers for the RX slots. This includes the
- *        timers for ping and multicast slots.
- */
-void LoRaMacClassBStopRxSlots( void );
-
-/*!
- * \brief Starts the timers for the RX slots. This includes the
- *        timers for ping and multicast slots.
- */
-void LoRaMacClassBStartRxSlots( void );
-
-/*!
- * \brief Starts the timers for the RX slots. This includes the
- *        timers for ping and multicast slots.
- *
- * \param [IN] periodicity Downlink periodicity
- *
- * \param [IN] multicastChannel Related multicast channel
- */
-void LoRaMacClassBSetMulticastPeriodicity( MulticastCtx_t* multicastChannel );
-
-void LoRaMacClassBProcess( void );
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __LORAMACCLASSB_H__
diff --git a/mac/LoRaMacClassBConfig.h b/mac/LoRaMacClassBConfig.h
deleted file mode 100644
index 058dc2f..0000000
--- a/mac/LoRaMacClassBConfig.h
+++ /dev/null
@@ -1,124 +0,0 @@
-/*!
- * \file      LoRaMacClassBConfig.h
- *
- * \brief     LoRa MAC Class B configuration
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \defgroup  LORAMACCLASSB LoRa MAC Class B configuration
- *            This header file contains parameters to configure the class b operation.
- *            By default, all parameters are set according to the specification.
- * \{
- */
-#ifndef __LORAMACCLASSBCONFIG_H__
-#define __LORAMACCLASSBCONFIG_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-/*!
- * Defines the beacon interval in ms
- */
-#define CLASSB_BEACON_INTERVAL                      128000
-
-/*!
- * Beacon reserved time in ms
- */
-#define CLASSB_BEACON_RESERVED                      2120
-
-/*!
- * Beacon guard time in ms
- */
-#define CLASSB_BEACON_GUARD                         3000
-
-/*!
- * Beacon window time in ms
- */
-#define CLASSB_BEACON_WINDOW                        122880
-
-/*!
- * Beacon window time in numer of slots
- */
-#define CLASSB_BEACON_WINDOW_SLOTS                  4096
-
-/*!
- * Ping slot length time in ms
- */
-#define CLASSB_PING_SLOT_WINDOW                     30
-
-/*!
- * Maximum allowed beacon less time in ms
- */
-#define CLASSB_MAX_BEACON_LESS_PERIOD               7200000
-
-/*!
- * Delay time for the BeaconTimingAns in ms
- */
-#define CLASSB_BEACON_DELAY_BEACON_TIMING_ANS       30
-
-/*!
- * Default symbol timeout for beacons and ping slot windows
- */
-#define CLASSB_BEACON_SYMBOL_TO_DEFAULT             8
-
-/*!
- * Maximum symbol timeout for beacons
- */
-#define CLASSB_BEACON_SYMBOL_TO_EXPANSION_MAX       255
-
-/*!
- * Maximum symbol timeout for ping slots
- */
-#define CLASSB_PING_SLOT_SYMBOL_TO_EXPANSION_MAX    30
-
-/*!
- * Symbol expansion value for beacon windows in case of beacon
- * loss in symbols
- */
-#define CLASSB_BEACON_SYMBOL_TO_EXPANSION_FACTOR    2
-
-/*!
- * Defines the default window movement time
- */
-#define CLASSB_WINDOW_MOVE_DEFAULT                  2
-
-/*!
- * Defines the maximum time for the beacon movement
- */
-#define CLASSB_WINDOW_MOVE_EXPANSION_MAX            256
-
-/*!
- * Defines the expansion factor for the beacon movement
- */
-#define CLASSB_WINDOW_MOVE_EXPANSION_FACTOR         2
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __LORAMACCLASSBCONFIG_H__
diff --git a/mac/LoRaMacCommands.c b/mac/LoRaMacCommands.c
deleted file mode 100644
index 8e69629..0000000
--- a/mac/LoRaMacCommands.c
+++ /dev/null
@@ -1,649 +0,0 @@
-/*
- / _____)             _              | |
-( (____  _____ ____ _| |_ _____  ____| |__
- \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- _____) ) ____| | | || |_| ____( (___| | | |
-(______/|_____)_|_|_| \__)_____)\____)_| |_|
-    (C)2013 Semtech
- ___ _____ _   ___ _  _____ ___  ___  ___ ___
-/ __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
-\__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
-|___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
-embedded.connectivity.solutions===============
-
-Description: LoRa MAC commands
-
-License: Revised BSD License, see LICENSE.TXT file include in the project
-
-Maintainer: Miguel Luis ( Semtech ), Daniel Jaeckle ( STACKFORCE ), Johannes Bruder ( STACKFORCE )
-*/
-#include <stddef.h>
-
-#include "utilities.h"
-#include "LoRaMacCommands.h"
-#include "LoRaMacConfirmQueue.h"
-
-/*!
- * Number of MAC Command slots
- */
-#define NUM_OF_MAC_COMMANDS 15
-
-/*!
- * Size of the CID field of MAC commands
- */
-#define CID_FIELD_SIZE 1
-
-/*!
- *  Mac Commands list structure
- */
-typedef struct sMacCommandsList
-{
-    /*
-     * First element of MAC command list.
-     */
-    MacCommand_t* First;
-    /*
-     * Last element of MAC command list.
-     */
-    MacCommand_t* Last;
-} MacCommandsList_t;
-
-/*!
- * LoRaMac Commands Context structure
- */
-typedef struct sLoRaMacCommandsCtx
-{
-    /*
-     * List of MAC command elements
-     */
-    MacCommandsList_t MacCommandList;
-    /*
-     * Buffer to store MAC command elements
-     */
-    MacCommand_t MacCommandSlots[NUM_OF_MAC_COMMANDS];
-    /*
-     * Size of all MAC commands serialized as buffer
-     */
-    size_t SerializedCmdsSize;
-} LoRaMacCommandsCtx_t;
-
-/*!
- * Callback function to notify the upper layer about context change
- */
-static LoRaMacCommandsNvmEvent CommandsNvmCtxChanged;
-
-/*!
- * Non-volatile module context.
- */
-static LoRaMacCommandsCtx_t NvmCtx;
-
-/* Memory management functions */
-
-/*!
- * \brief Determines if a MAC command slot is free
- *
- * \param[IN]     slot           - Slot to check
- * \retval                       - Status of the operation
- */
-static bool IsSlotFree( const MacCommand_t* slot )
-{
-    uint8_t* mem = ( uint8_t* )slot;
-
-    for( uint16_t size = 0; size < sizeof( MacCommand_t ); size++ )
-    {
-        if( mem[size] != 0x00 )
-        {
-            return false;
-        }
-    }
-    return true;
-}
-
-/*!
- * \brief Allocates a new MAC command memory slot
- *
- * \retval                       - Pointer to slot
- */
-static MacCommand_t* MallocNewMacCommandSlot( void )
-{
-    uint8_t itr = 0;
-
-    while( IsSlotFree( ( const MacCommand_t* )&NvmCtx.MacCommandSlots[itr] ) == false )
-    {
-        itr++;
-        if( itr == NUM_OF_MAC_COMMANDS )
-        {
-            return NULL;
-        }
-    }
-
-    return &NvmCtx.MacCommandSlots[itr];
-}
-
-/*!
- * \brief Free memory slot
- *
- * \param[IN]     slot           - Slot to free
- *
- * \retval                       - Status of the operation
- */
-static bool FreeMacCommandSlot( MacCommand_t* slot )
-{
-    if( slot == NULL )
-    {
-        return false;
-    }
-
-    memset1( ( uint8_t* )slot, 0x00, sizeof( MacCommand_t ) );
-
-    return true;
-}
-
-/* Linked list functions */
-
-/*!
- * \brief Initialize list
- *
- * \param[IN]     list           - List that shall be initialized
- * \retval                       - Status of the operation
- */
-static bool LinkedListInit( MacCommandsList_t* list )
-{
-    if( list == NULL )
-    {
-        return false;
-    }
-
-    list->First = NULL;
-    list->Last = NULL;
-
-    return true;
-}
-
-/*!
- * \brief Add an element to the list
- *
- * \param[IN]     list           - List where the element shall be added.
- * \param[IN]     element        - Element to add
- * \retval                       - Status of the operation
- */
-static bool LinkedListAdd( MacCommandsList_t* list, MacCommand_t* element )
-{
-    if( ( list == NULL ) || ( element == NULL ) )
-    {
-        return false;
-    }
-
-    // Check if this is the first entry to enter the list.
-    if( list->First == NULL )
-    {
-        list->First = element;
-    }
-
-    // Check if the last entry exists and update its next point.
-    if( list->Last )
-    {
-        list->Last->Next = element;
-    }
-
-    // Update the next point of this entry.
-    element->Next = NULL;
-
-    // Update the last entry of the list.
-    list->Last = element;
-
-    return true;
-}
-
-/*!
- * \brief Return the previous element in the list.
- *
- * \param[IN]     list           - List
- * \param[IN]     element        - Element where the previous element shall be searched
- * \retval                       - Status of the operation
- */
-static MacCommand_t* LinkedListGetPrevious( MacCommandsList_t* list, MacCommand_t* element )
-{
-    if( ( list == NULL ) || ( element == NULL ) )
-    {
-        return NULL;
-    }
-
-    MacCommand_t* curElement;
-
-    // Start at the head of the list
-    curElement = list->First;
-
-    // When current element is the first of the list, there's no previous element so we can return NULL immediately.
-    if( element != curElement )
-    {
-        // Loop through all elements until the end is reached or the next of current is the current element.
-        while( ( curElement != NULL ) && ( curElement->Next != element ) )
-        {
-            curElement = curElement->Next;
-        }
-    }
-    else
-    {
-        curElement = NULL;
-    }
-
-    return curElement;
-}
-
-/*!
- * \brief Remove an element from the list
- *
- * \param[IN]     list           - List where the element shall be removed from.
- * \param[IN]     element        - Element to remove
- * \retval                       - Status of the operation
- */
-static bool LinkedListRemove( MacCommandsList_t* list, MacCommand_t* element )
-{
-    if( ( list == NULL ) || ( element == NULL ) )
-    {
-        return false;
-    }
-
-    MacCommand_t* PrevElement = LinkedListGetPrevious( list, element );
-
-    if( list->First == element )
-    {
-        list->First = element->Next;
-    }
-
-    if( list->Last == element )
-    {
-        list->Last = PrevElement;
-    }
-
-    if( PrevElement != NULL )
-    {
-        PrevElement->Next = element->Next;
-    }
-
-    element->Next = NULL;
-
-    return true;
-}
-
-/*
- * \brief Determines if a MAC command is sticky or not
- *
- * \param[IN]   cid                - MAC command identifier
- *
- * \retval                     - Status of the operation
- */
-static bool IsSticky( uint8_t cid )
-{
-    switch( cid )
-    {
-        case MOTE_MAC_DL_CHANNEL_ANS:
-        case MOTE_MAC_RX_PARAM_SETUP_ANS:
-        case MOTE_MAC_RX_TIMING_SETUP_ANS:
-        case MOTE_MAC_TX_PARAM_SETUP_ANS:
-            return true;
-        default:
-            return false;
-    }
-}
-
-/*
- * \brief Wrapper function for the NvmCtx
- */
-static void NvmCtxCallback( void )
-{
-    if( CommandsNvmCtxChanged != NULL )
-    {
-        CommandsNvmCtxChanged( );
-    }
-}
-
-LoRaMacCommandStatus_t LoRaMacCommandsInit( LoRaMacCommandsNvmEvent commandsNvmCtxChanged )
-{
-    // Initialize with default
-    memset1( ( uint8_t* )&NvmCtx, 0, sizeof( NvmCtx ) );
-
-    LinkedListInit( &NvmCtx.MacCommandList );
-
-    // Assign callback
-    CommandsNvmCtxChanged = commandsNvmCtxChanged;
-
-    return LORAMAC_COMMANDS_SUCCESS;
-}
-
-LoRaMacCommandStatus_t LoRaMacCommandsRestoreNvmCtx( void* commandsNvmCtx )
-{
-    // Restore module context
-    if( commandsNvmCtx != NULL )
-    {
-        memcpy1( ( uint8_t* )&NvmCtx, ( uint8_t* )commandsNvmCtx, sizeof( NvmCtx ) );
-        return LORAMAC_COMMANDS_SUCCESS;
-    }
-    else
-    {
-        return LORAMAC_COMMANDS_ERROR_NPE;
-    }
-}
-
-void* LoRaMacCommandsGetNvmCtx( size_t* commandsNvmCtxSize )
-{
-    *commandsNvmCtxSize = sizeof( NvmCtx );
-    return &NvmCtx;
-}
-
-LoRaMacCommandStatus_t LoRaMacCommandsAddCmd( uint8_t cid, uint8_t* payload, size_t payloadSize )
-{
-    if( payload == NULL )
-    {
-        return LORAMAC_COMMANDS_ERROR_NPE;
-    }
-    MacCommand_t* newCmd;
-
-    // Allocate a memory slot
-    newCmd = MallocNewMacCommandSlot( );
-
-    if( newCmd == 0 )
-    {
-        return LORAMAC_COMMANDS_ERROR_MEMORY;
-    }
-
-    // Add it to the list of Mac commands
-    if( LinkedListAdd( &NvmCtx.MacCommandList, newCmd ) == false )
-    {
-        return LORAMAC_COMMANDS_ERROR;
-    }
-
-    // Set Values
-    newCmd->CID = cid;
-    newCmd->PayloadSize = payloadSize;
-    memcpy1( ( uint8_t* )newCmd->Payload, payload, payloadSize );
-    newCmd->IsSticky = IsSticky( cid );
-
-    NvmCtx.SerializedCmdsSize += ( CID_FIELD_SIZE + payloadSize );
-
-    NvmCtxCallback( );
-
-    return LORAMAC_COMMANDS_SUCCESS;
-}
-
-LoRaMacCommandStatus_t LoRaMacCommandsRemoveCmd( MacCommand_t* macCmd )
-{
-    if( macCmd == NULL )
-    {
-        return LORAMAC_COMMANDS_ERROR_NPE;
-    }
-
-    // Remove the Mac command element from MacCommandList
-    if( LinkedListRemove( &NvmCtx.MacCommandList, macCmd ) == false )
-    {
-        return LORAMAC_COMMANDS_ERROR_CMD_NOT_FOUND;
-    }
-
-    NvmCtx.SerializedCmdsSize -= ( CID_FIELD_SIZE + macCmd->PayloadSize );
-
-    // Free the MacCommand Slot
-    if( FreeMacCommandSlot( macCmd ) == false )
-    {
-        return LORAMAC_COMMANDS_ERROR;
-    }
-
-    NvmCtxCallback( );
-
-    return LORAMAC_COMMANDS_SUCCESS;
-}
-
-LoRaMacCommandStatus_t LoRaMacCommandsGetCmd( uint8_t cid, MacCommand_t** macCmd )
-{
-    MacCommand_t* curElement;
-
-    // Start at the head of the list
-    curElement = NvmCtx.MacCommandList.First;
-
-    // Loop through all elements until we find the element with the given CID
-    while( ( curElement != NULL ) && ( curElement->CID != cid ) )
-    {
-        curElement = curElement->Next;
-    }
-
-    // Update the pointer anyway
-    *macCmd = curElement;
-
-    // Handle error in case if we reached the end without finding it.
-    if( curElement == NULL )
-    {
-        return LORAMAC_COMMANDS_ERROR_CMD_NOT_FOUND;
-    }
-    return LORAMAC_COMMANDS_SUCCESS;
-}
-
-LoRaMacCommandStatus_t LoRaMacCommandsRemoveNoneStickyCmds( void )
-{
-    MacCommand_t* curElement;
-    MacCommand_t* nexElement;
-
-    // Start at the head of the list
-    curElement = NvmCtx.MacCommandList.First;
-
-    // Loop through all elements
-    while( curElement != NULL )
-    {
-        if( curElement->IsSticky == false )
-        {
-            nexElement = curElement->Next;
-            LoRaMacCommandsRemoveCmd( curElement );
-            curElement = nexElement;
-        }
-        else
-        {
-            curElement = curElement->Next;
-        }
-    }
-
-    NvmCtxCallback( );
-
-    return LORAMAC_COMMANDS_SUCCESS;
-}
-
-LoRaMacCommandStatus_t LoRaMacCommandsRemoveStickyAnsCmds( void )
-{
-    MacCommand_t* curElement;
-    MacCommand_t* nexElement;
-
-    // Start at the head of the list
-    curElement = NvmCtx.MacCommandList.First;
-
-    // Loop through all elements
-    while( curElement != NULL )
-    {
-        nexElement = curElement->Next;
-        if( IsSticky( curElement->CID ) == true )
-        {
-            LoRaMacCommandsRemoveCmd( curElement );
-        }
-        curElement = nexElement;
-    }
-
-    NvmCtxCallback( );
-
-    return LORAMAC_COMMANDS_SUCCESS;
-}
-
-LoRaMacCommandStatus_t LoRaMacCommandsGetSizeSerializedCmds( size_t* size )
-{
-    if( size == NULL )
-    {
-        return LORAMAC_COMMANDS_ERROR_NPE;
-    }
-    *size = NvmCtx.SerializedCmdsSize;
-    return LORAMAC_COMMANDS_SUCCESS;
-}
-
-LoRaMacCommandStatus_t LoRaMacCommandsSerializeCmds( size_t availableSize, size_t* effectiveSize, uint8_t* buffer )
-{
-    MacCommand_t* curElement = NvmCtx.MacCommandList.First;
-    MacCommand_t* nextElement;
-    uint8_t itr = 0;
-
-    if( ( buffer == NULL ) || ( effectiveSize == NULL ) )
-    {
-        return LORAMAC_COMMANDS_ERROR_NPE;
-    }
-
-    // Loop through all elements which fits into the buffer
-    while( curElement != NULL )
-    {
-        // If the next MAC command still fits into the buffer, add it.
-        if( ( availableSize - itr ) >= ( CID_FIELD_SIZE + curElement->PayloadSize ) )
-        {
-            buffer[itr++] = curElement->CID;
-            memcpy1( &buffer[itr], curElement->Payload, curElement->PayloadSize );
-            itr += curElement->PayloadSize;
-        }
-        else
-        {
-            break;
-        }
-        curElement = curElement->Next;
-    }
-
-    // Remove all commands which do not fit into the buffer
-    while( curElement != NULL )
-    {
-        // Store the next element before removing the current one
-        nextElement = curElement->Next;
-        LoRaMacCommandsRemoveCmd( curElement );
-        curElement = nextElement;
-    }
-
-    // Fetch the effective size of the mac commands
-    LoRaMacCommandsGetSizeSerializedCmds( effectiveSize );
-
-    return LORAMAC_COMMANDS_SUCCESS;
-}
-
-LoRaMacCommandStatus_t LoRaMacCommandsStickyCmdsPending( bool* cmdsPending )
-{
-    if( cmdsPending == NULL )
-    {
-        return LORAMAC_COMMANDS_ERROR_NPE;
-    }
-    MacCommand_t* curElement;
-    curElement = NvmCtx.MacCommandList.First;
-
-    *cmdsPending = false;
-
-    // Loop through all elements
-    while( curElement != NULL )
-    {
-        if( curElement->IsSticky == true )
-        {
-            // Found one sticky MAC command
-            *cmdsPending = true;
-            return LORAMAC_COMMANDS_SUCCESS;
-        }
-        curElement = curElement->Next;
-    }
-
-    return LORAMAC_COMMANDS_SUCCESS;
-}
-
-uint8_t LoRaMacCommandsGetCmdSize( uint8_t cid )
-{
-    uint8_t cidSize = 0;
-
-    // Decode Frame MAC commands
-    switch( cid )
-    {
-        case SRV_MAC_LINK_CHECK_ANS:
-        {
-            // cid + Margin + GwCnt
-            cidSize = 3;
-            break;
-        }
-        case SRV_MAC_LINK_ADR_REQ:
-        {
-            // cid + DataRate_TXPower + ChMask (2) + Redundancy
-            cidSize = 5;
-            break;
-        }
-        case SRV_MAC_DUTY_CYCLE_REQ:
-        {
-            // cid + DutyCyclePL
-            cidSize = 2;
-            break;
-        }
-        case SRV_MAC_RX_PARAM_SETUP_REQ:
-        {
-            // cid + DLsettings + Frequency (3)
-            cidSize = 5;
-            break;
-        }
-        case SRV_MAC_DEV_STATUS_REQ:
-        {
-            // cid
-            cidSize = 1;
-            break;
-        }
-        case SRV_MAC_NEW_CHANNEL_REQ:
-        {
-            // cid + ChIndex + Frequency (3) + DrRange
-            cidSize = 6;
-            break;
-        }
-        case SRV_MAC_RX_TIMING_SETUP_REQ:
-        {
-            // cid + Settings
-            cidSize = 2;
-            break;
-        }
-        case SRV_MAC_TX_PARAM_SETUP_REQ:
-        {
-            // cid + EIRP_DwellTime
-            cidSize = 2;
-            break;
-        }
-        case SRV_MAC_DL_CHANNEL_REQ:
-        {
-            // cid + ChIndex + Frequency (3)
-            cidSize = 5;
-            break;
-        }
-        case SRV_MAC_DEVICE_TIME_ANS:
-        {
-            // cid + Seconds (4) + Fractional seconds (1)
-            cidSize = 6;
-            break;
-        }
-        case SRV_MAC_PING_SLOT_INFO_ANS:
-        {
-            // cid
-            cidSize = 1;
-            break;
-        }
-        case SRV_MAC_PING_SLOT_CHANNEL_REQ:
-        {
-            // cid + Frequency (3) + DR
-            cidSize = 5;
-            break;
-        }
-        case SRV_MAC_BEACON_TIMING_ANS:
-        {
-            // cid + TimingDelay (2) + Channel
-            cidSize = 4;
-            break;
-        }
-        case SRV_MAC_BEACON_FREQ_REQ:
-        {
-            // cid + Frequency (3)
-            cidSize = 4;
-            break;
-        }
-        default:
-        {
-            // Unknown command. ABORT MAC commands processing
-            break;
-        }
-    }
-    return cidSize;
-}
diff --git a/mac/LoRaMacCommands.h b/mac/LoRaMacCommands.h
deleted file mode 100644
index 2452efe..0000000
--- a/mac/LoRaMacCommands.h
+++ /dev/null
@@ -1,236 +0,0 @@
-/*!
- * \file      LoRaMacCommands.h
- *
- * \brief     LoRa MAC commands
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * addtogroup LORAMAC
- * \{
- *
- */
-#ifndef __LORAMAC_COMMANDS_H__
-#define __LORAMAC_COMMANDS_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-#include <stddef.h>
-#include "LoRaMacTypes.h"
-
-
-/*
- * Number of MAC Command slots
- */
-#define LORAMAC_COMMADS_MAX_NUM_OF_PARAMS   2
-
-/*!
- * LoRaWAN MAC Command element
- */
-typedef struct sMacCommand MacCommand_t;
-
-struct sMacCommand
-{
-    /*!
-     *  The pointer to the next MAC Command element in the list
-     */
-    MacCommand_t* Next;
-    /*!
-     * MAC command identifier
-     */
-    uint8_t CID;
-    /*!
-     * MAC command payload
-     */
-    uint8_t Payload[LORAMAC_COMMADS_MAX_NUM_OF_PARAMS];
-    /*!
-     * Size of MAC command payload
-     */
-    size_t PayloadSize;
-    /*!
-     * Indicates if it's a sticky MAC command
-     */
-    bool IsSticky;
-};
-
-/*!
- * LoRaMac Commands Status
- */
-typedef enum eLoRaMacCommandsStatus
-{
-    /*!
-     * No error occurred
-     */
-    LORAMAC_COMMANDS_SUCCESS = 0,
-    /*!
-     * Null pointer exception
-     */
-    LORAMAC_COMMANDS_ERROR_NPE,
-    /*!
-     * There is no memory left to add a further MAC command
-     */
-    LORAMAC_COMMANDS_ERROR_MEMORY,
-    /*!
-     * MAC command not found.
-     */
-    LORAMAC_COMMANDS_ERROR_CMD_NOT_FOUND,
-    /*!
-     * Unknown or corrupted command error occurred.
-     */
-    LORAMAC_COMMANDS_ERROR_UNKNOWN_CMD,
-    /*!
-     * Undefined Error occurred
-     */
-    LORAMAC_COMMANDS_ERROR,
-}LoRaMacCommandStatus_t;
-
-/*!
- * Signature of callback function to be called by this module when the
- * non-volatile needs to be saved.
- */
-typedef void ( *LoRaMacCommandsNvmEvent )( void );
-
-/*!
- * \brief Initialization of LoRaMac MAC commands module
- *
- * \param[IN]    commandsNvmCtxChanged - Callback function which will be called when the
- *                                      non-volatile context needs to be saved.
- *
- * \retval                            - Status of the operation
- */
-LoRaMacCommandStatus_t LoRaMacCommandsInit( LoRaMacCommandsNvmEvent commandsNvmCtxChanged );
-
-/*!
- * Restores the internal non-volatile context from passed pointer.
- *
- * \param[IN]     commandsNvmCtx     - Pointer to non-volatile MAC commands module context to be restored.
- *
- * \retval                     - Status of the operation
- */
-LoRaMacCommandStatus_t LoRaMacCommandsRestoreNvmCtx( void* commandsNvmCtx );
-
-/*!
- * Returns a pointer to the internal non-volatile context.
- *
- * \param[IN]     commandsNvmCtxSize - Size of the module non-volatile context
- *
- * \retval                    - Points to a structure where the module store its non-volatile context
- */
-void* LoRaMacCommandsGetNvmCtx( size_t* commandsNvmCtxSize );
-
-/*!
- * \brief Adds a new MAC command to be sent.
- *
- * \param[IN]   cid                - MAC command identifier
- * \param[IN]   payload            - MAC command payload containing parameters
- * \param[IN]   payloadSize        - Size of MAC command payload
- *
- * \retval                     - Status of the operation
- */
-LoRaMacCommandStatus_t LoRaMacCommandsAddCmd( uint8_t cid, uint8_t* payload, size_t payloadSize );
-
-/*!
- * \brief Remove a MAC command.
- *
- * \param[OUT]  cmd                - MAC command
- *
- * \retval                     - Status of the operation
- */
-LoRaMacCommandStatus_t LoRaMacCommandsRemoveCmd( MacCommand_t* macCmd );
-
-/*!
- * \brief Get the MAC command with corresponding CID.
- *
- * \param[IN]   cid                - MAC command identifier
- * \param[OUT]  cmd                - MAC command
- *
- * \retval                     - Status of the operation
- */
-LoRaMacCommandStatus_t LoRaMacCommandsGetCmd( uint8_t cid, MacCommand_t** macCmd );
-
-/*!
- * \brief Remove all none sticky MAC commands.
- *
- * \retval                     - Status of the operation
- */
-LoRaMacCommandStatus_t LoRaMacCommandsRemoveNoneStickyCmds( void );
-
-/*!
- * \brief Remove all sticky answer MAC commands.
- *
- * \retval                     - Status of the operation
- */
-LoRaMacCommandStatus_t LoRaMacCommandsRemoveStickyAnsCmds( void );
-
-/*!
- * \brief Get size of all MAC commands serialized as buffer
- *
- * \param[out]   size               - Available size of memory for MAC commands
- *
- * \retval                     - Status of the operation
- */
-LoRaMacCommandStatus_t LoRaMacCommandsGetSizeSerializedCmds( size_t* size );
-
-/*!
- * \brief Get as many as possible MAC commands serialized
- *
- * \param[IN]   availableSize      - Available size of memory for MAC commands
- * \param[out]  effectiveSize      - Size of memory which was effectively used for serializing.
- * \param[out]  buffer             - Destination data buffer
- *
- * \retval                     - Status of the operation
- */
-LoRaMacCommandStatus_t LoRaMacCommandsSerializeCmds( size_t availableSize, size_t* effectiveSize,  uint8_t* buffer );
-
-/*!
- * \brief Determines if there are sticky MAC commands pending.
- *
- * \param[IN]   cmdsPending        - Indicates if there are sticky MAC commands in the queue.
- *
- * \retval                     - Status of the operation
- */
-LoRaMacCommandStatus_t LoRaMacCommandsStickyCmdsPending( bool* cmdsPending );
-
-/*!
- * \brief Get the MAC command size with corresponding CID.
- *
- * \param[IN]   cid                - MAC command identifier
- *
- * \retval Size of the command.
- */
-uint8_t LoRaMacCommandsGetCmdSize( uint8_t cid );
-
-/*! \} addtogroup LORAMAC */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __LORAMAC_COMMANDS_H__
-
diff --git a/mac/LoRaMacConfirmQueue.c b/mac/LoRaMacConfirmQueue.c
deleted file mode 100644
index 5b95a42..0000000
--- a/mac/LoRaMacConfirmQueue.c
+++ /dev/null
@@ -1,345 +0,0 @@
-/*
- / _____)             _              | |
-( (____  _____ ____ _| |_ _____  ____| |__
- \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- _____) ) ____| | | || |_| ____( (___| | | |
-(______/|_____)_|_|_| \__)_____)\____)_| |_|
-    (C)2013 Semtech
- ___ _____ _   ___ _  _____ ___  ___  ___ ___
-/ __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
-\__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
-|___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
-embedded.connectivity.solutions===============
-
-Description: LoRa MAC confirm queue implementation
-
-License: Revised BSD License, see LICENSE.TXT file include in the project
-
-Maintainer: Miguel Luis ( Semtech ), Gregory Cristian ( Semtech ) and Daniel Jaeckle ( STACKFORCE )
-*/
-#include <stdint.h>
-#include <stdbool.h>
-#include <stddef.h>
-
-#include "timer.h"
-#include "utilities.h"
-#include "LoRaMac.h"
-#include "LoRaMacConfirmQueue.h"
-
-
-/*
- * LoRaMac Confirm Queue Context NVM structure
- */
-typedef struct sLoRaMacConfirmQueueNvmCtx
-{
-    /*!
-    * MlmeConfirm queue data structure
-    */
-    MlmeConfirmQueue_t MlmeConfirmQueue[LORA_MAC_MLME_CONFIRM_QUEUE_LEN];
-    /*!
-    * Counts the number of MlmeConfirms to process
-    */
-    uint8_t MlmeConfirmQueueCnt;
-    /*!
-    * Variable which holds a common status
-    */
-    LoRaMacEventInfoStatus_t CommonStatus;
-} LoRaMacConfirmQueueNvmCtx_t;
-
-/*
- * LoRaMac Confirm Queue Context structure
- */
-typedef struct sLoRaMacConfirmQueueCtx
-{
-    /*!
-    * LoRaMac callback function primitives
-    */
-    LoRaMacPrimitives_t* Primitives;
-    /*!
-    * Pointer to the first element of the ring buffer
-    */
-    MlmeConfirmQueue_t* BufferStart;
-    /*!
-    * Pointer to the last element of the ring buffer
-    */
-    MlmeConfirmQueue_t* BufferEnd;
-    /*
-     * Callback function to notify the upper layer about context change
-     */
-    LoRaMacConfirmQueueNvmEvent LoRaMacConfirmQueueNvmEvent;
-    /*!
-    * Non-volatile module context.
-    */
-    LoRaMacConfirmQueueNvmCtx_t* ConfirmQueueNvmCtx;
-} LoRaMacConfirmQueueCtx_t;
-
-/*
- * Non-volatile module context.
- */
-static LoRaMacConfirmQueueNvmCtx_t ConfirmQueueNvmCtx;
-
-/*
- * Module context.
- */
-static LoRaMacConfirmQueueCtx_t ConfirmQueueCtx;
-
-static MlmeConfirmQueue_t* IncreaseBufferPointer( MlmeConfirmQueue_t* bufferPointer )
-{
-    if( bufferPointer == &ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueue[LORA_MAC_MLME_CONFIRM_QUEUE_LEN - 1] )
-    {
-        // Reset to the first element
-        bufferPointer = ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueue;
-    }
-    else
-    {
-        // Increase
-        bufferPointer++;
-    }
-    return bufferPointer;
-}
-
-static MlmeConfirmQueue_t* DecreaseBufferPointer( MlmeConfirmQueue_t* bufferPointer )
-{
-    if( bufferPointer == ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueue )
-    {
-        // Reset to the last element
-        bufferPointer = &ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueue[LORA_MAC_MLME_CONFIRM_QUEUE_LEN - 1];
-    }
-    else
-    {
-        bufferPointer--;
-    }
-    return bufferPointer;
-}
-
-static MlmeConfirmQueue_t* GetElement( Mlme_t request, MlmeConfirmQueue_t* bufferStart, MlmeConfirmQueue_t* bufferEnd )
-{
-    MlmeConfirmQueue_t* element = bufferStart;
-
-    do
-    {
-        if( element->Request == request )
-        {
-            // We have found the element
-            return element;
-        }
-        else
-        {
-            element = IncreaseBufferPointer( element );
-        }
-    }while( element != bufferStart );
-
-    return NULL;
-}
-
-void LoRaMacConfirmQueueInit( LoRaMacPrimitives_t* primitives, LoRaMacConfirmQueueNvmEvent confirmQueueNvmCtxChanged )
-{
-    ConfirmQueueCtx.Primitives = primitives;
-
-    // Assign nvm context
-    ConfirmQueueCtx.ConfirmQueueNvmCtx = &ConfirmQueueNvmCtx;
-
-    // Init counter
-    ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueueCnt = 0;
-
-    // Init buffer
-    ConfirmQueueCtx.BufferStart = ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueue;
-    ConfirmQueueCtx.BufferEnd = ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueue;
-
-    memset1( ( uint8_t* )ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueue, 0xFF, sizeof( ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueue ) );
-
-    // Common status
-    ConfirmQueueCtx.ConfirmQueueNvmCtx->CommonStatus = LORAMAC_EVENT_INFO_STATUS_ERROR;
-
-    // Assign callback
-    ConfirmQueueCtx.LoRaMacConfirmQueueNvmEvent = confirmQueueNvmCtxChanged;
-}
-
-bool LoRaMacConfirmQueueRestoreNvmCtx( void* confirmQueueNvmCtx )
-{
-    // Restore module context
-    if( confirmQueueNvmCtx != NULL )
-    {
-        memcpy1( ( uint8_t* )&ConfirmQueueNvmCtx, ( uint8_t* ) confirmQueueNvmCtx, sizeof( ConfirmQueueNvmCtx ) );
-        return true;
-    }
-    else
-    {
-        return false;
-    }
-}
-
-void* LoRaMacConfirmQueueGetNvmCtx( size_t* confirmQueueNvmCtxSize )
-{
-    *confirmQueueNvmCtxSize = sizeof( ConfirmQueueNvmCtx );
-    return &ConfirmQueueNvmCtx;
-}
-
-bool LoRaMacConfirmQueueAdd( MlmeConfirmQueue_t* mlmeConfirm )
-{
-    if( ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueueCnt >= LORA_MAC_MLME_CONFIRM_QUEUE_LEN )
-    {
-        // Protect the buffer against overwrites
-        return false;
-    }
-
-    // Add the element to the ring buffer
-    ConfirmQueueCtx.BufferEnd->Request = mlmeConfirm->Request;
-    ConfirmQueueCtx.BufferEnd->Status = mlmeConfirm->Status;
-    ConfirmQueueCtx.BufferEnd->RestrictCommonReadyToHandle = mlmeConfirm->RestrictCommonReadyToHandle;
-    ConfirmQueueCtx.BufferEnd->ReadyToHandle = false;
-    // Increase counter
-    ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueueCnt++;
-    // Update end pointer
-    ConfirmQueueCtx.BufferEnd = IncreaseBufferPointer( ConfirmQueueCtx.BufferEnd );
-
-    return true;
-}
-
-bool LoRaMacConfirmQueueRemoveLast( void )
-{
-    if( ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueueCnt == 0 )
-    {
-        return false;
-    }
-
-    // Increase counter
-    ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueueCnt--;
-    // Update start pointer
-    ConfirmQueueCtx.BufferEnd = DecreaseBufferPointer( ConfirmQueueCtx.BufferEnd );
-
-    return true;
-}
-
-bool LoRaMacConfirmQueueRemoveFirst( void )
-{
-    if( ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueueCnt == 0 )
-    {
-        return false;
-    }
-
-    // Increase counter
-    ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueueCnt--;
-    // Update start pointer
-    ConfirmQueueCtx.BufferStart = IncreaseBufferPointer( ConfirmQueueCtx.BufferStart );
-
-    return true;
-}
-
-void LoRaMacConfirmQueueSetStatus( LoRaMacEventInfoStatus_t status, Mlme_t request )
-{
-    MlmeConfirmQueue_t* element = NULL;
-
-    if( ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueueCnt > 0 )
-    {
-        element = GetElement( request, ConfirmQueueCtx.BufferStart, ConfirmQueueCtx.BufferEnd );
-        if( element != NULL )
-        {
-            element->Status = status;
-            element->ReadyToHandle = true;
-        }
-    }
-}
-
-LoRaMacEventInfoStatus_t LoRaMacConfirmQueueGetStatus( Mlme_t request )
-{
-    MlmeConfirmQueue_t* element = NULL;
-
-    if( ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueueCnt > 0 )
-    {
-        element = GetElement( request, ConfirmQueueCtx.BufferStart, ConfirmQueueCtx.BufferEnd );
-        if( element != NULL )
-        {
-            return element->Status;
-        }
-    }
-    return LORAMAC_EVENT_INFO_STATUS_ERROR;
-}
-
-void LoRaMacConfirmQueueSetStatusCmn( LoRaMacEventInfoStatus_t status )
-{
-    MlmeConfirmQueue_t* element = ConfirmQueueCtx.BufferStart;
-
-    ConfirmQueueCtx.ConfirmQueueNvmCtx->CommonStatus = status;
-
-    if( ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueueCnt > 0 )
-    {
-        do
-        {
-            element->Status = status;
-            // Set the status if it is allowed to set it with a call to
-            // LoRaMacConfirmQueueSetStatusCmn.
-            if( element->RestrictCommonReadyToHandle == false )
-            {
-                element->ReadyToHandle = true;
-            }
-            element = IncreaseBufferPointer( element );
-        }while( element != ConfirmQueueCtx.BufferEnd );
-    }
-}
-
-LoRaMacEventInfoStatus_t LoRaMacConfirmQueueGetStatusCmn( void )
-{
-    return ConfirmQueueCtx.ConfirmQueueNvmCtx->CommonStatus;
-}
-
-bool LoRaMacConfirmQueueIsCmdActive( Mlme_t request )
-{
-    if( GetElement( request, ConfirmQueueCtx.BufferStart, ConfirmQueueCtx.BufferEnd ) != NULL )
-    {
-        return true;
-    }
-    return false;
-}
-
-void LoRaMacConfirmQueueHandleCb( MlmeConfirm_t* mlmeConfirm )
-{
-    uint8_t nbElements = ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueueCnt;
-    bool readyToHandle = false;
-    MlmeConfirmQueue_t mlmeConfirmToStore;
-
-    for( uint8_t i = 0; i < nbElements; i++ )
-    {
-        mlmeConfirm->MlmeRequest = ConfirmQueueCtx.BufferStart->Request;
-        mlmeConfirm->Status = ConfirmQueueCtx.BufferStart->Status;
-        readyToHandle = ConfirmQueueCtx.BufferStart->ReadyToHandle;
-
-        if( readyToHandle == true )
-        {
-            ConfirmQueueCtx.Primitives->MacMlmeConfirm( mlmeConfirm );
-        }
-        else
-        {
-            // The request is not processed yet. Store the state.
-            mlmeConfirmToStore.Request = ConfirmQueueCtx.BufferStart->Request;
-            mlmeConfirmToStore.Status = ConfirmQueueCtx.BufferStart->Status;
-            mlmeConfirmToStore.RestrictCommonReadyToHandle = ConfirmQueueCtx.BufferStart->RestrictCommonReadyToHandle;
-        }
-
-        // Increase the pointer afterwards to prevent overwrites
-        LoRaMacConfirmQueueRemoveFirst( );
-
-        if( readyToHandle == false )
-        {
-            // Add a request which has not been finished again to the queue
-            LoRaMacConfirmQueueAdd( &mlmeConfirmToStore );
-        }
-    }
-}
-
-uint8_t LoRaMacConfirmQueueGetCnt( void )
-{
-    return ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueueCnt;
-}
-
-bool LoRaMacConfirmQueueIsFull( void )
-{
-    if( ConfirmQueueCtx.ConfirmQueueNvmCtx->MlmeConfirmQueueCnt >= LORA_MAC_MLME_CONFIRM_QUEUE_LEN )
-    {
-        return true;
-    }
-    else
-    {
-        return false;
-    }
-}
diff --git a/mac/LoRaMacConfirmQueue.h b/mac/LoRaMacConfirmQueue.h
deleted file mode 100644
index c41dcc1..0000000
--- a/mac/LoRaMacConfirmQueue.h
+++ /dev/null
@@ -1,204 +0,0 @@
-/*!
- * \file      LoRaMacConfirmQueue.h
- *
- * \brief     LoRa MAC confirm queue implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \defgroup  LORAMACCONFIRMQUEUE LoRa MAC confirm queue implementation
- *            This module specifies the API implementation of the LoRaMAC confirm queue.
- *            The confirm queue is implemented with as a ring buffer. The number of
- *            elements can be defined with \ref LORA_MAC_MLME_CONFIRM_QUEUE_LEN. The
- *            current implementation does not support multiple elements of the same
- *            Mlme_t type.
- * \{
- */
-#ifndef __LORAMAC_CONFIRMQUEUE_H__
-#define __LORAMAC_CONFIRMQUEUE_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdbool.h>
-#include <stdint.h>
-
-#include "LoRaMac.h"
-
-/*!
- * LoRaMac MLME-Confirm queue length
- */
-#define LORA_MAC_MLME_CONFIRM_QUEUE_LEN             5
-
-/*!
- * Structure to hold multiple MLME request confirm data
- */
-typedef struct sMlmeConfirmQueue
-{
-    /*!
-     * Holds the previously performed MLME-Request
-     */
-    Mlme_t Request;
-    /*!
-     * Status of the operation
-     */
-    LoRaMacEventInfoStatus_t Status;
-    /*!
-     * Set to true, if the request is ready to be handled
-     */
-    bool ReadyToHandle;
-    /*!
-     * Set to true, if it is not permitted to set the ReadyToHandle variable
-     * with a function call to LoRaMacConfirmQueueSetStatusCmn.
-     */
-    bool RestrictCommonReadyToHandle;
-}MlmeConfirmQueue_t;
-
-/*!
- * Signature of callback function to be called by this module when the
- * non-volatile needs to be saved.
- */
-typedef void ( *LoRaMacConfirmQueueNvmEvent )( void );
-
-/*!
- * \brief   Initializes the confirm queue
- *
- * \param   [IN] primitives - Pointer to the LoRaMac primitives.
- *
- * \param   [IN] confirmQueueNvmCtxChanged - Callback function which will be called when the
- *                                           non-volatile context needs to be saved.
- */
-void LoRaMacConfirmQueueInit( LoRaMacPrimitives_t* primitives, LoRaMacConfirmQueueNvmEvent confirmQueueNvmCtxChanged  );
-
-/*!
- * Restores the internal non-volatile context from passed pointer.
- *
- * \param   [IN] confirmQueueNvmCtx - Pointer to non-volatile class B module context to be restored.
- *
- * \retval  [true - operation was successful, false - operation failed]
- */
-bool LoRaMacConfirmQueueRestoreNvmCtx( void* confirmQueueNvmCtx );
-
-/*!
- * Returns a pointer to the internal non-volatile context.
- *
- * \param   [IN] confirmQueueNvmCtxSize - Size of the module non-volatile context
- *
- * \retval  - Points to a structure where the module store its non-volatile context
- */
-void* LoRaMacConfirmQueueGetNvmCtx( size_t* confirmQueueNvmCtxSize );
-
-/*!
- * \brief   Adds an element to the confirm queue.
- *
- * \param   [IN] mlmeConfirm - Pointer to the element to add.
- *
- * \retval  [true - operation was successful, false - operation failed]
- */
-bool LoRaMacConfirmQueueAdd( MlmeConfirmQueue_t* mlmeConfirm );
-
-/*!
- * \brief   Removes the last element which was added into the queue.
- *
- * \retval  [true - operation was successful, false - operation failed]
- */
-bool LoRaMacConfirmQueueRemoveLast( void );
-
-/*!
- * \brief   Removes the first element which was added to the confirm queue.
- *
- * \retval  [true - operation was successful, false - operation failed]
- */
-bool LoRaMacConfirmQueueRemoveFirst( void );
-
-/*!
- * \brief   Sets the status of an element.
- *
- * \param   [IN] status - The status to set.
- *
- * \param   [IN] request - The related request to set the status.
- */
-void LoRaMacConfirmQueueSetStatus( LoRaMacEventInfoStatus_t status, Mlme_t request );
-
-/*!
- * \brief   Gets the status of an element.
- *
- * \param   [IN] request - The request to query the status.
- *
- * \retval  The status of the related MlmeRequest.
- */
-LoRaMacEventInfoStatus_t LoRaMacConfirmQueueGetStatus( Mlme_t request );
-
-/*!
- * \brief   Sets a common status for all elements in the queue.
- *
- * \param   [IN] status - The status to set.
- */
-void LoRaMacConfirmQueueSetStatusCmn( LoRaMacEventInfoStatus_t status );
-
-/*!
- * \brief   Gets the common status of all elements.
- *
- * \retval  The common status of all elements.
- */
-LoRaMacEventInfoStatus_t LoRaMacConfirmQueueGetStatusCmn( void );
-
-/*!
- * \brief   Verifies if a request is in the queue and active.
- *
- * \param   [IN] request - The request to verify.
- *
- * \retval  [true - element is in the queue, false - element is not in the queue].
- */
-bool LoRaMacConfirmQueueIsCmdActive( Mlme_t request );
-
-/*!
- * \brief   Handles all callbacks of active requests
- *
- * \param   [IN] mlmeConfirm - Pointer to the generic mlmeConfirm structure.
- */
-void LoRaMacConfirmQueueHandleCb( MlmeConfirm_t* mlmeConfirm );
-
-/*!
- * \brief   Query number of elements in the queue.
- *
- * \retval  Number of elements.
- */
-uint8_t LoRaMacConfirmQueueGetCnt( void );
-
-/*!
- * \brief   Verify if the confirm queue is full.
- *
- * \retval  [true - queue is full, false - queue is not full].
- */
-bool LoRaMacConfirmQueueIsFull( void );
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __LORAMAC_CONFIRMQUEUE_H__
diff --git a/mac/LoRaMacCrypto.c b/mac/LoRaMacCrypto.c
deleted file mode 100644
index 9415c0e..0000000
--- a/mac/LoRaMacCrypto.c
+++ /dev/null
@@ -1,1675 +0,0 @@
-/*!
- * \file      LoRaMacCrypto.c
- *
- * \brief     LoRa MAC layer cryptography implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- */
-#include <stdbool.h>
-#include <stdlib.h>
-#include <stdint.h>
-
-#include "utilities.h"
-#include "secure-element.h"
-
-#include "LoRaMacParser.h"
-#include "LoRaMacSerializer.h"
-#include "LoRaMacCrypto.h"
-
-/*!
- * Indicates if LoRaWAN 1.1.x crypto scheme is enabled
- */
-#define USE_LRWAN_1_1_X_CRYPTO                      0
-
-/*!
- * Indicates if a random devnonce must be used or not
- */
-#define USE_RANDOM_DEV_NONCE                        1
-
-/*
- * Frame direction definition for uplink communications
- */
-#define UPLINK                          0
-
-/*
- * Frame direction definition for downlink communications
- */
-#define DOWNLINK                        1
-
-/*
- * CMAC/AES Message Integrity Code (MIC) Block B0 size
- */
-#define MIC_BLOCK_BX_SIZE               16
-
-/*
- * Size of JoinReqType is field for integrity check
- */
-#define JOIN_REQ_TYPE_SIZE              1
-
-/*
- * Size of DevNonce is field for integrity check
- */
-#define DEV_NONCE_SIZE                  2
-
-/*
- * Number of security context entries
- */
-#define NUM_OF_SEC_CTX                  5
-
-/*
- * Size of the module context
- */
-#define CRYPTO_CTX_SIZE                 sizeof( LoRaMacCryptoCtx_t )
-
-/*
- * Size of the module non volatile context
- */
-#define CRYPTO_NVM_CTX_SIZE             sizeof( LoRaMacCryptoNvmCtx_t )
-
-/*
- * Maximum size of the message that can be handled by the crypto operations
- */
-#define CRYPTO_MAXMESSAGE_SIZE          256
-
-/*
- * Maximum size of the buffer for crypto operations
- */
-#define CRYPTO_BUFFER_SIZE              CRYPTO_MAXMESSAGE_SIZE + MIC_BLOCK_BX_SIZE
-
-/*
- * MIC computation offset
- */
-#define CRYPTO_MIC_COMPUTATION_OFFSET   JOIN_REQ_TYPE_SIZE + LORAMAC_JOIN_EUI_FIELD_SIZE + DEV_NONCE_SIZE + LORAMAC_MHDR_FIELD_SIZE
-
-/*!
- * LoRaWAN Frame counter list.
- */
-typedef struct sFCntList
-{
-    /*!
-     * Uplink frame counter which is incremented with each uplink.
-     */
-    uint32_t FCntUp;
-    /*!
-     * Network downlink frame counter which is incremented with each downlink on FPort 0
-     * or when the FPort field is missing.
-     */
-    uint32_t NFCntDown;
-    /*!
-     * Application downlink frame counter which is incremented with each downlink
-     * on a port different than 0.
-     */
-    uint32_t AFCntDown;
-    /*!
-     * In case if the device is connected to a LoRaWAN 1.0 Server,
-     * this counter is used for every kind of downlink frame.
-     */
-    uint32_t FCntDown;
-    /*!
-     * Multicast downlink counter for index 0
-     */
-    uint32_t McFCntDown0;
-    /*!
-     * Multicast downlink counter for index 1
-     */
-    uint32_t McFCntDown1;
-    /*!
-     * Multicast downlink counter for index 2
-     */
-    uint32_t McFCntDown2;
-    /*!
-     * Multicast downlink counter for index 3
-     */
-    uint32_t McFCntDown3;
-}FCntList_t;
-
-/*
- * LoRaMac Crypto Non Volatile Context structure
- */
-typedef struct sLoRaMacCryptoNvmCtx
-{
-    /*
-     * Stores the information if the device is connected to a LoRaWAN network
-     * server with prior to 1.1.0 implementation.
-     */
-    Version_t LrWanVersion;
-    /*
-     * Device nonce is a counter starting at 0 when the device is initially
-     * powered up and incremented with every JoinRequest.
-     */
-    uint16_t DevNonce;
-    /*
-     * JoinNonce is a device specific counter value (that never repeats itself)
-     * provided by the join server and incremented with every JoinAccept message.
-     */
-    uint32_t JoinNonce;
-    /*
-     * Frame counter list
-     */
-    FCntList_t FCntList;
-    /*
-     * RJcount1 is a counter incremented with every Rejoin request Type 1 frame transmitted.
-     */
-    uint16_t RJcount1;
-    /*
-     * LastDownFCnt stores the information which frame counter was used to unsecure the last frame.
-     * This information is needed to compute ConfFCnt in B1 block for the MIC.
-     */
-    uint32_t* LastDownFCnt;
-}LoRaMacCryptoNvmCtx_t;
-
-/*
- * LoRaMac Crypto Context structure
- */
-typedef struct sLoRaMacCryptoCtx
-{
-    /*
-     * RJcount0 is a counter incremented with every Type 0 or 2 Rejoin frame transmitted.
-     */
-    uint16_t RJcount0;
-    /*
-     * Non volatile module context structure
-     */
-    LoRaMacCryptoNvmCtx_t* NvmCtx;
-    /*
-     * Callback function to notify the upper layer about context change
-     */
-    LoRaMacCryptoNvmEvent EventCryptoNvmCtxChanged;
-}LoRaMacCryptoCtx_t;
-
-/*
- * Key-Address item
- */
-typedef struct sKeyAddr
-{
-    /*
-     * Address identifier
-     */
-    AddressIdentifier_t AddrID;
-    /*
-     * Application session key
-     */
-    KeyIdentifier_t AppSkey;
-    /*
-     * Network session key
-     */
-    KeyIdentifier_t NwkSkey;
-    /*
-     * Rootkey (Multicast only)
-     */
-    KeyIdentifier_t RootKey;
-}KeyAddr_t;
-
-/*
- *Crypto module context.
- */
-static LoRaMacCryptoCtx_t CryptoCtx;
-
-/*
- * Non volatile module context.
- */
-static LoRaMacCryptoNvmCtx_t NvmCryptoCtx;
-
-/*
- * Key-Address list
- */
-static KeyAddr_t KeyAddrList[NUM_OF_SEC_CTX] =
-    {
-        { MULTICAST_0_ADDR, MC_APP_S_KEY_0, MC_NWK_S_KEY_0, MC_KEY_0 },
-        { MULTICAST_1_ADDR, MC_APP_S_KEY_1, MC_NWK_S_KEY_1, MC_KEY_1 },
-        { MULTICAST_2_ADDR, MC_APP_S_KEY_2, MC_NWK_S_KEY_2, MC_KEY_2 },
-        { MULTICAST_3_ADDR, MC_APP_S_KEY_3, MC_NWK_S_KEY_3, MC_KEY_3 },
-        { UNICAST_DEV_ADDR, APP_S_KEY, S_NWK_S_INT_KEY, NO_KEY }
-    };
-
-/*
- * Local functions
- */
-
-/*
- * Encrypts the payload
- *
- * \param[IN]  keyID            - Key identifier
- * \param[IN]  address          - Address
- * \param[IN]  dir              - Frame direction ( Uplink or Downlink )
- * \param[IN]  frameCounter     - Frame counter
- * \param[IN]  size             - Size of data
- * \param[IN/OUT]  buffer       - Data buffer
- * \retval                      - Status of the operation
- */
-static LoRaMacCryptoStatus_t PayloadEncrypt( uint8_t* buffer, int16_t size, KeyIdentifier_t keyID, uint32_t address, uint8_t dir, uint32_t frameCounter )
-{
-    if( buffer == 0 )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-
-    uint8_t bufferIndex = 0;
-    uint16_t ctr = 1;
-    uint8_t sBlock[16] = { 0 };
-    uint8_t aBlock[16] = { 0 };
-
-    aBlock[0] = 0x01;
-
-    aBlock[5] = dir;
-
-    aBlock[6] = address & 0xFF;
-    aBlock[7] = ( address >> 8 ) & 0xFF;
-    aBlock[8] = ( address >> 16 ) & 0xFF;
-    aBlock[9] = ( address >> 24 ) & 0xFF;
-
-    aBlock[10] = frameCounter & 0xFF;
-    aBlock[11] = ( frameCounter >> 8 ) & 0xFF;
-    aBlock[12] = ( frameCounter >> 16 ) & 0xFF;
-    aBlock[13] = ( frameCounter >> 24 ) & 0xFF;
-
-    while( size > 0 )
-    {
-        aBlock[15] = ctr & 0xFF;
-        ctr++;
-        if( SecureElementAesEncrypt( aBlock, 16, keyID, sBlock ) != SECURE_ELEMENT_SUCCESS )
-        {
-            return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-        }
-
-        for( uint8_t i = 0; i < ( ( size > 16 ) ? 16 : size ); i++ )
-        {
-            buffer[bufferIndex + i] = buffer[bufferIndex + i] ^ sBlock[i];
-        }
-        size -= 16;
-        bufferIndex += 16;
-    }
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-#if( USE_LRWAN_1_1_X_CRYPTO == 1 )
-/*
- * Encrypts the FOpts
- *
- * \param[IN]  address          - Address
- * \param[IN]  dir              - Frame direction ( Uplink or Downlink )
- * \param[IN]  fCntID           - Frame counter identifier
- * \param[IN]  frameCounter     - Frame counter
- * \param[IN]  size             - Size of data
- * \param[IN/OUT]  buffer       - Data buffer
- * \retval                      - Status of the operation
- */
-static LoRaMacCryptoStatus_t FOptsEncrypt( uint16_t size, uint32_t address, uint8_t dir, FCntIdentifier_t fCntID, uint32_t frameCounter, uint8_t* buffer )
-{
-    if( buffer == 0 )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-
-    uint8_t bufferIndex = 0;
-    uint8_t sBlock[16] = { 0 };
-    uint8_t aBlock[16] = { 0 };
-
-    aBlock[0] = 0x01;
-
-    if( CryptoCtx.NvmCtx->LrWanVersion.Value > 0x01010000 )
-    {
-        // Introduced in LoRaWAN 1.1.1 specification
-        switch( fCntID )
-        {
-            case FCNT_UP:
-            {
-                aBlock[4] = 0x01;
-                break;
-            }
-            case N_FCNT_DOWN:
-            {
-                aBlock[4] = 0x01;
-                break;
-            }
-            case A_FCNT_DOWN:
-            {
-                aBlock[4] = 0x02;
-                break;
-            }
-            default:
-                return LORAMAC_CRYPTO_FAIL_PARAM;
-        }
-    }
-
-    aBlock[5] = dir;
-
-    aBlock[6] = address & 0xFF;
-    aBlock[7] = ( address >> 8 ) & 0xFF;
-    aBlock[8] = ( address >> 16 ) & 0xFF;
-    aBlock[9] = ( address >> 24 ) & 0xFF;
-
-    aBlock[10] = frameCounter & 0xFF;
-    aBlock[11] = ( frameCounter >> 8 ) & 0xFF;
-    aBlock[12] = ( frameCounter >> 16 ) & 0xFF;
-    aBlock[13] = ( frameCounter >> 24 ) & 0xFF;
-
-    if( CryptoCtx.NvmCtx->LrWanVersion.Value > 0x01010000 )
-    {
-        // Introduced in LoRaWAN 1.1.1 specification
-        aBlock[15] = 0x01;
-    }
-
-    if( size > 0 )
-    {
-        if( SecureElementAesEncrypt( aBlock, 16, NWK_S_ENC_KEY, sBlock ) != SECURE_ELEMENT_SUCCESS )
-        {
-            return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-        }
-        for( uint8_t i = 0; i < size; i++ )
-        {
-            buffer[bufferIndex + i] = buffer[bufferIndex + i] ^ sBlock[i];
-        }
-    }
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-#endif
-
-/*
- * Prepares B0 block for cmac computation.
- *
- * \param[IN]  msgLen         - Length of message
- * \param[IN]  keyID          - Key identifier
- * \param[IN]  isAck          - True if it is a acknowledge frame ( Sets ConfFCnt in B0 block )
- * \param[IN]  devAddr        - Device address
- * \param[IN]  dir            - Frame direction ( Uplink:0, Downlink:1 )
- * \param[IN]  fCnt           - Frame counter
- * \param[IN/OUT]  b0         - B0 block
- * \retval                    - Status of the operation
- */
-static LoRaMacCryptoStatus_t PrepareB0( uint16_t msgLen, KeyIdentifier_t keyID, bool isAck, uint8_t dir, uint32_t devAddr, uint32_t fCnt, uint8_t* b0 )
-{
-    if( b0 == 0 )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-
-    b0[0] = 0x49;
-
-    if( ( isAck == true ) && ( dir == DOWNLINK ) )
-    {
-        // confFCnt contains the frame counter value modulo 2^16 of the "confirmed" uplink or downlink frame that is being acknowledged
-        uint16_t confFCnt = 0;
-
-        confFCnt = ( uint16_t )( CryptoCtx.NvmCtx->FCntList.FCntUp % 65536 );
-
-        b0[1] = confFCnt & 0xFF;
-        b0[2] = ( confFCnt >> 8 ) & 0xFF;
-    }
-    else
-    {
-        b0[1] = 0x00;
-        b0[2] = 0x00;
-    }
-
-    b0[3] = 0x00;
-    b0[4] = 0x00;
-
-    b0[5] = dir;
-
-    b0[6] = devAddr & 0xFF;
-    b0[7] = ( devAddr >> 8 ) & 0xFF;
-    b0[8] = ( devAddr >> 16 ) & 0xFF;
-    b0[9] = ( devAddr >> 24 ) & 0xFF;
-
-    b0[10] = fCnt & 0xFF;
-    b0[11] = ( fCnt >> 8 ) & 0xFF;
-    b0[12] = ( fCnt >> 16 ) & 0xFF;
-    b0[13] = ( fCnt >> 24 ) & 0xFF;
-
-    b0[14] = 0x00;
-
-    b0[15] = msgLen & 0xFF;
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-/*
- * Computes cmac with adding B0 block in front.
- *
- *  cmac = aes128_cmac(keyID, B0 | msg)
- *
- * \param[IN]  msg            - Message to compute the integrity code
- * \param[IN]  len            - Length of message
- * \param[IN]  keyID          - Key identifier
- * \param[IN]  isAck          - True if it is a acknowledge frame ( Sets ConfFCnt in B0 block )
- * \param[IN]  devAddr        - Device address
- * \param[IN]  dir            - Frame direction ( Uplink:0, Downlink:1 )
- * \param[IN]  fCnt           - Frame counter
- * \param[OUT] cmac           - Computed cmac
- * \retval                    - Status of the operation
- */
-static LoRaMacCryptoStatus_t ComputeCmacB0( uint8_t* msg, uint16_t len, KeyIdentifier_t keyID, bool isAck, uint8_t dir, uint32_t devAddr, uint32_t fCnt, uint32_t* cmac )
-{
-    if( ( msg == 0 ) || ( cmac == 0 ) )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-    if( len > CRYPTO_MAXMESSAGE_SIZE )
-    {
-        return LORAMAC_CRYPTO_ERROR_BUF_SIZE;
-    }
-
-    uint8_t micBuff[MIC_BLOCK_BX_SIZE];
-
-    // Initialize the first Block
-    PrepareB0( len, keyID, isAck, dir, devAddr, fCnt, micBuff );
-
-    if( SecureElementComputeAesCmac( micBuff, msg, len, keyID, cmac ) != SECURE_ELEMENT_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-    }
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-/*!
- * Verifies cmac with adding B0 block in front.
- *
- * \param[IN]  msg            - Message to compute the integrity code
- * \param[IN]  len            - Length of message
- * \param[IN]  keyID          - Key identifier
- * \param[IN]  isAck          - True if it is a acknowledge frame ( Sets ConfFCnt in B0 block )
- * \param[IN]  devAddr        - Device address
- * \param[IN]  dir            - Frame direction ( Uplink:0, Downlink:1 )
- * \param[IN]  fCnt           - Frame counter
- * \param[in]  expectedCmac   - Expected cmac
- * \retval                    - Status of the operation
- */
-static LoRaMacCryptoStatus_t VerifyCmacB0( uint8_t* msg, uint16_t len, KeyIdentifier_t keyID, bool isAck, uint8_t dir, uint32_t devAddr, uint32_t fCnt, uint32_t expectedCmac )
-{
-    if( msg == 0 )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-    if( len > CRYPTO_MAXMESSAGE_SIZE )
-    {
-        return LORAMAC_CRYPTO_ERROR_BUF_SIZE;
-    }
-
-    uint8_t micBuff[CRYPTO_BUFFER_SIZE];
-    memset1( micBuff, 0, CRYPTO_BUFFER_SIZE );
-
-    // Initialize the first Block
-    PrepareB0( len, keyID, isAck, dir, devAddr, fCnt, micBuff );
-
-    // Copy the given data to the mic computation buffer
-    memcpy1( ( micBuff + MIC_BLOCK_BX_SIZE ), msg, len );
-
-    SecureElementStatus_t retval = SECURE_ELEMENT_ERROR;
-    retval = SecureElementVerifyAesCmac( micBuff, ( len + MIC_BLOCK_BX_SIZE ), expectedCmac, keyID );
-
-    if( retval == SECURE_ELEMENT_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_SUCCESS;
-    }
-    else if( retval == SECURE_ELEMENT_FAIL_CMAC )
-    {
-        return LORAMAC_CRYPTO_FAIL_MIC;
-    }
-
-    return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-}
-
-#if( USE_LRWAN_1_1_X_CRYPTO == 1 )
-/*
- * Prpares B1 block for cmac computation.
- *
- * \param[IN]  msgLen         - Length of message
- * \param[IN]  keyID          - Key identifier
- * \param[IN]  isAck          - True if it is a acknowledge frame ( Sets ConfFCnt in B0 block )
- * \param[IN]  txDr           - Data rate used for the transmission
- * \param[IN]  txCh           - Index of the channel used for the transmission
- * \param[IN]  devAddr        - Device address
- * \param[IN]  fCntUp         - Frame counter
- * \param[IN/OUT]  b0         - B0 block
- * \retval                    - Status of the operation
- */
-static LoRaMacCryptoStatus_t PrepareB1( uint16_t msgLen, KeyIdentifier_t keyID, bool isAck, uint8_t txDr, uint8_t txCh, uint32_t devAddr, uint32_t fCntUp, uint8_t* b1 )
-{
-    if( b1 == 0 )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-
-    b1[0] = 0x49;
-
-    if( isAck == true )
-    {
-        // confFCnt contains the frame counter value modulo 2^16 of the "confirmed" uplink frame that is being acknowledged
-        uint16_t confFCnt = ( uint16_t )( *CryptoCtx.NvmCtx->LastDownFCnt % 65536 );
-        b1[1] = confFCnt & 0xFF;
-        b1[2] = ( confFCnt >> 8 ) & 0xFF;
-    }
-    else
-    {
-        b1[1] = 0x00;
-        b1[2] = 0x00;
-    }
-
-    b1[3] = txDr;
-    b1[4] = txCh;
-    b1[5] = UPLINK;  // dir = Uplink
-
-    b1[6] = devAddr & 0xFF;
-    b1[7] = ( devAddr >> 8 ) & 0xFF;
-    b1[8] = ( devAddr >> 16 ) & 0xFF;
-    b1[9] = ( devAddr >> 24 ) & 0xFF;
-
-    b1[10] = fCntUp & 0xFF;
-    b1[11] = ( fCntUp >> 8 ) & 0xFF;
-    b1[12] = ( fCntUp >> 16 ) & 0xFF;
-    b1[13] = ( fCntUp >> 24 ) & 0xFF;
-
-    b1[14] = 0x00;
-
-    b1[15] = msgLen & 0xFF;
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-/*
- * Computes cmac with adding B1 block in front ( only for Uplink frames LoRaWAN 1.1 )
- *
- *  cmac = aes128_cmac(keyID, B1 | msg)
- *
- * \param[IN]  msg            - Message to calculate the Integrity code
- * \param[IN]  len            - Length of message
- * \param[IN]  keyID          - Key identifier
- * \param[IN]  isAck          - True if it is a acknowledge frame ( Sets ConfFCnt in B0 block )
- * \param[IN]  txDr           - Data rate used for the transmission
- * \param[IN]  txCh           - Index of the channel used for the transmission
- * \param[IN]  devAddr        - Device address
- * \param[IN]  fCntUp         - Uplink Frame counter
- * \param[OUT] cmac           - Computed cmac
- * \retval                    - Status of the operation
- */
-static LoRaMacCryptoStatus_t ComputeCmacB1( uint8_t* msg, uint16_t len, KeyIdentifier_t keyID, bool isAck, uint8_t txDr, uint8_t txCh, uint32_t devAddr, uint32_t fCntUp, uint32_t* cmac )
-{
-    if( ( msg == 0 ) || ( cmac == 0 ) )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-    if( len > CRYPTO_MAXMESSAGE_SIZE )
-    {
-        return LORAMAC_CRYPTO_ERROR_BUF_SIZE;
-    }
-
-    uint8_t micBuff[MIC_BLOCK_BX_SIZE];
-
-    // Initialize the first Block
-    PrepareB1( len, keyID, isAck, txDr, txCh, devAddr, fCntUp, micBuff );
-
-    if( SecureElementComputeAesCmac( micBuff, msg, len, keyID, cmac ) != SECURE_ELEMENT_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-    }
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-#endif
-
-/*
- * Gets security item from list.
- *
- * \param[IN]  addrID          - Address identifier
- * \param[OUT] keyItem        - Key item reference
- * \retval                    - Status of the operation
- */
-static LoRaMacCryptoStatus_t GetKeyAddrItem( AddressIdentifier_t addrID, KeyAddr_t** item )
-{
-    for( uint8_t i = 0; i < NUM_OF_SEC_CTX; i++ )
-    {
-        if( KeyAddrList[i].AddrID == addrID )
-        {
-            *item = &( KeyAddrList[i] );
-            return LORAMAC_CRYPTO_SUCCESS;
-        }
-    }
-    return LORAMAC_CRYPTO_ERROR_INVALID_ADDR_ID;
-}
-
-/*
- * Derives a session key as of LoRaWAN versions prior to 1.1.0
- *
- * \param[IN]  keyID          - Key Identifier for the key to be calculated
- * \param[IN]  joinNonce      - Sever nonce
- * \param[IN]  netID          - Network Identifier
- * \param[IN]  deviceNonce    - Device nonce
- * \retval                    - Status of the operation
- */
-static LoRaMacCryptoStatus_t DeriveSessionKey10x( KeyIdentifier_t keyID, uint8_t* joinNonce, uint8_t* netID, uint8_t* devNonce )
-{
-    if( ( joinNonce == 0 ) || ( netID == 0 ) || ( devNonce == 0 ) )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-
-    uint8_t compBase[16] = { 0 };
-
-    switch( keyID )
-    {
-        case F_NWK_S_INT_KEY:
-        case S_NWK_S_INT_KEY:
-        case NWK_S_ENC_KEY:
-            compBase[0] = 0x01;
-            break;
-        case APP_S_KEY:
-            compBase[0] = 0x02;
-            break;
-        default:
-            return LORAMAC_CRYPTO_ERROR_INVALID_KEY_ID;
-    }
-
-    memcpy1( compBase + 1, joinNonce, 3 );
-    memcpy1( compBase + 4, netID, 3 );
-    memcpy1( compBase + 7, devNonce, 2 );
-
-    if( SecureElementDeriveAndStoreKey( CryptoCtx.NvmCtx->LrWanVersion, compBase, NWK_KEY, keyID ) != SECURE_ELEMENT_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-    }
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-#if( USE_LRWAN_1_1_X_CRYPTO == 1 )
-/*
- * Derives a session key as of LoRaWAN 1.1.0
- *
- * \param[IN]  keyID          - Key Identifier for the key to be calculated
- * \param[IN]  joinNonce      - Sever nonce
- * \param[IN]  joinEUI        - Join Server EUI
- * \param[IN]  deviceNonce    - Device nonce
- * \retval                    - Status of the operation
- */
-static LoRaMacCryptoStatus_t DeriveSessionKey11x( KeyIdentifier_t keyID, uint8_t* joinNonce, uint8_t* joinEUI, uint8_t* devNonce )
-{
-    if( ( joinNonce == 0 ) || ( joinEUI == 0 ) || ( devNonce == 0 ) )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-
-    uint8_t compBase[16] = { 0 };
-    KeyIdentifier_t rootKeyId = NWK_KEY;
-
-    switch( keyID )
-    {
-        case F_NWK_S_INT_KEY:
-            compBase[0] = 0x01;
-            break;
-        case S_NWK_S_INT_KEY:
-            compBase[0] = 0x03;
-            break;
-        case NWK_S_ENC_KEY:
-            compBase[0] = 0x04;
-            break;
-        case APP_S_KEY:
-            rootKeyId = APP_KEY;
-            compBase[0] = 0x02;
-            break;
-        default:
-            return LORAMAC_CRYPTO_ERROR_INVALID_KEY_ID;
-    }
-
-    memcpy1( compBase + 1, joinNonce, 3 );
-    memcpyr( compBase + 4, joinEUI, 8 );
-    memcpy1( compBase + 12, devNonce, 2 );
-
-    if( SecureElementDeriveAndStoreKey( CryptoCtx.NvmCtx->LrWanVersion, compBase, rootKeyId, keyID ) != SECURE_ELEMENT_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-    }
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-/*
- * Derives a life time session key (JSIntKey or JSEncKey)  as of LoRaWAN 1.1.0
- *
- * \param[IN]  keyID          - Key Identifier for the key to be calculated
- * \param[IN]  devEUI         - Device EUI
- * \retval                    - Status of the operation
- */
-static LoRaMacCryptoStatus_t DeriveLifeTimeSessionKey( KeyIdentifier_t keyID, uint8_t* devEUI )
-{
-    if( devEUI == 0 )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-
-    uint8_t compBase[16] = { 0 };
-
-    switch( keyID )
-    {
-        case J_S_INT_KEY:
-            compBase[0] = 0x06;
-            break;
-        case J_S_ENC_KEY:
-            compBase[0] = 0x05;
-            break;
-        default:
-            return LORAMAC_CRYPTO_ERROR_INVALID_KEY_ID;
-    }
-
-    memcpyr( compBase + 1, devEUI, 8 );
-
-    if( SecureElementDeriveAndStoreKey( CryptoCtx.NvmCtx->LrWanVersion, compBase, NWK_KEY, keyID ) != SECURE_ELEMENT_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-    }
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-#endif
-
-/*
- * Gets the last received frame counter
- *
- * \param[IN]     fCntID       - Frame counter identifier
- * \param[IN]     lastDown     - Last downlink counter value
- *
- * \retval                     - Status of the operation
- */
-static LoRaMacCryptoStatus_t GetLastFcntDown( FCntIdentifier_t fCntID, uint32_t* lastDown )
-{
-    if( lastDown == NULL )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-    switch( fCntID )
-    {
-        case N_FCNT_DOWN:
-            *lastDown = CryptoCtx.NvmCtx->FCntList.NFCntDown;
-            CryptoCtx.NvmCtx->LastDownFCnt = &CryptoCtx.NvmCtx->FCntList.NFCntDown;
-            break;
-        case A_FCNT_DOWN:
-            *lastDown = CryptoCtx.NvmCtx->FCntList.AFCntDown;
-            CryptoCtx.NvmCtx->LastDownFCnt = &CryptoCtx.NvmCtx->FCntList.AFCntDown;
-            break;
-        case FCNT_DOWN:
-            *lastDown = CryptoCtx.NvmCtx->FCntList.FCntDown;
-            CryptoCtx.NvmCtx->LastDownFCnt = &CryptoCtx.NvmCtx->FCntList.FCntDown;
-            break;
-        case MC_FCNT_DOWN_0:
-            *lastDown = CryptoCtx.NvmCtx->FCntList.McFCntDown0;
-            break;
-        case MC_FCNT_DOWN_1:
-            *lastDown = CryptoCtx.NvmCtx->FCntList.McFCntDown1;
-            break;
-        case MC_FCNT_DOWN_2:
-            *lastDown = CryptoCtx.NvmCtx->FCntList.McFCntDown2;
-            break;
-        case MC_FCNT_DOWN_3:
-            *lastDown = CryptoCtx.NvmCtx->FCntList.McFCntDown3;
-            break;
-        default:
-            return LORAMAC_CRYPTO_FAIL_FCNT_ID;
-    }
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-/*
- * Checks the downlink counter value
- *
- * \param[IN]     fCntID       - Frame counter identifier
- * \param[IN]     currentDown  - Current downlink counter value
- *
- * \retval                     - Status of the operation
- */
-static bool CheckFCntDown( FCntIdentifier_t fCntID, uint32_t currentDown )
-{
-    uint32_t lastDown = 0;
-    if( GetLastFcntDown( fCntID, &lastDown ) != LORAMAC_CRYPTO_SUCCESS )
-    {
-        return false;
-    }
-    if( ( currentDown > lastDown ) ||
-        // For LoRaWAN 1.0.X only. Allow downlink frames of 0
-        ( lastDown == FCNT_DOWN_INITAL_VALUE ) )
-    {
-        return true;
-    }
-    else
-    {
-        return false;
-    }
-}
-
-/*!
- * Updates the reference downlink counter
- *
- * \param[IN]     fCntID        - Frame counter identifier
- * \param[IN]     currentDown   - Current downlink counter value
- *
- * \retval                     - Status of the operation
- */
-static void UpdateFCntDown( FCntIdentifier_t fCntID, uint32_t currentDown )
-{
-    switch( fCntID )
-    {
-        case N_FCNT_DOWN:
-            CryptoCtx.NvmCtx->FCntList.NFCntDown = currentDown;
-            break;
-        case A_FCNT_DOWN:
-            CryptoCtx.NvmCtx->FCntList.AFCntDown = currentDown;
-            break;
-        case FCNT_DOWN:
-            CryptoCtx.NvmCtx->FCntList.FCntDown = currentDown;
-            break;
-        case MC_FCNT_DOWN_0:
-            CryptoCtx.NvmCtx->FCntList.McFCntDown0 = currentDown;
-            break;
-        case MC_FCNT_DOWN_1:
-            CryptoCtx.NvmCtx->FCntList.McFCntDown1 = currentDown;
-            break;
-        case MC_FCNT_DOWN_2:
-            CryptoCtx.NvmCtx->FCntList.McFCntDown2 = currentDown;
-            break;
-        case MC_FCNT_DOWN_3:
-            CryptoCtx.NvmCtx->FCntList.McFCntDown3 = currentDown;
-            break;
-        default:
-            break;
-    }
-    CryptoCtx.EventCryptoNvmCtxChanged( );
-}
-
-/*!
- * Resets the frame counters
- */
-static void ResetFCnts( void )
-{
-
-    CryptoCtx.NvmCtx->FCntList.FCntUp = 0;
-    CryptoCtx.NvmCtx->FCntList.NFCntDown = FCNT_DOWN_INITAL_VALUE;
-    CryptoCtx.NvmCtx->FCntList.AFCntDown = FCNT_DOWN_INITAL_VALUE;
-    CryptoCtx.NvmCtx->FCntList.FCntDown = FCNT_DOWN_INITAL_VALUE;
-    CryptoCtx.NvmCtx->LastDownFCnt = &CryptoCtx.NvmCtx->FCntList.FCntDown;
-
-    CryptoCtx.NvmCtx->FCntList.McFCntDown0 = FCNT_DOWN_INITAL_VALUE;
-    CryptoCtx.NvmCtx->FCntList.McFCntDown1 = FCNT_DOWN_INITAL_VALUE;
-    CryptoCtx.NvmCtx->FCntList.McFCntDown2 = FCNT_DOWN_INITAL_VALUE;
-    CryptoCtx.NvmCtx->FCntList.McFCntDown3 = FCNT_DOWN_INITAL_VALUE;
-
-    CryptoCtx.EventCryptoNvmCtxChanged( );
-}
-
-/*
- * Dummy callback in case if the user provides NULL function pointer
- */
-static void DummyCB( void )
-{
-    return;
-}
-
-/*
- *  API functions
- */
-
-LoRaMacCryptoStatus_t LoRaMacCryptoInit( LoRaMacCryptoNvmEvent cryptoNvmCtxChanged )
-{
-    // Assign non volatile context
-    CryptoCtx.NvmCtx = &NvmCryptoCtx;
-
-    // Assign callback
-    if( cryptoNvmCtxChanged != 0 )
-    {
-        CryptoCtx.EventCryptoNvmCtxChanged = cryptoNvmCtxChanged;
-    }
-    else
-    {
-        CryptoCtx.EventCryptoNvmCtxChanged = DummyCB;
-    }
-
-    // Initialize with default
-    memset1( ( uint8_t* )CryptoCtx.NvmCtx, 0, sizeof( LoRaMacCryptoNvmCtx_t ) );
-
-    // Set default LoRaWAN version
-    CryptoCtx.NvmCtx->LrWanVersion.Fields.Major = 1;
-    CryptoCtx.NvmCtx->LrWanVersion.Fields.Minor = 1;
-    CryptoCtx.NvmCtx->LrWanVersion.Fields.Patch = 1;
-    CryptoCtx.NvmCtx->LrWanVersion.Fields.Revision = 0;
-
-    // Reset frame counters
-    ResetFCnts( );
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-LoRaMacCryptoStatus_t LoRaMacCryptoSetLrWanVersion( Version_t version )
-{
-    CryptoCtx.NvmCtx->LrWanVersion = version;
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-LoRaMacCryptoStatus_t LoRaMacCryptoRestoreNvmCtx( void* cryptoNvmCtx )
-{
-    // Restore module context
-    if( cryptoNvmCtx != 0 )
-    {
-        memcpy1( ( uint8_t* )&NvmCryptoCtx, ( uint8_t* )cryptoNvmCtx, CRYPTO_NVM_CTX_SIZE );
-        return LORAMAC_CRYPTO_SUCCESS;
-    }
-    else
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-}
-
-void* LoRaMacCryptoGetNvmCtx( size_t* cryptoNvmCtxSize )
-{
-    *cryptoNvmCtxSize = CRYPTO_NVM_CTX_SIZE;
-    return &NvmCryptoCtx;
-}
-
-LoRaMacCryptoStatus_t LoRaMacCryptoGetFCntUp( uint32_t* currentUp )
-{
-    if( currentUp == NULL )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-
-    *currentUp = CryptoCtx.NvmCtx->FCntList.FCntUp + 1;
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-LoRaMacCryptoStatus_t LoRaMacCryptoGetFCntDown( FCntIdentifier_t fCntID, uint16_t maxFCntGap, uint32_t frameFcnt, uint32_t* currentDown )
-{
-    uint32_t lastDown = 0;
-    int32_t fCntDiff = 0;
-    LoRaMacCryptoStatus_t cryptoStatus = LORAMAC_CRYPTO_ERROR;
-
-    if( currentDown == NULL )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-
-    cryptoStatus = GetLastFcntDown( fCntID, &lastDown );
-    if( cryptoStatus != LORAMAC_CRYPTO_SUCCESS )
-    {
-        return cryptoStatus;
-    }
-
-    // For LoRaWAN 1.0.X only, allow downlink frames of 0
-    if( lastDown == FCNT_DOWN_INITAL_VALUE )
-    {
-        *currentDown = frameFcnt;
-    }
-    else
-    {
-        // Add difference, consider roll-over
-        fCntDiff = ( int32_t )( ( int64_t )frameFcnt - ( int64_t )( lastDown & 0x0000FFFF ) );
-
-        if( fCntDiff > 0 )
-        {  // Positive difference
-            *currentDown = lastDown + fCntDiff;
-        }
-        else if( fCntDiff == 0 )
-        {  // Duplicate FCnt value, keep the current value.
-            *currentDown = lastDown;
-            return LORAMAC_CRYPTO_FAIL_FCNT_DUPLICATED;
-        }
-        else
-        {  // Negative difference, assume a roll-over of one uint16_t
-            *currentDown = ( lastDown & 0xFFFF0000 ) + 0x10000 + frameFcnt;
-        }
-    }
-
-    // For LoRaWAN 1.0.X only, check maxFCntGap
-    if( CryptoCtx.NvmCtx->LrWanVersion.Fields.Minor == 0 )
-    {
-        if( ( ( int64_t )*currentDown - ( int64_t )lastDown ) >= maxFCntGap )
-        {
-            return LORAMAC_CRYPTO_FAIL_MAX_GAP_FCNT;
-        }
-    }
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-LoRaMacCryptoStatus_t LoRaMacCryptoSetMulticastReference( MulticastCtx_t* multicastList )
-{
-    if( multicastList == NULL )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-
-    multicastList[0].DownLinkCounter = &CryptoCtx.NvmCtx->FCntList.McFCntDown0;
-    multicastList[1].DownLinkCounter = &CryptoCtx.NvmCtx->FCntList.McFCntDown1;
-    multicastList[2].DownLinkCounter = &CryptoCtx.NvmCtx->FCntList.McFCntDown2;
-    multicastList[3].DownLinkCounter = &CryptoCtx.NvmCtx->FCntList.McFCntDown3;
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-LoRaMacCryptoStatus_t LoRaMacCryptoSetKey( KeyIdentifier_t keyID, uint8_t* key )
-{
-    if( SecureElementSetKey( keyID, key ) != SECURE_ELEMENT_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-    }
-    if( ( keyID == GEN_APP_KEY ) || ( keyID == APP_KEY ) )
-    {
-        // Derive lifetime keys
-        if( LoRaMacCryptoDeriveMcRootKey( keyID ) != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-        }
-        if( LoRaMacCryptoDeriveMcKEKey( MC_ROOT_KEY ) != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-        }
-    }
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-LoRaMacCryptoStatus_t LoRaMacCryptoPrepareJoinRequest( LoRaMacMessageJoinRequest_t* macMsg )
-{
-    if( macMsg == 0 )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-    KeyIdentifier_t micComputationKeyID = NWK_KEY;
-
-    // Add device nonce
-#if ( USE_RANDOM_DEV_NONCE == 1 )
-    uint32_t devNonce = 0;
-    SecureElementRandomNumber( &devNonce );
-    CryptoCtx.NvmCtx->DevNonce = devNonce;
-#else
-    CryptoCtx.NvmCtx->DevNonce++;
-#endif
-    CryptoCtx.EventCryptoNvmCtxChanged( );
-    macMsg->DevNonce = CryptoCtx.NvmCtx->DevNonce;
-
-#if( USE_LRWAN_1_1_X_CRYPTO == 1 )
-    // Derive lifetime session keys
-    if( DeriveLifeTimeSessionKey( J_S_INT_KEY, macMsg->DevEUI ) != LORAMAC_CRYPTO_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR;
-    }
-    if( DeriveLifeTimeSessionKey( J_S_ENC_KEY, macMsg->DevEUI ) != LORAMAC_CRYPTO_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR;
-    }
-#endif
-
-    // Serialize message
-    if( LoRaMacSerializerJoinRequest( macMsg ) != LORAMAC_SERIALIZER_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SERIALIZER;
-    }
-
-    // Compute mic
-    if( SecureElementComputeAesCmac( NULL, macMsg->Buffer, ( LORAMAC_JOIN_REQ_MSG_SIZE - LORAMAC_MIC_FIELD_SIZE ), micComputationKeyID, &macMsg->MIC ) != SECURE_ELEMENT_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-    }
-
-    // Reserialize message to add the MIC
-    if( LoRaMacSerializerJoinRequest( macMsg ) != LORAMAC_SERIALIZER_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SERIALIZER;
-    }
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-LoRaMacCryptoStatus_t LoRaMacCryptoPrepareReJoinType1( LoRaMacMessageReJoinType1_t* macMsg )
-{
-    if( macMsg == 0 )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-
-    // Check for RJcount1 overflow
-    if( CryptoCtx.NvmCtx->RJcount1 == 65535 )
-    {
-        return LORAMAC_CRYPTO_ERROR_RJCOUNT1_OVERFLOW;
-    }
-
-    // Serialize message
-    if( LoRaMacSerializerReJoinType1( macMsg ) != LORAMAC_SERIALIZER_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SERIALIZER;
-    }
-
-    // Compute mic
-    // cmac = aes128_cmac(JSIntKey, MHDR | RejoinType | JoinEUI| DevEUI | RJcount1)
-    if( SecureElementComputeAesCmac( NULL, macMsg->Buffer, ( LORAMAC_RE_JOIN_1_MSG_SIZE - LORAMAC_MIC_FIELD_SIZE ), J_S_INT_KEY, &macMsg->MIC ) != SECURE_ELEMENT_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-    }
-
-    // Reserialize message to add the MIC
-    if( LoRaMacSerializerReJoinType1( macMsg ) != LORAMAC_SERIALIZER_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SERIALIZER;
-    }
-
-    // Increment RJcount1
-    CryptoCtx.NvmCtx->RJcount1++;
-    CryptoCtx.EventCryptoNvmCtxChanged( );
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-LoRaMacCryptoStatus_t LoRaMacCryptoPrepareReJoinType0or2( LoRaMacMessageReJoinType0or2_t* macMsg )
-{
-    if( macMsg == 0 )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-
-    // Check for RJcount0 overflow
-    if( CryptoCtx.RJcount0 == 65535 )
-    {
-        return LORAMAC_CRYPTO_FAIL_RJCOUNT0_OVERFLOW;
-    }
-
-    // Serialize message
-    if( LoRaMacSerializerReJoinType0or2( macMsg ) != LORAMAC_SERIALIZER_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SERIALIZER;
-    }
-
-    // Compute mic
-    // cmac = aes128_cmac(SNwkSIntKey, MHDR | Rejoin Type | NetID | DevEUI | RJcount0)
-    if( SecureElementComputeAesCmac( NULL, macMsg->Buffer, ( LORAMAC_RE_JOIN_0_2_MSG_SIZE - LORAMAC_MIC_FIELD_SIZE ), S_NWK_S_INT_KEY, &macMsg->MIC ) != SECURE_ELEMENT_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-    }
-
-    // Re-serialize message to add the MIC
-    if( LoRaMacSerializerReJoinType0or2( macMsg ) != LORAMAC_SERIALIZER_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SERIALIZER;
-    }
-
-    // Increment RJcount0
-    CryptoCtx.RJcount0++;
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-LoRaMacCryptoStatus_t LoRaMacCryptoHandleJoinAccept( JoinReqIdentifier_t joinReqType, uint8_t* joinEUI, LoRaMacMessageJoinAccept_t* macMsg )
-{
-    if( ( macMsg == 0 ) || ( joinEUI == 0 ) )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-
-    LoRaMacCryptoStatus_t retval = LORAMAC_CRYPTO_ERROR;
-
-    // 1st trial for LoRaWAN 1.0.x
-    uint8_t micHeader10[1] = { 0x20 };
-    uint8_t macMsgBufferDec[33] = { 0 };
-    //   mic = aes128_cmac(NwkKey, MHDR |  JoinNonce | NetID | DevAddr | DLSettings | RxDelay | CFList | CFListType)
-    if( SecureElementProcessJoinAccept( NWK_KEY, NWK_KEY, 0, micHeader10, macMsg->Buffer, macMsg->BufSize, macMsgBufferDec ) != SECURE_ELEMENT_SUCCESS )
-    {
-#if( USE_LRWAN_1_1_X_CRYPTO == 1 )
-        //   mic = aes128_cmac(JSIntKey, JoinReqType | JoinEUI | DevNonce | MHDR | JoinNonce | NetID | DevAddr | DLSettings | RxDelay | CFList | CFListType)
-        // Prepare the msg for integrity check (adding JoinReqType, JoinEUI and DevNonce)
-        uint8_t micHeader11[CRYPTO_MIC_COMPUTATION_OFFSET];
-        uint16_t bufItr = 0;
-        micHeader11[bufItr++] = ( uint8_t )joinReqType;
-
-        memcpyr( micHeader11 + bufItr, joinEUI, LORAMAC_JOIN_EUI_FIELD_SIZE );
-        bufItr += LORAMAC_JOIN_EUI_FIELD_SIZE;
-
-        micHeader11[bufItr++] = CryptoCtx.NvmCtx->DevNonce & 0xFF;
-        micHeader11[bufItr++] = ( CryptoCtx.NvmCtx->DevNonce >> 8 ) & 0xFF;
-
-        micHeader11[bufItr++] = 0x20;
-
-        // 2nd trial for LoRaWAN 1.1.x
-        if( SecureElementProcessJoinAccept( J_S_ENC_KEY, J_S_INT_KEY, 1, micHeader11, macMsg->Buffer, macMsg->BufSize, macMsgBufferDec ) != SECURE_ELEMENT_SUCCESS )
-        {
-            return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-        }
-        CryptoCtx.NvmCtx->LrWanVersion.Fields.Minor = 1;
-#else
-        return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-#endif
-    }
-    else
-    {
-        CryptoCtx.NvmCtx->LrWanVersion.Fields.Minor = 0;
-    }
-
-    memcpy1( macMsg->Buffer, macMsgBufferDec, macMsg->BufSize );
-
-    // Parse the message
-    if( LoRaMacParserJoinAccept( macMsg ) != LORAMAC_PARSER_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_PARSER;
-    }
-
-#if( USE_LRWAN_1_1_X_CRYPTO == 1 )
-    if( CryptoCtx.NvmCtx->LrWanVersion.Fields.Minor == 1 )
-    {
-        // Check if the JoinNonce is greater as the previous one
-        uint32_t currentJoinNonce = 0;
-
-        currentJoinNonce = ( uint32_t )macMsg->JoinNonce[0];
-        currentJoinNonce |= ( ( uint32_t )macMsg->JoinNonce[1] << 8 );
-        currentJoinNonce |= ( ( uint32_t )macMsg->JoinNonce[2] << 16 );
-
-        if( currentJoinNonce > CryptoCtx.NvmCtx->JoinNonce )
-        {
-            CryptoCtx.NvmCtx->JoinNonce = currentJoinNonce;
-            CryptoCtx.EventCryptoNvmCtxChanged( );
-        }
-        else
-        {
-            return LORAMAC_CRYPTO_FAIL_JOIN_NONCE;
-        }
-    }
-#endif
-
-    // Derive session keys
-#if( USE_LRWAN_1_1_X_CRYPTO == 1 )
-    uint8_t* devNonceForKeyDerivation = ( uint8_t* )&CryptoCtx.NvmCtx->DevNonce;
-#endif
-
-    // Determine decryption key and DevNonce for key derivation
-    if( joinReqType == JOIN_REQ )
-    {
-        // Nothing to be done
-    }
-#if( USE_LRWAN_1_1_X_CRYPTO == 1 )
-    else
-    {
-        // If Join-accept is a reply to a rejoin, the RJcount(0 or 1) replaces DevNonce in the key derivation process.
-        if( ( joinReqType == REJOIN_REQ_0 ) || ( joinReqType == REJOIN_REQ_2 ) )
-        {
-            devNonceForKeyDerivation = ( uint8_t* )&CryptoCtx.RJcount0;
-        }
-        else
-        {
-            devNonceForKeyDerivation = ( uint8_t* )&CryptoCtx.NvmCtx->RJcount1;
-        }
-    }
-
-    if( CryptoCtx.NvmCtx->LrWanVersion.Fields.Minor == 1 )
-    {
-        // Operating in LoRaWAN 1.1.x mode
-        // Derive lifetime keys
-        retval = LoRaMacCryptoDeriveMcRootKey( APP_KEY );
-        if( retval != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return retval;
-        }
-
-        retval = LoRaMacCryptoDeriveMcKEKey( MC_ROOT_KEY );
-        if( retval != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return retval;
-        }
-
-        retval = DeriveSessionKey11x( F_NWK_S_INT_KEY, macMsg->JoinNonce, joinEUI, devNonceForKeyDerivation );
-        if( retval != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return retval;
-        }
-
-        retval = DeriveSessionKey11x( S_NWK_S_INT_KEY, macMsg->JoinNonce, joinEUI, devNonceForKeyDerivation );
-        if( retval != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return retval;
-        }
-
-        retval = DeriveSessionKey11x( NWK_S_ENC_KEY, macMsg->JoinNonce, joinEUI, devNonceForKeyDerivation );
-        if( retval != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return retval;
-        }
-
-        retval = DeriveSessionKey11x( APP_S_KEY, macMsg->JoinNonce, joinEUI, devNonceForKeyDerivation );
-        if( retval != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return retval;
-        }
-    }
-    else
-#endif
-    {
-        // Operating in LoRaWAN 1.0.x mode
-        retval = LoRaMacCryptoDeriveMcRootKey( GEN_APP_KEY );
-        if( retval != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return retval;
-        }
-
-        retval = LoRaMacCryptoDeriveMcKEKey( MC_ROOT_KEY );
-        if( retval != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return retval;
-        }
-
-        retval = DeriveSessionKey10x( APP_S_KEY, macMsg->JoinNonce, macMsg->NetID, ( uint8_t* )&CryptoCtx.NvmCtx->DevNonce );
-        if( retval != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return retval;
-        }
-
-        retval = DeriveSessionKey10x( NWK_S_ENC_KEY, macMsg->JoinNonce, macMsg->NetID, ( uint8_t* )&CryptoCtx.NvmCtx->DevNonce );
-        if( retval != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return retval;
-        }
-
-        retval = DeriveSessionKey10x( F_NWK_S_INT_KEY, macMsg->JoinNonce, macMsg->NetID, ( uint8_t* )&CryptoCtx.NvmCtx->DevNonce );
-        if( retval != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return retval;
-        }
-
-        retval = DeriveSessionKey10x( S_NWK_S_INT_KEY, macMsg->JoinNonce, macMsg->NetID, ( uint8_t* )&CryptoCtx.NvmCtx->DevNonce );
-        if( retval != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return retval;
-        }
-    }
-
-    // Join-Accept is successfully processed, reset frame counters
-    CryptoCtx.RJcount0 = 0;
-    CryptoCtx.NvmCtx->FCntList.FCntUp = 0;
-    CryptoCtx.NvmCtx->FCntList.FCntDown = FCNT_DOWN_INITAL_VALUE;
-    CryptoCtx.NvmCtx->FCntList.NFCntDown = FCNT_DOWN_INITAL_VALUE;
-    CryptoCtx.NvmCtx->FCntList.AFCntDown = FCNT_DOWN_INITAL_VALUE;
-    CryptoCtx.EventCryptoNvmCtxChanged( );
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-LoRaMacCryptoStatus_t LoRaMacCryptoSecureMessage( uint32_t fCntUp, uint8_t txDr, uint8_t txCh, LoRaMacMessageData_t* macMsg )
-{
-    LoRaMacCryptoStatus_t retval = LORAMAC_CRYPTO_ERROR;
-    KeyIdentifier_t payloadDecryptionKeyID = APP_S_KEY;
-
-    if( macMsg == NULL )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-
-    if( fCntUp < CryptoCtx.NvmCtx->FCntList.FCntUp )
-    {
-        return LORAMAC_CRYPTO_FAIL_FCNT_SMALLER;
-    }
-
-    // Encrypt payload
-    if( macMsg->FPort == 0 )
-    {
-        // Use network session key
-        payloadDecryptionKeyID = NWK_S_ENC_KEY;
-    }
-
-    if( fCntUp > CryptoCtx.NvmCtx->FCntList.FCntUp )
-    {
-        retval = PayloadEncrypt( macMsg->FRMPayload, macMsg->FRMPayloadSize, payloadDecryptionKeyID, macMsg->FHDR.DevAddr, UPLINK, fCntUp );
-        if( retval != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return retval;
-        }
-
-#if( USE_LRWAN_1_1_X_CRYPTO == 1 )
-        if( CryptoCtx.NvmCtx->LrWanVersion.Fields.Minor == 1 )
-        {
-            // Encrypt FOpts
-            retval = FOptsEncrypt( macMsg->FHDR.FCtrl.Bits.FOptsLen, macMsg->FHDR.DevAddr, UPLINK, FCNT_UP, fCntUp, macMsg->FHDR.FOpts );
-            if( retval != LORAMAC_CRYPTO_SUCCESS )
-            {
-                return retval;
-            }
-        }
-#endif
-    }
-    CryptoCtx.NvmCtx->FCntList.FCntUp = fCntUp;
-    CryptoCtx.EventCryptoNvmCtxChanged( );
-
-    // Serialize message
-    if( LoRaMacSerializerData( macMsg ) != LORAMAC_SERIALIZER_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SERIALIZER;
-    }
-
-    // Compute mic
-#if( USE_LRWAN_1_1_X_CRYPTO == 1 )
-    if( CryptoCtx.NvmCtx->LrWanVersion.Fields.Minor == 1 )
-    {
-        uint32_t cmacS = 0;
-        uint32_t cmacF = 0;
-
-        // cmacS  = aes128_cmac(SNwkSIntKey, B1 | msg)
-        retval = ComputeCmacB1( macMsg->Buffer, ( macMsg->BufSize - LORAMAC_MIC_FIELD_SIZE ), S_NWK_S_INT_KEY, macMsg->FHDR.FCtrl.Bits.Ack, txDr, txCh, macMsg->FHDR.DevAddr, fCntUp, &cmacS );
-        if( retval != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return retval;
-        }
-        //cmacF = aes128_cmac(FNwkSIntKey, B0 | msg)
-        retval = ComputeCmacB0( macMsg->Buffer, ( macMsg->BufSize - LORAMAC_MIC_FIELD_SIZE ), F_NWK_S_INT_KEY, macMsg->FHDR.FCtrl.Bits.Ack, UPLINK, macMsg->FHDR.DevAddr, fCntUp, &cmacF );
-        if( retval != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return retval;
-        }
-        // MIC = cmacS[0..1] | cmacF[0..1]
-        macMsg->MIC = ( ( cmacF << 16 ) & 0xFFFF0000 ) | ( cmacS & 0x0000FFFF );
-    }
-    else
-#endif
-    {
-        // MIC = cmacF[0..3]
-        // The IsAck parameter is every time false since the ConfFCnt field is not used in legacy mode.
-        retval = ComputeCmacB0( macMsg->Buffer, ( macMsg->BufSize - LORAMAC_MIC_FIELD_SIZE ), NWK_S_ENC_KEY, false, UPLINK, macMsg->FHDR.DevAddr, fCntUp, &macMsg->MIC );
-        if( retval != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return retval;
-        }
-    }
-
-    // Re-serialize message to add the MIC
-    if( LoRaMacSerializerData( macMsg ) != LORAMAC_SERIALIZER_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SERIALIZER;
-    }
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-LoRaMacCryptoStatus_t LoRaMacCryptoUnsecureMessage( AddressIdentifier_t addrID, uint32_t address, FCntIdentifier_t fCntID, uint32_t fCntDown, LoRaMacMessageData_t* macMsg )
-{
-    if( macMsg == 0 )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-
-    if( CheckFCntDown( fCntID, fCntDown ) == false )
-    {
-        return LORAMAC_CRYPTO_FAIL_FCNT_SMALLER;
-    }
-
-    LoRaMacCryptoStatus_t retval = LORAMAC_CRYPTO_ERROR;
-    KeyIdentifier_t payloadDecryptionKeyID = APP_S_KEY;
-    KeyIdentifier_t micComputationKeyID = S_NWK_S_INT_KEY;
-    KeyAddr_t* curItem;
-
-    // Parse the message
-    if( LoRaMacParserData( macMsg ) != LORAMAC_PARSER_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_PARSER;
-    }
-
-    // Determine current security context
-    retval = GetKeyAddrItem( addrID, &curItem );
-    if( retval != LORAMAC_CRYPTO_SUCCESS )
-    {
-        return retval;
-    }
-
-    payloadDecryptionKeyID = curItem->AppSkey;
-    micComputationKeyID = curItem->NwkSkey;
-
-    // Check if it is our address
-    if( address != macMsg->FHDR.DevAddr )
-    {
-        return LORAMAC_CRYPTO_FAIL_ADDRESS;
-    }
-
-    // Compute mic
-    bool isAck = macMsg->FHDR.FCtrl.Bits.Ack;
-    if( CryptoCtx.NvmCtx->LrWanVersion.Fields.Minor == 0 )
-    {
-        // In legacy mode the IsAck parameter is forced to be false since the ConfFCnt field is not used.
-        isAck = false;
-    }
-
-    // Verify mic
-    retval = VerifyCmacB0( macMsg->Buffer, ( macMsg->BufSize - LORAMAC_MIC_FIELD_SIZE ), micComputationKeyID, isAck, DOWNLINK, address, fCntDown, macMsg->MIC );
-    if( retval != LORAMAC_CRYPTO_SUCCESS )
-    {
-        return retval;
-    }
-
-    // Decrypt payload
-    if( macMsg->FPort == 0 )
-    {
-        // Use network session encryption key
-        payloadDecryptionKeyID = NWK_S_ENC_KEY;
-    }
-    retval = PayloadEncrypt( macMsg->FRMPayload, macMsg->FRMPayloadSize, payloadDecryptionKeyID, address, DOWNLINK, fCntDown );
-    if( retval != LORAMAC_CRYPTO_SUCCESS )
-    {
-        return retval;
-    }
-
-#if( USE_LRWAN_1_1_X_CRYPTO == 1 )
-    if( CryptoCtx.NvmCtx->LrWanVersion.Fields.Minor == 1 )
-    {
-        // Decrypt FOpts
-        retval = FOptsEncrypt( macMsg->FHDR.FCtrl.Bits.FOptsLen, address, DOWNLINK, fCntID, fCntDown, macMsg->FHDR.FOpts );
-        if( retval != LORAMAC_CRYPTO_SUCCESS )
-        {
-            return retval;
-        }
-    }
-#endif
-
-    UpdateFCntDown( fCntID, fCntDown );
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-LoRaMacCryptoStatus_t LoRaMacCryptoDeriveMcRootKey( KeyIdentifier_t keyID )
-{
-    // Prevent other keys than GenAppKey for LoRaWAN 1.0.x or AppKey for LoRaWAN 1.1 or later
-    if( ( ( keyID == APP_KEY ) && ( CryptoCtx.NvmCtx->LrWanVersion.Fields.Minor == 0 ) ) ||
-        ( ( keyID == GEN_APP_KEY ) && ( CryptoCtx.NvmCtx->LrWanVersion.Fields.Minor == 1 ) ) )
-    {
-        return LORAMAC_CRYPTO_ERROR_INVALID_KEY_ID;
-    }
-    uint8_t compBase[16] = { 0 };
-
-    if( CryptoCtx.NvmCtx->LrWanVersion.Fields.Minor == 1 )
-    {
-        compBase[0] = 0x20;
-    }
-    if( SecureElementDeriveAndStoreKey( CryptoCtx.NvmCtx->LrWanVersion, compBase, keyID, MC_ROOT_KEY ) != SECURE_ELEMENT_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-    }
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-LoRaMacCryptoStatus_t LoRaMacCryptoDeriveMcKEKey( KeyIdentifier_t keyID )
-{
-    // Prevent other keys than McRootKey
-    if( keyID != MC_ROOT_KEY )
-    {
-        return LORAMAC_CRYPTO_ERROR_INVALID_KEY_ID;
-    }
-    uint8_t compBase[16] = { 0 };
-
-    if( SecureElementDeriveAndStoreKey( CryptoCtx.NvmCtx->LrWanVersion, compBase, keyID, MC_KE_KEY ) != SECURE_ELEMENT_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-    }
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
-
-LoRaMacCryptoStatus_t LoRaMacCryptoDeriveMcSessionKeyPair( AddressIdentifier_t addrID, uint32_t mcAddr )
-{
-    if( mcAddr == 0 )
-    {
-        return LORAMAC_CRYPTO_ERROR_NPE;
-    }
-
-    LoRaMacCryptoStatus_t retval = LORAMAC_CRYPTO_ERROR;
-
-    // Determine current security context
-    KeyAddr_t* curItem;
-    retval = GetKeyAddrItem( addrID, &curItem );
-    if( retval != LORAMAC_CRYPTO_SUCCESS )
-    {
-        return retval;
-    }
-
-    // McAppSKey = aes128_encrypt(McKey, 0x01 | McAddr | pad16)
-    // McNwkSKey = aes128_encrypt(McKey, 0x02 | McAddr | pad16)
-
-    uint8_t compBaseAppS[16] = { 0 };
-    uint8_t compBaseNwkS[16] = { 0 };
-
-    compBaseAppS[0] = 0x01;
-    compBaseAppS[1] = mcAddr & 0xFF;
-    compBaseAppS[2] = ( mcAddr >> 8 ) & 0xFF;
-    compBaseAppS[3] = ( mcAddr >> 16 ) & 0xFF;
-    compBaseAppS[4] = ( mcAddr >> 24 ) & 0xFF;
-
-    compBaseNwkS[0] = 0x02;
-    compBaseNwkS[1] = mcAddr & 0xFF;
-    compBaseNwkS[2] = ( mcAddr >> 8 ) & 0xFF;
-    compBaseNwkS[3] = ( mcAddr >> 16 ) & 0xFF;
-    compBaseNwkS[4] = ( mcAddr >> 24 ) & 0xFF;
-
-    if( SecureElementDeriveAndStoreKey( CryptoCtx.NvmCtx->LrWanVersion, compBaseAppS, curItem->RootKey, curItem->AppSkey ) != SECURE_ELEMENT_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-    }
-
-    if( SecureElementDeriveAndStoreKey( CryptoCtx.NvmCtx->LrWanVersion, compBaseNwkS, curItem->RootKey, curItem->NwkSkey ) != SECURE_ELEMENT_SUCCESS )
-    {
-        return LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC;
-    }
-
-    return LORAMAC_CRYPTO_SUCCESS;
-}
diff --git a/mac/LoRaMacCrypto.h b/mac/LoRaMacCrypto.h
deleted file mode 100644
index 526c298..0000000
--- a/mac/LoRaMacCrypto.h
+++ /dev/null
@@ -1,329 +0,0 @@
-/*!
- * \file      LoRaMacCrypto.h
- *
- * \brief     LoRa MAC layer cryptographic functionality implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * addtogroup LORAMAC
- * \{
- *
- */
-#ifndef __LORAMAC_CRYPTO_H__
-#define __LORAMAC_CRYPTO_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdlib.h>
-#include <stdint.h>
-#include <stdbool.h>
-#include "utilities.h"
-#include "LoRaMacTypes.h"
-#include "LoRaMacMessageTypes.h"
-
-/*
- * Initial value of the frame counters
- */
-#define FCNT_DOWN_INITAL_VALUE          0xFFFFFFFF
-
-/*!
- * LoRaMac Cryto Status
- */
-typedef enum eLoRaMacCryptoStatus
-{
-    /*!
-     * No error occurred
-     */
-    LORAMAC_CRYPTO_SUCCESS = 0,
-    /*!
-     * MIC does not match
-     */
-    LORAMAC_CRYPTO_FAIL_MIC,
-    /*!
-     * Address does not match
-     */
-    LORAMAC_CRYPTO_FAIL_ADDRESS,
-    /*!
-     * JoinNonce was not greater than previous one.
-     */
-    LORAMAC_CRYPTO_FAIL_JOIN_NONCE,
-    /*!
-     * RJcount0 reached 2^16-1
-     */
-    LORAMAC_CRYPTO_FAIL_RJCOUNT0_OVERFLOW,
-    /*!
-     * FCNT_ID is not supported
-     */
-    LORAMAC_CRYPTO_FAIL_FCNT_ID,
-    /*!
-     * FCntUp/Down check failed (new FCnt is smaller than previous one)
-     */
-    LORAMAC_CRYPTO_FAIL_FCNT_SMALLER,
-    /*!
-     * FCntUp/Down check failed (duplicated)
-     */
-    LORAMAC_CRYPTO_FAIL_FCNT_DUPLICATED,
-    /*!
-     * MAX_GAP_FCNT check failed
-     */
-    LORAMAC_CRYPTO_FAIL_MAX_GAP_FCNT,
-    /*!
-     * Not allowed parameter value
-     */
-    LORAMAC_CRYPTO_FAIL_PARAM,
-    /*!
-     * Null pointer exception
-     */
-    LORAMAC_CRYPTO_ERROR_NPE,
-    /*!
-     * Invalid key identifier exception
-     */
-    LORAMAC_CRYPTO_ERROR_INVALID_KEY_ID,
-    /*!
-     * Invalid address identifier exception
-     */
-    LORAMAC_CRYPTO_ERROR_INVALID_ADDR_ID,
-    /*!
-     * Invalid LoRaWAN specification version
-     */
-    LORAMAC_CRYPTO_ERROR_INVALID_VERSION,
-    /*!
-     * Incompatible buffer size
-     */
-    LORAMAC_CRYPTO_ERROR_BUF_SIZE,
-    /*!
-     * The secure element reports an error
-     */
-    LORAMAC_CRYPTO_ERROR_SECURE_ELEMENT_FUNC,
-    /*!
-     * Error from parser reported
-     */
-    LORAMAC_CRYPTO_ERROR_PARSER,
-    /*!
-     * Error from serializer reported
-     */
-    LORAMAC_CRYPTO_ERROR_SERIALIZER,
-    /*!
-     * RJcount1 reached 2^16-1 which should never happen
-     */
-    LORAMAC_CRYPTO_ERROR_RJCOUNT1_OVERFLOW,
-    /*!
-     * Undefined Error occurred
-     */
-    LORAMAC_CRYPTO_ERROR,
-}LoRaMacCryptoStatus_t;
-
-/*!
- * Signature of callback function to be called by the LoRaMac Crypto module when the
- * non-volatile context have to be stored. It is also possible to save the entire
- * crypto module context.
- *
- */
-typedef void ( *LoRaMacCryptoNvmEvent )( void );
-
-/*!
- * Initialization of LoRaMac Crypto module
- * It sets initial values of volatile variables and assigns the non-volatile context.
- *
- * \param[IN]     cryptoNvmCtxChanged - Callback function which will be called  when the
- *                                      non-volatile context have to be stored.
- * \retval                            - Status of the operation
- */
-LoRaMacCryptoStatus_t LoRaMacCryptoInit( LoRaMacCryptoNvmEvent cryptoNvmCtxChanged );
-
-/*!
- * Sets the LoRaWAN specification version to be used.
- *
- * \warning This function should be used for ABP only. In case of OTA the version will be set automatically.
- *
- * \param[IN]     version             - LoRaWAN specification version to be used.
- *
- * \retval                            - Status of the operation
- */
-LoRaMacCryptoStatus_t LoRaMacCryptoSetLrWanVersion( Version_t version );
-
-/*!
- * Restores the internal nvm context from passed pointer.
- *
- * \param[IN]     cryptoNmvCtx     - Pointer to non-volatile crypto module context to be restored.
- * \retval                         - Status of the operation
- */
-LoRaMacCryptoStatus_t LoRaMacCryptoRestoreNvmCtx( void* cryptoNvmCtx );
-
-/*!
- * Returns a pointer to the internal non-volatile context.
- *
- * \param[IN]     cryptoNvmCtxSize - Size of the module non-volatile context
- * \retval                         - Points to a structure where the module store its non-volatile context
- */
-void* LoRaMacCryptoGetNvmCtx( size_t* cryptoNvmCtxSize );
-
-/*!
- * Returns updated fCntID downlink counter value.
- *
- * \param[IN]     fCntID         - Frame counter identifier
- * \param[IN]     maxFcntGap     - Maximum allowed frame counter difference (only necessary for L2 LW1.0.x)
- * \param[IN]     frameFcnt      - Received frame counter (used to update current counter value)
- * \param[OUT]    currentDown    - Current downlink counter value
- * \retval                       - Status of the operation
- */
-LoRaMacCryptoStatus_t LoRaMacCryptoGetFCntDown( FCntIdentifier_t fCntID, uint16_t maxFCntGap, uint32_t frameFcnt, uint32_t* currentDown );
-
-/*!
- * Returns updated fCntUp uplink counter value.
- *
- * \param[IN]     currentUp      - Uplink counter value
- * \retval                       - Status of the operation
- */
-LoRaMacCryptoStatus_t LoRaMacCryptoGetFCntUp( uint32_t* currentUp );
-
-/*!
- * Provides multicast context.
- *
- * \param[IN]     multicastList - Pointer to the multicast context list
- *
- * \retval                      - Status of the operation
- */
-LoRaMacCryptoStatus_t LoRaMacCryptoSetMulticastReference( MulticastCtx_t* multicastList );
-
-/*!
- * Sets a key
- *
- * \param[IN]     keyID          - Key identifier
- * \param[IN]     key            - Key value (16 byte), if its a multicast key it must be encrypted with McKEKey
- * \retval                       - Status of the operation
- */
-LoRaMacCryptoStatus_t LoRaMacCryptoSetKey( KeyIdentifier_t keyID, uint8_t* key );
-
-/*!
- * Prepares the join-request message.
- * It computes the mic and add it to the message.
- *
- * \param[IN/OUT] macMsg         - Join-request message object
- * \retval                       - Status of the operation
- */
-LoRaMacCryptoStatus_t LoRaMacCryptoPrepareJoinRequest( LoRaMacMessageJoinRequest_t* macMsg );
-
-/*!
- * Prepares a rejoin-request type 1 message.
- * It computes the mic and add it to the message.
- *
- * \param[IN/OUT] macMsg         - Rejoin message object
- * \retval                       - Status of the operation
- */
-LoRaMacCryptoStatus_t LoRaMacCryptoPrepareReJoinType1( LoRaMacMessageReJoinType1_t* macMsg );
-
-/*!
- * Prepares a rejoin-request type 0 or 2 message.
- * It computes the mic and add it to the message.
- *
- * \param[IN/OUT] macMsg         - Rejoin message object
- * \retval                       - Status of the operation
- */
-LoRaMacCryptoStatus_t LoRaMacCryptoPrepareReJoinType0or2( LoRaMacMessageReJoinType0or2_t* macMsg );
-
-/*!
- * Handles the join-accept message.
- * It decrypts the message, verifies the MIC and if successful derives the session keys.
- *
- * \param[IN]     joinReqType    - Type of last join-request or rejoin which triggered the join-accept response
- * \param[IN]     joinEUI        - Join server EUI (8 byte)
- * \param[IN/OUT] macMsg         - Join-accept message object
- * \retval                       - Status of the operation
- */
-LoRaMacCryptoStatus_t LoRaMacCryptoHandleJoinAccept( JoinReqIdentifier_t joinReqType, uint8_t* joinEUI, LoRaMacMessageJoinAccept_t* macMsg );
-
-/*!
- * Secures a message (encryption + integrity).
- *
- * \param[IN]     fCntUp          - Uplink sequence counter
- * \param[IN]     txDr            - Data rate used for the transmission
- * \param[IN]     txCh            - Index of the channel used for the transmission
- * \param[IN/OUT] macMsg          - Data message object
- * \retval                        - Status of the operation
- */
-LoRaMacCryptoStatus_t LoRaMacCryptoSecureMessage( uint32_t fCntUp, uint8_t txDr, uint8_t txCh, LoRaMacMessageData_t* macMsg );
-
-/*!
- * Unsecures a message (decryption + integrity verification).
- *
- * \param[IN]     addrID          - Address identifier
- * \param[IN]     address         - Address
- * \param[IN]     fCntID          - Frame counter identifier
- * \param[IN]     fCntDown        - Downlink sequence counter
- * \param[IN/OUT] macMsg          - Data message object
- * \retval                        - Status of the operation
- */
-LoRaMacCryptoStatus_t LoRaMacCryptoUnsecureMessage( AddressIdentifier_t addrID, uint32_t address, FCntIdentifier_t fCntID, uint32_t fCntDown, LoRaMacMessageData_t* macMsg );
-
-/*!
- * Derives the McRootKey from the GenAppKey or AppKey.
- *
- * 1.0.x
- * McRootKey = aes128_encrypt(GenAppKey , 0x00 | pad16)
- *
- * 1.1.x
- * McRootKey = aes128_encrypt(AppKey , 0x20 | pad16)
- *
- * \param[IN]     keyID           - Key identifier of the root key to use to perform the derivation ( GenAppKey or AppKey )
- * \retval                        - Status of the operation
- */
-LoRaMacCryptoStatus_t LoRaMacCryptoDeriveMcRootKey( KeyIdentifier_t keyID );
-
-/*!
- * Derives the McKEKey from the McRootKey.
- *
- * McKEKey = aes128_encrypt(McRootKey , 0x00  | pad16)
- *
- * \param[IN]     keyID           - Key identifier of the root key to use to perform the derivation ( McRootKey )
- * \retval                        - Status of the operation
- */
-LoRaMacCryptoStatus_t LoRaMacCryptoDeriveMcKEKey( KeyIdentifier_t keyID );
-
-/*!
- * Derives a Multicast group key pair ( McAppSKey, McNwkSKey ) from McKey
- *
- * McAppSKey = aes128_encrypt(McKey, 0x01 | McAddr | pad16)
- * McNwkSKey = aes128_encrypt(McKey, 0x02 | McAddr | pad16)
- *
- * \param[IN]     addrID          - Address identifier to select the multicast group
- * \param[IN]     mcAddr          - Multicast group address (4 bytes)
- * \retval                        - Status of the operation
- */
-LoRaMacCryptoStatus_t LoRaMacCryptoDeriveMcSessionKeyPair( AddressIdentifier_t addrID, uint32_t mcAddr );
-
-/*! \} addtogroup LORAMAC */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __LORAMAC_CRYPTO_H__
diff --git a/mac/LoRaMacHeaderTypes.h b/mac/LoRaMacHeaderTypes.h
deleted file mode 100644
index 02bd9ea..0000000
--- a/mac/LoRaMacHeaderTypes.h
+++ /dev/null
@@ -1,195 +0,0 @@
-/*!
- * \file      LoRaMacHeaderTypes.h
- *
- * \brief     LoRa MAC layer header type definitions
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * addtogroup LORAMAC
- * \{
- *
- */
-#ifndef __LORAMAC_HEADER_TYPES_H__
-#define __LORAMAC_HEADER_TYPES_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-
-/*! Frame header (FHDR) maximum field size */
-#define LORAMAC_FHDR_MAX_FIELD_SIZE            22
-
-/*! FHDR Device address field size */
-#define LORAMAC_FHDR_DEV_ADD_FIELD_SIZE         4
-
-/*! FHDR Frame control field size */
-#define LORAMAC_FHDR_F_CTRL_FIELD_SIZE          1
-
-/*! FHDR Frame control field size */
-#define LORAMAC_FHDR_F_CNT_FIELD_SIZE           2
-
-/*! FOpts maximum field size */
-#define LORAMAC_FHDR_F_OPTS_MAX_FIELD_SIZE          15
-
-
-/*!
- * LoRaMAC field definition of DLSettings
- *
- * LoRaWAN Specification V1.0.2, chapter 5.4
- */
-typedef union uLoRaMacDLSettings
-{
-    /*!
-     * Byte-access to the bits
-     */
-    uint8_t Value;
-    /*!
-     * Structure containing single access to header bits
-     */
-    struct sDLSettingsBits
-    {
-        /*!
-         * Data rate of a downlink using the second receive window
-         */
-        uint8_t RX2DataRate     : 4;
-        /*!
-         * Offset between up and downlink datarate of first reception slot
-         */
-        uint8_t RX1DRoffset     : 3;
-        /*!
-         * Indicates network server LoRaWAN implementation version 1.1 or later.
-         */
-        uint8_t OptNeg          : 1;
-    }Bits;
-}LoRaMacDLSettings_t;
-
-/*!
- * LoRaMAC header field definition (MHDR field)
- *
- * LoRaWAN Specification V1.0.2, chapter 4.2
- */
-typedef union uLoRaMacHeader
-{
-    /*!
-     * Byte-access to the bits
-     */
-    uint8_t Value;
-    /*!
-     * Structure containing single access to header bits
-     */
-    struct sMacHeaderBits
-    {
-        /*!
-         * Major version
-         */
-        uint8_t Major           : 2;
-        /*!
-         * RFU
-         */
-        uint8_t RFU             : 3;
-        /*!
-         * Message type
-         */
-        uint8_t MType           : 3;
-    }Bits;
-}LoRaMacHeader_t;
-
-/*!
- * LoRaMAC frame control field definition (FCtrl)
- *
- * LoRaWAN Specification V1.0.2, chapter 4.3.1
- */
-typedef union uLoRaMacFrameCtrl
-{
-    /*!
-     * Byte-access to the bits
-     */
-    uint8_t Value;
-    /*!
-     * Structure containing single access to bits
-     */
-    struct sCtrlBits
-    {
-        /*!
-         * Frame options length
-         */
-        uint8_t FOptsLen        : 4;
-        /*!
-         * Frame pending bit
-         */
-        uint8_t FPending        : 1;
-        /*!
-         * Message acknowledge bit
-         */
-        uint8_t Ack             : 1;
-        /*!
-         * ADR acknowledgment request bit
-         */
-        uint8_t AdrAckReq       : 1;
-        /*!
-         * ADR control in frame header
-         */
-        uint8_t Adr             : 1;
-    }Bits;
-}LoRaMacFrameCtrl_t;
-
-/*!
- * LoRaMac Frame header (FHDR)
- *
- * LoRaWAN Specification V1.0.2, chapter 4.3.1
- */
-typedef struct sLoRaMacFrameHeader
-{
-    /*!
-     * Device address
-     */
-    uint32_t DevAddr;
-    /*!
-     * Frame control field
-     */
-    LoRaMacFrameCtrl_t FCtrl;
-    /*!
-     * Frame counter
-     */
-    uint16_t FCnt;
-    /*!
-     * FOpts field may transport  MAC commands (opt. 0-15 Bytes)
-     */
-    uint8_t FOpts[LORAMAC_FHDR_F_OPTS_MAX_FIELD_SIZE];
-}LoRaMacFrameHeader_t;
-
-/*! \} addtogroup LORAMAC */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __LORAMAC_HEADER_TYPES_H__
diff --git a/mac/LoRaMacMessageTypes.h b/mac/LoRaMacMessageTypes.h
deleted file mode 100644
index 415d431..0000000
--- a/mac/LoRaMacMessageTypes.h
+++ /dev/null
@@ -1,336 +0,0 @@
-/*!
- * \file      LoRaMacMessageTypes.h
- *
- * \brief     LoRa MAC layer message type definitions
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * addtogroup LORAMAC
- * \{
- *
- */
-#ifndef __LORAMAC_MESSAGE_TYPES_H__
-#define __LORAMAC_MESSAGE_TYPES_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-#include "LoRaMacHeaderTypes.h"
-
-
-/*! MAC header field size */
-#define LORAMAC_MHDR_FIELD_SIZE             1
-
-/*! Join EUI field size */
-#define LORAMAC_JOIN_EUI_FIELD_SIZE         8
-
-/*! Device EUI field size */
-#define LORAMAC_DEV_EUI_FIELD_SIZE          8
-
-/*! Join-server nonce field size */
-#define LORAMAC_JOIN_NONCE_FIELD_SIZE        3
-
-/*! Network ID field size */
-#define LORAMAC_NET_ID_FIELD_SIZE           3
-
-/*! Port field size */
-#define LORAMAC_F_PORT_FIELD_SIZE           1
-
-/*! CFList field size */
-#define LORAMAC_C_FLIST_FIELD_SIZE          16
-
-/*! MIC field size */
-#define LORAMAC_MIC_FIELD_SIZE              4
-
-/*! Join-request message size */
-#define LORAMAC_JOIN_REQ_MSG_SIZE           23
-
-/*! ReJoin-request type 1 message size */
-#define LORAMAC_RE_JOIN_1_MSG_SIZE          24
-
-/*! ReJoin-request type 0 or 2 message size */
-#define LORAMAC_RE_JOIN_0_2_MSG_SIZE        19
-
-/*!
- * LoRaMac type for Join-request message
- */
-typedef struct sLoRaMacMessageJoinRequest
-{
-    /*!
-     * Serialized message buffer
-     */
-    uint8_t* Buffer;
-    /*!
-     * Size of serialized message buffer
-     */
-    uint8_t BufSize;
-    /*!
-     * MAC header
-     */
-    LoRaMacHeader_t MHDR;
-    /*!
-     *  Join EUI
-     */
-    uint8_t JoinEUI[LORAMAC_JOIN_EUI_FIELD_SIZE];
-    /*!
-     * Device EUI
-     */
-    uint8_t DevEUI[LORAMAC_DEV_EUI_FIELD_SIZE];
-    /*!
-     * Device Nonce
-     */
-    uint16_t DevNonce;
-    /*!
-     * Message integrity code (MIC)
-     */
-    uint32_t MIC;
-}LoRaMacMessageJoinRequest_t;
-
-/*!
- * LoRaMac type for rejoin-request type 1 message
- */
-typedef struct sLoRaMacMessageReJoinType1
-{
-    /*!
-     * Serialized message buffer
-     */
-    uint8_t* Buffer;
-    /*!
-     * Size of serialized message buffer
-     */
-    uint8_t BufSize;
-    /*!
-     * MAC header
-     */
-    LoRaMacHeader_t MHDR;
-    /*!
-     * Rejoin-request type ( 1 )
-     */
-    uint8_t ReJoinType;
-    /*!
-     *  Join EUI
-     */
-    uint8_t JoinEUI[LORAMAC_JOIN_EUI_FIELD_SIZE];
-    /*!
-     * Device EUI
-     */
-    uint8_t DevEUI[LORAMAC_DEV_EUI_FIELD_SIZE];
-    /*!
-     * ReJoin Type 1 counter
-     */
-    uint16_t RJcount1;
-    /*!
-     * Message integrity code (MIC)
-     */
-    uint32_t MIC;
-}LoRaMacMessageReJoinType1_t;
-
-/*!
- * LoRaMac type for rejoin-request type 0 or 2 message
- */
-typedef struct sLoRaMacMessageReJoinType0or2
-{
-    /*!
-     * Serialized message buffer
-     */
-    uint8_t* Buffer;
-    /*!
-     * Size of serialized message buffer
-     */
-    uint8_t BufSize;
-    /*!
-     * MAC header
-     */
-    LoRaMacHeader_t MHDR;
-    /*!
-     * Rejoin-request type ( 0 or 2 )
-     */
-    uint8_t ReJoinType;
-    /*!
-     * Network ID ( 3 bytes )
-     */
-    uint8_t NetID[LORAMAC_NET_ID_FIELD_SIZE];
-    /*!
-     * Device EUI
-     */
-    uint8_t DevEUI[LORAMAC_DEV_EUI_FIELD_SIZE];
-    /*!
-     * ReJoin Type 0 and 2 frame counter
-     */
-    uint16_t RJcount0;
-    /*!
-     * Message integrity code (MIC)
-     */
-    uint32_t MIC;
-}LoRaMacMessageReJoinType0or2_t;
-
-/*!
- * LoRaMac type for Join-accept message
- */
-typedef struct sLoRaMacMessageJoinAccept
-{
-    /*!
-     * Serialized message buffer
-     */
-    uint8_t* Buffer;
-    /*!
-     * Size of serialized message buffer
-     */
-    uint8_t BufSize;
-    /*!
-     * MAC header
-     */
-    LoRaMacHeader_t MHDR;
-    /*!
-     *  Server Nonce ( 3 bytes )
-     */
-    uint8_t JoinNonce[LORAMAC_JOIN_NONCE_FIELD_SIZE];
-    /*!
-     * Network ID ( 3 bytes )
-     */
-    uint8_t NetID[LORAMAC_NET_ID_FIELD_SIZE];
-    /*!
-     * Device address
-     */
-    uint32_t DevAddr;
-    /*!
-     * Device address
-     */
-    LoRaMacDLSettings_t DLSettings;
-    /*!
-     * Delay between TX and RX
-     */
-    uint8_t RxDelay;
-    /*!
-     * List of channel frequencies (opt.)
-     */
-    uint8_t CFList[16];
-    /*!
-     * Message integrity code (MIC)
-     */
-    uint32_t MIC;
-}LoRaMacMessageJoinAccept_t;
-
-
-/*!
- * LoRaMac type for Data MAC messages
- * (Unconfirmed Data Up, Confirmed Data Up, Unconfirmed Data Down, Confirmed Data Down)
- */
-typedef struct sLoRaMacMessageData
-{
-    /*!
-     * Serialized message buffer
-     */
-    uint8_t* Buffer;
-    /*!
-     * Size of serialized message buffer
-     */
-    uint8_t BufSize;
-    /*!
-     * MAC header
-     */
-    LoRaMacHeader_t MHDR;
-    /*!
-     * Frame header (FHDR)
-     */
-    LoRaMacFrameHeader_t FHDR;
-    /*!
-     * Port field (opt.)
-     */
-    uint8_t FPort;
-    /*!
-     * Frame payload may contain MAC commands or data (opt.)
-     */
-    uint8_t* FRMPayload;
-    /*!
-     * Size of frame payload (not included in LoRaMac messages) 
-     */
-    uint8_t FRMPayloadSize;
-    /*!
-     * Message integrity code (MIC)
-     */
-    uint32_t MIC;
-}LoRaMacMessageData_t;
-
-/*!
- * LoRaMac message type enumerator
- */
-typedef enum eLoRaMacMessageType
-{
-    /*!
-     * Join-request message
-     */
-    LORAMAC_MSG_TYPE_JOIN_REQUEST,
-    /*!
-     * Rejoin-request type 1 message
-     */
-    LORAMAC_MSG_TYPE_RE_JOIN_1,
-    /*!
-     * Rejoin-request type 1 message
-     */
-    LORAMAC_MSG_TYPE_RE_JOIN_0_2,
-    /*!
-     * Join-accept message
-     */
-    LORAMAC_MSG_TYPE_JOIN_ACCEPT,
-    /*!
-     * Data MAC messages
-     */
-    LORAMAC_MSG_TYPE_DATA,
-    /*!
-     * Undefined message type
-     */
-    LORAMAC_MSG_TYPE_UNDEF,
-}LoRaMacMessageType_t;
-
-/*!
- * LoRaMac general message type
- */
-typedef struct sLoRaMacMessage
-{
-    LoRaMacMessageType_t Type;
-    union uMessage
-    {
-        LoRaMacMessageJoinRequest_t JoinReq;
-        LoRaMacMessageReJoinType1_t ReJoin1;
-        LoRaMacMessageReJoinType0or2_t ReJoin0or2;
-        LoRaMacMessageJoinAccept_t JoinAccept;
-        LoRaMacMessageData_t Data;
-    }Message;
-}LoRaMacMessage_t;
-
-/*! \} addtogroup LORAMAC */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __LORAMAC_MESSAGE_TYPES_H__
diff --git a/mac/LoRaMacParser.c b/mac/LoRaMacParser.c
deleted file mode 100644
index 6f29d06..0000000
--- a/mac/LoRaMacParser.c
+++ /dev/null
@@ -1,118 +0,0 @@
-/*
- / _____)             _              | |
-( (____  _____ ____ _| |_ _____  ____| |__
- \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- _____) ) ____| | | || |_| ____( (___| | | |
-(______/|_____)_|_|_| \__)_____)\____)_| |_|
-    (C)2013 Semtech
- ___ _____ _   ___ _  _____ ___  ___  ___ ___
-/ __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
-\__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
-|___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
-embedded.connectivity.solutions===============
-
-Description: LoRa MAC layer message parser functionality implementation
-
-License: Revised BSD License, see LICENSE.TXT file include in the project
-
-Maintainer: Miguel Luis ( Semtech ), Gregory Cristian ( Semtech ),
-            Daniel Jaeckle ( STACKFORCE ),  Johannes Bruder ( STACKFORCE )
-*/
-#include "LoRaMacParser.h"
-#include "utilities.h"
-
-LoRaMacParserStatus_t LoRaMacParserJoinAccept( LoRaMacMessageJoinAccept_t* macMsg )
-{
-    if( ( macMsg == 0 ) || ( macMsg->Buffer == 0 ) )
-    {
-        return LORAMAC_PARSER_ERROR_NPE;
-    }
-
-    uint16_t bufItr = 0;
-
-    macMsg->MHDR.Value = macMsg->Buffer[bufItr++];
-
-    memcpy1( macMsg->JoinNonce, &macMsg->Buffer[bufItr], 3 );
-    bufItr = bufItr + 3;
-
-    memcpy1( macMsg->NetID, &macMsg->Buffer[bufItr], 3 );
-    bufItr = bufItr + 3;
-
-    macMsg->DevAddr = ( uint32_t ) macMsg->Buffer[bufItr++];
-    macMsg->DevAddr |= ( ( uint32_t ) macMsg->Buffer[bufItr++] << 8 );
-    macMsg->DevAddr |= ( ( uint32_t ) macMsg->Buffer[bufItr++] << 16 );
-    macMsg->DevAddr |= ( ( uint32_t ) macMsg->Buffer[bufItr++] << 24 );
-
-    macMsg->DLSettings.Value = macMsg->Buffer[bufItr++];
-
-    macMsg->RxDelay = macMsg->Buffer[bufItr++];
-
-    if( ( macMsg->BufSize - LORAMAC_MIC_FIELD_SIZE - bufItr ) == LORAMAC_C_FLIST_FIELD_SIZE )
-    {
-        memcpy1( macMsg->CFList, &macMsg->Buffer[bufItr], LORAMAC_C_FLIST_FIELD_SIZE );
-        bufItr = bufItr + LORAMAC_C_FLIST_FIELD_SIZE;
-    }
-    else if( ( macMsg->BufSize - LORAMAC_MIC_FIELD_SIZE - bufItr ) > 0 )
-    {
-        return LORAMAC_PARSER_FAIL;
-    }
-
-    macMsg->MIC = ( uint32_t ) macMsg->Buffer[bufItr++];
-    macMsg->MIC |= ( ( uint32_t ) macMsg->Buffer[bufItr++] << 8 );
-    macMsg->MIC |= ( ( uint32_t ) macMsg->Buffer[bufItr++] << 16 );
-    macMsg->MIC |= ( ( uint32_t ) macMsg->Buffer[bufItr++] << 24 );
-
-    return LORAMAC_PARSER_SUCCESS;
-}
-
-LoRaMacParserStatus_t LoRaMacParserData( LoRaMacMessageData_t* macMsg )
-{
-    if( ( macMsg == 0 ) || ( macMsg->Buffer == 0 ) )
-    {
-        return LORAMAC_PARSER_ERROR_NPE;
-    }
-
-    uint16_t bufItr = 0;
-
-    macMsg->MHDR.Value = macMsg->Buffer[bufItr++];
-
-    macMsg->FHDR.DevAddr = macMsg->Buffer[bufItr++];
-    macMsg->FHDR.DevAddr |= ( ( uint32_t ) macMsg->Buffer[bufItr++] << 8 );
-    macMsg->FHDR.DevAddr |= ( ( uint32_t ) macMsg->Buffer[bufItr++] << 16 );
-    macMsg->FHDR.DevAddr |= ( ( uint32_t ) macMsg->Buffer[bufItr++] << 24 );
-
-    macMsg->FHDR.FCtrl.Value = macMsg->Buffer[bufItr++];
-
-    macMsg->FHDR.FCnt = macMsg->Buffer[bufItr++];
-    macMsg->FHDR.FCnt |= macMsg->Buffer[bufItr++] << 8;
-
-    if( macMsg->FHDR.FCtrl.Bits.FOptsLen <= 15 )
-    {
-        memcpy1( macMsg->FHDR.FOpts, &macMsg->Buffer[bufItr], macMsg->FHDR.FCtrl.Bits.FOptsLen );
-        bufItr = bufItr + macMsg->FHDR.FCtrl.Bits.FOptsLen;
-    }
-    else
-    {
-        return LORAMAC_PARSER_FAIL;
-    }
-
-    // Initialize anyway with zero.
-    macMsg->FPort = 0;
-    macMsg->FRMPayloadSize = 0;
-
-    if( ( macMsg->BufSize - bufItr - LORAMAC_MIC_FIELD_SIZE ) > 0 )
-    {
-        macMsg->FPort = macMsg->Buffer[bufItr++];
-
-        macMsg->FRMPayloadSize = ( macMsg->BufSize - bufItr - LORAMAC_MIC_FIELD_SIZE );
-        memcpy1( macMsg->FRMPayload, &macMsg->Buffer[bufItr], macMsg->FRMPayloadSize );
-        bufItr = bufItr + macMsg->FRMPayloadSize;
-    }
-
-    macMsg->MIC = ( uint32_t ) macMsg->Buffer[( macMsg->BufSize - LORAMAC_MIC_FIELD_SIZE )];
-    macMsg->MIC |= ( ( uint32_t ) macMsg->Buffer[( macMsg->BufSize - LORAMAC_MIC_FIELD_SIZE ) + 1] << 8 );
-    macMsg->MIC |= ( ( uint32_t ) macMsg->Buffer[( macMsg->BufSize - LORAMAC_MIC_FIELD_SIZE ) + 2] << 16 );
-    macMsg->MIC |= ( ( uint32_t ) macMsg->Buffer[( macMsg->BufSize - LORAMAC_MIC_FIELD_SIZE ) + 3] << 24 );
-
-    return LORAMAC_PARSER_SUCCESS;
-}
diff --git a/mac/LoRaMacParser.h b/mac/LoRaMacParser.h
deleted file mode 100644
index e9a0a22..0000000
--- a/mac/LoRaMacParser.h
+++ /dev/null
@@ -1,95 +0,0 @@
-/*!
- * \file      LoRaMacParser.h
- *
- * \brief     LoRa MAC layer message parser functionality implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * addtogroup LORAMAC
- * \{
- *
- */
-#ifndef __LORAMAC_PARSER_H__
-#define __LORAMAC_PARSER_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-#include "LoRaMacMessageTypes.h"
-
-/*!
- * LoRaMac Parser Status
- */
-typedef enum eLoRaMacParserStatus
-{
-    /*!
-     * No error occurred
-     */
-    LORAMAC_PARSER_SUCCESS = 0,
-    /*!
-     * Failure during parsing occurred
-     */
-    LORAMAC_PARSER_FAIL,
-    /*!
-     * Null pointer exception
-     */
-    LORAMAC_PARSER_ERROR_NPE,
-    /*!
-     * Undefined Error occurred
-     */
-    LORAMAC_PARSER_ERROR,
-}LoRaMacParserStatus_t;
-
-
-/*!
- * Parse a serialized join-accept message and fills the structured object.
- *
- * \param[IN/OUT] macMsg       - Join-accept message object
- * \retval                     - Status of the operation
- */
-LoRaMacParserStatus_t LoRaMacParserJoinAccept( LoRaMacMessageJoinAccept_t *macMsg );
-
-/*!
- * Parse a serialized data message and fills the structured object.
- *
- * \param[IN/OUT] macMsg       - Data message object
- * \retval                     - Status of the operation
- */
-LoRaMacParserStatus_t LoRaMacParserData( LoRaMacMessageData_t *macMsg );
-
-/*! \} addtogroup LORAMAC */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __LORAMAC_PARSER_H__
-
diff --git a/mac/LoRaMacSerializer.c b/mac/LoRaMacSerializer.c
deleted file mode 100644
index b3c6f39..0000000
--- a/mac/LoRaMacSerializer.c
+++ /dev/null
@@ -1,183 +0,0 @@
-/*
- / _____)             _              | |
-( (____  _____ ____ _| |_ _____  ____| |__
- \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- _____) ) ____| | | || |_| ____( (___| | | |
-(______/|_____)_|_|_| \__)_____)\____)_| |_|
-    (C)2013 Semtech
- ___ _____ _   ___ _  _____ ___  ___  ___ ___
-/ __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
-\__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
-|___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
-embedded.connectivity.solutions===============
-
-Description: LoRa MAC layer message serializer functionality implementation
-
-License: Revised BSD License, see LICENSE.TXT file include in the project
-
-Maintainer: Miguel Luis ( Semtech ), Gregory Cristian ( Semtech ),
-            Daniel Jaeckle ( STACKFORCE ),  Johannes Bruder ( STACKFORCE )
-*/
-#include "LoRaMacSerializer.h"
-#include "utilities.h"
-
-LoRaMacSerializerStatus_t LoRaMacSerializerJoinRequest( LoRaMacMessageJoinRequest_t* macMsg )
-{
-    if( ( macMsg == 0 ) || ( macMsg->Buffer == 0 ) )
-    {
-        return LORAMAC_SERIALIZER_ERROR_NPE;
-    }
-
-    uint16_t bufItr = 0;
-
-    // Check macMsg->BufSize
-    if( macMsg->BufSize < LORAMAC_JOIN_REQ_MSG_SIZE )
-    {
-        return LORAMAC_SERIALIZER_ERROR_BUF_SIZE;
-    }
-
-    macMsg->Buffer[bufItr++] = macMsg->MHDR.Value;
-
-    memcpyr( &macMsg->Buffer[bufItr], macMsg->JoinEUI, LORAMAC_JOIN_EUI_FIELD_SIZE );
-    bufItr += LORAMAC_JOIN_EUI_FIELD_SIZE;
-
-    memcpyr( &macMsg->Buffer[bufItr], macMsg->DevEUI, LORAMAC_DEV_EUI_FIELD_SIZE );
-    bufItr += LORAMAC_DEV_EUI_FIELD_SIZE;
-
-    macMsg->Buffer[bufItr++] = macMsg->DevNonce & 0xFF;
-    macMsg->Buffer[bufItr++] = ( macMsg->DevNonce >> 8 ) & 0xFF;
-
-    macMsg->Buffer[bufItr++] = macMsg->MIC & 0xFF;
-    macMsg->Buffer[bufItr++] = ( macMsg->MIC >> 8 ) & 0xFF;
-    macMsg->Buffer[bufItr++] = ( macMsg->MIC >> 16 ) & 0xFF;
-    macMsg->Buffer[bufItr++] = ( macMsg->MIC >> 24 ) & 0xFF;
-
-    macMsg->BufSize = bufItr;
-
-    return LORAMAC_SERIALIZER_SUCCESS;
-}
-
-LoRaMacSerializerStatus_t LoRaMacSerializerReJoinType1( LoRaMacMessageReJoinType1_t* macMsg )
-{
-    if( ( macMsg == 0 ) || ( macMsg->Buffer == 0 ) )
-    {
-        return LORAMAC_SERIALIZER_ERROR_NPE;
-    }
-
-    uint16_t bufItr = 0;
-
-    // Check macMsg->BufSize
-    if( macMsg->BufSize < LORAMAC_RE_JOIN_1_MSG_SIZE )
-    {
-        return LORAMAC_SERIALIZER_ERROR_BUF_SIZE;
-    }
-
-    macMsg->Buffer[bufItr++] = macMsg->MHDR.Value;
-
-    macMsg->Buffer[bufItr++] = macMsg->ReJoinType;
-
-    memcpyr( &macMsg->Buffer[bufItr], macMsg->JoinEUI, LORAMAC_JOIN_EUI_FIELD_SIZE );
-    bufItr += LORAMAC_JOIN_EUI_FIELD_SIZE;
-
-    memcpyr( &macMsg->Buffer[bufItr], macMsg->DevEUI, LORAMAC_DEV_EUI_FIELD_SIZE );
-    bufItr += LORAMAC_DEV_EUI_FIELD_SIZE;
-
-    macMsg->Buffer[bufItr++] = macMsg->RJcount1 & 0xFF;
-    macMsg->Buffer[bufItr++] = ( macMsg->RJcount1 >> 8 ) & 0xFF;
-
-    return LORAMAC_SERIALIZER_SUCCESS;
-}
-
-LoRaMacSerializerStatus_t LoRaMacSerializerReJoinType0or2( LoRaMacMessageReJoinType0or2_t* macMsg )
-{
-    if( ( macMsg == 0 ) || ( macMsg->Buffer == 0 ) )
-    {
-        return LORAMAC_SERIALIZER_ERROR_NPE;
-    }
-
-    uint16_t bufItr = 0;
-
-    // Check macMsg->BufSize
-    if( macMsg->BufSize < LORAMAC_RE_JOIN_0_2_MSG_SIZE )
-    {
-        return LORAMAC_SERIALIZER_ERROR_BUF_SIZE;
-    }
-
-    macMsg->Buffer[bufItr++] = macMsg->MHDR.Value;
-
-    macMsg->Buffer[bufItr++] = macMsg->ReJoinType;
-
-    memcpy1( &macMsg->Buffer[bufItr], macMsg->NetID, LORAMAC_NET_ID_FIELD_SIZE );
-    bufItr += LORAMAC_NET_ID_FIELD_SIZE;
-
-    memcpyr( &macMsg->Buffer[bufItr], macMsg->DevEUI, LORAMAC_DEV_EUI_FIELD_SIZE );
-    bufItr += LORAMAC_DEV_EUI_FIELD_SIZE;
-
-    macMsg->Buffer[bufItr++] = macMsg->RJcount0 & 0xFF;
-    macMsg->Buffer[bufItr++] = ( macMsg->RJcount0 >> 8 ) & 0xFF;
-
-    return LORAMAC_SERIALIZER_SUCCESS;
-}
-
-LoRaMacSerializerStatus_t LoRaMacSerializerData( LoRaMacMessageData_t* macMsg )
-{
-    if( ( macMsg == 0 ) || ( macMsg->Buffer == 0 ) )
-    {
-        return LORAMAC_SERIALIZER_ERROR_NPE;
-    }
-
-    uint16_t bufItr = 0;
-
-    // Check macMsg->BufSize
-    uint16_t computedBufSize =   LORAMAC_MHDR_FIELD_SIZE
-                               + LORAMAC_FHDR_DEV_ADD_FIELD_SIZE
-                               + LORAMAC_FHDR_F_CTRL_FIELD_SIZE
-                               + LORAMAC_FHDR_F_CNT_FIELD_SIZE;
-
-    computedBufSize += macMsg->FHDR.FCtrl.Bits.FOptsLen;
-
-    if( macMsg->FRMPayloadSize > 0 )
-    {
-        computedBufSize += LORAMAC_F_PORT_FIELD_SIZE;
-    }
-
-    computedBufSize += macMsg->FRMPayloadSize;
-    computedBufSize += LORAMAC_MIC_FIELD_SIZE;
-
-    if( macMsg->BufSize < computedBufSize )
-    {
-        return LORAMAC_SERIALIZER_ERROR_BUF_SIZE;
-    }
-
-    macMsg->Buffer[bufItr++] = macMsg->MHDR.Value;
-
-    macMsg->Buffer[bufItr++] = ( macMsg->FHDR.DevAddr ) & 0xFF;
-    macMsg->Buffer[bufItr++] = ( macMsg->FHDR.DevAddr >> 8 ) & 0xFF;
-    macMsg->Buffer[bufItr++] = ( macMsg->FHDR.DevAddr >> 16 ) & 0xFF;
-    macMsg->Buffer[bufItr++] = ( macMsg->FHDR.DevAddr >> 24 ) & 0xFF;
-
-    macMsg->Buffer[bufItr++] = macMsg->FHDR.FCtrl.Value;
-
-    macMsg->Buffer[bufItr++] = macMsg->FHDR.FCnt & 0xFF;
-    macMsg->Buffer[bufItr++] = ( macMsg->FHDR.FCnt >> 8 ) & 0xFF;
-
-    memcpy1( &macMsg->Buffer[bufItr], macMsg->FHDR.FOpts, macMsg->FHDR.FCtrl.Bits.FOptsLen );
-    bufItr = bufItr + macMsg->FHDR.FCtrl.Bits.FOptsLen;
-
-    if( macMsg->FRMPayloadSize > 0 )
-    {
-        macMsg->Buffer[bufItr++] = macMsg->FPort;
-    }
-
-    memcpy1( &macMsg->Buffer[bufItr], macMsg->FRMPayload, macMsg->FRMPayloadSize );
-    bufItr = bufItr + macMsg->FRMPayloadSize;
-
-    macMsg->Buffer[bufItr++] = macMsg->MIC & 0xFF;
-    macMsg->Buffer[bufItr++] = ( macMsg->MIC >> 8 ) & 0xFF;
-    macMsg->Buffer[bufItr++] = ( macMsg->MIC >> 16 ) & 0xFF;
-    macMsg->Buffer[bufItr++] = ( macMsg->MIC >> 24 ) & 0xFF;
-
-    macMsg->BufSize = bufItr;
-
-    return LORAMAC_SERIALIZER_SUCCESS;
-}
diff --git a/mac/LoRaMacSerializer.h b/mac/LoRaMacSerializer.h
deleted file mode 100644
index 8588062..0000000
--- a/mac/LoRaMacSerializer.h
+++ /dev/null
@@ -1,110 +0,0 @@
-/*!
- * \file      LoRaMacSerializer.h
- *
- * \brief     LoRa MAC layer message serializer functionality implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * addtogroup LORAMAC
- * \{
- *
- */
-#ifndef __LORAMAC_SERIALIZER_H__
-#define __LORAMAC_SERIALIZER_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-#include <stdint.h>
-#include "LoRaMacMessageTypes.h"
-
-
-/*!
- * LoRaMac Serializer Status
- */
-typedef enum eLoRaMacSerializerStatus
-{
-    /*!
-     * No error occurred
-     */
-    LORAMAC_SERIALIZER_SUCCESS = 0,
-    /*!
-     * Null pointer exception
-     */
-    LORAMAC_SERIALIZER_ERROR_NPE,
-    /*!
-     * Incompatible buffer size
-     */
-    LORAMAC_SERIALIZER_ERROR_BUF_SIZE,
-    /*!
-     * Undefined Error occurred
-     */
-    LORAMAC_SERIALIZER_ERROR,
-}LoRaMacSerializerStatus_t;
-
-/*!
- * Creates serialized MAC message of structured object.
- *
- * \param[IN/OUT] macMsg        - Join-request message object
- * \retval                      - Status of the operation
- */
-LoRaMacSerializerStatus_t LoRaMacSerializerJoinRequest( LoRaMacMessageJoinRequest_t* macMsg );
-
-/*!
- * Creates serialized MAC message of structured object.
- *
- * \param[IN/OUT] macMsg        - Join-request message object
- * \retval                      - Status of the operation
- */
-LoRaMacSerializerStatus_t LoRaMacSerializerReJoinType1( LoRaMacMessageReJoinType1_t* macMsg );
-
-/*!
- * Creates serialized MAC message of structured object.
- *
- * \param[IN/OUT] macMsg        - Join-request message object
- * \retval                      - Status of the operation
- */
-LoRaMacSerializerStatus_t LoRaMacSerializerReJoinType0or2( LoRaMacMessageReJoinType0or2_t* macMsg );
-
-/*!
- * Creates serialized MAC message of structured object.
- *
- * \param[IN/OUT] macMsg        - Data message object
- * \retval                      - Status of the operation
- */
-LoRaMacSerializerStatus_t LoRaMacSerializerData( LoRaMacMessageData_t* macMsg );
-
-/*! \} addtogroup LORAMAC */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __LORAMAC_SERIALIZER_H__
-
diff --git a/mac/LoRaMacTest.h b/mac/LoRaMacTest.h
deleted file mode 100644
index aa2cf24..0000000
--- a/mac/LoRaMacTest.h
+++ /dev/null
@@ -1,60 +0,0 @@
-/*!
- * \file      LoRaMacTest.h
- *
- * \brief     LoRa MAC layer test function implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \defgroup  LORAMACTEST LoRa MAC layer test function implementation
- *            This module specifies the API implementation of test function of the LoRaMAC layer.
- *            The functions in this file are only for testing purposes only.
- * \{
- */
-#ifndef __LORAMACTEST_H__
-#define __LORAMACTEST_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-/*!
- * \brief   Enabled or disables the duty cycle
- *
- * \details This is a test function. It shall be used for testing purposes only.
- *          Changing this attribute may lead to a non-conformance LoRaMac operation.
- *
- * \param   [IN] enable - Enabled or disables the duty cycle
- */
-void LoRaMacTestSetDutyCycleOn( bool enable );
-
-/*! \} defgroup LORAMACTEST */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __LORAMACTEST_H__
diff --git a/mac/LoRaMacTypes.h b/mac/LoRaMacTypes.h
deleted file mode 100644
index b00f7e1..0000000
--- a/mac/LoRaMacTypes.h
+++ /dev/null
@@ -1,678 +0,0 @@
-/*!
- * \file      LoRaMacTypes.h
- *
- * \brief     LoRa MAC layer internal types definition. Please do not include in application sources.
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * addtogroup LORAMAC
- * \{
- *
- */
-#ifndef __LORAMAC_TYPES_H__
-#define __LORAMAC_TYPES_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-#include <stdbool.h>
-#include "timer.h"
-
-/*!
- * Start value for unicast keys enumeration
- */
-#define LORAMAC_CRYPTO_UNICAST_KEYS     0
-
-/*!
- * Start value for multicast keys enumeration
- */
-#define LORAMAC_CRYPTO_MULTICAST_KEYS   127
-
-/*!
- * LoRaWAN devices classes definition
- *
- * LoRaWAN Specification V1.0.2, chapter 2.1
- */
-typedef enum DeviceClass_e
-{
-    /*!
-     * LoRaWAN device class A
-     *
-     * LoRaWAN Specification V1.0.2, chapter 3
-     */
-    CLASS_A = 0x00,
-    /*!
-     * LoRaWAN device class B
-     *
-     * LoRaWAN Specification V1.0.2, chapter 8
-     */
-    CLASS_B = 0x01,
-    /*!
-     * LoRaWAN device class C
-     *
-     * LoRaWAN Specification V1.0.2, chapter 17
-     */
-    CLASS_C = 0x02,
-}DeviceClass_t;
-
-/*!
- * LoRaWAN Frame type enumeration to differ between the possible data up/down frame configurations.
- *
- * Note: The naming is implementation specific since there is no definition
- *       in the LoRaWAN specification included.
- */
-typedef enum eFType
-{
-    /*!
-     * Frame type A
-     *
-     * FOptsLen > 0, Fopt present, FPort > 0, FRMPayload present
-     */
-    FRAME_TYPE_A,
-    /*!
-     * Frame type B
-     *
-     * FOptsLen > 0, Fopt present, FPort not present, FRMPayload not present
-     */
-    FRAME_TYPE_B,
-    /*!
-     * Frame type C
-     *
-     * FOptsLen = 0, Fopt not present, FPort = 0 , FRMPayload containing MAC commands
-     */
-    FRAME_TYPE_C,
-    /*!
-     * Frame type D
-     *
-     * FOptsLen = 0, Fopt not present, FPort > 0 , FRMPayload present
-     */
-    FRAME_TYPE_D,
-}FType_t;
-
-/*!
- * LoRaWAN Frame counter identifier.
- */
-typedef enum eFCntIdentifier
-{
-    /*!
-     * Uplink frame counter which is incremented with each uplink.
-     */
-    FCNT_UP = 0,
-    /*!
-     * Network downlink frame counter which is incremented with each downlink on FPort 0
-     * or when the FPort field is missing.
-     */
-    N_FCNT_DOWN,
-    /*!
-     * Application downlink frame counter which is incremented with each downlink
-     * on a port different than 0.
-     */
-    A_FCNT_DOWN,
-    /*!
-     * In case if the device is connected to a LoRaWAN 1.0 Server,
-     * this counter is used for every kind of downlink frame.
-     */
-    FCNT_DOWN,
-    /*!
-     * Multicast downlink counter for index 0
-     */
-    MC_FCNT_DOWN_0,
-    /*!
-     * Multicast downlink counter for index 1
-     */
-    MC_FCNT_DOWN_1,
-    /*!
-     * Multicast downlink counter for index 2
-     */
-    MC_FCNT_DOWN_2,
-    /*!
-     * Multicast downlink counter for index 3
-     */
-    MC_FCNT_DOWN_3,
-}FCntIdentifier_t;
-
-/*!
- * LoRaMac Key identifier
- */
-typedef enum eKeyIdentifier
-{
-    /*!
-     * Application root key
-     */
-    APP_KEY = 0,
-    /*!
-     * Application root key
-     * Used to derive McRootKey for 1.0.x devices
-     */
-    GEN_APP_KEY,
-    /*!
-     * Network root key
-     */
-    NWK_KEY,
-    /*!
-     * Join session integrity key
-     */
-    J_S_INT_KEY,
-    /*!
-     * Join session encryption key
-     */
-    J_S_ENC_KEY,
-    /*!
-     * Forwarding Network session integrity key
-     */
-    F_NWK_S_INT_KEY,
-    /*!
-     * Serving Network session integrity key
-     */
-    S_NWK_S_INT_KEY,
-    /*!
-     * Network session encryption key
-     */
-    NWK_S_ENC_KEY,
-    /*!
-     * Application session key
-     */
-    APP_S_KEY,
-    /*!
-     * Multicast root key
-     */
-    MC_ROOT_KEY,
-    /*!
-     * Multicast key encryption key
-     */
-    MC_KE_KEY = LORAMAC_CRYPTO_MULTICAST_KEYS,
-    /*!
-     * Multicast root key index 0
-     */
-    MC_KEY_0,
-    /*!
-     * Multicast Application session key index 0
-     */
-    MC_APP_S_KEY_0,
-    /*!
-     * Multicast Network session key index 0
-     */
-    MC_NWK_S_KEY_0,
-    /*!
-     * Multicast root key index 1
-     */
-    MC_KEY_1,
-    /*!
-     * Multicast Application session key index 1
-     */
-    MC_APP_S_KEY_1,
-    /*!
-     * Multicast Network session key index 1
-     */
-    MC_NWK_S_KEY_1,
-    /*!
-     * Multicast root key index 2
-     */
-    MC_KEY_2,
-    /*!
-     * Multicast Application session key index 2
-     */
-    MC_APP_S_KEY_2,
-    /*!
-     * Multicast Network session key index 2
-     */
-    MC_NWK_S_KEY_2,
-    /*!
-     * Multicast root key index 3
-     */
-    MC_KEY_3,
-    /*!
-     * Multicast Application session key index 3
-     */
-    MC_APP_S_KEY_3,
-    /*!
-     * Multicast Network session key index 3
-     */
-    MC_NWK_S_KEY_3,
-    /*!
-     * Zero key for slot randomization in class B
-     */
-    SLOT_RAND_ZERO_KEY,
-    /*!
-     * No Key
-     */
-    NO_KEY,
-}KeyIdentifier_t;
-
-/*!
- * LoRaMac Crypto address identifier
- */
-typedef enum eAddressIdentifier
-{
-    /*!
-     * Multicast Address for index 0
-     */
-    MULTICAST_0_ADDR = 0,
-    /*!
-     * Multicast Address for index 1
-     */
-    MULTICAST_1_ADDR = 1,
-    /*!
-     * Multicast Address for index 2
-     */
-    MULTICAST_2_ADDR = 2,
-    /*!
-     * Multicast Address for index 3
-     */
-    MULTICAST_3_ADDR = 3,
-    /*!
-     * Unicast End-device address
-     */
-    UNICAST_DEV_ADDR = 4,
-}AddressIdentifier_t;
-
-/*
- * Multicast Rx window parameters
- */
-typedef union uMcRxParams
-{
-    struct
-    {
-        /*!
-            * Reception frequency of the ping slot windows
-            */
-        uint32_t Frequency;
-        /*!
-            * Datarate of the ping slot
-            */
-        int8_t Datarate;
-        /*!
-            * This parameter is necessary for class B operation. It defines the
-            * periodicity of the multicast downlink slots
-            */
-        uint16_t Periodicity;
-    }ClassB;
-    struct
-    {
-        /*!
-        * Reception frequency of the ping slot windows
-        */
-        uint32_t Frequency;
-        /*!
-        * Datarate of the ping slot
-        */
-        int8_t Datarate;
-    }ClassC;
-}McRxParams_t;
-
-/*!
- * Multicast channel
- */
-typedef struct sMcChannelParams
-{
-    /*!
-     * Indicate if the multicast channel is being setup remotely or locally.
-     * Indicates which set of keys are to be used. \ref uMcKeys
-     */
-    bool IsRemotelySetup;
-    /*!
-     * Multicats channel LoRaWAN class B or C
-     */
-    DeviceClass_t Class;
-    /*!
-     * True if the entry is active
-     */
-    bool IsEnabled;
-    /*
-     * Address identifier
-     */
-    AddressIdentifier_t GroupID;
-    /*!
-     * Address
-     */
-    uint32_t Address;
-    /*!
-     * Multicast keys
-     */
-    union uMcKeys
-    {
-        /*!
-         * Encrypted multicast key - Used when IsRemotelySetup equals `true`.
-         * MC_KEY is decrypted and then the session keys ar derived.
-         */
-        uint8_t *McKeyE;
-        /*!
-         * Multicast Session keys - Used when IsRemotelySetup equals `false`
-         */
-        struct
-        {
-            /*!
-             * Multicast application session key
-             */
-            uint8_t *McAppSKey;
-            /*!
-             * Multicast network session key
-             */
-            uint8_t *McNwkSKey;
-        };
-    }McKeys;
-    /*!
-     * Minimum multicast frame counter value
-     */
-    uint32_t FCountMin;
-    /*!
-     * Maximum multicast frame counter value
-     */
-    uint32_t FCountMax;
-    /*!
-     * Multicast reception parameters
-     */
-    McRxParams_t RxParams;
-}McChannelParams_t;
-
-/*!
- * Multicast context
- */
-typedef struct sMulticastCtx
-{
-    /*!
-     * Multicast channel parameters
-     */
-    McChannelParams_t ChannelParams;
-    /*!
-     * Downlink counter
-     */
-    uint32_t* DownLinkCounter;
-    /*
-     * Following parameters are only used for ClassB multicast channels
-     */
-    /*!
-     * Number of multicast slots. The variable can be
-     * calculated as follows:
-     * PingNb = 128 / ( 1 << periodicity ), where
-     * 0 <= periodicity <= 7
-     */
-    uint8_t PingNb;
-    /*!
-     * Period of the multicast slots. The variable can be
-     * calculated as follows:
-     * PingPeriod = 4096 / PingNb
-     */
-    uint16_t PingPeriod;
-    /*!
-     * Ping offset of the multicast channel for Class B
-     */
-    uint16_t PingOffset;
-}MulticastCtx_t;
-
-/*!
- * LoRaMac join-request / rejoin type identifier
- */
-typedef enum eJoinReqIdentifier
-{
-    /*!
-     * Rejoin type 0
-     */
-    REJOIN_REQ_0 = 0x00,
-    /*!
-     * Rejoin type 1
-     */
-    REJOIN_REQ_1 = 0x01,
-    /*!
-     * Rejoin type 2
-     */
-    REJOIN_REQ_2 = 0x02,
-    /*!
-     * Join-request
-     */
-    JOIN_REQ = 0xFF,
-}JoinReqIdentifier_t;
-
-/*!
- * LoRaMAC mote MAC commands
- *
- * LoRaWAN Specification V1.1.0, chapter 5, table 4
- */
-typedef enum eLoRaMacMoteCmd
-{
-    /*!
-     * LinkCheckReq
-     */
-    MOTE_MAC_LINK_CHECK_REQ          = 0x02,
-    /*!
-     * LinkADRAns
-     */
-    MOTE_MAC_LINK_ADR_ANS            = 0x03,
-    /*!
-     * DutyCycleAns
-     */
-    MOTE_MAC_DUTY_CYCLE_ANS          = 0x04,
-    /*!
-     * RXParamSetupAns
-     */
-    MOTE_MAC_RX_PARAM_SETUP_ANS      = 0x05,
-    /*!
-     * DevStatusAns
-     */
-    MOTE_MAC_DEV_STATUS_ANS          = 0x06,
-    /*!
-     * NewChannelAns
-     */
-    MOTE_MAC_NEW_CHANNEL_ANS         = 0x07,
-    /*!
-     * RXTimingSetupAns
-     */
-    MOTE_MAC_RX_TIMING_SETUP_ANS     = 0x08,
-    /*!
-     * TXParamSetupAns
-     */
-    MOTE_MAC_TX_PARAM_SETUP_ANS      = 0x09,
-    /*!
-     * DlChannelAns
-     */
-    MOTE_MAC_DL_CHANNEL_ANS          = 0x0A,
-    /*!
-     * DeviceTimeReq
-     */
-    MOTE_MAC_DEVICE_TIME_REQ         = 0x0D,
-    /*!
-     * PingSlotInfoReq
-     */
-    MOTE_MAC_PING_SLOT_INFO_REQ      = 0x10,
-    /*!
-     * PingSlotFreqAns
-     */
-    MOTE_MAC_PING_SLOT_FREQ_ANS      = 0x11,
-    /*!
-     * BeaconTimingReq
-     */
-    MOTE_MAC_BEACON_TIMING_REQ       = 0x12,
-    /*!
-     * BeaconFreqAns
-     */
-    MOTE_MAC_BEACON_FREQ_ANS         = 0x13,
-}LoRaMacMoteCmd_t;
-
-/*!
- * LoRaMAC server MAC commands
- *
- * LoRaWAN Specification V1.1.0 chapter 5, table 4
- */
-typedef enum eLoRaMacSrvCmd
-{
-    /*!
-     * ResetInd
-     */
-    SRV_MAC_RESET_CONF               = 0x01,
-    /*!
-     * LinkCheckAns
-     */
-    SRV_MAC_LINK_CHECK_ANS           = 0x02,
-    /*!
-     * LinkADRReq
-     */
-    SRV_MAC_LINK_ADR_REQ             = 0x03,
-    /*!
-     * DutyCycleReq
-     */
-    SRV_MAC_DUTY_CYCLE_REQ           = 0x04,
-    /*!
-     * RXParamSetupReq
-     */
-    SRV_MAC_RX_PARAM_SETUP_REQ       = 0x05,
-    /*!
-     * DevStatusReq
-     */
-    SRV_MAC_DEV_STATUS_REQ           = 0x06,
-    /*!
-     * NewChannelReq
-     */
-    SRV_MAC_NEW_CHANNEL_REQ          = 0x07,
-    /*!
-     * RXTimingSetupReq
-     */
-    SRV_MAC_RX_TIMING_SETUP_REQ      = 0x08,
-    /*!
-     * NewChannelReq
-     */
-    SRV_MAC_TX_PARAM_SETUP_REQ       = 0x09,
-    /*!
-     * DlChannelReq
-     */
-    SRV_MAC_DL_CHANNEL_REQ           = 0x0A,
-    /*!
-     * DeviceTimeAns
-     */
-    SRV_MAC_DEVICE_TIME_ANS          = 0x0D,
-    /*!
-     * PingSlotInfoAns
-     */
-    SRV_MAC_PING_SLOT_INFO_ANS       = 0x10,
-    /*!
-     * PingSlotChannelReq
-     */
-    SRV_MAC_PING_SLOT_CHANNEL_REQ    = 0x11,
-    /*!
-     * BeaconTimingAns
-     */
-    SRV_MAC_BEACON_TIMING_ANS        = 0x12,
-    /*!
-     * BeaconFreqReq
-     */
-    SRV_MAC_BEACON_FREQ_REQ          = 0x13,
-}LoRaMacSrvCmd_t;
-
-/*!
- * LoRaMAC band parameters definition
- */
-typedef struct sBand
-{
-    /*!
-     * Duty cycle
-     */
-    uint16_t DCycle;
-    /*!
-     * Maximum Tx power
-     */
-    int8_t TxMaxPower;
-    /*!
-     * Time stamp of the last JoinReq Tx frame.
-     */
-    TimerTime_t LastJoinTxDoneTime;
-    /*!
-     * Time stamp of the last Tx frame
-     */
-    TimerTime_t LastTxDoneTime;
-    /*!
-     * Holds the time where the device is off
-     */
-    TimerTime_t TimeOff;
-}Band_t;
-
-/*!
- * LoRaMAC frame types
- *
- * LoRaWAN Specification V1.0.2, chapter 4.2.1, table 1
- */
-typedef enum eLoRaMacFrameType
-{
-    /*!
-     * LoRaMAC join request frame
-     */
-    FRAME_TYPE_JOIN_REQ              = 0x00,
-    /*!
-     * LoRaMAC join accept frame
-     */
-    FRAME_TYPE_JOIN_ACCEPT           = 0x01,
-    /*!
-     * LoRaMAC unconfirmed up-link frame
-     */
-    FRAME_TYPE_DATA_UNCONFIRMED_UP   = 0x02,
-    /*!
-     * LoRaMAC unconfirmed down-link frame
-     */
-    FRAME_TYPE_DATA_UNCONFIRMED_DOWN = 0x03,
-    /*!
-     * LoRaMAC confirmed up-link frame
-     */
-    FRAME_TYPE_DATA_CONFIRMED_UP     = 0x04,
-    /*!
-     * LoRaMAC confirmed down-link frame
-     */
-    FRAME_TYPE_DATA_CONFIRMED_DOWN   = 0x05,
-    /*!
-     * LoRaMAC proprietary frame
-     */
-    FRAME_TYPE_PROPRIETARY           = 0x07,
-}LoRaMacFrameType_t;
-
-/*!
- * LoRaMAC Battery level indicator
- */
-typedef enum eLoRaMacBatteryLevel
-{
-    /*!
-     * External power source
-     */
-    BAT_LEVEL_EXT_SRC                = 0x00,
-    /*!
-     * Battery level empty
-     */
-    BAT_LEVEL_EMPTY                  = 0x01,
-    /*!
-     * Battery level full
-     */
-    BAT_LEVEL_FULL                   = 0xFE,
-    /*!
-     * Battery level - no measurement available
-     */
-    BAT_LEVEL_NO_MEASURE             = 0xFF,
-}LoRaMacBatteryLevel_t;
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __LORAMAC_TYPES_H__
-
diff --git a/mac/region/Region.c b/mac/region/Region.c
deleted file mode 100644
index 440f868..0000000
--- a/mac/region/Region.c
+++ /dev/null
@@ -1,1086 +0,0 @@
-/*!
- * \file      Region.c
- *
- * \brief     Region implementation.
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- */
-#include "LoRaMac.h"
-
-// Setup regions
-#ifdef REGION_AS923
-#include "RegionAS923.h"
-#define AS923_CASE                                 case LORAMAC_REGION_AS923:
-#define AS923_IS_ACTIVE( )                         AS923_CASE { return true; }
-#define AS923_GET_PHY_PARAM( )                     AS923_CASE { return RegionAS923GetPhyParam( getPhy ); }
-#define AS923_SET_BAND_TX_DONE( )                  AS923_CASE { RegionAS923SetBandTxDone( txDone ); break; }
-#define AS923_INIT_DEFAULTS( )                     AS923_CASE { RegionAS923InitDefaults( params ); break; }
-#define AS923_GET_NVM_CTX( )                       AS923_CASE { return RegionAS923GetNvmCtx( params ); }
-#define AS923_VERIFY( )                            AS923_CASE { return RegionAS923Verify( verify, phyAttribute ); }
-#define AS923_APPLY_CF_LIST( )                     AS923_CASE { RegionAS923ApplyCFList( applyCFList ); break; }
-#define AS923_CHAN_MASK_SET( )                     AS923_CASE { return RegionAS923ChanMaskSet( chanMaskSet ); }
-#define AS923_COMPUTE_RX_WINDOW_PARAMETERS( )      AS923_CASE { RegionAS923ComputeRxWindowParameters( datarate, minRxSymbols, rxError, rxConfigParams ); break; }
-#define AS923_RX_CONFIG( )                         AS923_CASE { return RegionAS923RxConfig( rxConfig, datarate ); }
-#define AS923_TX_CONFIG( )                         AS923_CASE { return RegionAS923TxConfig( txConfig, txPower, txTimeOnAir ); }
-#define AS923_LINK_ADR_REQ( )                      AS923_CASE { return RegionAS923LinkAdrReq( linkAdrReq, drOut, txPowOut, nbRepOut, nbBytesParsed ); }
-#define AS923_RX_PARAM_SETUP_REQ( )                AS923_CASE { return RegionAS923RxParamSetupReq( rxParamSetupReq ); }
-#define AS923_NEW_CHANNEL_REQ( )                   AS923_CASE { return RegionAS923NewChannelReq( newChannelReq ); }
-#define AS923_TX_PARAM_SETUP_REQ( )                AS923_CASE { return RegionAS923TxParamSetupReq( txParamSetupReq ); }
-#define AS923_DL_CHANNEL_REQ( )                    AS923_CASE { return RegionAS923DlChannelReq( dlChannelReq ); }
-#define AS923_ALTERNATE_DR( )                      AS923_CASE { return RegionAS923AlternateDr( currentDr, type ); }
-#define AS923_CALC_BACKOFF( )                      AS923_CASE { RegionAS923CalcBackOff( calcBackOff ); break; }
-#define AS923_NEXT_CHANNEL( )                      AS923_CASE { return RegionAS923NextChannel( nextChanParams, channel, time, aggregatedTimeOff ); }
-#define AS923_CHANNEL_ADD( )                       AS923_CASE { return RegionAS923ChannelAdd( channelAdd ); }
-#define AS923_CHANNEL_REMOVE( )                    AS923_CASE { return RegionAS923ChannelsRemove( channelRemove ); }
-#define AS923_SET_CONTINUOUS_WAVE( )               AS923_CASE { RegionAS923SetContinuousWave( continuousWave ); break; }
-#define AS923_APPLY_DR_OFFSET( )                   AS923_CASE { return RegionAS923ApplyDrOffset( downlinkDwellTime, dr, drOffset ); }
-#define AS923_RX_BEACON_SETUP( )                   AS923_CASE { RegionAS923RxBeaconSetup( rxBeaconSetup, outDr ); break; }
-#else
-#define AS923_IS_ACTIVE( )
-#define AS923_GET_PHY_PARAM( )
-#define AS923_SET_BAND_TX_DONE( )
-#define AS923_INIT_DEFAULTS( )
-#define AS923_GET_NVM_CTX( )
-#define AS923_VERIFY( )
-#define AS923_APPLY_CF_LIST( )
-#define AS923_CHAN_MASK_SET( )
-#define AS923_COMPUTE_RX_WINDOW_PARAMETERS( )
-#define AS923_RX_CONFIG( )
-#define AS923_TX_CONFIG( )
-#define AS923_LINK_ADR_REQ( )
-#define AS923_RX_PARAM_SETUP_REQ( )
-#define AS923_NEW_CHANNEL_REQ( )
-#define AS923_TX_PARAM_SETUP_REQ( )
-#define AS923_DL_CHANNEL_REQ( )
-#define AS923_ALTERNATE_DR( )
-#define AS923_CALC_BACKOFF( )
-#define AS923_NEXT_CHANNEL( )
-#define AS923_CHANNEL_ADD( )
-#define AS923_CHANNEL_REMOVE( )
-#define AS923_SET_CONTINUOUS_WAVE( )
-#define AS923_APPLY_DR_OFFSET( )
-#define AS923_RX_BEACON_SETUP( )
-#endif
-
-#ifdef REGION_AU915
-#include "RegionAU915.h"
-#define AU915_CASE                                 case LORAMAC_REGION_AU915:
-#define AU915_IS_ACTIVE( )                         AU915_CASE { return true; }
-#define AU915_GET_PHY_PARAM( )                     AU915_CASE { return RegionAU915GetPhyParam( getPhy ); }
-#define AU915_SET_BAND_TX_DONE( )                  AU915_CASE { RegionAU915SetBandTxDone( txDone ); break; }
-#define AU915_INIT_DEFAULTS( )                     AU915_CASE { RegionAU915InitDefaults( params ); break; }
-#define AU915_GET_NVM_CTX( )                       AU915_CASE { return RegionAU915GetNvmCtx( params ); }
-#define AU915_VERIFY( )                            AU915_CASE { return RegionAU915Verify( verify, phyAttribute ); }
-#define AU915_APPLY_CF_LIST( )                     AU915_CASE { RegionAU915ApplyCFList( applyCFList ); break; }
-#define AU915_CHAN_MASK_SET( )                     AU915_CASE { return RegionAU915ChanMaskSet( chanMaskSet ); }
-#define AU915_COMPUTE_RX_WINDOW_PARAMETERS( )      AU915_CASE { RegionAU915ComputeRxWindowParameters( datarate, minRxSymbols, rxError, rxConfigParams ); break; }
-#define AU915_RX_CONFIG( )                         AU915_CASE { return RegionAU915RxConfig( rxConfig, datarate ); }
-#define AU915_TX_CONFIG( )                         AU915_CASE { return RegionAU915TxConfig( txConfig, txPower, txTimeOnAir ); }
-#define AU915_LINK_ADR_REQ( )                      AU915_CASE { return RegionAU915LinkAdrReq( linkAdrReq, drOut, txPowOut, nbRepOut, nbBytesParsed ); }
-#define AU915_RX_PARAM_SETUP_REQ( )                AU915_CASE { return RegionAU915RxParamSetupReq( rxParamSetupReq ); }
-#define AU915_NEW_CHANNEL_REQ( )                   AU915_CASE { return RegionAU915NewChannelReq( newChannelReq ); }
-#define AU915_TX_PARAM_SETUP_REQ( )                AU915_CASE { return RegionAU915TxParamSetupReq( txParamSetupReq ); }
-#define AU915_DL_CHANNEL_REQ( )                    AU915_CASE { return RegionAU915DlChannelReq( dlChannelReq ); }
-#define AU915_ALTERNATE_DR( )                      AU915_CASE { return RegionAU915AlternateDr( currentDr, type ); }
-#define AU915_CALC_BACKOFF( )                      AU915_CASE { RegionAU915CalcBackOff( calcBackOff ); break; }
-#define AU915_NEXT_CHANNEL( )                      AU915_CASE { return RegionAU915NextChannel( nextChanParams, channel, time, aggregatedTimeOff ); }
-#define AU915_CHANNEL_ADD( )                       AU915_CASE { return RegionAU915ChannelAdd( channelAdd ); }
-#define AU915_CHANNEL_REMOVE( )                    AU915_CASE { return RegionAU915ChannelsRemove( channelRemove ); }
-#define AU915_SET_CONTINUOUS_WAVE( )               AU915_CASE { RegionAU915SetContinuousWave( continuousWave ); break; }
-#define AU915_APPLY_DR_OFFSET( )                   AU915_CASE { return RegionAU915ApplyDrOffset( downlinkDwellTime, dr, drOffset ); }
-#define AU915_RX_BEACON_SETUP( )                   AU915_CASE { RegionAU915RxBeaconSetup( rxBeaconSetup, outDr ); break; }
-#else
-#define AU915_IS_ACTIVE( )
-#define AU915_GET_PHY_PARAM( )
-#define AU915_SET_BAND_TX_DONE( )
-#define AU915_INIT_DEFAULTS( )
-#define AU915_GET_NVM_CTX( )
-#define AU915_VERIFY( )
-#define AU915_APPLY_CF_LIST( )
-#define AU915_CHAN_MASK_SET( )
-#define AU915_COMPUTE_RX_WINDOW_PARAMETERS( )
-#define AU915_RX_CONFIG( )
-#define AU915_TX_CONFIG( )
-#define AU915_LINK_ADR_REQ( )
-#define AU915_RX_PARAM_SETUP_REQ( )
-#define AU915_NEW_CHANNEL_REQ( )
-#define AU915_TX_PARAM_SETUP_REQ( )
-#define AU915_DL_CHANNEL_REQ( )
-#define AU915_ALTERNATE_DR( )
-#define AU915_CALC_BACKOFF( )
-#define AU915_NEXT_CHANNEL( )
-#define AU915_CHANNEL_ADD( )
-#define AU915_CHANNEL_REMOVE( )
-#define AU915_SET_CONTINUOUS_WAVE( )
-#define AU915_APPLY_DR_OFFSET( )
-#define AU915_RX_BEACON_SETUP( )
-#endif
-
-#ifdef REGION_CN470
-#include "RegionCN470.h"
-#define CN470_CASE                                 case LORAMAC_REGION_CN470:
-#define CN470_IS_ACTIVE( )                         CN470_CASE { return true; }
-#define CN470_GET_PHY_PARAM( )                     CN470_CASE { return RegionCN470GetPhyParam( getPhy ); }
-#define CN470_SET_BAND_TX_DONE( )                  CN470_CASE { RegionCN470SetBandTxDone( txDone ); break; }
-#define CN470_INIT_DEFAULTS( )                     CN470_CASE { RegionCN470InitDefaults( params ); break; }
-#define CN470_GET_NVM_CTX( )                       CN470_CASE { return RegionCN470GetNvmCtx( params ); }
-#define CN470_VERIFY( )                            CN470_CASE { return RegionCN470Verify( verify, phyAttribute ); }
-#define CN470_APPLY_CF_LIST( )                     CN470_CASE { RegionCN470ApplyCFList( applyCFList ); break; }
-#define CN470_CHAN_MASK_SET( )                     CN470_CASE { return RegionCN470ChanMaskSet( chanMaskSet ); }
-#define CN470_COMPUTE_RX_WINDOW_PARAMETERS( )      CN470_CASE { RegionCN470ComputeRxWindowParameters( datarate, minRxSymbols, rxError, rxConfigParams ); break; }
-#define CN470_RX_CONFIG( )                         CN470_CASE { return RegionCN470RxConfig( rxConfig, datarate ); }
-#define CN470_TX_CONFIG( )                         CN470_CASE { return RegionCN470TxConfig( txConfig, txPower, txTimeOnAir ); }
-#define CN470_LINK_ADR_REQ( )                      CN470_CASE { return RegionCN470LinkAdrReq( linkAdrReq, drOut, txPowOut, nbRepOut, nbBytesParsed ); }
-#define CN470_RX_PARAM_SETUP_REQ( )                CN470_CASE { return RegionCN470RxParamSetupReq( rxParamSetupReq ); }
-#define CN470_NEW_CHANNEL_REQ( )                   CN470_CASE { return RegionCN470NewChannelReq( newChannelReq ); }
-#define CN470_TX_PARAM_SETUP_REQ( )                CN470_CASE { return RegionCN470TxParamSetupReq( txParamSetupReq ); }
-#define CN470_DL_CHANNEL_REQ( )                    CN470_CASE { return RegionCN470DlChannelReq( dlChannelReq ); }
-#define CN470_ALTERNATE_DR( )                      CN470_CASE { return RegionCN470AlternateDr( currentDr, type ); }
-#define CN470_CALC_BACKOFF( )                      CN470_CASE { RegionCN470CalcBackOff( calcBackOff ); break; }
-#define CN470_NEXT_CHANNEL( )                      CN470_CASE { return RegionCN470NextChannel( nextChanParams, channel, time, aggregatedTimeOff ); }
-#define CN470_CHANNEL_ADD( )                       CN470_CASE { return RegionCN470ChannelAdd( channelAdd ); }
-#define CN470_CHANNEL_REMOVE( )                    CN470_CASE { return RegionCN470ChannelsRemove( channelRemove ); }
-#define CN470_SET_CONTINUOUS_WAVE( )               CN470_CASE { RegionCN470SetContinuousWave( continuousWave ); break; }
-#define CN470_APPLY_DR_OFFSET( )                   CN470_CASE { return RegionCN470ApplyDrOffset( downlinkDwellTime, dr, drOffset ); }
-#define CN470_RX_BEACON_SETUP( )                   CN470_CASE { RegionCN470RxBeaconSetup( rxBeaconSetup, outDr ); break; }
-#else
-#define CN470_IS_ACTIVE( )
-#define CN470_GET_PHY_PARAM( )
-#define CN470_SET_BAND_TX_DONE( )
-#define CN470_INIT_DEFAULTS( )
-#define CN470_GET_NVM_CTX( )
-#define CN470_VERIFY( )
-#define CN470_APPLY_CF_LIST( )
-#define CN470_CHAN_MASK_SET( )
-#define CN470_COMPUTE_RX_WINDOW_PARAMETERS( )
-#define CN470_RX_CONFIG( )
-#define CN470_TX_CONFIG( )
-#define CN470_LINK_ADR_REQ( )
-#define CN470_RX_PARAM_SETUP_REQ( )
-#define CN470_NEW_CHANNEL_REQ( )
-#define CN470_TX_PARAM_SETUP_REQ( )
-#define CN470_DL_CHANNEL_REQ( )
-#define CN470_ALTERNATE_DR( )
-#define CN470_CALC_BACKOFF( )
-#define CN470_NEXT_CHANNEL( )
-#define CN470_CHANNEL_ADD( )
-#define CN470_CHANNEL_REMOVE( )
-#define CN470_SET_CONTINUOUS_WAVE( )
-#define CN470_APPLY_DR_OFFSET( )
-#define CN470_RX_BEACON_SETUP( )
-#endif
-
-#ifdef REGION_CN779
-#include "RegionCN779.h"
-#define CN779_CASE                                 case LORAMAC_REGION_CN779:
-#define CN779_IS_ACTIVE( )                         CN779_CASE { return true; }
-#define CN779_GET_PHY_PARAM( )                     CN779_CASE { return RegionCN779GetPhyParam( getPhy ); }
-#define CN779_SET_BAND_TX_DONE( )                  CN779_CASE { RegionCN779SetBandTxDone( txDone ); break; }
-#define CN779_INIT_DEFAULTS( )                     CN779_CASE { RegionCN779InitDefaults( params ); break; }
-#define CN779_GET_NVM_CTX( )                       CN779_CASE { return RegionCN779GetNvmCtx( params ); }
-#define CN779_VERIFY( )                            CN779_CASE { return RegionCN779Verify( verify, phyAttribute ); }
-#define CN779_APPLY_CF_LIST( )                     CN779_CASE { RegionCN779ApplyCFList( applyCFList ); break; }
-#define CN779_CHAN_MASK_SET( )                     CN779_CASE { return RegionCN779ChanMaskSet( chanMaskSet ); }
-#define CN779_COMPUTE_RX_WINDOW_PARAMETERS( )      CN779_CASE { RegionCN779ComputeRxWindowParameters( datarate, minRxSymbols, rxError, rxConfigParams ); break; }
-#define CN779_RX_CONFIG( )                         CN779_CASE { return RegionCN779RxConfig( rxConfig, datarate ); }
-#define CN779_TX_CONFIG( )                         CN779_CASE { return RegionCN779TxConfig( txConfig, txPower, txTimeOnAir ); }
-#define CN779_LINK_ADR_REQ( )                      CN779_CASE { return RegionCN779LinkAdrReq( linkAdrReq, drOut, txPowOut, nbRepOut, nbBytesParsed ); }
-#define CN779_RX_PARAM_SETUP_REQ( )                CN779_CASE { return RegionCN779RxParamSetupReq( rxParamSetupReq ); }
-#define CN779_NEW_CHANNEL_REQ( )                   CN779_CASE { return RegionCN779NewChannelReq( newChannelReq ); }
-#define CN779_TX_PARAM_SETUP_REQ( )                CN779_CASE { return RegionCN779TxParamSetupReq( txParamSetupReq ); }
-#define CN779_DL_CHANNEL_REQ( )                    CN779_CASE { return RegionCN779DlChannelReq( dlChannelReq ); }
-#define CN779_ALTERNATE_DR( )                      CN779_CASE { return RegionCN779AlternateDr( currentDr, type ); }
-#define CN779_CALC_BACKOFF( )                      CN779_CASE { RegionCN779CalcBackOff( calcBackOff ); break; }
-#define CN779_NEXT_CHANNEL( )                      CN779_CASE { return RegionCN779NextChannel( nextChanParams, channel, time, aggregatedTimeOff ); }
-#define CN779_CHANNEL_ADD( )                       CN779_CASE { return RegionCN779ChannelAdd( channelAdd ); }
-#define CN779_CHANNEL_REMOVE( )                    CN779_CASE { return RegionCN779ChannelsRemove( channelRemove ); }
-#define CN779_SET_CONTINUOUS_WAVE( )               CN779_CASE { RegionCN779SetContinuousWave( continuousWave ); break; }
-#define CN779_APPLY_DR_OFFSET( )                   CN779_CASE { return RegionCN779ApplyDrOffset( downlinkDwellTime, dr, drOffset ); }
-#define CN779_RX_BEACON_SETUP( )                   CN779_CASE { RegionCN779RxBeaconSetup( rxBeaconSetup, outDr ); break; }
-#else
-#define CN779_IS_ACTIVE( )
-#define CN779_GET_PHY_PARAM( )
-#define CN779_SET_BAND_TX_DONE( )
-#define CN779_INIT_DEFAULTS( )
-#define CN779_GET_NVM_CTX( )
-#define CN779_VERIFY( )
-#define CN779_APPLY_CF_LIST( )
-#define CN779_CHAN_MASK_SET( )
-#define CN779_COMPUTE_RX_WINDOW_PARAMETERS( )
-#define CN779_RX_CONFIG( )
-#define CN779_TX_CONFIG( )
-#define CN779_LINK_ADR_REQ( )
-#define CN779_RX_PARAM_SETUP_REQ( )
-#define CN779_NEW_CHANNEL_REQ( )
-#define CN779_TX_PARAM_SETUP_REQ( )
-#define CN779_DL_CHANNEL_REQ( )
-#define CN779_ALTERNATE_DR( )
-#define CN779_CALC_BACKOFF( )
-#define CN779_NEXT_CHANNEL( )
-#define CN779_CHANNEL_ADD( )
-#define CN779_CHANNEL_REMOVE( )
-#define CN779_SET_CONTINUOUS_WAVE( )
-#define CN779_APPLY_DR_OFFSET( )
-#define CN779_RX_BEACON_SETUP( )
-#endif
-
-#ifdef REGION_EU433
-#include "RegionEU433.h"
-#define EU433_CASE                                 case LORAMAC_REGION_EU433:
-#define EU433_IS_ACTIVE( )                         EU433_CASE { return true; }
-#define EU433_GET_PHY_PARAM( )                     EU433_CASE { return RegionEU433GetPhyParam( getPhy ); }
-#define EU433_SET_BAND_TX_DONE( )                  EU433_CASE { RegionEU433SetBandTxDone( txDone ); break; }
-#define EU433_INIT_DEFAULTS( )                     EU433_CASE { RegionEU433InitDefaults( params ); break; }
-#define EU433_GET_NVM_CTX( )                       EU433_CASE { return RegionEU433GetNvmCtx( params ); }
-#define EU433_VERIFY( )                            EU433_CASE { return RegionEU433Verify( verify, phyAttribute ); }
-#define EU433_APPLY_CF_LIST( )                     EU433_CASE { RegionEU433ApplyCFList( applyCFList ); break; }
-#define EU433_CHAN_MASK_SET( )                     EU433_CASE { return RegionEU433ChanMaskSet( chanMaskSet ); }
-#define EU433_COMPUTE_RX_WINDOW_PARAMETERS( )      EU433_CASE { RegionEU433ComputeRxWindowParameters( datarate, minRxSymbols, rxError, rxConfigParams ); break; }
-#define EU433_RX_CONFIG( )                         EU433_CASE { return RegionEU433RxConfig( rxConfig, datarate ); }
-#define EU433_TX_CONFIG( )                         EU433_CASE { return RegionEU433TxConfig( txConfig, txPower, txTimeOnAir ); }
-#define EU433_LINK_ADR_REQ( )                      EU433_CASE { return RegionEU433LinkAdrReq( linkAdrReq, drOut, txPowOut, nbRepOut, nbBytesParsed ); }
-#define EU433_RX_PARAM_SETUP_REQ( )                EU433_CASE { return RegionEU433RxParamSetupReq( rxParamSetupReq ); }
-#define EU433_NEW_CHANNEL_REQ( )                   EU433_CASE { return RegionEU433NewChannelReq( newChannelReq ); }
-#define EU433_TX_PARAM_SETUP_REQ( )                EU433_CASE { return RegionEU433TxParamSetupReq( txParamSetupReq ); }
-#define EU433_DL_CHANNEL_REQ( )                    EU433_CASE { return RegionEU433DlChannelReq( dlChannelReq ); }
-#define EU433_ALTERNATE_DR( )                      EU433_CASE { return RegionEU433AlternateDr( currentDr, type ); }
-#define EU433_CALC_BACKOFF( )                      EU433_CASE { RegionEU433CalcBackOff( calcBackOff ); break; }
-#define EU433_NEXT_CHANNEL( )                      EU433_CASE { return RegionEU433NextChannel( nextChanParams, channel, time, aggregatedTimeOff ); }
-#define EU433_CHANNEL_ADD( )                       EU433_CASE { return RegionEU433ChannelAdd( channelAdd ); }
-#define EU433_CHANNEL_REMOVE( )                    EU433_CASE { return RegionEU433ChannelsRemove( channelRemove ); }
-#define EU433_SET_CONTINUOUS_WAVE( )               EU433_CASE { RegionEU433SetContinuousWave( continuousWave ); break; }
-#define EU433_APPLY_DR_OFFSET( )                   EU433_CASE { return RegionEU433ApplyDrOffset( downlinkDwellTime, dr, drOffset ); }
-#define EU433_RX_BEACON_SETUP( )                   EU433_CASE { RegionEU433RxBeaconSetup( rxBeaconSetup, outDr ); break; }
-#else
-#define EU433_IS_ACTIVE( )
-#define EU433_GET_PHY_PARAM( )
-#define EU433_SET_BAND_TX_DONE( )
-#define EU433_INIT_DEFAULTS( )
-#define EU433_GET_NVM_CTX( )
-#define EU433_VERIFY( )
-#define EU433_APPLY_CF_LIST( )
-#define EU433_CHAN_MASK_SET( )
-#define EU433_COMPUTE_RX_WINDOW_PARAMETERS( )
-#define EU433_RX_CONFIG( )
-#define EU433_TX_CONFIG( )
-#define EU433_LINK_ADR_REQ( )
-#define EU433_RX_PARAM_SETUP_REQ( )
-#define EU433_NEW_CHANNEL_REQ( )
-#define EU433_TX_PARAM_SETUP_REQ( )
-#define EU433_DL_CHANNEL_REQ( )
-#define EU433_ALTERNATE_DR( )
-#define EU433_CALC_BACKOFF( )
-#define EU433_NEXT_CHANNEL( )
-#define EU433_CHANNEL_ADD( )
-#define EU433_CHANNEL_REMOVE( )
-#define EU433_SET_CONTINUOUS_WAVE( )
-#define EU433_APPLY_DR_OFFSET( )
-#define EU433_RX_BEACON_SETUP( )
-#endif
-
-#ifdef REGION_EU868
-#include "RegionEU868.h"
-#define EU868_CASE                                 case LORAMAC_REGION_EU868:
-#define EU868_IS_ACTIVE( )                         EU868_CASE { return true; }
-#define EU868_GET_PHY_PARAM( )                     EU868_CASE { return RegionEU868GetPhyParam( getPhy ); }
-#define EU868_SET_BAND_TX_DONE( )                  EU868_CASE { RegionEU868SetBandTxDone( txDone ); break; }
-#define EU868_INIT_DEFAULTS( )                     EU868_CASE { RegionEU868InitDefaults( params ); break; }
-#define EU868_GET_NVM_CTX( )                       EU868_CASE { return RegionEU868GetNvmCtx( params ); }
-#define EU868_VERIFY( )                            EU868_CASE { return RegionEU868Verify( verify, phyAttribute ); }
-#define EU868_APPLY_CF_LIST( )                     EU868_CASE { RegionEU868ApplyCFList( applyCFList ); break; }
-#define EU868_CHAN_MASK_SET( )                     EU868_CASE { return RegionEU868ChanMaskSet( chanMaskSet ); }
-#define EU868_COMPUTE_RX_WINDOW_PARAMETERS( )      EU868_CASE { RegionEU868ComputeRxWindowParameters( datarate, minRxSymbols, rxError, rxConfigParams ); break; }
-#define EU868_RX_CONFIG( )                         EU868_CASE { return RegionEU868RxConfig( rxConfig, datarate ); }
-#define EU868_TX_CONFIG( )                         EU868_CASE { return RegionEU868TxConfig( txConfig, txPower, txTimeOnAir ); }
-#define EU868_LINK_ADR_REQ( )                      EU868_CASE { return RegionEU868LinkAdrReq( linkAdrReq, drOut, txPowOut, nbRepOut, nbBytesParsed ); }
-#define EU868_RX_PARAM_SETUP_REQ( )                EU868_CASE { return RegionEU868RxParamSetupReq( rxParamSetupReq ); }
-#define EU868_NEW_CHANNEL_REQ( )                   EU868_CASE { return RegionEU868NewChannelReq( newChannelReq ); }
-#define EU868_TX_PARAM_SETUP_REQ( )                EU868_CASE { return RegionEU868TxParamSetupReq( txParamSetupReq ); }
-#define EU868_DL_CHANNEL_REQ( )                    EU868_CASE { return RegionEU868DlChannelReq( dlChannelReq ); }
-#define EU868_ALTERNATE_DR( )                      EU868_CASE { return RegionEU868AlternateDr( currentDr, type ); }
-#define EU868_CALC_BACKOFF( )                      EU868_CASE { RegionEU868CalcBackOff( calcBackOff ); break; }
-#define EU868_NEXT_CHANNEL( )                      EU868_CASE { return RegionEU868NextChannel( nextChanParams, channel, time, aggregatedTimeOff ); }
-#define EU868_CHANNEL_ADD( )                       EU868_CASE { return RegionEU868ChannelAdd( channelAdd ); }
-#define EU868_CHANNEL_REMOVE( )                    EU868_CASE { return RegionEU868ChannelsRemove( channelRemove ); }
-#define EU868_SET_CONTINUOUS_WAVE( )               EU868_CASE { RegionEU868SetContinuousWave( continuousWave ); break; }
-#define EU868_APPLY_DR_OFFSET( )                   EU868_CASE { return RegionEU868ApplyDrOffset( downlinkDwellTime, dr, drOffset ); }
-#define EU868_RX_BEACON_SETUP( )                   EU868_CASE { RegionEU868RxBeaconSetup( rxBeaconSetup, outDr ); break; }
-#else
-#define EU868_IS_ACTIVE( )
-#define EU868_GET_PHY_PARAM( )
-#define EU868_SET_BAND_TX_DONE( )
-#define EU868_INIT_DEFAULTS( )
-#define EU868_GET_NVM_CTX( )
-#define EU868_VERIFY( )
-#define EU868_APPLY_CF_LIST( )
-#define EU868_CHAN_MASK_SET( )
-#define EU868_COMPUTE_RX_WINDOW_PARAMETERS( )
-#define EU868_RX_CONFIG( )
-#define EU868_TX_CONFIG( )
-#define EU868_LINK_ADR_REQ( )
-#define EU868_RX_PARAM_SETUP_REQ( )
-#define EU868_NEW_CHANNEL_REQ( )
-#define EU868_TX_PARAM_SETUP_REQ( )
-#define EU868_DL_CHANNEL_REQ( )
-#define EU868_ALTERNATE_DR( )
-#define EU868_CALC_BACKOFF( )
-#define EU868_NEXT_CHANNEL( )
-#define EU868_CHANNEL_ADD( )
-#define EU868_CHANNEL_REMOVE( )
-#define EU868_SET_CONTINUOUS_WAVE( )
-#define EU868_APPLY_DR_OFFSET( )
-#define EU868_RX_BEACON_SETUP( )
-#endif
-
-#ifdef REGION_KR920
-#include "RegionKR920.h"
-#define KR920_CASE                                 case LORAMAC_REGION_KR920:
-#define KR920_IS_ACTIVE( )                         KR920_CASE { return true; }
-#define KR920_GET_PHY_PARAM( )                     KR920_CASE { return RegionKR920GetPhyParam( getPhy ); }
-#define KR920_SET_BAND_TX_DONE( )                  KR920_CASE { RegionKR920SetBandTxDone( txDone ); break; }
-#define KR920_INIT_DEFAULTS( )                     KR920_CASE { RegionKR920InitDefaults( params ); break; }
-#define KR920_GET_NVM_CTX( )                       KR920_CASE { return RegionKR920GetNvmCtx( params ); }
-#define KR920_VERIFY( )                            KR920_CASE { return RegionKR920Verify( verify, phyAttribute ); }
-#define KR920_APPLY_CF_LIST( )                     KR920_CASE { RegionKR920ApplyCFList( applyCFList ); break; }
-#define KR920_CHAN_MASK_SET( )                     KR920_CASE { return RegionKR920ChanMaskSet( chanMaskSet ); }
-#define KR920_COMPUTE_RX_WINDOW_PARAMETERS( )      KR920_CASE { RegionKR920ComputeRxWindowParameters( datarate, minRxSymbols, rxError, rxConfigParams ); break; }
-#define KR920_RX_CONFIG( )                         KR920_CASE { return RegionKR920RxConfig( rxConfig, datarate ); }
-#define KR920_TX_CONFIG( )                         KR920_CASE { return RegionKR920TxConfig( txConfig, txPower, txTimeOnAir ); }
-#define KR920_LINK_ADR_REQ( )                      KR920_CASE { return RegionKR920LinkAdrReq( linkAdrReq, drOut, txPowOut, nbRepOut, nbBytesParsed ); }
-#define KR920_RX_PARAM_SETUP_REQ( )                KR920_CASE { return RegionKR920RxParamSetupReq( rxParamSetupReq ); }
-#define KR920_NEW_CHANNEL_REQ( )                   KR920_CASE { return RegionKR920NewChannelReq( newChannelReq ); }
-#define KR920_TX_PARAM_SETUP_REQ( )                KR920_CASE { return RegionKR920TxParamSetupReq( txParamSetupReq ); }
-#define KR920_DL_CHANNEL_REQ( )                    KR920_CASE { return RegionKR920DlChannelReq( dlChannelReq ); }
-#define KR920_ALTERNATE_DR( )                      KR920_CASE { return RegionKR920AlternateDr( currentDr, type ); }
-#define KR920_CALC_BACKOFF( )                      KR920_CASE { RegionKR920CalcBackOff( calcBackOff ); break; }
-#define KR920_NEXT_CHANNEL( )                      KR920_CASE { return RegionKR920NextChannel( nextChanParams, channel, time, aggregatedTimeOff ); }
-#define KR920_CHANNEL_ADD( )                       KR920_CASE { return RegionKR920ChannelAdd( channelAdd ); }
-#define KR920_CHANNEL_REMOVE( )                    KR920_CASE { return RegionKR920ChannelsRemove( channelRemove ); }
-#define KR920_SET_CONTINUOUS_WAVE( )               KR920_CASE { RegionKR920SetContinuousWave( continuousWave ); break; }
-#define KR920_APPLY_DR_OFFSET( )                   KR920_CASE { return RegionKR920ApplyDrOffset( downlinkDwellTime, dr, drOffset ); }
-#define KR920_RX_BEACON_SETUP( )                   KR920_CASE { RegionKR920RxBeaconSetup( rxBeaconSetup, outDr ); break; }
-#else
-#define KR920_IS_ACTIVE( )
-#define KR920_GET_PHY_PARAM( )
-#define KR920_SET_BAND_TX_DONE( )
-#define KR920_INIT_DEFAULTS( )
-#define KR920_GET_NVM_CTX( )
-#define KR920_VERIFY( )
-#define KR920_APPLY_CF_LIST( )
-#define KR920_CHAN_MASK_SET( )
-#define KR920_COMPUTE_RX_WINDOW_PARAMETERS( )
-#define KR920_RX_CONFIG( )
-#define KR920_TX_CONFIG( )
-#define KR920_LINK_ADR_REQ( )
-#define KR920_RX_PARAM_SETUP_REQ( )
-#define KR920_NEW_CHANNEL_REQ( )
-#define KR920_TX_PARAM_SETUP_REQ( )
-#define KR920_DL_CHANNEL_REQ( )
-#define KR920_ALTERNATE_DR( )
-#define KR920_CALC_BACKOFF( )
-#define KR920_NEXT_CHANNEL( )
-#define KR920_CHANNEL_ADD( )
-#define KR920_CHANNEL_REMOVE( )
-#define KR920_SET_CONTINUOUS_WAVE( )
-#define KR920_APPLY_DR_OFFSET( )
-#define KR920_RX_BEACON_SETUP( )
-#endif
-
-#ifdef REGION_IN865
-#include "RegionIN865.h"
-#define IN865_CASE                                 case LORAMAC_REGION_IN865:
-#define IN865_IS_ACTIVE( )                         IN865_CASE { return true; }
-#define IN865_GET_PHY_PARAM( )                     IN865_CASE { return RegionIN865GetPhyParam( getPhy ); }
-#define IN865_SET_BAND_TX_DONE( )                  IN865_CASE { RegionIN865SetBandTxDone( txDone ); break; }
-#define IN865_INIT_DEFAULTS( )                     IN865_CASE { RegionIN865InitDefaults( params ); break; }
-#define IN865_GET_NVM_CTX( )                       IN865_CASE { return RegionIN865GetNvmCtx( params ); }
-#define IN865_VERIFY( )                            IN865_CASE { return RegionIN865Verify( verify, phyAttribute ); }
-#define IN865_APPLY_CF_LIST( )                     IN865_CASE { RegionIN865ApplyCFList( applyCFList ); break; }
-#define IN865_CHAN_MASK_SET( )                     IN865_CASE { return RegionIN865ChanMaskSet( chanMaskSet ); }
-#define IN865_COMPUTE_RX_WINDOW_PARAMETERS( )      IN865_CASE { RegionIN865ComputeRxWindowParameters( datarate, minRxSymbols, rxError, rxConfigParams ); break; }
-#define IN865_RX_CONFIG( )                         IN865_CASE { return RegionIN865RxConfig( rxConfig, datarate ); }
-#define IN865_TX_CONFIG( )                         IN865_CASE { return RegionIN865TxConfig( txConfig, txPower, txTimeOnAir ); }
-#define IN865_LINK_ADR_REQ( )                      IN865_CASE { return RegionIN865LinkAdrReq( linkAdrReq, drOut, txPowOut, nbRepOut, nbBytesParsed ); }
-#define IN865_RX_PARAM_SETUP_REQ( )                IN865_CASE { return RegionIN865RxParamSetupReq( rxParamSetupReq ); }
-#define IN865_NEW_CHANNEL_REQ( )                   IN865_CASE { return RegionIN865NewChannelReq( newChannelReq ); }
-#define IN865_TX_PARAM_SETUP_REQ( )                IN865_CASE { return RegionIN865TxParamSetupReq( txParamSetupReq ); }
-#define IN865_DL_CHANNEL_REQ( )                    IN865_CASE { return RegionIN865DlChannelReq( dlChannelReq ); }
-#define IN865_ALTERNATE_DR( )                      IN865_CASE { return RegionIN865AlternateDr( currentDr, type ); }
-#define IN865_CALC_BACKOFF( )                      IN865_CASE { RegionIN865CalcBackOff( calcBackOff ); break; }
-#define IN865_NEXT_CHANNEL( )                      IN865_CASE { return RegionIN865NextChannel( nextChanParams, channel, time, aggregatedTimeOff ); }
-#define IN865_CHANNEL_ADD( )                       IN865_CASE { return RegionIN865ChannelAdd( channelAdd ); }
-#define IN865_CHANNEL_REMOVE( )                    IN865_CASE { return RegionIN865ChannelsRemove( channelRemove ); }
-#define IN865_SET_CONTINUOUS_WAVE( )               IN865_CASE { RegionIN865SetContinuousWave( continuousWave ); break; }
-#define IN865_APPLY_DR_OFFSET( )                   IN865_CASE { return RegionIN865ApplyDrOffset( downlinkDwellTime, dr, drOffset ); }
-#define IN865_RX_BEACON_SETUP( )                   IN865_CASE { RegionIN865RxBeaconSetup( rxBeaconSetup, outDr ); break; }
-#else
-#define IN865_IS_ACTIVE( )
-#define IN865_GET_PHY_PARAM( )
-#define IN865_SET_BAND_TX_DONE( )
-#define IN865_INIT_DEFAULTS( )
-#define IN865_GET_NVM_CTX( )
-#define IN865_VERIFY( )
-#define IN865_APPLY_CF_LIST( )
-#define IN865_CHAN_MASK_SET( )
-#define IN865_COMPUTE_RX_WINDOW_PARAMETERS( )
-#define IN865_RX_CONFIG( )
-#define IN865_TX_CONFIG( )
-#define IN865_LINK_ADR_REQ( )
-#define IN865_RX_PARAM_SETUP_REQ( )
-#define IN865_NEW_CHANNEL_REQ( )
-#define IN865_TX_PARAM_SETUP_REQ( )
-#define IN865_DL_CHANNEL_REQ( )
-#define IN865_ALTERNATE_DR( )
-#define IN865_CALC_BACKOFF( )
-#define IN865_NEXT_CHANNEL( )
-#define IN865_CHANNEL_ADD( )
-#define IN865_CHANNEL_REMOVE( )
-#define IN865_SET_CONTINUOUS_WAVE( )
-#define IN865_APPLY_DR_OFFSET( )
-#define IN865_RX_BEACON_SETUP( )
-#endif
-
-#ifdef REGION_US915
-#include "RegionUS915.h"
-#define US915_CASE                                 case LORAMAC_REGION_US915:
-#define US915_IS_ACTIVE( )                         US915_CASE { return true; }
-#define US915_GET_PHY_PARAM( )                     US915_CASE { return RegionUS915GetPhyParam( getPhy ); }
-#define US915_SET_BAND_TX_DONE( )                  US915_CASE { RegionUS915SetBandTxDone( txDone ); break; }
-#define US915_INIT_DEFAULTS( )                     US915_CASE { RegionUS915InitDefaults( params ); break; }
-#define US915_GET_NVM_CTX( )                       US915_CASE { return RegionUS915GetNvmCtx( params ); }
-#define US915_VERIFY( )                            US915_CASE { return RegionUS915Verify( verify, phyAttribute ); }
-#define US915_APPLY_CF_LIST( )                     US915_CASE { RegionUS915ApplyCFList( applyCFList ); break; }
-#define US915_CHAN_MASK_SET( )                     US915_CASE { return RegionUS915ChanMaskSet( chanMaskSet ); }
-#define US915_COMPUTE_RX_WINDOW_PARAMETERS( )      US915_CASE { RegionUS915ComputeRxWindowParameters( datarate, minRxSymbols, rxError, rxConfigParams ); break; }
-#define US915_RX_CONFIG( )                         US915_CASE { return RegionUS915RxConfig( rxConfig, datarate ); }
-#define US915_TX_CONFIG( )                         US915_CASE { return RegionUS915TxConfig( txConfig, txPower, txTimeOnAir ); }
-#define US915_LINK_ADR_REQ( )                      US915_CASE { return RegionUS915LinkAdrReq( linkAdrReq, drOut, txPowOut, nbRepOut, nbBytesParsed ); }
-#define US915_RX_PARAM_SETUP_REQ( )                US915_CASE { return RegionUS915RxParamSetupReq( rxParamSetupReq ); }
-#define US915_NEW_CHANNEL_REQ( )                   US915_CASE { return RegionUS915NewChannelReq( newChannelReq ); }
-#define US915_TX_PARAM_SETUP_REQ( )                US915_CASE { return RegionUS915TxParamSetupReq( txParamSetupReq ); }
-#define US915_DL_CHANNEL_REQ( )                    US915_CASE { return RegionUS915DlChannelReq( dlChannelReq ); }
-#define US915_ALTERNATE_DR( )                      US915_CASE { return RegionUS915AlternateDr( currentDr, type ); }
-#define US915_CALC_BACKOFF( )                      US915_CASE { RegionUS915CalcBackOff( calcBackOff ); break; }
-#define US915_NEXT_CHANNEL( )                      US915_CASE { return RegionUS915NextChannel( nextChanParams, channel, time, aggregatedTimeOff ); }
-#define US915_CHANNEL_ADD( )                       US915_CASE { return RegionUS915ChannelAdd( channelAdd ); }
-#define US915_CHANNEL_REMOVE( )                    US915_CASE { return RegionUS915ChannelsRemove( channelRemove ); }
-#define US915_SET_CONTINUOUS_WAVE( )               US915_CASE { RegionUS915SetContinuousWave( continuousWave ); break; }
-#define US915_APPLY_DR_OFFSET( )                   US915_CASE { return RegionUS915ApplyDrOffset( downlinkDwellTime, dr, drOffset ); }
-#define US915_RX_BEACON_SETUP( )                   US915_CASE { RegionUS915RxBeaconSetup( rxBeaconSetup, outDr ); break; }
-#else
-#define US915_IS_ACTIVE( )
-#define US915_GET_PHY_PARAM( )
-#define US915_SET_BAND_TX_DONE( )
-#define US915_INIT_DEFAULTS( )
-#define US915_GET_NVM_CTX( )
-#define US915_VERIFY( )
-#define US915_APPLY_CF_LIST( )
-#define US915_CHAN_MASK_SET( )
-#define US915_COMPUTE_RX_WINDOW_PARAMETERS( )
-#define US915_RX_CONFIG( )
-#define US915_TX_CONFIG( )
-#define US915_LINK_ADR_REQ( )
-#define US915_RX_PARAM_SETUP_REQ( )
-#define US915_NEW_CHANNEL_REQ( )
-#define US915_TX_PARAM_SETUP_REQ( )
-#define US915_DL_CHANNEL_REQ( )
-#define US915_ALTERNATE_DR( )
-#define US915_CALC_BACKOFF( )
-#define US915_NEXT_CHANNEL( )
-#define US915_CHANNEL_ADD( )
-#define US915_CHANNEL_REMOVE( )
-#define US915_SET_CONTINUOUS_WAVE( )
-#define US915_APPLY_DR_OFFSET( )
-#define US915_RX_BEACON_SETUP( )
-#endif
-
-#ifdef REGION_RU864
-#include "RegionRU864.h"
-#define RU864_CASE                                 case LORAMAC_REGION_RU864:
-#define RU864_IS_ACTIVE( )                         RU864_CASE { return true; }
-#define RU864_GET_PHY_PARAM( )                     RU864_CASE { return RegionRU864GetPhyParam( getPhy ); }
-#define RU864_SET_BAND_TX_DONE( )                  RU864_CASE { RegionRU864SetBandTxDone( txDone ); break; }
-#define RU864_INIT_DEFAULTS( )                     RU864_CASE { RegionRU864InitDefaults( params ); break; }
-#define RU864_GET_NVM_CTX( )                       RU864_CASE { return RegionRU864GetNvmCtx( params ); }
-#define RU864_VERIFY( )                            RU864_CASE { return RegionRU864Verify( verify, phyAttribute ); }
-#define RU864_APPLY_CF_LIST( )                     RU864_CASE { RegionRU864ApplyCFList( applyCFList ); break; }
-#define RU864_CHAN_MASK_SET( )                     RU864_CASE { return RegionRU864ChanMaskSet( chanMaskSet ); }
-#define RU864_COMPUTE_RX_WINDOW_PARAMETERS( )      RU864_CASE { RegionRU864ComputeRxWindowParameters( datarate, minRxSymbols, rxError, rxConfigParams ); break; }
-#define RU864_RX_CONFIG( )                         RU864_CASE { return RegionRU864RxConfig( rxConfig, datarate ); }
-#define RU864_TX_CONFIG( )                         RU864_CASE { return RegionRU864TxConfig( txConfig, txPower, txTimeOnAir ); }
-#define RU864_LINK_ADR_REQ( )                      RU864_CASE { return RegionRU864LinkAdrReq( linkAdrReq, drOut, txPowOut, nbRepOut, nbBytesParsed ); }
-#define RU864_RX_PARAM_SETUP_REQ( )                RU864_CASE { return RegionRU864RxParamSetupReq( rxParamSetupReq ); }
-#define RU864_NEW_CHANNEL_REQ( )                   RU864_CASE { return RegionRU864NewChannelReq( newChannelReq ); }
-#define RU864_TX_PARAM_SETUP_REQ( )                RU864_CASE { return RegionRU864TxParamSetupReq( txParamSetupReq ); }
-#define RU864_DL_CHANNEL_REQ( )                    RU864_CASE { return RegionRU864DlChannelReq( dlChannelReq ); }
-#define RU864_ALTERNATE_DR( )                      RU864_CASE { return RegionRU864AlternateDr( currentDr, type ); }
-#define RU864_CALC_BACKOFF( )                      RU864_CASE { RegionRU864CalcBackOff( calcBackOff ); break; }
-#define RU864_NEXT_CHANNEL( )                      RU864_CASE { return RegionRU864NextChannel( nextChanParams, channel, time, aggregatedTimeOff ); }
-#define RU864_CHANNEL_ADD( )                       RU864_CASE { return RegionRU864ChannelAdd( channelAdd ); }
-#define RU864_CHANNEL_REMOVE( )                    RU864_CASE { return RegionRU864ChannelsRemove( channelRemove ); }
-#define RU864_SET_CONTINUOUS_WAVE( )               RU864_CASE { RegionRU864SetContinuousWave( continuousWave ); break; }
-#define RU864_APPLY_DR_OFFSET( )                   RU864_CASE { return RegionRU864ApplyDrOffset( downlinkDwellTime, dr, drOffset ); }
-#define RU864_RX_BEACON_SETUP( )                   RU864_CASE { RegionRU864RxBeaconSetup( rxBeaconSetup, outDr ); break; }
-#else
-#define RU864_IS_ACTIVE( )
-#define RU864_GET_PHY_PARAM( )
-#define RU864_SET_BAND_TX_DONE( )
-#define RU864_INIT_DEFAULTS( )
-#define RU864_GET_NVM_CTX( )
-#define RU864_VERIFY( )
-#define RU864_APPLY_CF_LIST( )
-#define RU864_CHAN_MASK_SET( )
-#define RU864_COMPUTE_RX_WINDOW_PARAMETERS( )
-#define RU864_RX_CONFIG( )
-#define RU864_TX_CONFIG( )
-#define RU864_LINK_ADR_REQ( )
-#define RU864_RX_PARAM_SETUP_REQ( )
-#define RU864_NEW_CHANNEL_REQ( )
-#define RU864_TX_PARAM_SETUP_REQ( )
-#define RU864_DL_CHANNEL_REQ( )
-#define RU864_ALTERNATE_DR( )
-#define RU864_CALC_BACKOFF( )
-#define RU864_NEXT_CHANNEL( )
-#define RU864_CHANNEL_ADD( )
-#define RU864_CHANNEL_REMOVE( )
-#define RU864_SET_CONTINUOUS_WAVE( )
-#define RU864_APPLY_DR_OFFSET( )
-#define RU864_RX_BEACON_SETUP( )
-#endif
-
-bool RegionIsActive( LoRaMacRegion_t region )
-{
-    switch( region )
-    {
-        AS923_IS_ACTIVE( );
-        AU915_IS_ACTIVE( );
-        CN470_IS_ACTIVE( );
-        CN779_IS_ACTIVE( );
-        EU433_IS_ACTIVE( );
-        EU868_IS_ACTIVE( );
-        KR920_IS_ACTIVE( );
-        IN865_IS_ACTIVE( );
-        US915_IS_ACTIVE( );
-        RU864_IS_ACTIVE( );
-        default:
-        {
-            return false;
-        }
-    }
-}
-
-PhyParam_t RegionGetPhyParam( LoRaMacRegion_t region, GetPhyParams_t* getPhy )
-{
-    PhyParam_t phyParam = { 0 };
-    switch( region )
-    {
-        AS923_GET_PHY_PARAM( );
-        AU915_GET_PHY_PARAM( );
-        CN470_GET_PHY_PARAM( );
-        CN779_GET_PHY_PARAM( );
-        EU433_GET_PHY_PARAM( );
-        EU868_GET_PHY_PARAM( );
-        KR920_GET_PHY_PARAM( );
-        IN865_GET_PHY_PARAM( );
-        US915_GET_PHY_PARAM( );
-        RU864_GET_PHY_PARAM( );
-        default:
-        {
-            return phyParam;
-        }
-    }
-}
-
-void RegionSetBandTxDone( LoRaMacRegion_t region, SetBandTxDoneParams_t* txDone )
-{
-    switch( region )
-    {
-        AS923_SET_BAND_TX_DONE( );
-        AU915_SET_BAND_TX_DONE( );
-        CN470_SET_BAND_TX_DONE( );
-        CN779_SET_BAND_TX_DONE( );
-        EU433_SET_BAND_TX_DONE( );
-        EU868_SET_BAND_TX_DONE( );
-        KR920_SET_BAND_TX_DONE( );
-        IN865_SET_BAND_TX_DONE( );
-        US915_SET_BAND_TX_DONE( );
-        RU864_SET_BAND_TX_DONE( );
-        default:
-        {
-            return;
-        }
-    }
-}
-
-void RegionInitDefaults( LoRaMacRegion_t region, InitDefaultsParams_t* params )
-{
-    switch( region )
-    {
-        AS923_INIT_DEFAULTS( );
-        AU915_INIT_DEFAULTS( );
-        CN470_INIT_DEFAULTS( );
-        CN779_INIT_DEFAULTS( );
-        EU433_INIT_DEFAULTS( );
-        EU868_INIT_DEFAULTS( );
-        KR920_INIT_DEFAULTS( );
-        IN865_INIT_DEFAULTS( );
-        US915_INIT_DEFAULTS( );
-        RU864_INIT_DEFAULTS( );
-        default:
-        {
-            break;
-        }
-    }
-}
-
-void* RegionGetNvmCtx( LoRaMacRegion_t region, GetNvmCtxParams_t* params )
-{
-    switch( region )
-    {
-        AS923_GET_NVM_CTX( );
-        AU915_GET_NVM_CTX( );
-        CN470_GET_NVM_CTX( );
-        CN779_GET_NVM_CTX( );
-        EU433_GET_NVM_CTX( );
-        EU868_GET_NVM_CTX( );
-        KR920_GET_NVM_CTX( );
-        IN865_GET_NVM_CTX( );
-        US915_GET_NVM_CTX( );
-        RU864_GET_NVM_CTX( );
-        default:
-        {
-           return 0;
-        }
-    }
-}
-
-bool RegionVerify( LoRaMacRegion_t region, VerifyParams_t* verify, PhyAttribute_t phyAttribute )
-{
-    switch( region )
-    {
-        AS923_VERIFY( );
-        AU915_VERIFY( );
-        CN470_VERIFY( );
-        CN779_VERIFY( );
-        EU433_VERIFY( );
-        EU868_VERIFY( );
-        KR920_VERIFY( );
-        IN865_VERIFY( );
-        US915_VERIFY( );
-        RU864_VERIFY( );
-        default:
-        {
-            return false;
-        }
-    }
-}
-
-void RegionApplyCFList( LoRaMacRegion_t region, ApplyCFListParams_t* applyCFList )
-{
-    switch( region )
-    {
-        AS923_APPLY_CF_LIST( );
-        AU915_APPLY_CF_LIST( );
-        CN470_APPLY_CF_LIST( );
-        CN779_APPLY_CF_LIST( );
-        EU433_APPLY_CF_LIST( );
-        EU868_APPLY_CF_LIST( );
-        KR920_APPLY_CF_LIST( );
-        IN865_APPLY_CF_LIST( );
-        US915_APPLY_CF_LIST( );
-        RU864_APPLY_CF_LIST( );
-        default:
-        {
-            break;
-        }
-    }
-}
-
-bool RegionChanMaskSet( LoRaMacRegion_t region, ChanMaskSetParams_t* chanMaskSet )
-{
-    switch( region )
-    {
-        AS923_CHAN_MASK_SET( );
-        AU915_CHAN_MASK_SET( );
-        CN470_CHAN_MASK_SET( );
-        CN779_CHAN_MASK_SET( );
-        EU433_CHAN_MASK_SET( );
-        EU868_CHAN_MASK_SET( );
-        KR920_CHAN_MASK_SET( );
-        IN865_CHAN_MASK_SET( );
-        US915_CHAN_MASK_SET( );
-        RU864_CHAN_MASK_SET( );
-        default:
-        {
-            return false;
-        }
-    }
-}
-
-void RegionComputeRxWindowParameters( LoRaMacRegion_t region, int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams )
-{
-    switch( region )
-    {
-        AS923_COMPUTE_RX_WINDOW_PARAMETERS( );
-        AU915_COMPUTE_RX_WINDOW_PARAMETERS( );
-        CN470_COMPUTE_RX_WINDOW_PARAMETERS( );
-        CN779_COMPUTE_RX_WINDOW_PARAMETERS( );
-        EU433_COMPUTE_RX_WINDOW_PARAMETERS( );
-        EU868_COMPUTE_RX_WINDOW_PARAMETERS( );
-        KR920_COMPUTE_RX_WINDOW_PARAMETERS( );
-        IN865_COMPUTE_RX_WINDOW_PARAMETERS( );
-        US915_COMPUTE_RX_WINDOW_PARAMETERS( );
-        RU864_COMPUTE_RX_WINDOW_PARAMETERS( );
-        default:
-        {
-            break;
-        }
-    }
-}
-
-bool RegionRxConfig( LoRaMacRegion_t region, RxConfigParams_t* rxConfig, int8_t* datarate )
-{
-    switch( region )
-    {
-        AS923_RX_CONFIG( );
-        AU915_RX_CONFIG( );
-        CN470_RX_CONFIG( );
-        CN779_RX_CONFIG( );
-        EU433_RX_CONFIG( );
-        EU868_RX_CONFIG( );
-        KR920_RX_CONFIG( );
-        IN865_RX_CONFIG( );
-        US915_RX_CONFIG( );
-        RU864_RX_CONFIG( );
-        default:
-        {
-            return false;
-        }
-    }
-}
-
-bool RegionTxConfig( LoRaMacRegion_t region, TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir )
-{
-    switch( region )
-    {
-        AS923_TX_CONFIG( );
-        AU915_TX_CONFIG( );
-        CN470_TX_CONFIG( );
-        CN779_TX_CONFIG( );
-        EU433_TX_CONFIG( );
-        EU868_TX_CONFIG( );
-        KR920_TX_CONFIG( );
-        IN865_TX_CONFIG( );
-        US915_TX_CONFIG( );
-        RU864_TX_CONFIG( );
-        default:
-        {
-            return false;
-        }
-    }
-}
-
-uint8_t RegionLinkAdrReq( LoRaMacRegion_t region, LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed )
-{
-    switch( region )
-    {
-        AS923_LINK_ADR_REQ( );
-        AU915_LINK_ADR_REQ( );
-        CN470_LINK_ADR_REQ( );
-        CN779_LINK_ADR_REQ( );
-        EU433_LINK_ADR_REQ( );
-        EU868_LINK_ADR_REQ( );
-        KR920_LINK_ADR_REQ( );
-        IN865_LINK_ADR_REQ( );
-        US915_LINK_ADR_REQ( );
-        RU864_LINK_ADR_REQ( );
-        default:
-        {
-            return 0;
-        }
-    }
-}
-
-uint8_t RegionRxParamSetupReq( LoRaMacRegion_t region, RxParamSetupReqParams_t* rxParamSetupReq )
-{
-    switch( region )
-    {
-        AS923_RX_PARAM_SETUP_REQ( );
-        AU915_RX_PARAM_SETUP_REQ( );
-        CN470_RX_PARAM_SETUP_REQ( );
-        CN779_RX_PARAM_SETUP_REQ( );
-        EU433_RX_PARAM_SETUP_REQ( );
-        EU868_RX_PARAM_SETUP_REQ( );
-        KR920_RX_PARAM_SETUP_REQ( );
-        IN865_RX_PARAM_SETUP_REQ( );
-        US915_RX_PARAM_SETUP_REQ( );
-        RU864_RX_PARAM_SETUP_REQ( );
-        default:
-        {
-            return 0;
-        }
-    }
-}
-
-uint8_t RegionNewChannelReq( LoRaMacRegion_t region, NewChannelReqParams_t* newChannelReq )
-{
-    switch( region )
-    {
-        AS923_NEW_CHANNEL_REQ( );
-        AU915_NEW_CHANNEL_REQ( );
-        CN470_NEW_CHANNEL_REQ( );
-        CN779_NEW_CHANNEL_REQ( );
-        EU433_NEW_CHANNEL_REQ( );
-        EU868_NEW_CHANNEL_REQ( );
-        KR920_NEW_CHANNEL_REQ( );
-        IN865_NEW_CHANNEL_REQ( );
-        US915_NEW_CHANNEL_REQ( );
-        RU864_NEW_CHANNEL_REQ( );
-        default:
-        {
-            return 0;
-        }
-    }
-}
-
-int8_t RegionTxParamSetupReq( LoRaMacRegion_t region, TxParamSetupReqParams_t* txParamSetupReq )
-{
-    switch( region )
-    {
-        AS923_TX_PARAM_SETUP_REQ( );
-        AU915_TX_PARAM_SETUP_REQ( );
-        CN470_TX_PARAM_SETUP_REQ( );
-        CN779_TX_PARAM_SETUP_REQ( );
-        EU433_TX_PARAM_SETUP_REQ( );
-        EU868_TX_PARAM_SETUP_REQ( );
-        KR920_TX_PARAM_SETUP_REQ( );
-        IN865_TX_PARAM_SETUP_REQ( );
-        US915_TX_PARAM_SETUP_REQ( );
-        RU864_TX_PARAM_SETUP_REQ( );
-        default:
-        {
-            return 0;
-        }
-    }
-}
-
-uint8_t RegionDlChannelReq( LoRaMacRegion_t region, DlChannelReqParams_t* dlChannelReq )
-{
-    switch( region )
-    {
-        AS923_DL_CHANNEL_REQ( );
-        AU915_DL_CHANNEL_REQ( );
-        CN470_DL_CHANNEL_REQ( );
-        CN779_DL_CHANNEL_REQ( );
-        EU433_DL_CHANNEL_REQ( );
-        EU868_DL_CHANNEL_REQ( );
-        KR920_DL_CHANNEL_REQ( );
-        IN865_DL_CHANNEL_REQ( );
-        US915_DL_CHANNEL_REQ( );
-        RU864_DL_CHANNEL_REQ( );
-        default:
-        {
-            return 0;
-        }
-    }
-}
-
-int8_t RegionAlternateDr( LoRaMacRegion_t region, int8_t currentDr, AlternateDrType_t type )
-{
-    switch( region )
-    {
-        AS923_ALTERNATE_DR( );
-        AU915_ALTERNATE_DR( );
-        CN470_ALTERNATE_DR( );
-        CN779_ALTERNATE_DR( );
-        EU433_ALTERNATE_DR( );
-        EU868_ALTERNATE_DR( );
-        KR920_ALTERNATE_DR( );
-        IN865_ALTERNATE_DR( );
-        US915_ALTERNATE_DR( );
-        RU864_ALTERNATE_DR( );
-        default:
-        {
-            return 0;
-        }
-    }
-}
-
-void RegionCalcBackOff( LoRaMacRegion_t region, CalcBackOffParams_t* calcBackOff )
-{
-    switch( region )
-    {
-        AS923_CALC_BACKOFF( );
-        AU915_CALC_BACKOFF( );
-        CN470_CALC_BACKOFF( );
-        CN779_CALC_BACKOFF( );
-        EU433_CALC_BACKOFF( );
-        EU868_CALC_BACKOFF( );
-        KR920_CALC_BACKOFF( );
-        IN865_CALC_BACKOFF( );
-        US915_CALC_BACKOFF( );
-        RU864_CALC_BACKOFF( );
-        default:
-        {
-            break;
-        }
-    }
-}
-
-LoRaMacStatus_t RegionNextChannel( LoRaMacRegion_t region, NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff )
-{
-    switch( region )
-    {
-        AS923_NEXT_CHANNEL( );
-        AU915_NEXT_CHANNEL( );
-        CN470_NEXT_CHANNEL( );
-        CN779_NEXT_CHANNEL( );
-        EU433_NEXT_CHANNEL( );
-        EU868_NEXT_CHANNEL( );
-        KR920_NEXT_CHANNEL( );
-        IN865_NEXT_CHANNEL( );
-        US915_NEXT_CHANNEL( );
-        RU864_NEXT_CHANNEL( );
-        default:
-        {
-            return LORAMAC_STATUS_REGION_NOT_SUPPORTED;
-        }
-    }
-}
-
-LoRaMacStatus_t RegionChannelAdd( LoRaMacRegion_t region, ChannelAddParams_t* channelAdd )
-{
-    switch( region )
-    {
-        AS923_CHANNEL_ADD( );
-        AU915_CHANNEL_ADD( );
-        CN470_CHANNEL_ADD( );
-        CN779_CHANNEL_ADD( );
-        EU433_CHANNEL_ADD( );
-        EU868_CHANNEL_ADD( );
-        KR920_CHANNEL_ADD( );
-        IN865_CHANNEL_ADD( );
-        US915_CHANNEL_ADD( );
-        RU864_CHANNEL_ADD( );
-        default:
-        {
-            return LORAMAC_STATUS_PARAMETER_INVALID;
-        }
-    }
-}
-
-bool RegionChannelsRemove( LoRaMacRegion_t region, ChannelRemoveParams_t* channelRemove )
-{
-    switch( region )
-    {
-        AS923_CHANNEL_REMOVE( );
-        AU915_CHANNEL_REMOVE( );
-        CN470_CHANNEL_REMOVE( );
-        CN779_CHANNEL_REMOVE( );
-        EU433_CHANNEL_REMOVE( );
-        EU868_CHANNEL_REMOVE( );
-        KR920_CHANNEL_REMOVE( );
-        IN865_CHANNEL_REMOVE( );
-        US915_CHANNEL_REMOVE( );
-        RU864_CHANNEL_REMOVE( );
-        default:
-        {
-            return false;
-        }
-    }
-}
-
-void RegionSetContinuousWave( LoRaMacRegion_t region, ContinuousWaveParams_t* continuousWave )
-{
-    switch( region )
-    {
-        AS923_SET_CONTINUOUS_WAVE( );
-        AU915_SET_CONTINUOUS_WAVE( );
-        CN470_SET_CONTINUOUS_WAVE( );
-        CN779_SET_CONTINUOUS_WAVE( );
-        EU433_SET_CONTINUOUS_WAVE( );
-        EU868_SET_CONTINUOUS_WAVE( );
-        KR920_SET_CONTINUOUS_WAVE( );
-        IN865_SET_CONTINUOUS_WAVE( );
-        US915_SET_CONTINUOUS_WAVE( );
-        RU864_SET_CONTINUOUS_WAVE( );
-        default:
-        {
-            break;
-        }
-    }
-}
-
-uint8_t RegionApplyDrOffset( LoRaMacRegion_t region, uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset )
-{
-    switch( region )
-    {
-        AS923_APPLY_DR_OFFSET( );
-        AU915_APPLY_DR_OFFSET( );
-        CN470_APPLY_DR_OFFSET( );
-        CN779_APPLY_DR_OFFSET( );
-        EU433_APPLY_DR_OFFSET( );
-        EU868_APPLY_DR_OFFSET( );
-        KR920_APPLY_DR_OFFSET( );
-        IN865_APPLY_DR_OFFSET( );
-        US915_APPLY_DR_OFFSET( );
-        RU864_APPLY_DR_OFFSET( );
-        default:
-        {
-            return dr;
-        }
-    }
-}
-
-void RegionRxBeaconSetup( LoRaMacRegion_t region, RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr )
-{
-    switch( region )
-    {
-        AS923_RX_BEACON_SETUP( );
-        AU915_RX_BEACON_SETUP( );
-        CN470_RX_BEACON_SETUP( );
-        CN779_RX_BEACON_SETUP( );
-        EU433_RX_BEACON_SETUP( );
-        EU868_RX_BEACON_SETUP( );
-        KR920_RX_BEACON_SETUP( );
-        IN865_RX_BEACON_SETUP( );
-        US915_RX_BEACON_SETUP( );
-        RU864_RX_BEACON_SETUP( );
-        default:
-        {
-            break;
-        }
-    }
-}
-
-Version_t RegionGetVersion( void )
-{
-    Version_t version;
-
-    version.Value = REGION_VERSION;
-
-    return version;
-}
diff --git a/mac/region/Region.h b/mac/region/Region.h
deleted file mode 100644
index e80f7dd..0000000
--- a/mac/region/Region.h
+++ /dev/null
@@ -1,1714 +0,0 @@
-/*!
- * \file      Region.h
- *
- * \brief     Region implementation.
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \defgroup  REGION Region implementation
- *            This is the common API to access the specific
- *            regional implementations.
- *
- *            Preprocessor options:
- *            - LoRaWAN regions can be activated by defining the related preprocessor
- *              definition. It is possible to define more than one region.
- *              The following regions are supported:
- *              - #define REGION_AS923
- *              - #define REGION_AU915
- *              - #define REGION_CN470
- *              - #define REGION_CN779
- *              - #define REGION_EU433
- *              - #define REGION_EU868
- *              - #define REGION_KR920
- *              - #define REGION_IN865
- *              - #define REGION_US915
- *              - #define REGION_RU864
- *
- * \{
- */
-#ifndef __REGION_H__
-#define __REGION_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-#include <stdbool.h>
-#include "utilities.h"
-#include "LoRaMac.h"
-#include "timer.h"
-
-#define REGION_FUNC_LOCATION __attribute__ ((section(".ramfunc")))
-
-/*!
- * Macro to compute bit of a channel index.
- */
-#define LC( channelIndex )                          ( uint16_t )( 1 << ( channelIndex - 1 ) )
-
-#ifndef REGION_VERSION
-/*!
- * Regional parameters version definition.
- */
-#define REGION_VERSION                              0x00010003
-#endif
-
-/*!
- * Region       | SF
- * ------------ | :-----:
- * AS923        | SF12 - BW125
- * AU915        | SF10 - BW125
- * CN470        | SF12 - BW125
- * CN779        | SF12 - BW125
- * EU433        | SF12 - BW125
- * EU868        | SF12 - BW125
- * IN865        | SF12 - BW125
- * KR920        | SF12 - BW125
- * US915        | SF10 - BW125
- * RU864        | SF12 - BW125
- */
-#define DR_0                                        0
-
-/*!
- * Region       | SF
- * ------------ | :-----:
- * AS923        | SF11 - BW125
- * AU915        | SF9  - BW125
- * CN470        | SF11 - BW125
- * CN779        | SF11 - BW125
- * EU433        | SF11 - BW125
- * EU868        | SF11 - BW125
- * IN865        | SF11 - BW125
- * KR920        | SF11 - BW125
- * US915        | SF9  - BW125
- * RU864        | SF11 - BW125
- */
-#define DR_1                                        1
-
-/*!
- * Region       | SF
- * ------------ | :-----:
- * AS923        | SF10 - BW125
- * AU915        | SF8  - BW125
- * CN470        | SF10 - BW125
- * CN779        | SF10 - BW125
- * EU433        | SF10 - BW125
- * EU868        | SF10 - BW125
- * IN865        | SF10 - BW125
- * KR920        | SF10 - BW125
- * US915        | SF8  - BW125
- * RU864        | SF10 - BW125
- */
-#define DR_2                                        2
-
-/*!
- * Region       | SF
- * ------------ | :-----:
- * AS923        | SF9  - BW125
- * AU915        | SF7  - BW125
- * CN470        | SF9  - BW125
- * CN779        | SF9  - BW125
- * EU433        | SF9  - BW125
- * EU868        | SF9  - BW125
- * IN865        | SF9  - BW125
- * KR920        | SF9  - BW125
- * US915        | SF7  - BW125
- * RU864        | SF9  - BW125
- */
-#define DR_3                                        3
-
-/*!
- * Region       | SF
- * ------------ | :-----:
- * AS923        | SF8  - BW125
- * AU915        | SF8  - BW500
- * CN470        | SF8  - BW125
- * CN779        | SF8  - BW125
- * EU433        | SF8  - BW125
- * EU868        | SF8  - BW125
- * IN865        | SF8  - BW125
- * KR920        | SF8  - BW125
- * US915        | SF8  - BW500
- * RU864        | SF8  - BW125
- */
-#define DR_4                                        4
-
-/*!
- * Region       | SF
- * ------------ | :-----:
- * AS923        | SF7  - BW125
- * AU915        | RFU
- * CN470        | SF7  - BW125
- * CN779        | SF7  - BW125
- * EU433        | SF7  - BW125
- * EU868        | SF7  - BW125
- * IN865        | SF7  - BW125
- * KR920        | SF7  - BW125
- * US915        | RFU
- * RU864        | SF7  - BW125
- */
-#define DR_5                                        5
-
-/*!
- * Region       | SF
- * ------------ | :-----:
- * AS923        | SF7  - BW250
- * AU915        | RFU
- * CN470        | SF12 - BW125
- * CN779        | SF7  - BW250
- * EU433        | SF7  - BW250
- * EU868        | SF7  - BW250
- * IN865        | SF7  - BW250
- * KR920        | RFU
- * US915        | RFU
- * RU864        | SF7  - BW250
- */
-#define DR_6                                        6
-
-/*!
- * Region       | SF
- * ------------ | :-----:
- * AS923        | FSK
- * AU915        | RFU
- * CN470        | SF12 - BW125
- * CN779        | FSK
- * EU433        | FSK
- * EU868        | FSK
- * IN865        | FSK
- * KR920        | RFU
- * US915        | RFU
- * RU864        | FSK
- */
-#define DR_7                                        7
-
-/*!
- * Region       | SF
- * ------------ | :-----:
- * AS923        | RFU
- * AU915        | SF12 - BW500
- * CN470        | RFU
- * CN779        | RFU
- * EU433        | RFU
- * EU868        | RFU
- * IN865        | RFU
- * KR920        | RFU
- * US915        | SF12 - BW500
- * RU864        | RFU
- */
-#define DR_8                                        8
-
-/*!
- * Region       | SF
- * ------------ | :-----:
- * AS923        | RFU
- * AU915        | SF11 - BW500
- * CN470        | RFU
- * CN779        | RFU
- * EU433        | RFU
- * EU868        | RFU
- * IN865        | RFU
- * KR920        | RFU
- * US915        | SF11 - BW500
- * RU864        | RFU
- */
-#define DR_9                                        9
-
-/*!
- * Region       | SF
- * ------------ | :-----:
- * AS923        | RFU
- * AU915        | SF10 - BW500
- * CN470        | RFU
- * CN779        | RFU
- * EU433        | RFU
- * EU868        | RFU
- * IN865        | RFU
- * KR920        | RFU
- * US915        | SF10 - BW500
- * RU864        | RFU
- */
-#define DR_10                                       10
-
-/*!
- * Region       | SF
- * ------------ | :-----:
- * AS923        | RFU
- * AU915        | SF9  - BW500
- * CN470        | RFU
- * CN779        | RFU
- * EU433        | RFU
- * EU868        | RFU
- * IN865        | RFU
- * KR920        | RFU
- * US915        | SF9  - BW500
- * RU864        | RFU
- */
-#define DR_11                                       11
-
-/*!
- * Region       | SF
- * ------------ | :-----:
- * AS923        | RFU
- * AU915        | SF8  - BW500
- * CN470        | RFU
- * CN779        | RFU
- * EU433        | RFU
- * EU868        | RFU
- * IN865        | RFU
- * KR920        | RFU
- * US915        | SF8  - BW500
- * RU864        | RFU
- */
-#define DR_12                                       12
-
-/*!
- * Region       | SF
- * ------------ | :-----:
- * AS923        | RFU
- * AU915        | SF7  - BW500
- * CN470        | RFU
- * CN779        | RFU
- * EU433        | RFU
- * EU868        | RFU
- * IN865        | RFU
- * KR920        | RFU
- * US915        | SF7  - BW500
- * RU864        | RFU
- */
-#define DR_13                                       13
-
-/*!
- * Region       | SF
- * ------------ | :-----:
- * AS923        | RFU
- * AU915        | RFU
- * CN470        | RFU
- * CN779        | RFU
- * EU433        | RFU
- * EU868        | RFU
- * IN865        | RFU
- * KR920        | RFU
- * US915        | RFU
- * RU864        | RFU
- */
-#define DR_14                                       14
-
-/*!
- * Region       | SF
- * ------------ | :-----:
- * AS923        | RFU
- * AU915        | RFU
- * CN470        | RFU
- * CN779        | RFU
- * EU433        | RFU
- * EU868        | RFU
- * IN865        | RFU
- * KR920        | RFU
- * US915        | RFU
- * RU864        | RFU
- */
-#define DR_15                                       15
-
-
-
-/*!
- * Region       | dBM
- * ------------ | :-----:
- * AS923        | Max EIRP
- * AU915        | Max EIRP
- * CN470        | Max EIRP
- * CN779        | Max EIRP
- * EU433        | Max EIRP
- * EU868        | Max EIRP
- * IN865        | Max EIRP
- * KR920        | Max EIRP
- * US915        | Max ERP
- * RU864        | Max EIRP
- */
-#define TX_POWER_0                                  0
-
-/*!
- * Region       | dBM
- * ------------ | :-----:
- * AS923        | Max EIRP - 2
- * AU915        | Max EIRP - 2
- * CN470        | Max EIRP - 2
- * CN779        | Max EIRP - 2
- * EU433        | Max EIRP - 2
- * EU868        | Max EIRP - 2
- * IN865        | Max EIRP - 2
- * KR920        | Max EIRP - 2
- * US915        | Max ERP - 2
- * RU864        | Max EIRP - 2
- */
-#define TX_POWER_1                                  1
-
-/*!
- * Region       | dBM
- * ------------ | :-----:
- * AS923        | Max EIRP - 4
- * AU915        | Max EIRP - 4
- * CN470        | Max EIRP - 4
- * CN779        | Max EIRP - 4
- * EU433        | Max EIRP - 4
- * EU868        | Max EIRP - 4
- * IN865        | Max EIRP - 4
- * KR920        | Max EIRP - 4
- * US915        | Max ERP - 4
- * RU864        | Max EIRP - 4
- */
-#define TX_POWER_2                                  2
-
-/*!
- * Region       | dBM
- * ------------ | :-----:
- * AS923        | Max EIRP - 6
- * AU915        | Max EIRP - 6
- * CN470        | Max EIRP - 6
- * CN779        | Max EIRP - 6
- * EU433        | Max EIRP - 6
- * EU868        | Max EIRP - 6
- * IN865        | Max EIRP - 6
- * KR920        | Max EIRP - 6
- * US915        | Max ERP - 6
- * RU864        | Max EIRP - 6
- */
-#define TX_POWER_3                                  3
-
-/*!
- * Region       | dBM
- * ------------ | :-----:
- * AS923        | Max EIRP - 8
- * AU915        | Max EIRP - 8
- * CN470        | Max EIRP - 8
- * CN779        | Max EIRP - 8
- * EU433        | Max EIRP - 8
- * EU868        | Max EIRP - 8
- * IN865        | Max EIRP - 8
- * KR920        | Max EIRP - 8
- * US915        | Max ERP - 8
- * RU864        | Max EIRP - 8
- */
-#define TX_POWER_4                                  4
-
-/*!
- * Region       | dBM
- * ------------ | :-----:
- * AS923        | Max EIRP - 10
- * AU915        | Max EIRP - 10
- * CN470        | Max EIRP - 10
- * CN779        | Max EIRP - 10
- * EU433        | Max EIRP - 10
- * EU868        | Max EIRP - 10
- * IN865        | Max EIRP - 10
- * KR920        | Max EIRP - 10
- * US915        | Max ERP - 10
- * RU864        | Max EIRP - 10
- */
-#define TX_POWER_5                                  5
-
-/*!
- * Region       | dBM
- * ------------ | :-----:
- * AS923        | Max EIRP - 12
- * AU915        | Max EIRP - 12
- * CN470        | Max EIRP - 12
- * CN779        | -
- * EU433        | -
- * EU868        | Max EIRP - 12
- * IN865        | Max EIRP - 12
- * KR920        | Max EIRP - 12
- * US915        | Max ERP - 12
- * RU864        | Max EIRP - 12
- */
-#define TX_POWER_6                                  6
-
-/*!
- * Region       | dBM
- * ------------ | :-----:
- * AS923        | Max EIRP - 14
- * AU915        | Max EIRP - 14
- * CN470        | Max EIRP - 14
- * CN779        | -
- * EU433        | -
- * EU868        | Max EIRP - 14
- * IN865        | Max EIRP - 14
- * KR920        | Max EIRP - 14
- * US915        | Max ERP - 14
- * RU864        | Max EIRP - 14
- */
-#define TX_POWER_7                                  7
-
-/*!
- * Region       | dBM
- * ------------ | :-----:
- * AS923        | -
- * AU915        | Max EIRP - 16
- * CN470        | -
- * CN779        | -
- * EU433        | -
- * EU868        | -
- * IN865        | Max EIRP - 16
- * KR920        | -
- * US915        | Max ERP - 16
- * RU864        | -
- */
-#define TX_POWER_8                                  8
-
-/*!
- * Region       | dBM
- * ------------ | :-----:
- * AS923        | -
- * AU915        | Max EIRP - 18
- * CN470        | -
- * CN779        | -
- * EU433        | -
- * EU868        | -
- * IN865        | Max EIRP - 18
- * KR920        | -
- * US915        | Max ERP - 18
- * RU864        | -
- */
-#define TX_POWER_9                                  9
-
-/*!
- * Region       | dBM
- * ------------ | :-----:
- * AS923        | -
- * AU915        | Max EIRP - 20
- * CN470        | -
- * CN779        | -
- * EU433        | -
- * EU868        | -
- * IN865        | Max EIRP - 20
- * KR920        | -
- * US915        | Max ERP - 20
- * RU864        | -
- */
-#define TX_POWER_10                                 10
-
-/*!
- * Region       | dBM
- * ------------ | :-----:
- * AS923        | -
- * AU915        | Max EIRP - 22
- * CN470        | -
- * CN779        | -
- * EU433        | -
- * EU868        | -
- * IN865        | -
- * KR920        | -
- * US915        | Max ERP - 22
- * RU864        | -
- */
-#define TX_POWER_11                                 11
-
-/*!
- * Region       | dBM
- * ------------ | :-----:
- * AS923        | -
- * AU915        | Max EIRP - 24
- * CN470        | -
- * CN779        | -
- * EU433        | -
- * EU868        | -
- * IN865        | -
- * KR920        | -
- * US915        | Max ERP - 24
- * RU864        | -
- */
-#define TX_POWER_12                                 12
-
-/*!
- * Region       | dBM
- * ------------ | :-----:
- * AS923        | -
- * AU915        | Max EIRP - 26
- * CN470        | -
- * CN779        | -
- * EU433        | -
- * EU868        | -
- * IN865        | -
- * KR920        | -
- * US915        | Max ERP - 26
- * RU864        | -
- */
-#define TX_POWER_13                                 13
-
-/*!
- * Region       | dBM
- * ------------ | :-----:
- * AS923        | -
- * AU915        | Max EIRP - 28
- * CN470        | -
- * CN779        | -
- * EU433        | -
- * EU868        | -
- * IN865        | -
- * KR920        | -
- * US915        | Max ERP - 28
- * RU864        | -
- */
-#define TX_POWER_14                                 14
-
-/*!
- * RFU
- */
-#define TX_POWER_15                                 15
-
-
-
-/*!
- * Enumeration of phy attributes.
- */
-typedef enum ePhyAttribute
-{
-    /*!
-     * Frequency. It is available
-     * to perform a verification with RegionVerify().
-     */
-    PHY_FREQUENCY,
-    /*!
-     * Minimum RX datarate.
-     */
-    PHY_MIN_RX_DR,
-    /*!
-     * Minimum TX datarate.
-     */
-    PHY_MIN_TX_DR,
-    /*!
-     * Maximum RX datarate.
-     */
-    PHY_MAX_RX_DR,
-    /*!
-     * Maximum TX datarate.
-     */
-    PHY_MAX_TX_DR,
-    /*!
-     * TX datarate.
-     * This is a parameter which can't be queried. It is available
-     * to perform a verification with RegionVerify().
-     */
-    PHY_TX_DR,
-    /*!
-     * Default TX datarate.
-     */
-    PHY_DEF_TX_DR,
-    /*!
-     * RX datarate. It is available
-     * to perform a verification with RegionVerify().
-     */
-    PHY_RX_DR,
-    /*!
-     * Maximum TX power.
-     */
-    PHY_MAX_TX_POWER,
-    /*!
-     * TX power. It is available
-     * to perform a verification with RegionVerify().
-     */
-    PHY_TX_POWER,
-    /*!
-     * Default TX power.
-     */
-    PHY_DEF_TX_POWER,
-    /*!
-     * Default ADR_ACK_LIMIT value.
-     */
-    PHY_DEF_ADR_ACK_LIMIT,
-    /*!
-     * Default ADR_ACK_DELAY value.
-     */
-    PHY_DEF_ADR_ACK_DELAY,
-    /*!
-     * Maximum payload possible.
-     */
-    PHY_MAX_PAYLOAD,
-    /*!
-     * Duty cycle.
-     */
-    PHY_DUTY_CYCLE,
-    /*!
-     * Maximum receive window duration.
-     */
-    PHY_MAX_RX_WINDOW,
-    /*!
-     * Receive delay for window 1.
-     */
-    PHY_RECEIVE_DELAY1,
-    /*!
-     * Receive delay for window 2.
-     */
-    PHY_RECEIVE_DELAY2,
-    /*!
-     * Join accept delay for window 1.
-     */
-    PHY_JOIN_ACCEPT_DELAY1,
-    /*!
-     * Join accept delay for window 2.
-     */
-    PHY_JOIN_ACCEPT_DELAY2,
-    /*!
-     * Maximum frame counter gap.
-     */
-    PHY_MAX_FCNT_GAP,
-    /*!
-     * Acknowledgement time out.
-     */
-    PHY_ACK_TIMEOUT,
-    /*!
-     * Default datarate offset for window 1.
-     */
-    PHY_DEF_DR1_OFFSET,
-    /*!
-     * Default receive window 2 frequency.
-     */
-    PHY_DEF_RX2_FREQUENCY,
-    /*!
-     * Default receive window 2 datarate.
-     */
-    PHY_DEF_RX2_DR,
-    /*!
-     * Channels mask.
-     */
-    PHY_CHANNELS_MASK,
-    /*!
-     * Channels default mask.
-     */
-    PHY_CHANNELS_DEFAULT_MASK,
-    /*!
-     * Maximum number of supported channels
-     */
-    PHY_MAX_NB_CHANNELS,
-    /*!
-     * Channels.
-     */
-    PHY_CHANNELS,
-    /*!
-     * Default value of the uplink dwell time.
-     */
-    PHY_DEF_UPLINK_DWELL_TIME,
-    /*!
-     * Default value of the downlink dwell time.
-     */
-    PHY_DEF_DOWNLINK_DWELL_TIME,
-    /*!
-     * Default value of the MaxEIRP.
-     */
-    PHY_DEF_MAX_EIRP,
-    /*!
-     * Default value of the antenna gain.
-     */
-    PHY_DEF_ANTENNA_GAIN,
-    /*!
-     * Next lower datarate.
-     */
-    PHY_NEXT_LOWER_TX_DR,
-    /*!
-     * Beacon interval in ms.
-     */
-    PHY_BEACON_INTERVAL,
-    /*!
-     * Beacon reserved time in ms.
-     */
-    PHY_BEACON_RESERVED,
-    /*!
-     * Beacon guard time in ms.
-     */
-    PHY_BEACON_GUARD,
-    /*!
-     * Beacon window time in ms.
-     */
-    PHY_BEACON_WINDOW,
-    /*!
-     * Beacon window time in numer of slots.
-     */
-    PHY_BEACON_WINDOW_SLOTS,
-    /*!
-     * Ping slot length time in ms.
-     */
-    PHY_PING_SLOT_WINDOW,
-    /*!
-     * Default symbol timeout for beacons and ping slot windows.
-     */
-    PHY_BEACON_SYMBOL_TO_DEFAULT,
-    /*!
-     * Maximum symbol timeout for beacons.
-     */
-    PHY_BEACON_SYMBOL_TO_EXPANSION_MAX,
-    /*!
-     * Maximum symbol timeout for ping slots.
-     */
-    PHY_PING_SLOT_SYMBOL_TO_EXPANSION_MAX,
-    /*!
-     * Symbol expansion value for beacon windows in case of beacon
-     * loss in symbols.
-     */
-    PHY_BEACON_SYMBOL_TO_EXPANSION_FACTOR,
-    /*!
-     * Symbol expansion value for ping slot windows in case of beacon
-     * loss in symbols.
-     */
-    PHY_PING_SLOT_SYMBOL_TO_EXPANSION_FACTOR,
-    /*!
-     * Maximum allowed beacon less time in ms.
-     */
-    PHY_MAX_BEACON_LESS_PERIOD,
-    /*!
-     * Delay time for the BeaconTimingAns in ms.
-     */
-    PHY_BEACON_DELAY_BEACON_TIMING_ANS,
-    /*!
-     * Beacon channel frequency.
-     */
-    PHY_BEACON_CHANNEL_FREQ,
-    /*!
-     * The format of the beacon.
-     */
-    PHY_BEACON_FORMAT,
-    /*!
-     * The beacon channel datarate.
-     */
-    PHY_BEACON_CHANNEL_DR,
-    /*!
-     * The frequency stepwidth between the beacon channels.
-     */
-    PHY_BEACON_CHANNEL_STEPWIDTH,
-    /*!
-     * The number of channels for the beacon reception.
-     */
-    PHY_BEACON_NB_CHANNELS,
-    /*!
-     * The datarate of a ping slot channel.
-     */
-    PHY_PING_SLOT_CHANNEL_DR
-}PhyAttribute_t;
-
-/*!
- * Enumeration of initialization types.
- */
-typedef enum eInitType
-{
-    /*!
-     * Initializes the band definitions.
-     */
-    INIT_TYPE_BANDS,
-    /*!
-     * Initializes the region specific data to defaults, according to the
-     * LoRaWAN specification.
-     */
-    INIT_TYPE_INIT,
-    /*!
-     * Restores default channels defined by the LoRaWAN specification only.
-     */
-    INIT_TYPE_RESTORE_DEFAULT_CHANNELS,
-    /*!
-     * Restores internal context from passed pointer.
-     */
-    INIT_TYPE_RESTORE_CTX
-}InitType_t;
-
-typedef enum eChannelsMask
-{
-    /*!
-     * The channels mask.
-     */
-    CHANNELS_MASK,
-    /*!
-     * The channels default mask.
-     */
-    CHANNELS_DEFAULT_MASK
-}ChannelsMask_t;
-
-/*!
- * Structure containing the beacon format
- */
-typedef struct sBeaconFormat
-{
-    /*!
-     * Size of the beacon
-     */
-    uint8_t BeaconSize;
-    /*!
-     * Size of the RFU 1 data field
-     */
-    uint8_t Rfu1Size;
-    /*!
-     * Size of the RFU 2 data field
-     */
-    uint8_t Rfu2Size;
-}BeaconFormat_t;
-
-/*!
- * Union for the structure uGetPhyParams
- */
-typedef union uPhyParam
-{
-    /*!
-     * A parameter value.
-     */
-    uint32_t Value;
-    /*!
-     * A floating point value.
-     */
-    float fValue;
-    /*!
-     * Pointer to the channels mask.
-     */
-    uint16_t* ChannelsMask;
-    /*!
-     * Pointer to the channels.
-     */
-    ChannelParams_t* Channels;
-    /*!
-     * Beacon format
-     */
-    BeaconFormat_t BeaconFormat;
-}PhyParam_t;
-
-/*!
- * Parameter structure for the function RegionGetPhyParam.
- */
-typedef struct sGetPhyParams
-{
-    /*!
-     * Setup the parameter to get.
-     */
-    PhyAttribute_t Attribute;
-    /*!
-     * Datarate.
-     * The parameter is needed for the following queries:
-     * PHY_MAX_PAYLOAD, PHY_NEXT_LOWER_TX_DR.
-     */
-    int8_t Datarate;
-    /*!
-     * Uplink dwell time. This parameter must be set to query:
-     * PHY_MAX_PAYLOAD, PHY_MIN_TX_DR.
-     * The parameter is needed for the following queries:
-     * PHY_MIN_TX_DR, PHY_MAX_PAYLOAD, PHY_NEXT_LOWER_TX_DR.
-     */
-    uint8_t UplinkDwellTime;
-    /*!
-     * Downlink dwell time. This parameter must be set to query:
-     * PHY_MAX_PAYLOAD, PHY_MIN_RX_DR.
-     * The parameter is needed for the following queries:
-     * PHY_MIN_RX_DR, PHY_MAX_PAYLOAD.
-     */
-    uint8_t DownlinkDwellTime;
-}GetPhyParams_t;
-
-/*!
- * Parameter structure for the function RegionSetBandTxDone.
- */
-typedef struct sSetBandTxDoneParams
-{
-    /*!
-     * Channel to update.
-     */
-    uint8_t Channel;
-    /*!
-     * Joined Set to true, if the node has joined the network
-     */
-    bool Joined;
-    /*!
-     * Last TX done time.
-     */
-    TimerTime_t LastTxDoneTime;
-}SetBandTxDoneParams_t;
-
-/*!
- * Parameter structure for the function RegionInitDefaults.
- */
-typedef struct sInitDefaultsParams
-{
-    /*!
-     * Pointer to region module context to be restored.
-     */
-    void* NvmCtx;
-    /*!
-     * Sets the initialization type.
-     */
-     InitType_t Type;
-}InitDefaultsParams_t;
-
-/*!
- * Parameter structure for the function RegionGetNvmCtx.
- */
-typedef struct sGetNvmCtxParams
-{
-    /*!
-     * Size of module context.
-     */
-     size_t nvmCtxSize;
-}GetNvmCtxParams_t;
-
-
-/*!
- * Parameter structure for the function RegionVerify.
- */
-typedef union uVerifyParams
-{
-    /*!
-     * Channel frequency to verify
-     */
-    uint32_t Frequency;
-    /*!
-     * TX power to verify.
-     */
-    int8_t TxPower;
-    /*!
-     * Set to true, if the duty cycle is enabled, otherwise false.
-     */
-    bool DutyCycle;
-    /*!
-     * Datarate to verify.
-     */
-    struct sDatarateParams
-    {
-        /*!
-        * Datarate to verify.
-        */
-        int8_t Datarate;
-        /*!
-        * The downlink dwell time.
-        */
-        uint8_t DownlinkDwellTime;
-        /*!
-        * The up link dwell time.
-        */
-        uint8_t UplinkDwellTime;
-    }DatarateParams;
-}VerifyParams_t;
-
-/*!
- * Parameter structure for the function RegionApplyCFList.
- */
-typedef struct sApplyCFListParams
-{
-    /*!
-     * Payload which contains the CF list.
-     */
-    uint8_t* Payload;
-    /*!
-     * Size of the payload.
-     */
-    uint8_t Size;
-}ApplyCFListParams_t;
-
-/*!
- * Parameter structure for the function RegionChanMaskSet.
- */
-typedef struct sChanMaskSetParams
-{
-    /*!
-     * Pointer to the channels mask which should be set.
-     */
-    uint16_t* ChannelsMaskIn;
-    /*!
-     * Pointer to the channels mask which should be set.
-     */
-    ChannelsMask_t ChannelsMaskType;
-}ChanMaskSetParams_t;
-
-/*!
- * Parameter structure for the function RegionRxConfig.
- */
-typedef struct sRxConfigParams
-{
-    /*!
-     * The RX channel.
-     */
-    uint8_t Channel;
-    /*!
-     * RX datarate.
-     */
-    int8_t Datarate;
-    /*!
-     * RX bandwidth.
-     */
-    uint8_t Bandwidth;
-    /*!
-     * RX datarate offset.
-     */
-    int8_t DrOffset;
-    /*!
-     * RX frequency.
-     */
-    uint32_t Frequency;
-    /*!
-     * RX window timeout
-     */
-     uint32_t WindowTimeout;
-    /*!
-     * RX window offset
-     */
-    int32_t WindowOffset;
-    /*!
-     * Downlink dwell time.
-     */
-    uint8_t DownlinkDwellTime;
-    /*!
-     * Set to true, if RX should be continuous.
-     */
-    bool RxContinuous;
-    /*!
-     * Sets the RX window.
-     */
-    LoRaMacRxSlot_t RxSlot;
-}RxConfigParams_t;
-
-/*!
- * Parameter structure for the function RegionTxConfig.
- */
-typedef struct sTxConfigParams
-{
-    /*!
-     * The TX channel.
-     */
-    uint8_t Channel;
-    /*!
-     * The TX datarate.
-     */
-    int8_t Datarate;
-    /*!
-     * The TX power.
-     */
-    int8_t TxPower;
-    /*!
-     * The Max EIRP, if applicable.
-     */
-    float MaxEirp;
-    /*!
-     * The antenna gain, if applicable.
-     */
-    float AntennaGain;
-    /*!
-     * Frame length to setup.
-     */
-    uint16_t PktLen;
-}TxConfigParams_t;
-
-/*!
- * Parameter structure for the function RegionLinkAdrReq.
- */
-typedef struct sLinkAdrReqParams
-{
-    /*!
-     * Current LoRaWAN Version
-     */
-    Version_t Version;
-    /*!
-     * Pointer to the payload which contains the MAC commands.
-     */
-    uint8_t* Payload;
-    /*!
-     * Size of the payload.
-     */
-    uint8_t PayloadSize;
-    /*!
-     * Uplink dwell time.
-     */
-    uint8_t UplinkDwellTime;
-    /*!
-     * Set to true, if ADR is enabled.
-     */
-    bool AdrEnabled;
-    /*!
-     * The current datarate.
-     */
-    int8_t CurrentDatarate;
-    /*!
-     * The current TX power.
-     */
-    int8_t CurrentTxPower;
-    /*!
-     * The current number of repetitions.
-     */
-    uint8_t CurrentNbRep;
-}LinkAdrReqParams_t;
-
-/*!
- * Parameter structure for the function RegionRxParamSetupReq.
- */
-typedef struct sRxParamSetupReqParams
-{
-    /*!
-     * The datarate to setup.
-     */
-    int8_t Datarate;
-    /*!
-     * Datarate offset.
-     */
-    int8_t DrOffset;
-    /*!
-     * The frequency to setup.
-     */
-    uint32_t Frequency;
-}RxParamSetupReqParams_t;
-
-/*!
- * Parameter structure for the function RegionNewChannelReq.
- */
-typedef struct sNewChannelReqParams
-{
-    /*!
-     * Pointer to the new channels.
-     */
-    ChannelParams_t* NewChannel;
-    /*!
-     * Channel id.
-     */
-    int8_t ChannelId;
-}NewChannelReqParams_t;
-
-/*!
- * Parameter structure for the function RegionTxParamSetupReq.
- */
-typedef struct sTxParamSetupReqParams
-{
-    /*!
-     * Uplink dwell time.
-     */
-    uint8_t UplinkDwellTime;
-    /*!
-     * Downlink dwell time.
-     */
-    uint8_t DownlinkDwellTime;
-    /*!
-     * Max EIRP.
-     */
-    uint8_t MaxEirp;
-}TxParamSetupReqParams_t;
-
-/*!
- * Parameter structure for the function RegionDlChannelReq.
- */
-typedef struct sDlChannelReqParams
-{
-    /*!
-     * Channel Id to add the frequency.
-     */
-    uint8_t ChannelId;
-    /*!
-     * Alternative frequency for the Rx1 window.
-     */
-    uint32_t Rx1Frequency;
-}DlChannelReqParams_t;
-
-/*!
- * Enumeration of alternation type
- */
-typedef enum eAlternateDrType
-{
-    /*!
-     * Type to use for an alternation
-     */
-    ALTERNATE_DR,
-    /*!
-     * Type to use to restore one alternation
-     */
-    ALTERNATE_DR_RESTORE
-}AlternateDrType_t;
-
-/*!
- * Parameter structure for the function RegionCalcBackOff.
- */
-typedef struct sCalcBackOffParams
-{
-    /*!
-     * Set to true, if the node has already joined a network, otherwise false.
-     */
-    bool Joined;
-    /*!
-     * Joined Set to true, if the last uplink was a join request
-     */
-    bool LastTxIsJoinRequest;
-    /*!
-     * Set to true, if the duty cycle is enabled, otherwise false.
-     */
-    bool DutyCycleEnabled;
-    /*!
-     * Current channel index.
-     */
-    uint8_t Channel;
-    /*!
-     * Elapsed time since the start of the node.
-     */
-    SysTime_t ElapsedTime;
-    /*!
-     * Time-on-air of the last transmission.
-     */
-    TimerTime_t TxTimeOnAir;
-}CalcBackOffParams_t;
-
-/*!
- * Parameter structure for the function RegionNextChannel.
- */
-typedef struct sNextChanParams
-{
-    /*!
-     * Aggregated time-off time.
-     */
-    TimerTime_t AggrTimeOff;
-    /*!
-     * Time of the last aggregated TX.
-     */
-    TimerTime_t LastAggrTx;
-    /*!
-     * Current datarate.
-     */
-    int8_t Datarate;
-    /*!
-     * Set to true, if the node has already joined a network, otherwise false.
-     */
-    bool Joined;
-    /*!
-     * Set to true, if the duty cycle is enabled, otherwise false.
-     */
-    bool DutyCycleEnabled;
-    /*!
-     * Set to true, if the function shall only provide the time
-     * for the next transmission.
-     */
-    bool QueryNextTxDelayOnly;
-}NextChanParams_t;
-
-/*!
- * Parameter structure for the function RegionChannelsAdd.
- */
-typedef struct sChannelAddParams
-{
-    /*!
-     * Pointer to the new channel to add.
-     */
-    ChannelParams_t* NewChannel;
-    /*!
-     * Channel id to add.
-     */
-    uint8_t ChannelId;
-}ChannelAddParams_t;
-
-/*!
- * Parameter structure for the function RegionChannelsRemove.
- */
-typedef struct sChannelRemoveParams
-{
-    /*!
-     * Channel id to remove.
-     */
-    uint8_t ChannelId;
-}ChannelRemoveParams_t;
-
-/*!
- * Parameter structure for the function RegionContinuousWave.
- */
-typedef struct sContinuousWaveParams
-{
-    /*!
-     * Current channel index.
-     */
-    uint8_t Channel;
-    /*!
-     * Datarate. Used to limit the TX power.
-     */
-    int8_t Datarate;
-    /*!
-     * The TX power to setup.
-     */
-    int8_t TxPower;
-    /*!
-     * Max EIRP, if applicable.
-     */
-    float MaxEirp;
-    /*!
-     * The antenna gain, if applicable.
-     */
-    float AntennaGain;
-    /*!
-     * Specifies the time the radio will stay in CW mode.
-     */
-    uint16_t Timeout;
-}ContinuousWaveParams_t;
-
-/*!
- * Parameter structure for the function RegionRxBeaconSetup
- */
-typedef struct sRxBeaconSetupParams
-{
-    /*!
-     * Symbol timeout.
-     */
-    uint16_t SymbolTimeout;
-    /*!
-     * Receive time.
-     */
-    uint32_t RxTime;
-    /*!
-     * The frequency to setup.
-     */
-    uint32_t Frequency;
-}RxBeaconSetup_t;
-
-
-
-/*!
- * \brief The function verifies if a region is active or not. If a region
- *        is not active, it cannot be used.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \retval Return true, if the region is supported.
- */
-bool RegionIsActive( LoRaMacRegion_t region );
-
-/*!
- * \brief The function gets a value of a specific phy attribute.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [IN] getPhy Pointer to the function parameters.
- *
- * \retval Returns a structure containing the PHY parameter.
- */
-PhyParam_t RegionGetPhyParam( LoRaMacRegion_t region, GetPhyParams_t* getPhy );
-
-/*!
- * \brief Updates the last TX done parameters of the current channel.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [IN] txDone Pointer to the function parameters.
- */
-void RegionSetBandTxDone( LoRaMacRegion_t region, SetBandTxDoneParams_t* txDone );
-
-/*!
- * \brief Initializes the channels masks and the channels.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [IN] params Pointer to the function parameters.
- */
-void RegionInitDefaults( LoRaMacRegion_t region, InitDefaultsParams_t* params );
-
-/*!
- * \brief Returns a pointer to the internal context and its size.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [IN] params Pointer to the function parameters.
- *
- * \retval     Points to a structure where the module store its non-volatile context.
- */
-void* RegionGetNvmCtx( LoRaMacRegion_t region, GetNvmCtxParams_t* params );
-
-/*!
- * \brief Verifies a parameter.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [IN] verify Pointer to the function parameters.
- *
- * \param [IN] type Sets the initialization type.
- *
- * \retval Returns true, if the parameter is valid.
- */
-bool RegionVerify( LoRaMacRegion_t region, VerifyParams_t* verify, PhyAttribute_t phyAttribute );
-
-/*!
- * \brief The function parses the input buffer and sets up the channels of the
- *        CF list.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [IN] applyCFList Pointer to the function parameters.
- */
-void RegionApplyCFList( LoRaMacRegion_t region, ApplyCFListParams_t* applyCFList );
-
-/*!
- * \brief Sets a channels mask.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [IN] chanMaskSet Pointer to the function parameters.
- *
- * \retval Returns true, if the channels mask could be set.
- */
-bool RegionChanMaskSet( LoRaMacRegion_t region, ChanMaskSetParams_t* chanMaskSet );
-
-/*!
- * \brief Configuration of the RX windows.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [IN] rxConfig Pointer to the function parameters.
- *
- * \param [OUT] datarate The datarate index which was set.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionRxConfig( LoRaMacRegion_t region, RxConfigParams_t* rxConfig, int8_t* datarate ) REGION_FUNC_LOCATION;
-
-/*
- * Rx window precise timing
- *
- * For more details please consult the following document, chapter 3.1.2.
- * https://www.semtech.com/uploads/documents/SX1272_settings_for_LoRaWAN_v2.0.pdf
- * or
- * https://www.semtech.com/uploads/documents/SX1276_settings_for_LoRaWAN_v2.0.pdf
- *
- *                 Downlink start: T = Tx + 1s (+/- 20 us)
- *                            |
- *             TRxEarly       |        TRxLate
- *                |           |           |
- *                |           |           +---+---+---+---+---+---+---+---+
- *                |           |           |       Latest Rx window        |
- *                |           |           +---+---+---+---+---+---+---+---+
- *                |           |           |
- *                +---+---+---+---+---+---+---+---+
- *                |       Earliest Rx window      |
- *                +---+---+---+---+---+---+---+---+
- *                            |
- *                            +---+---+---+---+---+---+---+---+
- *Downlink preamble 8 symbols |   |   |   |   |   |   |   |   |
- *                            +---+---+---+---+---+---+---+---+
- *
- *                     Worst case Rx window timings
- *
- * TRxLate  = DEFAULT_MIN_RX_SYMBOLS * tSymbol - RADIO_WAKEUP_TIME
- * TRxEarly = 8 - DEFAULT_MIN_RX_SYMBOLS * tSymbol - RxWindowTimeout - RADIO_WAKEUP_TIME
- *
- * TRxLate - TRxEarly = 2 * DEFAULT_SYSTEM_MAX_RX_ERROR
- *
- * RxOffset = ( TRxLate + TRxEarly ) / 2
- *
- * RxWindowTimeout = ( 2 * DEFAULT_MIN_RX_SYMBOLS - 8 ) * tSymbol + 2 * DEFAULT_SYSTEM_MAX_RX_ERROR
- * RxOffset = 4 * tSymbol - RxWindowTimeout / 2 - RADIO_WAKE_UP_TIME
- *
- * Minimal value of RxWindowTimeout must be 5 symbols which implies that the system always tolerates at least an error of 1.5 * tSymbol
- */
-/*!
- * Computes the Rx window timeout and offset.
- *
- * \param [IN] region       LoRaWAN region.
- *
- * \param [IN] datarate     Rx window datarate index to be used
- *
- * \param [IN] minRxSymbols Minimum required number of symbols to detect an Rx frame.
- *
- * \param [IN] rxError      System maximum timing error of the receiver. In milliseconds
- *                          The receiver will turn on in a [-rxError : +rxError] ms
- *                          interval around RxOffset
- *
- * \param [OUT]rxConfigParams Returns updated WindowTimeout and WindowOffset fields.
- */
-void RegionComputeRxWindowParameters( LoRaMacRegion_t region, int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams );
-
-/*!
- * \brief TX configuration.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [IN] txConfig Pointer to the function parameters.
- *
- * \param [OUT] txPower The tx power index which was set.
- *
- * \param [OUT] txTimeOnAir The time-on-air of the frame.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionTxConfig( LoRaMacRegion_t region, TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir );
-
-/*!
- * \brief The function processes a Link ADR Request.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [IN] linkAdrReq Pointer to the function parameters.
- *
- * \param [OUT] drOut The datarate which was applied.
- *
- * \param [OUT] txPowOut The TX power which was applied.
- *
- * \param [OUT] nbRepOut The number of repetitions to apply.
- *
- * \param [OUT] nbBytesParsed The number bytes which were parsed.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionLinkAdrReq( LoRaMacRegion_t region, LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed );
-
-/*!
- * \brief The function processes a RX Parameter Setup Request.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [IN] rxParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionRxParamSetupReq( LoRaMacRegion_t region, RxParamSetupReqParams_t* rxParamSetupReq );
-
-/*!
- * \brief The function processes a New Channel Request.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [IN] newChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionNewChannelReq( LoRaMacRegion_t region, NewChannelReqParams_t* newChannelReq );
-
-/*!
- * \brief The function processes a TX ParamSetup Request.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [IN] txParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- *         Returns -1, if the functionality is not implemented. In this case, the end node
- *         shall ignore the command.
- */
-int8_t RegionTxParamSetupReq( LoRaMacRegion_t region, TxParamSetupReqParams_t* txParamSetupReq );
-
-/*!
- * \brief The function processes a DlChannel Request.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [IN] dlChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionDlChannelReq( LoRaMacRegion_t region, DlChannelReqParams_t* dlChannelReq );
-
-/*!
- * \brief Alternates the datarate of the channel for the join request.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [IN] currentDr Current datarate.
- *
- * \param [IN] type Alternation type.
- *
- * \retval Datarate to apply.
- */
-int8_t RegionAlternateDr( LoRaMacRegion_t region, int8_t currentDr, AlternateDrType_t type );
-
-/*!
- * \brief Calculates the back-off time.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [IN] calcBackOff Pointer to the function parameters.
- */
-void RegionCalcBackOff( LoRaMacRegion_t region, CalcBackOffParams_t* calcBackOff );
-
-/*!
- * \brief Searches and set the next random available channel
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [OUT] channel Next channel to use for TX.
- *
- * \param [OUT] time Time to wait for the next transmission according to the duty
- *              cycle.
- *
- * \param [OUT] aggregatedTimeOff Updates the aggregated time off.
- *
- * \retval Function status [1: OK, 0: Unable to find a channel on the current datarate].
- */
-LoRaMacStatus_t RegionNextChannel( LoRaMacRegion_t region, NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff );
-
-/*!
- * \brief Adds a channel.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [IN] channelAdd Pointer to the function parameters.
- *
- * \retval Status of the operation.
- */
-LoRaMacStatus_t RegionChannelAdd( LoRaMacRegion_t region, ChannelAddParams_t* channelAdd );
-
-/*!
- * \brief Removes a channel.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [IN] channelRemove Pointer to the function parameters.
- *
- * \retval Returns true, if the channel was removed successfully.
- */
-bool RegionChannelsRemove( LoRaMacRegion_t region, ChannelRemoveParams_t* channelRemove );
-
-/*!
- * \brief Sets the radio into continuous wave mode.
- *
- * \param [IN] region LoRaWAN region.
- *
- * \param [IN] continuousWave Pointer to the function parameters.
- */
-void RegionSetContinuousWave( LoRaMacRegion_t region, ContinuousWaveParams_t* continuousWave );
-
-/*!
- * \brief Computes new datarate according to the given offset
- *
- * \param [IN] downlinkDwellTime Downlink dwell time configuration. 0: No limit, 1: 400ms
- *
- * \param [IN] dr Current datarate
- *
- * \param [IN] drOffset Offset to be applied
- *
- * \retval newDr Computed datarate.
- */
-uint8_t RegionApplyDrOffset( LoRaMacRegion_t region, uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset );
-
-/*!
- * \brief Sets the radio into beacon reception mode
- *
- * \param [IN] rxBeaconSetup Pointer to the function parameters
- *
- * \param [out] outDr Datarate used to receive the beacon
- */
-void RegionRxBeaconSetup( LoRaMacRegion_t region, RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr );
-
-/*!
- * \brief Gets the version of the regional parameters implementation.
- *
- * \retval Version of the regional parameters.
- */
-Version_t RegionGetVersion( void );
-
-/*! \} defgroup REGION */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __REGION_H__
diff --git a/mac/region/RegionAS923.c b/mac/region/RegionAS923.c
deleted file mode 100644
index 4bd1ad0..0000000
--- a/mac/region/RegionAS923.c
+++ /dev/null
@@ -1,1039 +0,0 @@
-/*!
- * \file      RegionAS923.c
- *
- * \brief     Region implementation for AS923
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
-*/
-#include "utilities.h"
-
-#include "RegionCommon.h"
-#include "RegionAS923.h"
-
-// Definitions
-#define CHANNELS_MASK_SIZE              1
-
-/*!
- * Region specific context
- */
-typedef struct sRegionAS923NvmCtx
-{
-    /*!
-     * LoRaMAC channels
-     */
-    ChannelParams_t Channels[ AS923_MAX_NB_CHANNELS ];
-    /*!
-     * LoRaMac bands
-     */
-    Band_t Bands[ AS923_MAX_NB_BANDS ];
-    /*!
-     * LoRaMac channels mask
-     */
-    uint16_t ChannelsMask[ CHANNELS_MASK_SIZE ];
-    /*!
-     * LoRaMac channels default mask
-     */
-    uint16_t ChannelsDefaultMask[ CHANNELS_MASK_SIZE ];
-}RegionAS923NvmCtx_t;
-
-/*
- * Non-volatile module context.
- */
-static RegionAS923NvmCtx_t NvmCtx;
-
-// Static functions
-static int8_t GetNextLowerTxDr( int8_t dr, int8_t minDr )
-{
-    uint8_t nextLowerDr = 0;
-
-    if( dr == minDr )
-    {
-        nextLowerDr = minDr;
-    }
-    else
-    {
-        nextLowerDr = dr - 1;
-    }
-    return nextLowerDr;
-}
-
-static uint32_t GetBandwidth( uint32_t drIndex )
-{
-    switch( BandwidthsAS923[drIndex] )
-    {
-        default:
-        case 125000:
-            return 0;
-        case 250000:
-            return 1;
-        case 500000:
-            return 2;
-    }
-}
-
-static int8_t LimitTxPower( int8_t txPower, int8_t maxBandTxPower, int8_t datarate, uint16_t* channelsMask )
-{
-    int8_t txPowerResult = txPower;
-
-    // Limit tx power to the band max
-    txPowerResult =  MAX( txPower, maxBandTxPower );
-
-    return txPowerResult;
-}
-
-static bool VerifyRfFreq( uint32_t freq )
-{
-    // Check radio driver support
-    if( Radio.CheckRfFrequency( freq ) == false )
-    {
-        return false;
-    }
-
-    if( ( freq < 915000000 ) || ( freq > 928000000 ) )
-    {
-        return false;
-    }
-    return true;
-}
-
-PhyParam_t RegionAS923GetPhyParam( GetPhyParams_t* getPhy )
-{
-    PhyParam_t phyParam = { 0 };
-
-    switch( getPhy->Attribute )
-    {
-        case PHY_MIN_RX_DR:
-        {
-            if( getPhy->DownlinkDwellTime == 0 )
-            {
-                phyParam.Value = AS923_RX_MIN_DATARATE;
-            }
-            else
-            {
-                phyParam.Value = AS923_DWELL_LIMIT_DATARATE;
-            }
-            break;
-        }
-        case PHY_MIN_TX_DR:
-        {
-            if( getPhy->UplinkDwellTime == 0 )
-            {
-                phyParam.Value = AS923_TX_MIN_DATARATE;
-            }
-            else
-            {
-                phyParam.Value = AS923_DWELL_LIMIT_DATARATE;
-            }
-            break;
-        }
-        case PHY_DEF_TX_DR:
-        {
-            phyParam.Value = AS923_DEFAULT_DATARATE;
-            break;
-        }
-        case PHY_NEXT_LOWER_TX_DR:
-        {
-            if( getPhy->UplinkDwellTime == 0 )
-            {
-                phyParam.Value = GetNextLowerTxDr( getPhy->Datarate, AS923_TX_MIN_DATARATE );
-            }
-            else
-            {
-                phyParam.Value = GetNextLowerTxDr( getPhy->Datarate, AS923_DWELL_LIMIT_DATARATE );
-            }
-            break;
-        }
-        case PHY_MAX_TX_POWER:
-        {
-            phyParam.Value = AS923_MAX_TX_POWER;
-            break;
-        }
-        case PHY_DEF_TX_POWER:
-        {
-            phyParam.Value = AS923_DEFAULT_TX_POWER;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_LIMIT:
-        {
-            phyParam.Value = AS923_ADR_ACK_LIMIT;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_DELAY:
-        {
-            phyParam.Value = AS923_ADR_ACK_DELAY;
-            break;
-        }
-        case PHY_MAX_PAYLOAD:
-        {
-            if( getPhy->UplinkDwellTime == 0 )
-            {
-                phyParam.Value = MaxPayloadOfDatarateDwell0AS923[getPhy->Datarate];
-            }
-            else
-            {
-                phyParam.Value = MaxPayloadOfDatarateDwell1UpAS923[getPhy->Datarate];
-            }
-            break;
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            phyParam.Value = AS923_DUTY_CYCLE_ENABLED;
-            break;
-        }
-        case PHY_MAX_RX_WINDOW:
-        {
-            phyParam.Value = AS923_MAX_RX_WINDOW;
-            break;
-        }
-        case PHY_RECEIVE_DELAY1:
-        {
-            phyParam.Value = AS923_RECEIVE_DELAY1;
-            break;
-        }
-        case PHY_RECEIVE_DELAY2:
-        {
-            phyParam.Value = AS923_RECEIVE_DELAY2;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY1:
-        {
-            phyParam.Value = AS923_JOIN_ACCEPT_DELAY1;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY2:
-        {
-            phyParam.Value = AS923_JOIN_ACCEPT_DELAY2;
-            break;
-        }
-        case PHY_MAX_FCNT_GAP:
-        {
-            phyParam.Value = AS923_MAX_FCNT_GAP;
-            break;
-        }
-        case PHY_ACK_TIMEOUT:
-        {
-            phyParam.Value = ( AS923_ACKTIMEOUT + randr( -AS923_ACK_TIMEOUT_RND, AS923_ACK_TIMEOUT_RND ) );
-            break;
-        }
-        case PHY_DEF_DR1_OFFSET:
-        {
-            phyParam.Value = AS923_DEFAULT_RX1_DR_OFFSET;
-            break;
-        }
-        case PHY_DEF_RX2_FREQUENCY:
-        {
-            phyParam.Value = AS923_RX_WND_2_FREQ;
-            break;
-        }
-        case PHY_DEF_RX2_DR:
-        {
-            phyParam.Value = AS923_RX_WND_2_DR;
-            break;
-        }
-        case PHY_CHANNELS_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsMask;
-            break;
-        }
-        case PHY_CHANNELS_DEFAULT_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsDefaultMask;
-            break;
-        }
-        case PHY_MAX_NB_CHANNELS:
-        {
-            phyParam.Value = AS923_MAX_NB_CHANNELS;
-            break;
-        }
-        case PHY_CHANNELS:
-        {
-            phyParam.Channels = NvmCtx.Channels;
-            break;
-        }
-        case PHY_DEF_UPLINK_DWELL_TIME:
-        {
-            phyParam.Value = AS923_DEFAULT_UPLINK_DWELL_TIME;
-            break;
-        }
-        case PHY_DEF_DOWNLINK_DWELL_TIME:
-        {
-            phyParam.Value = AS923_DEFAULT_DOWNLINK_DWELL_TIME;
-            break;
-        }
-        case PHY_DEF_MAX_EIRP:
-        {
-            phyParam.fValue = AS923_DEFAULT_MAX_EIRP;
-            break;
-        }
-        case PHY_DEF_ANTENNA_GAIN:
-        {
-            phyParam.fValue = AS923_DEFAULT_ANTENNA_GAIN;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_FREQ:
-        {
-            phyParam.Value = AS923_BEACON_CHANNEL_FREQ;
-            break;
-        }
-        case PHY_BEACON_FORMAT:
-        {
-            phyParam.BeaconFormat.BeaconSize = AS923_BEACON_SIZE;
-            phyParam.BeaconFormat.Rfu1Size = AS923_RFU1_SIZE;
-            phyParam.BeaconFormat.Rfu2Size = AS923_RFU2_SIZE;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_DR:
-        {
-            phyParam.Value = AS923_BEACON_CHANNEL_DR;
-            break;
-        }
-        case PHY_PING_SLOT_CHANNEL_DR:
-        {
-            phyParam.Value = AS923_PING_SLOT_CHANNEL_DR;
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-
-    return phyParam;
-}
-
-void RegionAS923SetBandTxDone( SetBandTxDoneParams_t* txDone )
-{
-    RegionCommonSetBandTxDone( txDone->Joined, &NvmCtx.Bands[NvmCtx.Channels[txDone->Channel].Band], txDone->LastTxDoneTime );
-}
-
-void RegionAS923InitDefaults( InitDefaultsParams_t* params )
-{
-    Band_t bands[AS923_MAX_NB_BANDS] =
-    {
-        AS923_BAND0
-    };
-
-    switch( params->Type )
-    {
-        case INIT_TYPE_BANDS:
-        {
-            // Initialize bands
-            memcpy1( ( uint8_t* )NvmCtx.Bands, ( uint8_t* )bands, sizeof( Band_t ) * AS923_MAX_NB_BANDS );
-            break;
-        }
-        case INIT_TYPE_INIT:
-        {
-            // Channels
-            NvmCtx.Channels[0] = ( ChannelParams_t ) AS923_LC1;
-            NvmCtx.Channels[1] = ( ChannelParams_t ) AS923_LC2;
-
-            // Initialize the channels default mask
-            NvmCtx.ChannelsDefaultMask[0] = LC( 1 ) + LC( 2 );
-
-            // Update the channels mask
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, NvmCtx.ChannelsDefaultMask, 1 );
-            break;
-        }
-        case INIT_TYPE_RESTORE_CTX:
-        {
-            if( params->NvmCtx != 0 )
-            {
-                memcpy1( (uint8_t*) &NvmCtx, (uint8_t*) params->NvmCtx, sizeof( NvmCtx ) );
-            }
-            break;
-        }
-        case INIT_TYPE_RESTORE_DEFAULT_CHANNELS:
-        {
-            // Restore channels default mask
-            NvmCtx.ChannelsMask[0] |= NvmCtx.ChannelsDefaultMask[0];
-
-            // Channels
-            NvmCtx.Channels[0] = ( ChannelParams_t ) AS923_LC1;
-            NvmCtx.Channels[1] = ( ChannelParams_t ) AS923_LC2;
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-}
-
-void* RegionAS923GetNvmCtx( GetNvmCtxParams_t* params )
-{
-    params->nvmCtxSize = sizeof( RegionAS923NvmCtx_t );
-    return &NvmCtx;
-}
-
-bool RegionAS923Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute )
-{
-    switch( phyAttribute )
-    {
-        case PHY_FREQUENCY:
-        {
-            return VerifyRfFreq( verify->Frequency );
-        }
-        case PHY_TX_DR:
-        {
-            if( verify->DatarateParams.UplinkDwellTime == 0 )
-            {
-                return RegionCommonValueInRange( verify->DatarateParams.Datarate, AS923_TX_MIN_DATARATE, AS923_TX_MAX_DATARATE );
-            }
-            else
-            {
-                return RegionCommonValueInRange( verify->DatarateParams.Datarate, AS923_DWELL_LIMIT_DATARATE, AS923_TX_MAX_DATARATE );
-            }
-        }
-        case PHY_DEF_TX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, DR_0, DR_5 );
-        }
-        case PHY_RX_DR:
-        {
-            if( verify->DatarateParams.DownlinkDwellTime == 0 )
-            {
-                return RegionCommonValueInRange( verify->DatarateParams.Datarate, AS923_RX_MIN_DATARATE, AS923_RX_MAX_DATARATE );
-            }
-            else
-            {
-                return RegionCommonValueInRange( verify->DatarateParams.Datarate, AS923_DWELL_LIMIT_DATARATE, AS923_RX_MAX_DATARATE );
-            }
-        }
-        case PHY_DEF_TX_POWER:
-        case PHY_TX_POWER:
-        {
-            // Remark: switched min and max!
-            return RegionCommonValueInRange( verify->TxPower, AS923_MAX_TX_POWER, AS923_MIN_TX_POWER );
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            return AS923_DUTY_CYCLE_ENABLED;
-        }
-        default:
-            return false;
-    }
-}
-
-void RegionAS923ApplyCFList( ApplyCFListParams_t* applyCFList )
-{
-    ChannelParams_t newChannel;
-    ChannelAddParams_t channelAdd;
-    ChannelRemoveParams_t channelRemove;
-
-    // Setup default datarate range
-    newChannel.DrRange.Value = ( DR_5 << 4 ) | DR_0;
-
-    // Size of the optional CF list
-    if( applyCFList->Size != 16 )
-    {
-        return;
-    }
-
-    // Last byte CFListType must be 0 to indicate the CFList contains a list of frequencies
-    if( applyCFList->Payload[15] != 0 )
-    {
-        return;
-    }
-
-    // Last byte is RFU, don't take it into account
-    for( uint8_t i = 0, chanIdx = AS923_NUMB_DEFAULT_CHANNELS; chanIdx < AS923_MAX_NB_CHANNELS; i+=3, chanIdx++ )
-    {
-        if( chanIdx < ( AS923_NUMB_CHANNELS_CF_LIST + AS923_NUMB_DEFAULT_CHANNELS ) )
-        {
-            // Channel frequency
-            newChannel.Frequency = (uint32_t) applyCFList->Payload[i];
-            newChannel.Frequency |= ( (uint32_t) applyCFList->Payload[i + 1] << 8 );
-            newChannel.Frequency |= ( (uint32_t) applyCFList->Payload[i + 2] << 16 );
-            newChannel.Frequency *= 100;
-
-            // Initialize alternative frequency to 0
-            newChannel.Rx1Frequency = 0;
-        }
-        else
-        {
-            newChannel.Frequency = 0;
-            newChannel.DrRange.Value = 0;
-            newChannel.Rx1Frequency = 0;
-        }
-
-        if( newChannel.Frequency != 0 )
-        {
-            channelAdd.NewChannel = &newChannel;
-            channelAdd.ChannelId = chanIdx;
-
-            // Try to add all channels
-            RegionAS923ChannelAdd( &channelAdd );
-        }
-        else
-        {
-            channelRemove.ChannelId = chanIdx;
-
-            RegionAS923ChannelsRemove( &channelRemove );
-        }
-    }
-}
-
-bool RegionAS923ChanMaskSet( ChanMaskSetParams_t* chanMaskSet )
-{
-    switch( chanMaskSet->ChannelsMaskType )
-    {
-        case CHANNELS_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, chanMaskSet->ChannelsMaskIn, 1 );
-            break;
-        }
-        case CHANNELS_DEFAULT_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsDefaultMask, chanMaskSet->ChannelsMaskIn, 1 );
-            break;
-        }
-        default:
-            return false;
-    }
-    return true;
-}
-
-void RegionAS923ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams )
-{
-    double tSymbol = 0.0;
-
-    // Get the datarate, perform a boundary check
-    rxConfigParams->Datarate = MIN( datarate, AS923_RX_MAX_DATARATE );
-    rxConfigParams->Bandwidth = GetBandwidth( rxConfigParams->Datarate );
-
-    if( rxConfigParams->Datarate == DR_7 )
-    { // FSK
-        tSymbol = RegionCommonComputeSymbolTimeFsk( DataratesAS923[rxConfigParams->Datarate] );
-    }
-    else
-    { // LoRa
-        tSymbol = RegionCommonComputeSymbolTimeLoRa( DataratesAS923[rxConfigParams->Datarate], BandwidthsAS923[rxConfigParams->Datarate] );
-    }
-
-    RegionCommonComputeRxWindowParameters( tSymbol, minRxSymbols, rxError, Radio.GetWakeupTime( ), &rxConfigParams->WindowTimeout, &rxConfigParams->WindowOffset );
-}
-
-bool RegionAS923RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate )
-{
-    RadioModems_t modem;
-    int8_t dr = rxConfig->Datarate;
-    int8_t phyDr = 0;
-    uint32_t frequency = rxConfig->Frequency;
-
-    if( Radio.GetStatus( ) != RF_IDLE )
-    {
-        return false;
-    }
-
-    if( rxConfig->RxSlot == RX_SLOT_WIN_1 )
-    {
-        // Apply window 1 frequency
-        frequency = NvmCtx.Channels[rxConfig->Channel].Frequency;
-        // Apply the alternative RX 1 window frequency, if it is available
-        if( NvmCtx.Channels[rxConfig->Channel].Rx1Frequency != 0 )
-        {
-            frequency = NvmCtx.Channels[rxConfig->Channel].Rx1Frequency;
-        }
-    }
-
-    // Read the physical datarate from the datarates table
-    phyDr = DataratesAS923[dr];
-
-    Radio.SetChannel( frequency );
-
-    // Radio configuration
-    if( dr == DR_7 )
-    {
-        modem = MODEM_FSK;
-        Radio.SetRxConfig( modem, 50000, phyDr * 1000, 0, 83333, 5, rxConfig->WindowTimeout, false, 0, true, 0, 0, false, rxConfig->RxContinuous );
-    }
-    else
-    {
-        modem = MODEM_LORA;
-        Radio.SetRxConfig( modem, rxConfig->Bandwidth, phyDr, 1, 0, 8, rxConfig->WindowTimeout, false, 0, false, 0, 0, true, rxConfig->RxContinuous );
-    }
-
-    Radio.SetMaxPayloadLength( modem, MaxPayloadOfDatarateDwell0AS923[dr] + LORA_MAC_FRMPAYLOAD_OVERHEAD );
-
-    *datarate = (uint8_t) dr;
-    return true;
-}
-
-bool RegionAS923TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir )
-{
-    RadioModems_t modem;
-    int8_t phyDr = DataratesAS923[txConfig->Datarate];
-    int8_t txPowerLimited = LimitTxPower( txConfig->TxPower, NvmCtx.Bands[NvmCtx.Channels[txConfig->Channel].Band].TxMaxPower, txConfig->Datarate, NvmCtx.ChannelsMask );
-    uint32_t bandwidth = GetBandwidth( txConfig->Datarate );
-    int8_t phyTxPower = 0;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, txConfig->MaxEirp, txConfig->AntennaGain );
-
-    // Setup the radio frequency
-    Radio.SetChannel( NvmCtx.Channels[txConfig->Channel].Frequency );
-
-    if( txConfig->Datarate == DR_7 )
-    { // High Speed FSK channel
-        modem = MODEM_FSK;
-        Radio.SetTxConfig( modem, phyTxPower, 25000, bandwidth, phyDr * 1000, 0, 5, false, true, 0, 0, false, 4000 );
-    }
-    else
-    {
-        modem = MODEM_LORA;
-        Radio.SetTxConfig( modem, phyTxPower, 0, bandwidth, phyDr, 1, 8, false, true, 0, 0, false, 4000 );
-    }
-
-    // Setup maximum payload lenght of the radio driver
-    Radio.SetMaxPayloadLength( modem, txConfig->PktLen );
-    // Get the time-on-air of the next tx frame
-    *txTimeOnAir = Radio.TimeOnAir( modem, txConfig->PktLen );
-
-    *txPower = txPowerLimited;
-    return true;
-}
-
-uint8_t RegionAS923LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed )
-{
-    uint8_t status = 0x07;
-    RegionCommonLinkAdrParams_t linkAdrParams;
-    uint8_t nextIndex = 0;
-    uint8_t bytesProcessed = 0;
-    uint16_t chMask = 0;
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-    RegionCommonLinkAdrReqVerifyParams_t linkAdrVerifyParams;
-
-    while( bytesProcessed < linkAdrReq->PayloadSize )
-    {
-        // Get ADR request parameters
-        nextIndex = RegionCommonParseLinkAdrReq( &( linkAdrReq->Payload[bytesProcessed] ), &linkAdrParams );
-
-        if( nextIndex == 0 )
-            break; // break loop, since no more request has been found
-
-        // Update bytes processed
-        bytesProcessed += nextIndex;
-
-        // Revert status, as we only check the last ADR request for the channel mask KO
-        status = 0x07;
-
-        // Setup temporary channels mask
-        chMask = linkAdrParams.ChMask;
-
-        // Verify channels mask
-        if( ( linkAdrParams.ChMaskCtrl == 0 ) && ( chMask == 0 ) )
-        {
-            status &= 0xFE; // Channel mask KO
-        }
-        else if( ( ( linkAdrParams.ChMaskCtrl >= 1 ) && ( linkAdrParams.ChMaskCtrl <= 5 )) ||
-                ( linkAdrParams.ChMaskCtrl >= 7 ) )
-        {
-            // RFU
-            status &= 0xFE; // Channel mask KO
-        }
-        else
-        {
-            for( uint8_t i = 0; i < AS923_MAX_NB_CHANNELS; i++ )
-            {
-                if( linkAdrParams.ChMaskCtrl == 6 )
-                {
-                    if( NvmCtx.Channels[i].Frequency != 0 )
-                    {
-                        chMask |= 1 << i;
-                    }
-                }
-                else
-                {
-                    if( ( ( chMask & ( 1 << i ) ) != 0 ) &&
-                        ( NvmCtx.Channels[i].Frequency == 0 ) )
-                    {// Trying to enable an undefined channel
-                        status &= 0xFE; // Channel mask KO
-                    }
-                }
-            }
-        }
-    }
-
-    // Get the minimum possible datarate
-    getPhy.Attribute = PHY_MIN_TX_DR;
-    getPhy.UplinkDwellTime = linkAdrReq->UplinkDwellTime;
-    phyParam = RegionAS923GetPhyParam( &getPhy );
-
-    linkAdrVerifyParams.Status = status;
-    linkAdrVerifyParams.AdrEnabled = linkAdrReq->AdrEnabled;
-    linkAdrVerifyParams.Datarate = linkAdrParams.Datarate;
-    linkAdrVerifyParams.TxPower = linkAdrParams.TxPower;
-    linkAdrVerifyParams.NbRep = linkAdrParams.NbRep;
-    linkAdrVerifyParams.CurrentDatarate = linkAdrReq->CurrentDatarate;
-    linkAdrVerifyParams.CurrentTxPower = linkAdrReq->CurrentTxPower;
-    linkAdrVerifyParams.CurrentNbRep = linkAdrReq->CurrentNbRep;
-    linkAdrVerifyParams.NbChannels = AS923_MAX_NB_CHANNELS;
-    linkAdrVerifyParams.ChannelsMask = &chMask;
-    linkAdrVerifyParams.MinDatarate = ( int8_t )phyParam.Value;
-    linkAdrVerifyParams.MaxDatarate = AS923_TX_MAX_DATARATE;
-    linkAdrVerifyParams.Channels = NvmCtx.Channels;
-    linkAdrVerifyParams.MinTxPower = AS923_MIN_TX_POWER;
-    linkAdrVerifyParams.MaxTxPower = AS923_MAX_TX_POWER;
-    linkAdrVerifyParams.Version = linkAdrReq->Version;
-
-    // Verify the parameters and update, if necessary
-    status = RegionCommonLinkAdrReqVerifyParams( &linkAdrVerifyParams, &linkAdrParams.Datarate, &linkAdrParams.TxPower, &linkAdrParams.NbRep );
-
-    // Update channelsMask if everything is correct
-    if( status == 0x07 )
-    {
-        // Set the channels mask to a default value
-        memset1( ( uint8_t* ) NvmCtx.ChannelsMask, 0, sizeof( NvmCtx.ChannelsMask ) );
-        // Update the channels mask
-        NvmCtx.ChannelsMask[0] = chMask;
-    }
-
-    // Update status variables
-    *drOut = linkAdrParams.Datarate;
-    *txPowOut = linkAdrParams.TxPower;
-    *nbRepOut = linkAdrParams.NbRep;
-    *nbBytesParsed = bytesProcessed;
-
-    return status;
-}
-
-uint8_t RegionAS923RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq )
-{
-    uint8_t status = 0x07;
-
-    // Verify radio frequency
-    if( VerifyRfFreq( rxParamSetupReq->Frequency ) == false )
-    {
-        status &= 0xFE; // Channel frequency KO
-    }
-
-    // Verify datarate
-    if( RegionCommonValueInRange( rxParamSetupReq->Datarate, AS923_RX_MIN_DATARATE, AS923_RX_MAX_DATARATE ) == false )
-    {
-        status &= 0xFD; // Datarate KO
-    }
-
-    // Verify datarate offset
-    if( RegionCommonValueInRange( rxParamSetupReq->DrOffset, AS923_MIN_RX1_DR_OFFSET, AS923_MAX_RX1_DR_OFFSET ) == false )
-    {
-        status &= 0xFB; // Rx1DrOffset range KO
-    }
-
-    return status;
-}
-
-uint8_t RegionAS923NewChannelReq( NewChannelReqParams_t* newChannelReq )
-{
-    uint8_t status = 0x03;
-    ChannelAddParams_t channelAdd;
-    ChannelRemoveParams_t channelRemove;
-
-    if( newChannelReq->NewChannel->Frequency == 0 )
-    {
-        channelRemove.ChannelId = newChannelReq->ChannelId;
-
-        // Remove
-        if( RegionAS923ChannelsRemove( &channelRemove ) == false )
-        {
-            status &= 0xFC;
-        }
-    }
-    else
-    {
-        channelAdd.NewChannel = newChannelReq->NewChannel;
-        channelAdd.ChannelId = newChannelReq->ChannelId;
-
-        switch( RegionAS923ChannelAdd( &channelAdd ) )
-        {
-            case LORAMAC_STATUS_OK:
-            {
-                break;
-            }
-            case LORAMAC_STATUS_FREQUENCY_INVALID:
-            {
-                status &= 0xFE;
-                break;
-            }
-            case LORAMAC_STATUS_DATARATE_INVALID:
-            {
-                status &= 0xFD;
-                break;
-            }
-            case LORAMAC_STATUS_FREQ_AND_DR_INVALID:
-            {
-                status &= 0xFC;
-                break;
-            }
-            default:
-            {
-                status &= 0xFC;
-                break;
-            }
-        }
-    }
-
-    return status;
-}
-
-int8_t RegionAS923TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq )
-{
-    // Accept the request
-    return 0;
-}
-
-uint8_t RegionAS923DlChannelReq( DlChannelReqParams_t* dlChannelReq )
-{
-    uint8_t status = 0x03;
-
-    // Verify if the frequency is supported
-    if( VerifyRfFreq( dlChannelReq->Rx1Frequency ) == false )
-    {
-        status &= 0xFE;
-    }
-
-    // Verify if an uplink frequency exists
-    if( NvmCtx.Channels[dlChannelReq->ChannelId].Frequency == 0 )
-    {
-        status &= 0xFD;
-    }
-
-    // Apply Rx1 frequency, if the status is OK
-    if( status == 0x03 )
-    {
-        NvmCtx.Channels[dlChannelReq->ChannelId].Rx1Frequency = dlChannelReq->Rx1Frequency;
-    }
-
-    return status;
-}
-
-int8_t RegionAS923AlternateDr( int8_t currentDr, AlternateDrType_t type )
-{
-    // Only AS923_DWELL_LIMIT_DATARATE is supported
-    return AS923_DWELL_LIMIT_DATARATE;
-}
-
-void RegionAS923CalcBackOff( CalcBackOffParams_t* calcBackOff )
-{
-    RegionCommonCalcBackOffParams_t calcBackOffParams;
-
-    calcBackOffParams.Channels = NvmCtx.Channels;
-    calcBackOffParams.Bands = NvmCtx.Bands;
-    calcBackOffParams.LastTxIsJoinRequest = calcBackOff->LastTxIsJoinRequest;
-    calcBackOffParams.Joined = calcBackOff->Joined;
-    calcBackOffParams.DutyCycleEnabled = calcBackOff->DutyCycleEnabled;
-    calcBackOffParams.Channel = calcBackOff->Channel;
-    calcBackOffParams.ElapsedTime = calcBackOff->ElapsedTime;
-    calcBackOffParams.TxTimeOnAir = calcBackOff->TxTimeOnAir;
-
-    RegionCommonCalcBackOff( &calcBackOffParams );
-}
-
-LoRaMacStatus_t RegionAS923NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff )
-{
-    uint8_t channelNext = 0;
-    uint8_t nbEnabledChannels = 0;
-    uint8_t nbRestrictedChannels = 0;
-    uint8_t enabledChannels[AS923_MAX_NB_CHANNELS] = { 0 };
-    RegionCommonIdentifyChannelsParam_t identifyChannelsParam;
-    RegionCommonCountNbOfEnabledChannelsParams_t countChannelsParams;
-    LoRaMacStatus_t status = LORAMAC_STATUS_NO_CHANNEL_FOUND;
-
-    if( RegionCommonCountChannels( NvmCtx.ChannelsMask, 0, 1 ) == 0 )
-    { // Reactivate default channels
-        NvmCtx.ChannelsMask[0] |= LC( 1 ) + LC( 2 );
-    }
-
-    // Search how many channels are enabled
-    countChannelsParams.Joined = nextChanParams->Joined;
-    countChannelsParams.Datarate = nextChanParams->Datarate;
-    countChannelsParams.ChannelsMask = NvmCtx.ChannelsMask;
-    countChannelsParams.Channels = NvmCtx.Channels;
-    countChannelsParams.Bands = NvmCtx.Bands;
-    countChannelsParams.MaxNbChannels = AS923_MAX_NB_CHANNELS;
-    countChannelsParams.JoinChannels = AS923_JOIN_CHANNELS;
-
-    identifyChannelsParam.AggrTimeOff = nextChanParams->AggrTimeOff;
-    identifyChannelsParam.LastAggrTx = nextChanParams->LastAggrTx;
-    identifyChannelsParam.DutyCycleEnabled = nextChanParams->DutyCycleEnabled;
-    identifyChannelsParam.MaxBands = AS923_MAX_NB_BANDS;
-
-    identifyChannelsParam.CountNbOfEnabledChannelsParam = &countChannelsParams;
-
-    status = RegionCommonIdentifyChannels( &identifyChannelsParam, aggregatedTimeOff, enabledChannels,
-                                           &nbEnabledChannels, &nbRestrictedChannels, time );
-
-    if( nextChanParams->QueryNextTxDelayOnly == true )
-    {
-        return status;
-    }
-
-    if( status == LORAMAC_STATUS_OK )
-    {
-        for( uint8_t  i = 0, j = randr( 0, nbEnabledChannels - 1 ); i < AS923_MAX_NB_CHANNELS; i++ )
-        {
-            channelNext = enabledChannels[j];
-            j = ( j + 1 ) % nbEnabledChannels;
-
-            // Perform carrier sense for AS923_CARRIER_SENSE_TIME
-            // If the channel is free, we can stop the LBT mechanism
-            if( Radio.IsChannelFree( MODEM_LORA, NvmCtx.Channels[channelNext].Frequency, AS923_RSSI_FREE_TH, AS923_CARRIER_SENSE_TIME ) == true )
-            {
-                // Free channel found
-                *channel = channelNext;
-                return LORAMAC_STATUS_OK;
-            }
-        }
-        // Even if one or more channels are available according to the channel plan, no free channel
-        // was found during the LBT procedure.
-        status = LORAMAC_STATUS_NO_FREE_CHANNEL_FOUND;
-    }
-    else if( status == LORAMAC_STATUS_NO_CHANNEL_FOUND )
-    {
-        // Datarate not supported by any channel, restore defaults
-        NvmCtx.ChannelsMask[0] |= LC( 1 ) + LC( 2 );
-    }
-    return status;
-}
-
-LoRaMacStatus_t RegionAS923ChannelAdd( ChannelAddParams_t* channelAdd )
-{
-    bool drInvalid = false;
-    bool freqInvalid = false;
-    uint8_t id = channelAdd->ChannelId;
-
-    if( id < AS923_NUMB_DEFAULT_CHANNELS )
-    {
-        return LORAMAC_STATUS_FREQ_AND_DR_INVALID;
-    }
-
-    if( id >= AS923_MAX_NB_CHANNELS )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-
-    // Validate the datarate range
-    if( RegionCommonValueInRange( channelAdd->NewChannel->DrRange.Fields.Min, AS923_TX_MIN_DATARATE, AS923_TX_MAX_DATARATE ) == false )
-    {
-        drInvalid = true;
-    }
-    if( RegionCommonValueInRange( channelAdd->NewChannel->DrRange.Fields.Max, AS923_TX_MIN_DATARATE, AS923_TX_MAX_DATARATE ) == false )
-    {
-        drInvalid = true;
-    }
-    if( channelAdd->NewChannel->DrRange.Fields.Min > channelAdd->NewChannel->DrRange.Fields.Max )
-    {
-        drInvalid = true;
-    }
-
-    // Check frequency
-    if( freqInvalid == false )
-    {
-        if( VerifyRfFreq( channelAdd->NewChannel->Frequency ) == false )
-        {
-            freqInvalid = true;
-        }
-    }
-
-    // Check status
-    if( ( drInvalid == true ) && ( freqInvalid == true ) )
-    {
-        return LORAMAC_STATUS_FREQ_AND_DR_INVALID;
-    }
-    if( drInvalid == true )
-    {
-        return LORAMAC_STATUS_DATARATE_INVALID;
-    }
-    if( freqInvalid == true )
-    {
-        return LORAMAC_STATUS_FREQUENCY_INVALID;
-    }
-
-    memcpy1( ( uint8_t* ) &(NvmCtx.Channels[id]), ( uint8_t* ) channelAdd->NewChannel, sizeof( NvmCtx.Channels[id] ) );
-    NvmCtx.Channels[id].Band = 0;
-    NvmCtx.ChannelsMask[0] |= ( 1 << id );
-    return LORAMAC_STATUS_OK;
-}
-
-bool RegionAS923ChannelsRemove( ChannelRemoveParams_t* channelRemove  )
-{
-    uint8_t id = channelRemove->ChannelId;
-
-    if( id < AS923_NUMB_DEFAULT_CHANNELS )
-    {
-        return false;
-    }
-
-    // Remove the channel from the list of channels
-    NvmCtx.Channels[id] = ( ChannelParams_t ){ 0, 0, { 0 }, 0 };
-
-    return RegionCommonChanDisable( NvmCtx.ChannelsMask, id, AS923_MAX_NB_CHANNELS );
-}
-
-void RegionAS923SetContinuousWave( ContinuousWaveParams_t* continuousWave )
-{
-    int8_t txPowerLimited = LimitTxPower( continuousWave->TxPower, NvmCtx.Bands[NvmCtx.Channels[continuousWave->Channel].Band].TxMaxPower, continuousWave->Datarate, NvmCtx.ChannelsMask );
-    int8_t phyTxPower = 0;
-    uint32_t frequency = NvmCtx.Channels[continuousWave->Channel].Frequency;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, continuousWave->MaxEirp, continuousWave->AntennaGain );
-
-    Radio.SetTxContinuousWave( frequency, phyTxPower, continuousWave->Timeout );
-}
-
-uint8_t RegionAS923ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset )
-{
-    // Initialize minDr for a downlink dwell time configuration of 0
-    int8_t minDr = DR_0;
-
-    // Update the minDR for a downlink dwell time configuration of 1
-    if( downlinkDwellTime == 1 )
-    {
-        minDr = AS923_DWELL_LIMIT_DATARATE;
-    }
-
-    // Apply offset formula
-    return MIN( DR_5, MAX( minDr, dr - EffectiveRx1DrOffsetAS923[drOffset] ) );
-}
-
-void RegionAS923RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr )
-{
-    RegionCommonRxBeaconSetupParams_t regionCommonRxBeaconSetup;
-
-    regionCommonRxBeaconSetup.Datarates = DataratesAS923;
-    regionCommonRxBeaconSetup.Frequency = rxBeaconSetup->Frequency;
-    regionCommonRxBeaconSetup.BeaconSize = AS923_BEACON_SIZE;
-    regionCommonRxBeaconSetup.BeaconDatarate = AS923_BEACON_CHANNEL_DR;
-    regionCommonRxBeaconSetup.BeaconChannelBW = AS923_BEACON_CHANNEL_BW;
-    regionCommonRxBeaconSetup.RxTime = rxBeaconSetup->RxTime;
-    regionCommonRxBeaconSetup.SymbolTimeout = rxBeaconSetup->SymbolTimeout;
-
-    RegionCommonRxBeaconSetup( &regionCommonRxBeaconSetup );
-
-    // Store downlink datarate
-    *outDr = AS923_BEACON_CHANNEL_DR;
-}
diff --git a/mac/region/RegionAS923.h b/mac/region/RegionAS923.h
deleted file mode 100644
index 4b0821f..0000000
--- a/mac/region/RegionAS923.h
+++ /dev/null
@@ -1,548 +0,0 @@
-/*!
- * \file      RegionAS923.h
- *
- * \brief     Region definition for AS923
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * \defgroup  REGIONAS923 Region AS923
- *            Implementation according to LoRaWAN Specification v1.0.2.
- * \{
- */
-#ifndef __REGION_AS923_H__
-#define __REGION_AS923_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include "region/Region.h"
-
-/*!
- * LoRaMac maximum number of channels
- */
-#define AS923_MAX_NB_CHANNELS                       16
-
-/*!
- * Number of default channels
- */
-#define AS923_NUMB_DEFAULT_CHANNELS                 2
-
-/*!
- * Number of channels to apply for the CF list
- */
-#define AS923_NUMB_CHANNELS_CF_LIST                 5
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define AS923_TX_MIN_DATARATE                       DR_0
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define AS923_TX_MAX_DATARATE                       DR_7
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define AS923_RX_MIN_DATARATE                       DR_0
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define AS923_RX_MAX_DATARATE                       DR_7
-
-/*!
- * Default datarate used by the node
- */
-#define AS923_DEFAULT_DATARATE                      DR_2
-
-/*!
- * The minimum datarate which is used when the
- * dwell time is limited.
- */
-#define AS923_DWELL_LIMIT_DATARATE                  DR_2
-
-/*!
- * Minimal Rx1 receive datarate offset
- */
-#define AS923_MIN_RX1_DR_OFFSET                     0
-
-/*!
- * Maximal Rx1 receive datarate offset
- */
-#define AS923_MAX_RX1_DR_OFFSET                     7
-
-/*!
- * Default Rx1 receive datarate offset
- */
-#define AS923_DEFAULT_RX1_DR_OFFSET                 0
-
-/*!
- * Minimal Tx output power that can be used by the node
- */
-#define AS923_MIN_TX_POWER                          TX_POWER_7
-
-/*!
- * Maximal Tx output power that can be used by the node
- */
-#define AS923_MAX_TX_POWER                          TX_POWER_0
-
-/*!
- * Default Tx output power used by the node
- */
-#define AS923_DEFAULT_TX_POWER                      TX_POWER_0
-
-/*!
- * Default uplink dwell time configuration
- */
-#define AS923_DEFAULT_UPLINK_DWELL_TIME             1
-
-/*!
- * Default downlink dwell time configuration
- */
-#define AS923_DEFAULT_DOWNLINK_DWELL_TIME           1
-
-/*!
- * Default Max EIRP
- */
-#define AS923_DEFAULT_MAX_EIRP                      16.0f
-
-/*!
- * Default antenna gain
- */
-#define AS923_DEFAULT_ANTENNA_GAIN                  2.15f
-
-/*!
- * ADR Ack limit
- */
-#define AS923_ADR_ACK_LIMIT                         64
-
-/*!
- * ADR Ack delay
- */
-#define AS923_ADR_ACK_DELAY                         32
-
-/*!
- * Enabled or disabled the duty cycle
- */
-#define AS923_DUTY_CYCLE_ENABLED                    0
-
-/*!
- * Maximum RX window duration
- */
-#define AS923_MAX_RX_WINDOW                         3000
-
-/*!
- * Receive delay 1
- */
-#define AS923_RECEIVE_DELAY1                        1000
-
-/*!
- * Receive delay 2
- */
-#define AS923_RECEIVE_DELAY2                        2000
-
-/*!
- * Join accept delay 1
- */
-#define AS923_JOIN_ACCEPT_DELAY1                    5000
-
-/*!
- * Join accept delay 2
- */
-#define AS923_JOIN_ACCEPT_DELAY2                    6000
-
-/*!
- * Maximum frame counter gap
- */
-#define AS923_MAX_FCNT_GAP                          16384
-
-/*!
- * Ack timeout
- */
-#define AS923_ACKTIMEOUT                            2000
-
-/*!
- * Random ack timeout limits
- */
-#define AS923_ACK_TIMEOUT_RND                       1000
-
-#if ( AS923_DEFAULT_DATARATE > DR_5 )
-#error "A default DR higher than DR_5 may lead to connectivity loss."
-#endif
-
-/*!
- * Second reception window channel frequency definition.
- */
-#define AS923_RX_WND_2_FREQ                         923200000
-
-/*!
- * Second reception window channel datarate definition.
- */
-#define AS923_RX_WND_2_DR                           DR_2
-
-/*
- * CLASS B
- */
-/*!
- * Beacon frequency
- */
-#define AS923_BEACON_CHANNEL_FREQ                   923400000
-
-/*!
- * Payload size of a beacon frame
- */
-#define AS923_BEACON_SIZE                           17
-
-/*!
- * Size of RFU 1 field
- */
-#define AS923_RFU1_SIZE                             2
-
-/*!
- * Size of RFU 2 field
- */
-#define AS923_RFU2_SIZE                             0
-
-/*!
- * Datarate of the beacon channel
- */
-#define AS923_BEACON_CHANNEL_DR                     DR_3
-
-/*!
- * Bandwith of the beacon channel
- */
-#define AS923_BEACON_CHANNEL_BW                     0
-
-/*!
- * Ping slot channel datarate
- */
-#define AS923_PING_SLOT_CHANNEL_DR                  DR_3
-
-/*!
- * Maximum number of bands
- */
-#define AS923_MAX_NB_BANDS                          1
-
-/*!
- * Band 0 definition
- * { DutyCycle, TxMaxPower, LastJoinTxDoneTime, LastTxDoneTime, TimeOff }
- */
-#define AS923_BAND0                                 { 100, AS923_MAX_TX_POWER, 0, 0, 0 } //  1.0 %
-
-/*!
- * LoRaMac default channel 1
- * Channel = { Frequency [Hz], RX1 Frequency [Hz], { ( ( DrMax << 4 ) | DrMin ) }, Band }
- */
-#define AS923_LC1                                   { 923200000, 0, { ( ( DR_5 << 4 ) | DR_0 ) }, 0 }
-
-/*!
- * LoRaMac default channel 2
- * Channel = { Frequency [Hz], RX1 Frequency [Hz], { ( ( DrMax << 4 ) | DrMin ) }, Band }
- */
-#define AS923_LC2                                   { 923400000, 0, { ( ( DR_5 << 4 ) | DR_0 ) }, 0 }
-
-/*!
- * LoRaMac channels which are allowed for the join procedure
- */
-#define AS923_JOIN_CHANNELS                         ( uint16_t )( LC( 1 ) | LC( 2 ) )
-
-/*!
- * RSSI threshold for a free channel [dBm]
- */
-#define AS923_RSSI_FREE_TH                          -85
-
-/*!
- * Specifies the time the node performs a carrier sense
- */
-#define AS923_CARRIER_SENSE_TIME                    6
-
-/*!
- * Data rates table definition
- */
-static const uint8_t DataratesAS923[]  = { 12, 11, 10,  9,  8,  7, 7, 50 };
-
-/*!
- * Bandwidths table definition in Hz
- */
-static const uint32_t BandwidthsAS923[] = { 125000, 125000, 125000, 125000, 125000, 125000, 250000, 0 };
-
-/*!
- * Maximum payload with respect to the datarate index.
- * The table is valid for the dwell time configuration of 0 for uplinks and downlinks.
- */
-static const uint8_t MaxPayloadOfDatarateDwell0AS923[] = { 51, 51, 51, 115, 242, 242, 242, 242 };
-
-/*!
- * Maximum payload with respect to the datarate index.
- * The table is only valid for uplinks.
- */
-static const uint8_t MaxPayloadOfDatarateDwell1UpAS923[] = { 0, 0, 11, 53, 125, 242, 242, 242 };
-
-/*!
- * Maximum payload with respect to the datarate index.
- * The table is only valid for downlinks.
- */
-static const uint8_t MaxPayloadOfDatarateDwell1DownAS923[] = { 0, 0, 11, 53, 126, 242, 242, 242 };
-
-/*!
- * Effective datarate offsets for receive window 1.
- */
-static const int8_t EffectiveRx1DrOffsetAS923[] = { 0, 1, 2, 3, 4, 5, -1, -2 };
-
-/*!
- * \brief The function gets a value of a specific phy attribute.
- *
- * \param [IN] getPhy Pointer to the function parameters.
- *
- * \retval Returns a structure containing the PHY parameter.
- */
-PhyParam_t RegionAS923GetPhyParam( GetPhyParams_t* getPhy );
-
-/*!
- * \brief Updates the last TX done parameters of the current channel.
- *
- * \param [IN] txDone Pointer to the function parameters.
- */
-void RegionAS923SetBandTxDone( SetBandTxDoneParams_t* txDone );
-
-/*!
- * \brief Initializes the channels masks and the channels.
- *
- * \param [IN] type Sets the initialization type.
- */
-void RegionAS923InitDefaults( InitDefaultsParams_t* params );
-
-/*!
- * \brief Returns a pointer to the internal context and its size.
- *
- * \param [OUT] params Pointer to the function parameters.
- *
- * \retval      Points to a structure where the module store its non-volatile context.
- */
-void* RegionAS923GetNvmCtx( GetNvmCtxParams_t* params );
-
-/*!
- * \brief Verifies a parameter.
- *
- * \param [IN] verify Pointer to the function parameters.
- *
- * \param [IN] type Sets the initialization type.
- *
- * \retval Returns true, if the parameter is valid.
- */
-bool RegionAS923Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute );
-
-/*!
- * \brief The function parses the input buffer and sets up the channels of the
- *        CF list.
- *
- * \param [IN] applyCFList Pointer to the function parameters.
- */
-void RegionAS923ApplyCFList( ApplyCFListParams_t* applyCFList );
-
-/*!
- * \brief Sets a channels mask.
- *
- * \param [IN] chanMaskSet Pointer to the function parameters.
- *
- * \retval Returns true, if the channels mask could be set.
- */
-bool RegionAS923ChanMaskSet( ChanMaskSetParams_t* chanMaskSet );
-
-/*!
- * Computes the Rx window timeout and offset.
- *
- * \param [IN] datarate     Rx window datarate index to be used
- *
- * \param [IN] minRxSymbols Minimum required number of symbols to detect an Rx frame.
- *
- * \param [IN] rxError      System maximum timing error of the receiver. In milliseconds
- *                          The receiver will turn on in a [-rxError : +rxError] ms
- *                          interval around RxOffset
- *
- * \param [OUT]rxConfigParams Returns updated WindowTimeout and WindowOffset fields.
- */
-void RegionAS923ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams );
-
-/*!
- * \brief Configuration of the RX windows.
- *
- * \param [IN] rxConfig Pointer to the function parameters.
- *
- * \param [OUT] datarate The datarate index which was set.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionAS923RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate );
-
-/*!
- * \brief TX configuration.
- *
- * \param [IN] txConfig Pointer to the function parameters.
- *
- * \param [OUT] txPower The tx power index which was set.
- *
- * \param [OUT] txTimeOnAir The time-on-air of the frame.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionAS923TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir );
-
-/*!
- * \brief The function processes a Link ADR Request.
- *
- * \param [IN] linkAdrReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionAS923LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed );
-
-/*!
- * \brief The function processes a RX Parameter Setup Request.
- *
- * \param [IN] rxParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionAS923RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq );
-
-/*!
- * \brief The function processes a Channel Request.
- *
- * \param [IN] newChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionAS923NewChannelReq( NewChannelReqParams_t* newChannelReq );
-
-/*!
- * \brief The function processes a TX ParamSetup Request.
- *
- * \param [IN] txParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- *         Returns -1, if the functionality is not implemented. In this case, the end node
- *         shall not process the command.
- */
-int8_t RegionAS923TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq );
-
-/*!
- * \brief The function processes a DlChannel Request.
- *
- * \param [IN] dlChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionAS923DlChannelReq( DlChannelReqParams_t* dlChannelReq );
-
-/*!
- * \brief Alternates the datarate of the channel for the join request.
- *
- * \param [IN] currentDr Current datarate.
- *
- * \retval Datarate to apply.
- */
-int8_t RegionAS923AlternateDr( int8_t currentDr, AlternateDrType_t type );
-
-/*!
- * \brief Calculates the back-off time.
- *
- * \param [IN] calcBackOff Pointer to the function parameters.
- */
-void RegionAS923CalcBackOff( CalcBackOffParams_t* calcBackOff );
-
-/*!
- * \brief Searches and set the next random available channel
- *
- * \param [OUT] channel Next channel to use for TX.
- *
- * \param [OUT] time Time to wait for the next transmission according to the duty
- *              cycle.
- *
- * \param [OUT] aggregatedTimeOff Updates the aggregated time off.
- *
- * \retval Function status [1: OK, 0: Unable to find a channel on the current datarate]
- */
-LoRaMacStatus_t RegionAS923NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff );
-
-/*!
- * \brief Adds a channel.
- *
- * \param [IN] channelAdd Pointer to the function parameters.
- *
- * \retval Status of the operation.
- */
-LoRaMacStatus_t RegionAS923ChannelAdd( ChannelAddParams_t* channelAdd );
-
-/*!
- * \brief Removes a channel.
- *
- * \param [IN] channelRemove Pointer to the function parameters.
- *
- * \retval Returns true, if the channel was removed successfully.
- */
-bool RegionAS923ChannelsRemove( ChannelRemoveParams_t* channelRemove  );
-
-/*!
- * \brief Sets the radio into continuous wave mode.
- *
- * \param [IN] continuousWave Pointer to the function parameters.
- */
-void RegionAS923SetContinuousWave( ContinuousWaveParams_t* continuousWave );
-
-/*!
- * \brief Computes new datarate according to the given offset
- *
- * \param [IN] downlinkDwellTime Downlink dwell time configuration. 0: No limit, 1: 400ms
- *
- * \param [IN] dr Current datarate
- *
- * \param [IN] drOffset Offset to be applied
- *
- * \retval newDr Computed datarate.
- */
-uint8_t RegionAS923ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset );
-
-/*!
- * \brief Sets the radio into beacon reception mode
- *
- * \param [IN] rxBeaconSetup Pointer to the function parameters
- */
- void RegionAS923RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr );
-
-/*! \} defgroup REGIONAS923 */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __REGION_AS923_H__
diff --git a/mac/region/RegionAU915.c b/mac/region/RegionAU915.c
deleted file mode 100644
index e81d127..0000000
--- a/mac/region/RegionAU915.c
+++ /dev/null
@@ -1,969 +0,0 @@
-/*!
- * \file      RegionAU915.c
- *
- * \brief     Region implementation for AU915
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
-*/
-#include "utilities.h"
-
-#include "RegionCommon.h"
-#include "RegionAU915.h"
-
-// Definitions
-#define CHANNELS_MASK_SIZE              6
-
-// A mask to select only valid 500KHz channels
-#define CHANNELS_MASK_500KHZ_MASK       0x00FF
-
-/*!
- * Region specific context
- */
-typedef struct sRegionAU915NvmCtx
-{
-    /*!
-     * LoRaMAC channels
-     */
-    ChannelParams_t Channels[ AU915_MAX_NB_CHANNELS ];
-    /*!
-     * LoRaMac bands
-     */
-    Band_t Bands[ AU915_MAX_NB_BANDS ];
-    /*!
-     * LoRaMac channels mask
-     */
-    uint16_t ChannelsMask[ CHANNELS_MASK_SIZE ];
-    /*!
-     * LoRaMac channels remaining
-     */
-    uint16_t ChannelsMaskRemaining[CHANNELS_MASK_SIZE];
-    /*!
-     * LoRaMac channels default mask
-     */
-    uint16_t ChannelsDefaultMask[ CHANNELS_MASK_SIZE ];
-}RegionAU915NvmCtx_t;
-
-/*
- * Non-volatile module context.
- */
-static RegionAU915NvmCtx_t NvmCtx;
-
-// Static functions
-static int8_t GetNextLowerTxDr( int8_t dr, int8_t minDr )
-{
-    uint8_t nextLowerDr = 0;
-
-    if( dr == minDr )
-    {
-        nextLowerDr = minDr;
-    }
-    else if( dr == DR_8 )
-    {   // DR_7 is not allowed
-        nextLowerDr = DR_6;
-    }
-    else
-    {
-        nextLowerDr = dr - 1;
-    }
-    return nextLowerDr;
-}
-
-static uint32_t GetBandwidth( uint32_t drIndex )
-{
-    switch( BandwidthsAU915[drIndex] )
-    {
-        default:
-        case 125000:
-            return 0;
-        case 250000:
-            return 1;
-        case 500000:
-            return 2;
-    }
-}
-
-static int8_t LimitTxPower( int8_t txPower, int8_t maxBandTxPower, int8_t datarate, uint16_t* channelsMask )
-{
-    int8_t txPowerResult = txPower;
-
-    // Limit tx power to the band max
-    txPowerResult =  MAX( txPower, maxBandTxPower );
-
-    return txPowerResult;
-}
-
-static bool VerifyRfFreq( uint32_t freq )
-{
-    // Check radio driver support
-    if( Radio.CheckRfFrequency( freq ) == false )
-    {
-        return false;
-    }
-
-    // Rx frequencies
-    if( ( freq < AU915_FIRST_RX1_CHANNEL ) ||
-        ( freq > AU915_LAST_RX1_CHANNEL ) ||
-        ( ( ( freq - ( uint32_t ) AU915_FIRST_RX1_CHANNEL ) % ( uint32_t ) AU915_STEPWIDTH_RX1_CHANNEL ) != 0 ) )
-    {
-        return false;
-    }
-
-    // Tx frequencies for 125kHz
-    // Also includes the range for 500kHz channels
-    if( ( freq < 915200000 ) ||  ( freq > 927800000 ) )
-    {
-        return false;
-    }
-    return true;
-}
-
-PhyParam_t RegionAU915GetPhyParam( GetPhyParams_t* getPhy )
-{
-    PhyParam_t phyParam = { 0 };
-
-    switch( getPhy->Attribute )
-    {
-        case PHY_MIN_RX_DR:
-        {
-            if( getPhy->DownlinkDwellTime == 0)
-            {
-                phyParam.Value = AU915_RX_MIN_DATARATE;
-            }
-            else
-            {
-                phyParam.Value = AU915_DWELL_LIMIT_DATARATE;
-            }
-            break;
-        }
-        case PHY_MIN_TX_DR:
-        {
-            if( getPhy->UplinkDwellTime == 0)
-            {
-                phyParam.Value = AU915_TX_MIN_DATARATE;
-            }
-            else
-            {
-                phyParam.Value = AU915_DWELL_LIMIT_DATARATE;
-            }
-            break;
-        }
-        case PHY_DEF_TX_DR:
-        {
-            phyParam.Value = AU915_DEFAULT_DATARATE;
-            break;
-        }
-        case PHY_NEXT_LOWER_TX_DR:
-        {
-            if( getPhy->UplinkDwellTime == 0)
-            {
-                phyParam.Value = GetNextLowerTxDr( getPhy->Datarate, AU915_TX_MIN_DATARATE );
-            }
-            else
-            {
-                phyParam.Value = GetNextLowerTxDr( getPhy->Datarate, AU915_DWELL_LIMIT_DATARATE );
-            }
-            break;
-        }
-        case PHY_MAX_TX_POWER:
-        {
-            phyParam.Value = AU915_MAX_TX_POWER;
-            break;
-        }
-        case PHY_DEF_TX_POWER:
-        {
-            phyParam.Value = AU915_DEFAULT_TX_POWER;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_LIMIT:
-        {
-            phyParam.Value = AU915_ADR_ACK_LIMIT;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_DELAY:
-        {
-            phyParam.Value = AU915_ADR_ACK_DELAY;
-            break;
-        }
-        case PHY_MAX_PAYLOAD:
-        {
-            if( getPhy->UplinkDwellTime == 0 )
-            {
-                phyParam.Value = MaxPayloadOfDatarateDwell0AU915[getPhy->Datarate];
-            }
-            else
-            {
-                phyParam.Value = MaxPayloadOfDatarateDwell1AU915[getPhy->Datarate];
-            }
-            break;
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            phyParam.Value = AU915_DUTY_CYCLE_ENABLED;
-            break;
-        }
-        case PHY_MAX_RX_WINDOW:
-        {
-            phyParam.Value = AU915_MAX_RX_WINDOW;
-            break;
-        }
-        case PHY_RECEIVE_DELAY1:
-        {
-            phyParam.Value = AU915_RECEIVE_DELAY1;
-            break;
-        }
-        case PHY_RECEIVE_DELAY2:
-        {
-            phyParam.Value = AU915_RECEIVE_DELAY2;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY1:
-        {
-            phyParam.Value = AU915_JOIN_ACCEPT_DELAY1;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY2:
-        {
-            phyParam.Value = AU915_JOIN_ACCEPT_DELAY2;
-            break;
-        }
-        case PHY_MAX_FCNT_GAP:
-        {
-            phyParam.Value = AU915_MAX_FCNT_GAP;
-            break;
-        }
-        case PHY_ACK_TIMEOUT:
-        {
-            phyParam.Value = ( AU915_ACKTIMEOUT + randr( -AU915_ACK_TIMEOUT_RND, AU915_ACK_TIMEOUT_RND ) );
-            break;
-        }
-        case PHY_DEF_DR1_OFFSET:
-        {
-            phyParam.Value = AU915_DEFAULT_RX1_DR_OFFSET;
-            break;
-        }
-        case PHY_DEF_RX2_FREQUENCY:
-        {
-            phyParam.Value = AU915_RX_WND_2_FREQ;
-            break;
-        }
-        case PHY_DEF_RX2_DR:
-        {
-            phyParam.Value = AU915_RX_WND_2_DR;
-            break;
-        }
-        case PHY_CHANNELS_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsMask;
-            break;
-        }
-        case PHY_CHANNELS_DEFAULT_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsDefaultMask;
-            break;
-        }
-        case PHY_MAX_NB_CHANNELS:
-        {
-            phyParam.Value = AU915_MAX_NB_CHANNELS;
-            break;
-        }
-        case PHY_CHANNELS:
-        {
-            phyParam.Channels = NvmCtx.Channels;
-            break;
-        }
-        case PHY_DEF_UPLINK_DWELL_TIME:
-        {
-            phyParam.Value = AU915_DEFAULT_UPLINK_DWELL_TIME;
-            break;
-        }
-        case PHY_DEF_DOWNLINK_DWELL_TIME:
-        {
-            phyParam.Value = AU915_DEFAULT_DOWNLINK_DWELL_TIME;
-            break;
-        }
-        case PHY_DEF_MAX_EIRP:
-        {
-            phyParam.fValue = AU915_DEFAULT_MAX_EIRP;
-            break;
-        }
-        case PHY_DEF_ANTENNA_GAIN:
-        {
-            phyParam.fValue = AU915_DEFAULT_ANTENNA_GAIN;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_FREQ:
-        {
-            phyParam.Value = AU915_BEACON_CHANNEL_FREQ;
-            break;
-        }
-        case PHY_BEACON_FORMAT:
-        {
-            phyParam.BeaconFormat.BeaconSize = AU915_BEACON_SIZE;
-            phyParam.BeaconFormat.Rfu1Size = AU915_RFU1_SIZE;
-            phyParam.BeaconFormat.Rfu2Size = AU915_RFU2_SIZE;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_DR:
-        {
-            phyParam.Value = AU915_BEACON_CHANNEL_DR;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_STEPWIDTH:
-        {
-            phyParam.Value = AU915_BEACON_CHANNEL_STEPWIDTH;
-            break;
-        }
-        case PHY_BEACON_NB_CHANNELS:
-        {
-            phyParam.Value = AU915_BEACON_NB_CHANNELS;
-            break;
-        }
-        case PHY_PING_SLOT_CHANNEL_DR:
-        {
-            phyParam.Value = AU915_PING_SLOT_CHANNEL_DR;
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-
-    return phyParam;
-}
-
-void RegionAU915SetBandTxDone( SetBandTxDoneParams_t* txDone )
-{
-    RegionCommonSetBandTxDone( txDone->Joined, &NvmCtx.Bands[NvmCtx.Channels[txDone->Channel].Band], txDone->LastTxDoneTime );
-}
-
-void RegionAU915InitDefaults( InitDefaultsParams_t* params )
-{
-    Band_t bands[AU915_MAX_NB_BANDS] =
-    {
-        AU915_BAND0
-    };
-
-    switch( params->Type )
-    {
-        case INIT_TYPE_BANDS:
-        {
-            // Initialize bands
-            memcpy1( ( uint8_t* )NvmCtx.Bands, ( uint8_t* )bands, sizeof( Band_t ) * AU915_MAX_NB_BANDS );
-            break;
-        }
-        case INIT_TYPE_INIT:
-        {
-            // Channels
-            // 125 kHz channels
-            for( uint8_t i = 0; i < AU915_MAX_NB_CHANNELS - 8; i++ )
-            {
-                NvmCtx.Channels[i].Frequency = 915200000 + i * 200000;
-                NvmCtx.Channels[i].DrRange.Value = ( DR_5 << 4 ) | DR_0;
-                NvmCtx.Channels[i].Band = 0;
-            }
-            // 500 kHz channels
-            for( uint8_t i = AU915_MAX_NB_CHANNELS - 8; i < AU915_MAX_NB_CHANNELS; i++ )
-            {
-                NvmCtx.Channels[i].Frequency = 915900000 + ( i - ( AU915_MAX_NB_CHANNELS - 8 ) ) * 1600000;
-                NvmCtx.Channels[i].DrRange.Value = ( DR_6 << 4 ) | DR_6;
-                NvmCtx.Channels[i].Band = 0;
-            }
-
-            // Initialize channels default mask
-            NvmCtx.ChannelsDefaultMask[0] = 0xFFFF;
-            NvmCtx.ChannelsDefaultMask[1] = 0xFFFF;
-            NvmCtx.ChannelsDefaultMask[2] = 0xFFFF;
-            NvmCtx.ChannelsDefaultMask[3] = 0xFFFF;
-            NvmCtx.ChannelsDefaultMask[4] = 0x00FF;
-            NvmCtx.ChannelsDefaultMask[5] = 0x0000;
-
-            // Copy channels default mask
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, NvmCtx.ChannelsDefaultMask, 6 );
-
-            // Copy into channels mask remaining
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMaskRemaining, NvmCtx.ChannelsMask, 6 );
-            break;
-        }
-        case INIT_TYPE_RESTORE_CTX:
-        {
-            if( params->NvmCtx != 0 )
-            {
-                memcpy1( (uint8_t*) &NvmCtx, (uint8_t*) params->NvmCtx, sizeof( NvmCtx ) );
-            }
-            break;
-        }
-        case INIT_TYPE_RESTORE_DEFAULT_CHANNELS:
-        {
-            // Copy channels default mask
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, NvmCtx.ChannelsDefaultMask, 6 );
-
-            for( uint8_t i = 0; i < 6; i++ )
-            { // Copy-And the channels mask
-                NvmCtx.ChannelsMaskRemaining[i] &= NvmCtx.ChannelsMask[i];
-            }
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-}
-
-void* RegionAU915GetNvmCtx( GetNvmCtxParams_t* params )
-{
-    params->nvmCtxSize = sizeof( RegionAU915NvmCtx_t );
-    return &NvmCtx;
-}
-
-bool RegionAU915Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute )
-{
-    switch( phyAttribute )
-    {
-        case PHY_FREQUENCY:
-        {
-            return VerifyRfFreq( verify->Frequency );
-        }
-        case PHY_TX_DR:
-        case PHY_DEF_TX_DR:
-        {
-            if( verify->DatarateParams.UplinkDwellTime == 0 )
-            {
-                return RegionCommonValueInRange( verify->DatarateParams.Datarate, AU915_TX_MIN_DATARATE, AU915_TX_MAX_DATARATE );
-            }
-            else
-            {
-                return RegionCommonValueInRange( verify->DatarateParams.Datarate, AU915_DWELL_LIMIT_DATARATE, AU915_TX_MAX_DATARATE );
-            }
-        }
-        case PHY_RX_DR:
-        {
-            if( verify->DatarateParams.UplinkDwellTime == 0 )
-            {
-                return RegionCommonValueInRange( verify->DatarateParams.Datarate, AU915_RX_MIN_DATARATE, AU915_RX_MAX_DATARATE );
-            }
-            else
-            {
-                return RegionCommonValueInRange( verify->DatarateParams.Datarate, AU915_DWELL_LIMIT_DATARATE, AU915_RX_MAX_DATARATE );
-            }
-        }
-        case PHY_DEF_TX_POWER:
-        case PHY_TX_POWER:
-        {
-            // Remark: switched min and max!
-            return RegionCommonValueInRange( verify->TxPower, AU915_MAX_TX_POWER, AU915_MIN_TX_POWER );
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            return AU915_DUTY_CYCLE_ENABLED;
-        }
-        default:
-            return false;
-    }
-}
-
-void RegionAU915ApplyCFList( ApplyCFListParams_t* applyCFList )
-{
-    // Size of the optional CF list must be 16 byte
-    if( applyCFList->Size != 16 )
-    {
-        return;
-    }
-
-    // Last byte CFListType must be 0x01 to indicate the CFList contains a series of ChMask fields
-    if( applyCFList->Payload[15] != 0x01 )
-    {
-        return;
-    }
-
-    // ChMask0 - ChMask4 must be set (every ChMask has 16 bit)
-    for( uint8_t chMaskItr = 0, cntPayload = 0; chMaskItr <= 4; chMaskItr++, cntPayload+=2 )
-    {
-        NvmCtx.ChannelsMask[chMaskItr] = (uint16_t) (0x00FF & applyCFList->Payload[cntPayload]);
-        NvmCtx.ChannelsMask[chMaskItr] |= (uint16_t) (applyCFList->Payload[cntPayload+1] << 8);
-        if( chMaskItr == 4 )
-        {
-            NvmCtx.ChannelsMask[chMaskItr] = NvmCtx.ChannelsMask[chMaskItr] & CHANNELS_MASK_500KHZ_MASK;
-        }
-        // Set the channel mask to the remaining
-        NvmCtx.ChannelsMaskRemaining[chMaskItr] &= NvmCtx.ChannelsMask[chMaskItr];
-    }
-}
-
-bool RegionAU915ChanMaskSet( ChanMaskSetParams_t* chanMaskSet )
-{
-    switch( chanMaskSet->ChannelsMaskType )
-    {
-        case CHANNELS_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, chanMaskSet->ChannelsMaskIn, 6 );
-
-            NvmCtx.ChannelsDefaultMask[4] = NvmCtx.ChannelsDefaultMask[4] & CHANNELS_MASK_500KHZ_MASK;
-            NvmCtx.ChannelsDefaultMask[5] = 0x0000;
-
-            for( uint8_t i = 0; i < 6; i++ )
-            { // Copy-And the channels mask
-                NvmCtx.ChannelsMaskRemaining[i] &= NvmCtx.ChannelsMask[i];
-            }
-            break;
-        }
-        case CHANNELS_DEFAULT_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsDefaultMask, chanMaskSet->ChannelsMaskIn, 6 );
-            break;
-        }
-        default:
-            return false;
-    }
-    return true;
-}
-
-void RegionAU915ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams )
-{
-    double tSymbol = 0.0;
-
-    // Get the datarate, perform a boundary check
-    rxConfigParams->Datarate = MIN( datarate, AU915_RX_MAX_DATARATE );
-    rxConfigParams->Bandwidth = GetBandwidth( rxConfigParams->Datarate );
-
-    tSymbol = RegionCommonComputeSymbolTimeLoRa( DataratesAU915[rxConfigParams->Datarate], BandwidthsAU915[rxConfigParams->Datarate] );
-
-    RegionCommonComputeRxWindowParameters( tSymbol, minRxSymbols, rxError, Radio.GetWakeupTime( ), &rxConfigParams->WindowTimeout, &rxConfigParams->WindowOffset );
-}
-
-bool RegionAU915RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate )
-{
-    int8_t dr = rxConfig->Datarate;
-    int8_t phyDr = 0;
-    uint32_t frequency = rxConfig->Frequency;
-
-    if( Radio.GetStatus( ) != RF_IDLE )
-    {
-        return false;
-    }
-
-    if( rxConfig->RxSlot == RX_SLOT_WIN_1 )
-    {
-        // Apply window 1 frequency
-        frequency = AU915_FIRST_RX1_CHANNEL + ( rxConfig->Channel % 8 ) * AU915_STEPWIDTH_RX1_CHANNEL;
-    }
-
-    // Read the physical datarate from the datarates table
-    phyDr = DataratesAU915[dr];
-
-    Radio.SetChannel( frequency );
-
-    // Radio configuration
-    Radio.SetRxConfig( MODEM_LORA, rxConfig->Bandwidth, phyDr, 1, 0, 8, rxConfig->WindowTimeout, false, 0, false, 0, 0, true, rxConfig->RxContinuous );
-
-    Radio.SetMaxPayloadLength( MODEM_LORA, MaxPayloadOfDatarateDwell0AU915[dr] + LORA_MAC_FRMPAYLOAD_OVERHEAD );
-
-    *datarate = (uint8_t) dr;
-    return true;
-}
-
-bool RegionAU915TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir )
-{
-    int8_t phyDr = DataratesAU915[txConfig->Datarate];
-    int8_t txPowerLimited = LimitTxPower( txConfig->TxPower, NvmCtx.Bands[NvmCtx.Channels[txConfig->Channel].Band].TxMaxPower, txConfig->Datarate, NvmCtx.ChannelsMask );
-    uint32_t bandwidth = GetBandwidth( txConfig->Datarate );
-    int8_t phyTxPower = 0;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, txConfig->MaxEirp, txConfig->AntennaGain );
-
-    // Setup the radio frequency
-    Radio.SetChannel( NvmCtx.Channels[txConfig->Channel].Frequency );
-
-    Radio.SetTxConfig( MODEM_LORA, phyTxPower, 0, bandwidth, phyDr, 1, 8, false, true, 0, 0, false, 4000 );
-
-    // Setup maximum payload lenght of the radio driver
-    Radio.SetMaxPayloadLength( MODEM_LORA, txConfig->PktLen );
-
-    *txTimeOnAir = Radio.TimeOnAir( MODEM_LORA, txConfig->PktLen );
-    *txPower = txPowerLimited;
-
-    return true;
-}
-
-uint8_t RegionAU915LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed )
-{
-    uint8_t status = 0x07;
-    RegionCommonLinkAdrParams_t linkAdrParams;
-    uint8_t nextIndex = 0;
-    uint8_t bytesProcessed = 0;
-    uint16_t channelsMask[6] = { 0, 0, 0, 0, 0, 0 };
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-    RegionCommonLinkAdrReqVerifyParams_t linkAdrVerifyParams;
-
-    // Initialize local copy of channels mask
-    RegionCommonChanMaskCopy( channelsMask, NvmCtx.ChannelsMask, 6 );
-
-    while( bytesProcessed < linkAdrReq->PayloadSize )
-    {
-        nextIndex = RegionCommonParseLinkAdrReq( &( linkAdrReq->Payload[bytesProcessed] ), &linkAdrParams );
-
-        if( nextIndex == 0 )
-            break; // break loop, since no more request has been found
-
-        // Update bytes processed
-        bytesProcessed += nextIndex;
-
-        // Revert status, as we only check the last ADR request for the channel mask KO
-        status = 0x07;
-
-        if( linkAdrParams.ChMaskCtrl == 6 )
-        {
-            // Enable all 125 kHz channels
-            channelsMask[0] = 0xFFFF;
-            channelsMask[1] = 0xFFFF;
-            channelsMask[2] = 0xFFFF;
-            channelsMask[3] = 0xFFFF;
-            // Apply chMask to channels 64 to 71
-            channelsMask[4] = linkAdrParams.ChMask & CHANNELS_MASK_500KHZ_MASK;
-        }
-        else if( linkAdrParams.ChMaskCtrl == 7 )
-        {
-            // Disable all 125 kHz channels
-            channelsMask[0] = 0x0000;
-            channelsMask[1] = 0x0000;
-            channelsMask[2] = 0x0000;
-            channelsMask[3] = 0x0000;
-            // Apply chMask to channels 64 to 71
-            channelsMask[4] = linkAdrParams.ChMask & CHANNELS_MASK_500KHZ_MASK;
-        }
-        else if( linkAdrParams.ChMaskCtrl == 5 )
-        {
-            // Start value for comparision
-            uint8_t bitMask = 1;
-
-            // cntChannelMask for channelsMask[0] until channelsMask[3]
-            uint8_t cntChannelMask = 0;
-
-            // i will be 1, 2, 3, ..., 7
-            for( uint8_t i = 0; i <= 7; i++ )
-            {
-                // 8 MSBs of ChMask are RFU
-                // Checking if the ChMask is set, then true
-                if( ( ( linkAdrParams.ChMask & 0x00FF ) & ( bitMask << i ) ) != 0 )
-                {
-                    if( ( i % 2 ) == 0 )
-                    {
-                        // Enable a bank of 8 125kHz channels, 8 LSBs
-                        channelsMask[cntChannelMask] |= 0x00FF;
-                        // Enable the corresponding 500kHz channel
-                        channelsMask[4] |= ( bitMask << i );
-                    }
-                    else
-                    {
-                        // Enable a bank of 8 125kHz channels, 8 MSBs
-                        channelsMask[cntChannelMask] |= 0xFF00;
-                        // Enable the corresponding 500kHz channel
-                        channelsMask[4] |= ( bitMask << i );
-                        // cntChannelMask increment for uneven i
-                        cntChannelMask++;
-                    }
-                }
-                // ChMask is not set
-                else
-                {
-                    if( ( i % 2 ) == 0 )
-                    {
-                        // Disable a bank of 8 125kHz channels, 8 LSBs
-                        channelsMask[cntChannelMask] &= 0xFF00;
-                        // Disable the corresponding 500kHz channel
-                        channelsMask[4] &= ~( bitMask << i );
-                    }
-                    else
-                    {
-                        // Enable a bank of 8 125kHz channels, 8 MSBs
-                        channelsMask[cntChannelMask] &= 0x00FF;
-                        // Disable the corresponding 500kHz channel
-                        channelsMask[4] &= ~( bitMask << i );
-                        // cntChannelMask increment for uneven i
-                        cntChannelMask++;
-                    }
-                }
-            }
-        }
-        else
-        {
-            channelsMask[linkAdrParams.ChMaskCtrl] = linkAdrParams.ChMask;
-        }
-    }
-
-    // FCC 15.247 paragraph F mandates to hop on at least 2 125 kHz channels
-    if( ( linkAdrParams.Datarate < DR_6 ) && ( RegionCommonCountChannels( channelsMask, 0, 4 ) < 2 ) )
-    {
-        status &= 0xFE; // Channel mask KO
-    }
-
-    // Get the minimum possible datarate
-    getPhy.Attribute = PHY_MIN_TX_DR;
-    getPhy.UplinkDwellTime = linkAdrReq->UplinkDwellTime;
-    phyParam = RegionAU915GetPhyParam( &getPhy );
-
-    linkAdrVerifyParams.Status = status;
-    linkAdrVerifyParams.AdrEnabled = linkAdrReq->AdrEnabled;
-    linkAdrVerifyParams.Datarate = linkAdrParams.Datarate;
-    linkAdrVerifyParams.TxPower = linkAdrParams.TxPower;
-    linkAdrVerifyParams.NbRep = linkAdrParams.NbRep;
-    linkAdrVerifyParams.CurrentDatarate = linkAdrReq->CurrentDatarate;
-    linkAdrVerifyParams.CurrentTxPower = linkAdrReq->CurrentTxPower;
-    linkAdrVerifyParams.CurrentNbRep = linkAdrReq->CurrentNbRep;
-    linkAdrVerifyParams.NbChannels = AU915_MAX_NB_CHANNELS;
-    linkAdrVerifyParams.ChannelsMask = channelsMask;
-    linkAdrVerifyParams.MinDatarate = ( int8_t )phyParam.Value;
-    linkAdrVerifyParams.MaxDatarate = AU915_TX_MAX_DATARATE;
-    linkAdrVerifyParams.Channels = NvmCtx.Channels;
-    linkAdrVerifyParams.MinTxPower = AU915_MIN_TX_POWER;
-    linkAdrVerifyParams.MaxTxPower = AU915_MAX_TX_POWER;
-    linkAdrVerifyParams.Version = linkAdrReq->Version;
-
-    // Verify the parameters and update, if necessary
-    status = RegionCommonLinkAdrReqVerifyParams( &linkAdrVerifyParams, &linkAdrParams.Datarate, &linkAdrParams.TxPower, &linkAdrParams.NbRep );
-
-    // Update channelsMask if everything is correct
-    if( status == 0x07 )
-    {
-        // Copy Mask
-        RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, channelsMask, 6 );
-
-        NvmCtx.ChannelsMaskRemaining[0] &= NvmCtx.ChannelsMask[0];
-        NvmCtx.ChannelsMaskRemaining[1] &= NvmCtx.ChannelsMask[1];
-        NvmCtx.ChannelsMaskRemaining[2] &= NvmCtx.ChannelsMask[2];
-        NvmCtx.ChannelsMaskRemaining[3] &= NvmCtx.ChannelsMask[3];
-        NvmCtx.ChannelsMaskRemaining[4] = NvmCtx.ChannelsMask[4];
-        NvmCtx.ChannelsMaskRemaining[5] = NvmCtx.ChannelsMask[5];
-    }
-
-    // Update status variables
-    *drOut = linkAdrParams.Datarate;
-    *txPowOut = linkAdrParams.TxPower;
-    *nbRepOut = linkAdrParams.NbRep;
-    *nbBytesParsed = bytesProcessed;
-
-    return status;
-}
-
-uint8_t RegionAU915RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq )
-{
-    uint8_t status = 0x07;
-
-    // Verify radio frequency
-    if( VerifyRfFreq( rxParamSetupReq->Frequency ) == false )
-    {
-        status &= 0xFE; // Channel frequency KO
-    }
-
-    // Verify datarate
-    if( RegionCommonValueInRange( rxParamSetupReq->Datarate, AU915_RX_MIN_DATARATE, AU915_RX_MAX_DATARATE ) == false )
-    {
-        status &= 0xFD; // Datarate KO
-    }
-    if( ( rxParamSetupReq->Datarate == DR_7 ) ||
-        ( rxParamSetupReq->Datarate > DR_13 ) )
-    {
-        status &= 0xFD; // Datarate KO
-    }
-
-    // Verify datarate offset
-    if( RegionCommonValueInRange( rxParamSetupReq->DrOffset, AU915_MIN_RX1_DR_OFFSET, AU915_MAX_RX1_DR_OFFSET ) == false )
-    {
-        status &= 0xFB; // Rx1DrOffset range KO
-    }
-
-    return status;
-}
-
-uint8_t RegionAU915NewChannelReq( NewChannelReqParams_t* newChannelReq )
-{
-    // Datarate and frequency KO
-    return 0;
-}
-
-int8_t RegionAU915TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq )
-{
-    // Accept the request
-    return 0;
-}
-
-uint8_t RegionAU915DlChannelReq( DlChannelReqParams_t* dlChannelReq )
-{
-    return 0;
-}
-
-int8_t RegionAU915AlternateDr( int8_t currentDr, AlternateDrType_t type )
-{
-    static int8_t trialsCount = 0;
-
-    // Re-enable 500 kHz default channels
-    NvmCtx.ChannelsMask[4] = CHANNELS_MASK_500KHZ_MASK;
-
-    if( ( trialsCount & 0x01 ) == 0x01 )
-    {
-        currentDr = DR_6;
-    }
-    else
-    {
-        currentDr = DR_2;
-    }
-    trialsCount++;
-    return currentDr;
-}
-
-void RegionAU915CalcBackOff( CalcBackOffParams_t* calcBackOff )
-{
-    RegionCommonCalcBackOffParams_t calcBackOffParams;
-
-    calcBackOffParams.Channels = NvmCtx.Channels;
-    calcBackOffParams.Bands = NvmCtx.Bands;
-    calcBackOffParams.LastTxIsJoinRequest = calcBackOff->LastTxIsJoinRequest;
-    calcBackOffParams.Joined = calcBackOff->Joined;
-    calcBackOffParams.DutyCycleEnabled = calcBackOff->DutyCycleEnabled;
-    calcBackOffParams.Channel = calcBackOff->Channel;
-    calcBackOffParams.ElapsedTime = calcBackOff->ElapsedTime;
-    calcBackOffParams.TxTimeOnAir = calcBackOff->TxTimeOnAir;
-
-    RegionCommonCalcBackOff( &calcBackOffParams );
-}
-
-LoRaMacStatus_t RegionAU915NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff )
-{
-    uint8_t nbEnabledChannels = 0;
-    uint8_t nbRestrictedChannels = 0;
-    uint8_t enabledChannels[AU915_MAX_NB_CHANNELS] = { 0 };
-    RegionCommonIdentifyChannelsParam_t identifyChannelsParam;
-    RegionCommonCountNbOfEnabledChannelsParams_t countChannelsParams;
-    LoRaMacStatus_t status = LORAMAC_STATUS_NO_CHANNEL_FOUND;
-
-    // Count 125kHz channels
-    if( RegionCommonCountChannels( NvmCtx.ChannelsMaskRemaining, 0, 4 ) == 0 )
-    { // Reactivate default channels
-        RegionCommonChanMaskCopy( NvmCtx.ChannelsMaskRemaining, NvmCtx.ChannelsMask, 4  );
-    }
-    // Check other channels
-    if( nextChanParams->Datarate >= DR_6 )
-    {
-        if( ( NvmCtx.ChannelsMaskRemaining[4] & CHANNELS_MASK_500KHZ_MASK ) == 0 )
-        {
-            NvmCtx.ChannelsMaskRemaining[4] = NvmCtx.ChannelsMask[4];
-        }
-    }
-
-    // Search how many channels are enabled
-    countChannelsParams.Joined = nextChanParams->Joined;
-    countChannelsParams.Datarate = nextChanParams->Datarate;
-    countChannelsParams.ChannelsMask = NvmCtx.ChannelsMaskRemaining;
-    countChannelsParams.Channels = NvmCtx.Channels;
-    countChannelsParams.Bands = NvmCtx.Bands;
-    countChannelsParams.MaxNbChannels = AU915_MAX_NB_CHANNELS;
-    countChannelsParams.JoinChannels = 0;
-
-    identifyChannelsParam.AggrTimeOff = nextChanParams->AggrTimeOff;
-    identifyChannelsParam.LastAggrTx = nextChanParams->LastAggrTx;
-    identifyChannelsParam.DutyCycleEnabled = nextChanParams->DutyCycleEnabled;
-    identifyChannelsParam.MaxBands = AU915_MAX_NB_BANDS;
-
-    identifyChannelsParam.CountNbOfEnabledChannelsParam = &countChannelsParams;
-
-    status = RegionCommonIdentifyChannels( &identifyChannelsParam, aggregatedTimeOff, enabledChannels,
-                                           &nbEnabledChannels, &nbRestrictedChannels, time );
-
-    if( nextChanParams->QueryNextTxDelayOnly == true )
-    {
-        return status;
-    }
-
-    if( status == LORAMAC_STATUS_OK )
-    {
-        // We found a valid channel
-        *channel = enabledChannels[randr( 0, nbEnabledChannels - 1 )];
-        // Disable the channel in the mask
-        RegionCommonChanDisable( NvmCtx.ChannelsMaskRemaining, *channel, AU915_MAX_NB_CHANNELS - 8 );
-    }
-    return status;
-}
-
-LoRaMacStatus_t RegionAU915ChannelAdd( ChannelAddParams_t* channelAdd )
-{
-    return LORAMAC_STATUS_PARAMETER_INVALID;
-}
-
-bool RegionAU915ChannelsRemove( ChannelRemoveParams_t* channelRemove  )
-{
-    return LORAMAC_STATUS_PARAMETER_INVALID;
-}
-
-void RegionAU915SetContinuousWave( ContinuousWaveParams_t* continuousWave )
-{
-    int8_t txPowerLimited = LimitTxPower( continuousWave->TxPower, NvmCtx.Bands[NvmCtx.Channels[continuousWave->Channel].Band].TxMaxPower, continuousWave->Datarate, NvmCtx.ChannelsMask );
-    int8_t phyTxPower = 0;
-    uint32_t frequency = NvmCtx.Channels[continuousWave->Channel].Frequency;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, continuousWave->MaxEirp, continuousWave->AntennaGain );
-
-    Radio.SetTxContinuousWave( frequency, phyTxPower, continuousWave->Timeout );
-}
-
-uint8_t RegionAU915ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset )
-{
-    int8_t datarate = DatarateOffsetsAU915[dr][drOffset];
-
-    if( datarate < 0 )
-    {
-        if( downlinkDwellTime == 0 )
-        {
-            datarate = AU915_TX_MIN_DATARATE;
-        }
-        else
-        {
-            datarate = AU915_DWELL_LIMIT_DATARATE;
-        }
-    }
-    return datarate;
-}
-
-void RegionAU915RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr )
-{
-    RegionCommonRxBeaconSetupParams_t regionCommonRxBeaconSetup;
-
-    regionCommonRxBeaconSetup.Datarates = DataratesAU915;
-    regionCommonRxBeaconSetup.Frequency = rxBeaconSetup->Frequency;
-    regionCommonRxBeaconSetup.BeaconSize = AU915_BEACON_SIZE;
-    regionCommonRxBeaconSetup.BeaconDatarate = AU915_BEACON_CHANNEL_DR;
-    regionCommonRxBeaconSetup.BeaconChannelBW = AU915_BEACON_CHANNEL_BW;
-    regionCommonRxBeaconSetup.RxTime = rxBeaconSetup->RxTime;
-    regionCommonRxBeaconSetup.SymbolTimeout = rxBeaconSetup->SymbolTimeout;
-
-    RegionCommonRxBeaconSetup( &regionCommonRxBeaconSetup );
-
-    // Store downlink datarate
-    *outDr = AU915_BEACON_CHANNEL_DR;
-}
diff --git a/mac/region/RegionAU915.h b/mac/region/RegionAU915.h
deleted file mode 100644
index 3926258..0000000
--- a/mac/region/RegionAU915.h
+++ /dev/null
@@ -1,535 +0,0 @@
-/*!
- * \file      RegionAU915.h
- *
- * \brief     Region definition for AU915
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * \defgroup  REGIONAU915 Region AU915
- *            Implementation according to LoRaWAN Specification v1.0.2.
- * \{
- */
-#ifndef __REGION_AU915_H__
-#define __REGION_AU915_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include "region/Region.h"
-
-/*!
- * LoRaMac maximum number of channels
- */
-#define AU915_MAX_NB_CHANNELS                       72
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define AU915_TX_MIN_DATARATE                       DR_0
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define AU915_TX_MAX_DATARATE                       DR_13
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define AU915_RX_MIN_DATARATE                       DR_8
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define AU915_RX_MAX_DATARATE                       DR_13
-
-/*!
- * Default datarate used by the node
- */
-#define AU915_DEFAULT_DATARATE                      DR_2
-
-/*!
- * The minimum datarate which is used when the
- * dwell time is limited.
- */
-#define AU915_DWELL_LIMIT_DATARATE                  DR_2
-
-/*!
- * Minimal Rx1 receive datarate offset
- */
-#define AU915_MIN_RX1_DR_OFFSET                     0
-
-/*!
- * Maximal Rx1 receive datarate offset
- */
-#define AU915_MAX_RX1_DR_OFFSET                     6
-
-/*!
- * Default Rx1 receive datarate offset
- */
-#define AU915_DEFAULT_RX1_DR_OFFSET                 0
-
-/*!
- * Minimal Tx output power that can be used by the node
- */
-#define AU915_MIN_TX_POWER                          TX_POWER_14
-
-/*!
- * Maximal Tx output power that can be used by the node
- */
-#define AU915_MAX_TX_POWER                          TX_POWER_0
-
-/*!
- * Default Tx output power used by the node
- */
-#define AU915_DEFAULT_TX_POWER                      TX_POWER_0
-
-/*!
- * Default uplink dwell time configuration
- */
-#define AU915_DEFAULT_UPLINK_DWELL_TIME             1
-
-/*!
- * Default downlink dwell time configuration
- */
-#define AU915_DEFAULT_DOWNLINK_DWELL_TIME           0
-
-/*!
- * Default Max EIRP
- */
-#define AU915_DEFAULT_MAX_EIRP                      30.0f
-
-/*!
- * Default antenna gain
- */
-#define AU915_DEFAULT_ANTENNA_GAIN                  2.15f
-
-/*!
- * ADR Ack limit
- */
-#define AU915_ADR_ACK_LIMIT                         64
-
-/*!
- * ADR Ack delay
- */
-#define AU915_ADR_ACK_DELAY                         32
-
-/*!
- * Enabled or disabled the duty cycle
- */
-#define AU915_DUTY_CYCLE_ENABLED                    0
-
-/*!
- * Maximum RX window duration
- */
-#define AU915_MAX_RX_WINDOW                         3000
-
-/*!
- * Receive delay 1
- */
-#define AU915_RECEIVE_DELAY1                        1000
-
-/*!
- * Receive delay 2
- */
-#define AU915_RECEIVE_DELAY2                        2000
-
-/*!
- * Join accept delay 1
- */
-#define AU915_JOIN_ACCEPT_DELAY1                    5000
-
-/*!
- * Join accept delay 2
- */
-#define AU915_JOIN_ACCEPT_DELAY2                    6000
-
-/*!
- * Maximum frame counter gap
- */
-#define AU915_MAX_FCNT_GAP                          16384
-
-/*!
- * Ack timeout
- */
-#define AU915_ACKTIMEOUT                            2000
-
-/*!
- * Random ack timeout limits
- */
-#define AU915_ACK_TIMEOUT_RND                       1000
-
-/*!
- * Second reception window channel frequency definition.
- */
-#define AU915_RX_WND_2_FREQ                         923300000
-
-/*!
- * Second reception window channel datarate definition.
- */
-#define AU915_RX_WND_2_DR                           DR_8
-
-/*
- * CLASS B
- */
-/*!
- * Beacon frequency
- */
-#define AU915_BEACON_CHANNEL_FREQ                   923300000
-
-/*!
- * Beacon frequency channel stepwidth
- */
-#define AU915_BEACON_CHANNEL_STEPWIDTH              600000
-
-/*!
- * Number of possible beacon channels
- */
-#define AU915_BEACON_NB_CHANNELS                    8
-
-/*!
- * Payload size of a beacon frame
- */
-#define AU915_BEACON_SIZE                           19
-
-/*!
- * Size of RFU 1 field
- */
-#define AU915_RFU1_SIZE                             3
-
-/*!
- * Size of RFU 2 field
- */
-#define AU915_RFU2_SIZE                             1
-
-/*!
- * Datarate of the beacon channel
- */
-#define AU915_BEACON_CHANNEL_DR                     DR_8
-
-/*!
- * Bandwith of the beacon channel
- */
-#define AU915_BEACON_CHANNEL_BW                     2
-
-/*!
- * Ping slot channel datarate
- */
-#define AU915_PING_SLOT_CHANNEL_DR                  DR_8
-
-/*!
- * LoRaMac maximum number of bands
- */
-#define AU915_MAX_NB_BANDS                          1
-
-/*!
- * Band 0 definition
- * { DutyCycle, TxMaxPower, LastJoinTxDoneTime, LastTxDoneTime, TimeOff }
- */
-#define AU915_BAND0                                 { 1, AU915_MAX_TX_POWER, 0, 0, 0 } //  100.0 %
-
-/*!
- * Defines the first channel for RX window 1 for US band
- */
-#define AU915_FIRST_RX1_CHANNEL                     ( (uint32_t) 923300000 )
-
-/*!
- * Defines the last channel for RX window 1 for US band
- */
-#define AU915_LAST_RX1_CHANNEL                      ( (uint32_t) 927500000 )
-
-/*!
- * Defines the step width of the channels for RX window 1
- */
-#define AU915_STEPWIDTH_RX1_CHANNEL                 ( (uint32_t) 600000 )
-
-/*!
- * Data rates table definition
- */
-static const uint8_t DataratesAU915[]  = { 12, 11, 10, 9, 8, 7, 8, 0, 12, 11, 10, 9, 8, 7, 0, 0 };
-
-/*!
- * Bandwidths table definition in Hz
- */
-static const uint32_t BandwidthsAU915[] = { 125000, 125000, 125000, 125000, 125000, 125000, 500000, 0, 500000, 500000, 500000, 500000, 500000, 500000, 0, 0 };
-
-/*!
- * Up/Down link data rates offset definition
- */
-static const int8_t DatarateOffsetsAU915[7][6] =
-{
-    { DR_8 , DR_8 , DR_8 , DR_8 , DR_8 , DR_8  }, // DR_0
-    { DR_9 , DR_8 , DR_8 , DR_8 , DR_8 , DR_8  }, // DR_1
-    { DR_10, DR_9 , DR_8 , DR_8 , DR_8 , DR_8  }, // DR_2
-    { DR_11, DR_10, DR_9 , DR_8 , DR_8 , DR_8  }, // DR_3
-    { DR_12, DR_11, DR_10, DR_9 , DR_8 , DR_8  }, // DR_4
-    { DR_13, DR_12, DR_11, DR_10, DR_9 , DR_8  }, // DR_5
-    { DR_13, DR_13, DR_12, DR_11, DR_10, DR_9  }, // DR_6
-};
-
-/*!
- * Maximum payload with respect to the datarate index.
- * The table is valid for the dwell time configuration of 0 for uplinks.
- */
-static const uint8_t MaxPayloadOfDatarateDwell0AU915[] = { 51, 51, 51, 115, 242, 242, 242, 0, 53, 129, 242, 242, 242, 242 };
-
-/*!
- * Maximum payload with respect to the datarate index.
- * The table is valid for the dwell time configuration of 1 for uplinks.
- */
-static const uint8_t MaxPayloadOfDatarateDwell1AU915[] = { 0, 0, 11, 53, 125, 242, 242, 0, 53, 129, 242, 242, 242, 242 };
-
-/*!
- * \brief The function gets a value of a specific phy attribute.
- *
- * \param [IN] getPhy Pointer to the function parameters.
- *
- * \retval Returns a structure containing the PHY parameter.
- */
-PhyParam_t RegionAU915GetPhyParam( GetPhyParams_t* getPhy );
-
-/*!
- * \brief Updates the last TX done parameters of the current channel.
- *
- * \param [IN] txDone Pointer to the function parameters.
- */
-void RegionAU915SetBandTxDone( SetBandTxDoneParams_t* txDone );
-
-/*!
- * \brief Initializes the channels masks and the channels.
- *
- * \param [IN] type Sets the initialization type.
- */
-void RegionAU915InitDefaults( InitDefaultsParams_t* params );
-
-/*!
- * \brief Returns a pointer to the internal context and its size.
- *
- * \param [OUT] params Pointer to the function parameters.
- *
- * \retval      Points to a structure where the module store its non-volatile context.
- */
-void* RegionAU915GetNvmCtx( GetNvmCtxParams_t* params );
-
-/*!
- * \brief Verifies a parameter.
- *
- * \param [IN] verify Pointer to the function parameters.
- *
- * \param [IN] type Sets the initialization type.
- *
- * \retval Returns true, if the parameter is valid.
- */
-bool RegionAU915Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute );
-
-/*!
- * \brief The function parses the input buffer and sets up the channels of the
- *        CF list.
- *
- * \param [IN] applyCFList Pointer to the function parameters.
- */
-void RegionAU915ApplyCFList( ApplyCFListParams_t* applyCFList );
-
-/*!
- * \brief Sets a channels mask.
- *
- * \param [IN] chanMaskSet Pointer to the function parameters.
- *
- * \retval Returns true, if the channels mask could be set.
- */
-bool RegionAU915ChanMaskSet( ChanMaskSetParams_t* chanMaskSet );
-
-/*!
- * Computes the Rx window timeout and offset.
- *
- * \param [IN] datarate     Rx window datarate index to be used
- *
- * \param [IN] minRxSymbols Minimum required number of symbols to detect an Rx frame.
- *
- * \param [IN] rxError      System maximum timing error of the receiver. In milliseconds
- *                          The receiver will turn on in a [-rxError : +rxError] ms
- *                          interval around RxOffset
- *
- * \param [OUT]rxConfigParams Returns updated WindowTimeout and WindowOffset fields.
- */
-void RegionAU915ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams );
-
-/*!
- * \brief Configuration of the RX windows.
- *
- * \param [IN] rxConfig Pointer to the function parameters.
- *
- * \param [OUT] datarate The datarate index which was set.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionAU915RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate );
-
-/*!
- * \brief TX configuration.
- *
- * \param [IN] txConfig Pointer to the function parameters.
- *
- * \param [OUT] txPower The tx power index which was set.
- *
- * \param [OUT] txTimeOnAir The time-on-air of the frame.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionAU915TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir );
-
-/*!
- * \brief The function processes a Link ADR Request.
- *
- * \param [IN] linkAdrReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionAU915LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed );
-
-/*!
- * \brief The function processes a RX Parameter Setup Request.
- *
- * \param [IN] rxParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionAU915RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq );
-
-/*!
- * \brief The function processes a Channel Request.
- *
- * \param [IN] newChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionAU915NewChannelReq( NewChannelReqParams_t* newChannelReq );
-
-/*!
- * \brief The function processes a TX ParamSetup Request.
- *
- * \param [IN] txParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- *         Returns -1, if the functionality is not implemented. In this case, the end node
- *         shall not process the command.
- */
-int8_t RegionAU915TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq );
-
-/*!
- * \brief The function processes a DlChannel Request.
- *
- * \param [IN] dlChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionAU915DlChannelReq( DlChannelReqParams_t* dlChannelReq );
-
-/*!
- * \brief Alternates the datarate of the channel for the join request.
- *
- * \param [IN] currentDr Current datarate.
- *
- * \retval Datarate to apply.
- */
-int8_t RegionAU915AlternateDr( int8_t currentDr, AlternateDrType_t type );
-
-/*!
- * \brief Calculates the back-off time.
- *
- * \param [IN] calcBackOff Pointer to the function parameters.
- */
-void RegionAU915CalcBackOff( CalcBackOffParams_t* calcBackOff );
-
-/*!
- * \brief Searches and set the next random available channel
- *
- * \param [OUT] channel Next channel to use for TX.
- *
- * \param [OUT] time Time to wait for the next transmission according to the duty
- *              cycle.
- *
- * \param [OUT] aggregatedTimeOff Updates the aggregated time off.
- *
- * \retval Function status [1: OK, 0: Unable to find a channel on the current datarate]
- */
-LoRaMacStatus_t RegionAU915NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff );
-
-/*!
- * \brief Adds a channel.
- *
- * \param [IN] channelAdd Pointer to the function parameters.
- *
- * \retval Status of the operation.
- */
-LoRaMacStatus_t RegionAU915ChannelAdd( ChannelAddParams_t* channelAdd );
-
-/*!
- * \brief Removes a channel.
- *
- * \param [IN] channelRemove Pointer to the function parameters.
- *
- * \retval Returns true, if the channel was removed successfully.
- */
-bool RegionAU915ChannelsRemove( ChannelRemoveParams_t* channelRemove  );
-
-/*!
- * \brief Sets the radio into continuous wave mode.
- *
- * \param [IN] continuousWave Pointer to the function parameters.
- */
-void RegionAU915SetContinuousWave( ContinuousWaveParams_t* continuousWave );
-
-/*!
- * \brief Computes new datarate according to the given offset
- *
- * \param [IN] downlinkDwellTime Downlink dwell time configuration. 0: No limit, 1: 400ms
- *
- * \param [IN] dr Current datarate
- *
- * \param [IN] drOffset Offset to be applied
- *
- * \retval newDr Computed datarate.
- */
-uint8_t RegionAU915ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset );
-
-/*!
- * \brief Sets the radio into beacon reception mode
- *
- * \param [IN] rxBeaconSetup Pointer to the function parameters
- */
- void RegionAU915RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr );
-
-/*! \} defgroup REGIONAU915 */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __REGION_AU915_H__
diff --git a/mac/region/RegionCN470.c b/mac/region/RegionCN470.c
deleted file mode 100644
index 7605d71..0000000
--- a/mac/region/RegionCN470.c
+++ /dev/null
@@ -1,779 +0,0 @@
-/*!
- * \file      RegionCN470.c
- *
- * \brief     Region implementation for CN470
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
-*/
-#include "utilities.h"
-
-#include "RegionCommon.h"
-#include "RegionCN470.h"
-
-// Definitions
-#define CHANNELS_MASK_SIZE              6
-
-/*!
- * Region specific context
- */
-typedef struct sRegionCN470NvmCtx
-{
-    /*!
-     * LoRaMAC channels
-     */
-    ChannelParams_t Channels[ CN470_MAX_NB_CHANNELS ];
-    /*!
-     * LoRaMac bands
-     */
-    Band_t Bands[ CN470_MAX_NB_BANDS ];
-    /*!
-     * LoRaMac channels mask
-     */
-    uint16_t ChannelsMask[ CHANNELS_MASK_SIZE ];
-    /*!
-     * LoRaMac channels default mask
-     */
-    uint16_t ChannelsDefaultMask[ CHANNELS_MASK_SIZE ];
-}RegionCN470NvmCtx_t;
-
-/*
- * Non-volatile module context.
- */
-static RegionCN470NvmCtx_t NvmCtx;
-
-// Static functions
-static int8_t GetNextLowerTxDr( int8_t dr, int8_t minDr )
-{
-    uint8_t nextLowerDr = 0;
-
-    if( dr == minDr )
-    {
-        nextLowerDr = minDr;
-    }
-    else
-    {
-        nextLowerDr = dr - 1;
-    }
-    return nextLowerDr;
-}
-
-static uint32_t GetBandwidth( uint32_t drIndex )
-{
-    switch( BandwidthsCN470[drIndex] )
-    {
-        default:
-        case 125000:
-            return 0;
-        case 250000:
-            return 1;
-        case 500000:
-            return 2;
-    }
-}
-
-static int8_t LimitTxPower( int8_t txPower, int8_t maxBandTxPower, int8_t datarate, uint16_t* channelsMask )
-{
-    int8_t txPowerResult = txPower;
-
-    // Limit tx power to the band max
-    txPowerResult =  MAX( txPower, maxBandTxPower );
-
-    return txPowerResult;
-}
-
-static bool VerifyRfFreq( uint32_t freq )
-{
-    // Check radio driver support
-    if( Radio.CheckRfFrequency( freq ) == false )
-    {
-        return false;
-    }
-
-    // Rx frequencies
-    if( ( freq < CN470_FIRST_RX1_CHANNEL ) ||
-        ( freq > CN470_LAST_RX1_CHANNEL ) ||
-        ( ( ( freq - ( uint32_t ) CN470_FIRST_RX1_CHANNEL ) % ( uint32_t ) CN470_STEPWIDTH_RX1_CHANNEL ) != 0 ) )
-    {
-        return false;
-    }
-
-    // Test for frequency range - take RX and TX freqencies into account
-    if( ( freq < 470300000 ) ||  ( freq > 509700000 ) )
-    {
-        return false;
-    }
-    return true;
-}
-
-PhyParam_t RegionCN470GetPhyParam( GetPhyParams_t* getPhy )
-{
-    PhyParam_t phyParam = { 0 };
-
-    switch( getPhy->Attribute )
-    {
-        case PHY_MIN_RX_DR:
-        {
-            phyParam.Value = CN470_RX_MIN_DATARATE;
-            break;
-        }
-        case PHY_MIN_TX_DR:
-        {
-            phyParam.Value = CN470_TX_MIN_DATARATE;
-            break;
-        }
-        case PHY_DEF_TX_DR:
-        {
-            phyParam.Value = CN470_DEFAULT_DATARATE;
-            break;
-        }
-        case PHY_NEXT_LOWER_TX_DR:
-        {
-            phyParam.Value = GetNextLowerTxDr( getPhy->Datarate, CN470_TX_MIN_DATARATE );
-            break;
-        }
-        case PHY_MAX_TX_POWER:
-        {
-            phyParam.Value = CN470_MAX_TX_POWER;
-            break;
-        }
-        case PHY_DEF_TX_POWER:
-        {
-            phyParam.Value = CN470_DEFAULT_TX_POWER;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_LIMIT:
-        {
-            phyParam.Value = CN470_ADR_ACK_LIMIT;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_DELAY:
-        {
-            phyParam.Value = CN470_ADR_ACK_DELAY;
-            break;
-        }
-        case PHY_MAX_PAYLOAD:
-        {
-            phyParam.Value = MaxPayloadOfDatarateCN470[getPhy->Datarate];
-            break;
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            phyParam.Value = CN470_DUTY_CYCLE_ENABLED;
-            break;
-        }
-        case PHY_MAX_RX_WINDOW:
-        {
-            phyParam.Value = CN470_MAX_RX_WINDOW;
-            break;
-        }
-        case PHY_RECEIVE_DELAY1:
-        {
-            phyParam.Value = CN470_RECEIVE_DELAY1;
-            break;
-        }
-        case PHY_RECEIVE_DELAY2:
-        {
-            phyParam.Value = CN470_RECEIVE_DELAY2;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY1:
-        {
-            phyParam.Value = CN470_JOIN_ACCEPT_DELAY1;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY2:
-        {
-            phyParam.Value = CN470_JOIN_ACCEPT_DELAY2;
-            break;
-        }
-        case PHY_MAX_FCNT_GAP:
-        {
-            phyParam.Value = CN470_MAX_FCNT_GAP;
-            break;
-        }
-        case PHY_ACK_TIMEOUT:
-        {
-            phyParam.Value = ( CN470_ACKTIMEOUT + randr( -CN470_ACK_TIMEOUT_RND, CN470_ACK_TIMEOUT_RND ) );
-            break;
-        }
-        case PHY_DEF_DR1_OFFSET:
-        {
-            phyParam.Value = CN470_DEFAULT_RX1_DR_OFFSET;
-            break;
-        }
-        case PHY_DEF_RX2_FREQUENCY:
-        {
-            phyParam.Value = CN470_RX_WND_2_FREQ;
-            break;
-        }
-        case PHY_DEF_RX2_DR:
-        {
-            phyParam.Value = CN470_RX_WND_2_DR;
-            break;
-        }
-        case PHY_CHANNELS_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsMask;
-            break;
-        }
-        case PHY_CHANNELS_DEFAULT_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsDefaultMask;
-            break;
-        }
-        case PHY_MAX_NB_CHANNELS:
-        {
-            phyParam.Value = CN470_MAX_NB_CHANNELS;
-            break;
-        }
-        case PHY_CHANNELS:
-        {
-            phyParam.Channels = NvmCtx.Channels;
-            break;
-        }
-        case PHY_DEF_UPLINK_DWELL_TIME:
-        case PHY_DEF_DOWNLINK_DWELL_TIME:
-        {
-            phyParam.Value = 0;
-            break;
-        }
-        case PHY_DEF_MAX_EIRP:
-        {
-            phyParam.fValue = CN470_DEFAULT_MAX_EIRP;
-            break;
-        }
-        case PHY_DEF_ANTENNA_GAIN:
-        {
-            phyParam.fValue = CN470_DEFAULT_ANTENNA_GAIN;
-            break;
-        }
-        case PHY_BEACON_FORMAT:
-        {
-            phyParam.BeaconFormat.BeaconSize = CN470_BEACON_SIZE;
-            phyParam.BeaconFormat.Rfu1Size = CN470_RFU1_SIZE;
-            phyParam.BeaconFormat.Rfu2Size = CN470_RFU2_SIZE;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_DR:
-        {
-            phyParam.Value = CN470_BEACON_CHANNEL_DR;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_STEPWIDTH:
-        {
-            phyParam.Value = CN470_BEACON_CHANNEL_STEPWIDTH;
-            break;
-        }
-        case PHY_BEACON_NB_CHANNELS:
-        {
-            phyParam.Value = CN470_BEACON_NB_CHANNELS;
-            break;
-        }
-        case PHY_PING_SLOT_CHANNEL_DR:
-        {
-            phyParam.Value = CN470_PING_SLOT_CHANNEL_DR;
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-
-    return phyParam;
-}
-
-void RegionCN470SetBandTxDone( SetBandTxDoneParams_t* txDone )
-{
-    RegionCommonSetBandTxDone( txDone->Joined, &NvmCtx.Bands[NvmCtx.Channels[txDone->Channel].Band], txDone->LastTxDoneTime );
-}
-
-void RegionCN470InitDefaults( InitDefaultsParams_t* params )
-{
-    Band_t bands[CN470_MAX_NB_BANDS] =
-    {
-        CN470_BAND0
-    };
-
-    switch( params->Type )
-    {
-        case INIT_TYPE_BANDS:
-        {
-            // Initialize bands
-            memcpy1( ( uint8_t* )NvmCtx.Bands, ( uint8_t* )bands, sizeof( Band_t ) * CN470_MAX_NB_BANDS );
-            break;
-        }
-        case INIT_TYPE_INIT:
-        {
-            // Channels
-            // 125 kHz channels
-            for( uint8_t i = 0; i < CN470_MAX_NB_CHANNELS; i++ )
-            {
-                NvmCtx.Channels[i].Frequency = 470300000 + i * 200000;
-                NvmCtx.Channels[i].DrRange.Value = ( DR_5 << 4 ) | DR_0;
-                NvmCtx.Channels[i].Band = 0;
-            }
-
-            // Initialize the channels default mask
-            NvmCtx.ChannelsDefaultMask[0] = 0xFFFF;
-            NvmCtx.ChannelsDefaultMask[1] = 0xFFFF;
-            NvmCtx.ChannelsDefaultMask[2] = 0xFFFF;
-            NvmCtx.ChannelsDefaultMask[3] = 0xFFFF;
-            NvmCtx.ChannelsDefaultMask[4] = 0xFFFF;
-            NvmCtx.ChannelsDefaultMask[5] = 0xFFFF;
-
-            // Update the channels mask
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, NvmCtx.ChannelsDefaultMask, 6 );
-            break;
-        }
-        case INIT_TYPE_RESTORE_CTX:
-        {
-            if( params->NvmCtx != 0 )
-            {
-                memcpy1( (uint8_t*) &NvmCtx, (uint8_t*) params->NvmCtx, sizeof( NvmCtx ) );
-            }
-            break;
-        }
-        case INIT_TYPE_RESTORE_DEFAULT_CHANNELS:
-        {
-            // Restore channels default mask
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, NvmCtx.ChannelsDefaultMask, 6 );
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-}
-
-void* RegionCN470GetNvmCtx( GetNvmCtxParams_t* params )
-{
-    params->nvmCtxSize = sizeof( RegionCN470NvmCtx_t );
-    return &NvmCtx;
-}
-
-bool RegionCN470Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute )
-{
-    switch( phyAttribute )
-    {
-        case PHY_FREQUENCY:
-        {
-            return VerifyRfFreq( verify->Frequency );
-        }
-        case PHY_TX_DR:
-        case PHY_DEF_TX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, CN470_TX_MIN_DATARATE, CN470_TX_MAX_DATARATE );
-        }
-        case PHY_RX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, CN470_RX_MIN_DATARATE, CN470_RX_MAX_DATARATE );
-        }
-        case PHY_DEF_TX_POWER:
-        case PHY_TX_POWER:
-        {
-            // Remark: switched min and max!
-            return RegionCommonValueInRange( verify->TxPower, CN470_MAX_TX_POWER, CN470_MIN_TX_POWER );
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            return CN470_DUTY_CYCLE_ENABLED;
-        }
-        default:
-            return false;
-    }
-}
-
-void RegionCN470ApplyCFList( ApplyCFListParams_t* applyCFList )
-{
-    // Size of the optional CF list must be 16 byte
-    if( applyCFList->Size != 16 )
-    {
-        return;
-    }
-
-    // Last byte CFListType must be 0x01 to indicate the CFList contains a series of ChMask fields
-    if( applyCFList->Payload[15] != 0x01 )
-    {
-        return;
-    }
-
-    // ChMask0 - ChMask5 must be set (every ChMask has 16 bit)
-    for( uint8_t chMaskItr = 0, cntPayload = 0; chMaskItr <= 5; chMaskItr++, cntPayload+=2 )
-    {
-        NvmCtx.ChannelsMask[chMaskItr] = (uint16_t) (0x00FF & applyCFList->Payload[cntPayload]);
-        NvmCtx.ChannelsMask[chMaskItr] |= (uint16_t) (applyCFList->Payload[cntPayload+1] << 8);
-    }
-}
-
-bool RegionCN470ChanMaskSet( ChanMaskSetParams_t* chanMaskSet )
-{
-    switch( chanMaskSet->ChannelsMaskType )
-    {
-        case CHANNELS_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, chanMaskSet->ChannelsMaskIn, 6 );
-            break;
-        }
-        case CHANNELS_DEFAULT_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsDefaultMask, chanMaskSet->ChannelsMaskIn, 6 );
-            break;
-        }
-        default:
-            return false;
-    }
-    return true;
-}
-
-void RegionCN470ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams )
-{
-    double tSymbol = 0.0;
-
-    // Get the datarate, perform a boundary check
-    rxConfigParams->Datarate = MIN( datarate, CN470_RX_MAX_DATARATE );
-    rxConfigParams->Bandwidth = GetBandwidth( rxConfigParams->Datarate );
-
-    tSymbol = RegionCommonComputeSymbolTimeLoRa( DataratesCN470[rxConfigParams->Datarate], BandwidthsCN470[rxConfigParams->Datarate] );
-
-    RegionCommonComputeRxWindowParameters( tSymbol, minRxSymbols, rxError, Radio.GetWakeupTime( ), &rxConfigParams->WindowTimeout, &rxConfigParams->WindowOffset );
-}
-
-bool RegionCN470RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate )
-{
-    int8_t dr = rxConfig->Datarate;
-    int8_t phyDr = 0;
-    uint32_t frequency = rxConfig->Frequency;
-
-    if( Radio.GetStatus( ) != RF_IDLE )
-    {
-        return false;
-    }
-
-    if( rxConfig->RxSlot == RX_SLOT_WIN_1 )
-    {
-        // Apply window 1 frequency
-        frequency = CN470_FIRST_RX1_CHANNEL + ( rxConfig->Channel % 48 ) * CN470_STEPWIDTH_RX1_CHANNEL;
-    }
-
-    // Read the physical datarate from the datarates table
-    phyDr = DataratesCN470[dr];
-
-    Radio.SetChannel( frequency );
-
-    // Radio configuration
-    Radio.SetRxConfig( MODEM_LORA, rxConfig->Bandwidth, phyDr, 1, 0, 8, rxConfig->WindowTimeout, false, 0, false, 0, 0, true, rxConfig->RxContinuous );
-
-    Radio.SetMaxPayloadLength( MODEM_LORA, MaxPayloadOfDatarateCN470[dr] + LORA_MAC_FRMPAYLOAD_OVERHEAD );
-
-    *datarate = (uint8_t) dr;
-    return true;
-}
-
-bool RegionCN470TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir )
-{
-    int8_t phyDr = DataratesCN470[txConfig->Datarate];
-    int8_t txPowerLimited = LimitTxPower( txConfig->TxPower, NvmCtx.Bands[NvmCtx.Channels[txConfig->Channel].Band].TxMaxPower, txConfig->Datarate, NvmCtx.ChannelsMask );
-    int8_t phyTxPower = 0;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, txConfig->MaxEirp, txConfig->AntennaGain );
-
-    // Setup the radio frequency
-    Radio.SetChannel( NvmCtx.Channels[txConfig->Channel].Frequency );
-
-    Radio.SetTxConfig( MODEM_LORA, phyTxPower, 0, 0, phyDr, 1, 8, false, true, 0, 0, false, 4000 );
-    // Setup maximum payload lenght of the radio driver
-    Radio.SetMaxPayloadLength( MODEM_LORA, txConfig->PktLen );
-    // Get the time-on-air of the next tx frame
-    *txTimeOnAir = Radio.TimeOnAir( MODEM_LORA, txConfig->PktLen );
-    *txPower = txPowerLimited;
-
-    return true;
-}
-
-uint8_t RegionCN470LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed )
-{
-    uint8_t status = 0x07;
-    RegionCommonLinkAdrParams_t linkAdrParams;
-    uint8_t nextIndex = 0;
-    uint8_t bytesProcessed = 0;
-    uint16_t channelsMask[6] = { 0, 0, 0, 0, 0, 0 };
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-    RegionCommonLinkAdrReqVerifyParams_t linkAdrVerifyParams;
-
-    // Initialize local copy of channels mask
-    RegionCommonChanMaskCopy( channelsMask, NvmCtx.ChannelsMask, 6 );
-
-    while( bytesProcessed < linkAdrReq->PayloadSize )
-    {
-        // Get ADR request parameters
-        nextIndex = RegionCommonParseLinkAdrReq( &( linkAdrReq->Payload[bytesProcessed] ), &linkAdrParams );
-
-        if( nextIndex == 0 )
-            break; // break loop, since no more request has been found
-
-        // Update bytes processed
-        bytesProcessed += nextIndex;
-
-        // Revert status, as we only check the last ADR request for the channel mask KO
-        status = 0x07;
-
-        if( linkAdrParams.ChMaskCtrl == 6 )
-        {
-            // Enable all 125 kHz channels
-            channelsMask[0] = 0xFFFF;
-            channelsMask[1] = 0xFFFF;
-            channelsMask[2] = 0xFFFF;
-            channelsMask[3] = 0xFFFF;
-            channelsMask[4] = 0xFFFF;
-            channelsMask[5] = 0xFFFF;
-        }
-        else if( linkAdrParams.ChMaskCtrl == 7 )
-        {
-            status &= 0xFE; // Channel mask KO
-        }
-        else
-        {
-            for( uint8_t i = 0; i < 16; i++ )
-            {
-                if( ( ( linkAdrParams.ChMask & ( 1 << i ) ) != 0 ) &&
-                    ( NvmCtx.Channels[linkAdrParams.ChMaskCtrl * 16 + i].Frequency == 0 ) )
-                {// Trying to enable an undefined channel
-                    status &= 0xFE; // Channel mask KO
-                }
-            }
-            channelsMask[linkAdrParams.ChMaskCtrl] = linkAdrParams.ChMask;
-        }
-    }
-
-    // Get the minimum possible datarate
-    getPhy.Attribute = PHY_MIN_TX_DR;
-    getPhy.UplinkDwellTime = linkAdrReq->UplinkDwellTime;
-    phyParam = RegionCN470GetPhyParam( &getPhy );
-
-    linkAdrVerifyParams.Status = status;
-    linkAdrVerifyParams.AdrEnabled = linkAdrReq->AdrEnabled;
-    linkAdrVerifyParams.Datarate = linkAdrParams.Datarate;
-    linkAdrVerifyParams.TxPower = linkAdrParams.TxPower;
-    linkAdrVerifyParams.NbRep = linkAdrParams.NbRep;
-    linkAdrVerifyParams.CurrentDatarate = linkAdrReq->CurrentDatarate;
-    linkAdrVerifyParams.CurrentTxPower = linkAdrReq->CurrentTxPower;
-    linkAdrVerifyParams.CurrentNbRep = linkAdrReq->CurrentNbRep;
-    linkAdrVerifyParams.NbChannels = CN470_MAX_NB_CHANNELS;
-    linkAdrVerifyParams.ChannelsMask = channelsMask;
-    linkAdrVerifyParams.MinDatarate = ( int8_t )phyParam.Value;
-    linkAdrVerifyParams.MaxDatarate = CN470_TX_MAX_DATARATE;
-    linkAdrVerifyParams.Channels = NvmCtx.Channels;
-    linkAdrVerifyParams.MinTxPower = CN470_MIN_TX_POWER;
-    linkAdrVerifyParams.MaxTxPower = CN470_MAX_TX_POWER;
-    linkAdrVerifyParams.Version = linkAdrReq->Version;
-
-    // Verify the parameters and update, if necessary
-    status = RegionCommonLinkAdrReqVerifyParams( &linkAdrVerifyParams, &linkAdrParams.Datarate, &linkAdrParams.TxPower, &linkAdrParams.NbRep );
-
-    // Update channelsMask if everything is correct
-    if( status == 0x07 )
-    {
-        // Copy Mask
-        RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, channelsMask, 6 );
-    }
-
-    // Update status variables
-    *drOut = linkAdrParams.Datarate;
-    *txPowOut = linkAdrParams.TxPower;
-    *nbRepOut = linkAdrParams.NbRep;
-    *nbBytesParsed = bytesProcessed;
-
-    return status;
-}
-
-uint8_t RegionCN470RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq )
-{
-    uint8_t status = 0x07;
-
-    // Verify radio frequency
-    if( VerifyRfFreq( rxParamSetupReq->Frequency ) == false )
-    {
-        status &= 0xFE; // Channel frequency KO
-    }
-
-    // Verify datarate
-    if( RegionCommonValueInRange( rxParamSetupReq->Datarate, CN470_RX_MIN_DATARATE, CN470_RX_MAX_DATARATE ) == false )
-    {
-        status &= 0xFD; // Datarate KO
-    }
-
-    // Verify datarate offset
-    if( RegionCommonValueInRange( rxParamSetupReq->DrOffset, CN470_MIN_RX1_DR_OFFSET, CN470_MAX_RX1_DR_OFFSET ) == false )
-    {
-        status &= 0xFB; // Rx1DrOffset range KO
-    }
-
-    return status;
-}
-
-uint8_t RegionCN470NewChannelReq( NewChannelReqParams_t* newChannelReq )
-{
-    // Datarate and frequency KO
-    return 0;
-}
-
-int8_t RegionCN470TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq )
-{
-    return -1;
-}
-
-uint8_t RegionCN470DlChannelReq( DlChannelReqParams_t* dlChannelReq )
-{
-    return 0;
-}
-
-int8_t RegionCN470AlternateDr( int8_t currentDr, AlternateDrType_t type )
-{
-    return currentDr;
-}
-
-void RegionCN470CalcBackOff( CalcBackOffParams_t* calcBackOff )
-{
-    RegionCommonCalcBackOffParams_t calcBackOffParams;
-
-    calcBackOffParams.Channels = NvmCtx.Channels;
-    calcBackOffParams.Bands = NvmCtx.Bands;
-    calcBackOffParams.LastTxIsJoinRequest = calcBackOff->LastTxIsJoinRequest;
-    calcBackOffParams.Joined = calcBackOff->Joined;
-    calcBackOffParams.DutyCycleEnabled = calcBackOff->DutyCycleEnabled;
-    calcBackOffParams.Channel = calcBackOff->Channel;
-    calcBackOffParams.ElapsedTime = calcBackOff->ElapsedTime;
-    calcBackOffParams.TxTimeOnAir = calcBackOff->TxTimeOnAir;
-
-    RegionCommonCalcBackOff( &calcBackOffParams );
-}
-
-LoRaMacStatus_t RegionCN470NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff )
-{
-    uint8_t nbEnabledChannels = 0;
-    uint8_t nbRestrictedChannels = 0;
-    uint8_t enabledChannels[CN470_MAX_NB_CHANNELS] = { 0 };
-    RegionCommonIdentifyChannelsParam_t identifyChannelsParam;
-    RegionCommonCountNbOfEnabledChannelsParams_t countChannelsParams;
-    LoRaMacStatus_t status = LORAMAC_STATUS_NO_CHANNEL_FOUND;
-
-    // Count 125kHz channels
-    if( RegionCommonCountChannels( NvmCtx.ChannelsMask, 0, 6 ) == 0 )
-    { // Reactivate default channels
-        NvmCtx.ChannelsMask[0] = 0xFFFF;
-        NvmCtx.ChannelsMask[1] = 0xFFFF;
-        NvmCtx.ChannelsMask[2] = 0xFFFF;
-        NvmCtx.ChannelsMask[3] = 0xFFFF;
-        NvmCtx.ChannelsMask[4] = 0xFFFF;
-        NvmCtx.ChannelsMask[5] = 0xFFFF;
-    }
-
-    // Search how many channels are enabled
-    countChannelsParams.Joined = nextChanParams->Joined;
-    countChannelsParams.Datarate = nextChanParams->Datarate;
-    countChannelsParams.ChannelsMask = NvmCtx.ChannelsMask;
-    countChannelsParams.Channels = NvmCtx.Channels;
-    countChannelsParams.Bands = NvmCtx.Bands;
-    countChannelsParams.MaxNbChannels = CN470_MAX_NB_CHANNELS;
-    countChannelsParams.JoinChannels = 0;
-
-    identifyChannelsParam.AggrTimeOff = nextChanParams->AggrTimeOff;
-    identifyChannelsParam.LastAggrTx = nextChanParams->LastAggrTx;
-    identifyChannelsParam.DutyCycleEnabled = nextChanParams->DutyCycleEnabled;
-    identifyChannelsParam.MaxBands = CN470_MAX_NB_BANDS;
-
-    identifyChannelsParam.CountNbOfEnabledChannelsParam = &countChannelsParams;
-
-    status = RegionCommonIdentifyChannels( &identifyChannelsParam, aggregatedTimeOff, enabledChannels,
-                                           &nbEnabledChannels, &nbRestrictedChannels, time );
-
-    if( nextChanParams->QueryNextTxDelayOnly == true )
-    {
-        return status;
-    }
-
-    if( status == LORAMAC_STATUS_OK )
-    {
-        // We found a valid channel
-        *channel = enabledChannels[randr( 0, nbEnabledChannels - 1 )];
-    }
-    return status;
-}
-
-LoRaMacStatus_t RegionCN470ChannelAdd( ChannelAddParams_t* channelAdd )
-{
-    return LORAMAC_STATUS_PARAMETER_INVALID;
-}
-
-bool RegionCN470ChannelsRemove( ChannelRemoveParams_t* channelRemove  )
-{
-    return LORAMAC_STATUS_PARAMETER_INVALID;
-}
-
-void RegionCN470SetContinuousWave( ContinuousWaveParams_t* continuousWave )
-{
-    int8_t txPowerLimited = LimitTxPower( continuousWave->TxPower, NvmCtx.Bands[NvmCtx.Channels[continuousWave->Channel].Band].TxMaxPower, continuousWave->Datarate, NvmCtx.ChannelsMask );
-    int8_t phyTxPower = 0;
-    uint32_t frequency = NvmCtx.Channels[continuousWave->Channel].Frequency;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, continuousWave->MaxEirp, continuousWave->AntennaGain );
-
-    Radio.SetTxContinuousWave( frequency, phyTxPower, continuousWave->Timeout );
-}
-
-uint8_t RegionCN470ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset )
-{
-    int8_t datarate = dr - drOffset;
-
-    if( datarate < 0 )
-    {
-        datarate = DR_0;
-    }
-    return datarate;
-}
-
-void RegionCN470RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr )
-{
-    RegionCommonRxBeaconSetupParams_t regionCommonRxBeaconSetup;
-
-    regionCommonRxBeaconSetup.Datarates = DataratesCN470;
-    regionCommonRxBeaconSetup.Frequency = rxBeaconSetup->Frequency;
-    regionCommonRxBeaconSetup.BeaconSize = CN470_BEACON_SIZE;
-    regionCommonRxBeaconSetup.BeaconDatarate = CN470_BEACON_CHANNEL_DR;
-    regionCommonRxBeaconSetup.BeaconChannelBW = CN470_BEACON_CHANNEL_BW;
-    regionCommonRxBeaconSetup.RxTime = rxBeaconSetup->RxTime;
-    regionCommonRxBeaconSetup.SymbolTimeout = rxBeaconSetup->SymbolTimeout;
-
-    RegionCommonRxBeaconSetup( &regionCommonRxBeaconSetup );
-
-    // Store downlink datarate
-    *outDr = CN470_BEACON_CHANNEL_DR;
-}
diff --git a/mac/region/RegionCN470.h b/mac/region/RegionCN470.h
deleted file mode 100644
index 5293cd9..0000000
--- a/mac/region/RegionCN470.h
+++ /dev/null
@@ -1,498 +0,0 @@
-/*!
- * \file      RegionCN470.h
- *
- * \brief     Region definition for CN470
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * \defgroup  REGIONCN470 Region CN470
- *            Implementation according to LoRaWAN Specification v1.0.2.
- * \{
- */
-#ifndef __REGION_CN470_H__
-#define __REGION_CN470_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include "region/Region.h"
-
-/*!
- * LoRaMac maximum number of channels
- */
-#define CN470_MAX_NB_CHANNELS                        96
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define CN470_TX_MIN_DATARATE                       DR_0
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define CN470_TX_MAX_DATARATE                       DR_5
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define CN470_RX_MIN_DATARATE                       DR_0
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define CN470_RX_MAX_DATARATE                       DR_5
-
-/*!
- * Default datarate used by the node
- */
-#define CN470_DEFAULT_DATARATE                      DR_0
-
-/*!
- * Minimal Rx1 receive datarate offset
- */
-#define CN470_MIN_RX1_DR_OFFSET                     0
-
-/*!
- * Maximal Rx1 receive datarate offset
- */
-#define CN470_MAX_RX1_DR_OFFSET                     3
-
-/*!
- * Default Rx1 receive datarate offset
- */
-#define CN470_DEFAULT_RX1_DR_OFFSET                 0
-
-/*!
- * Minimal Tx output power that can be used by the node
- */
-#define CN470_MIN_TX_POWER                        TX_POWER_7
-
-/*!
- * Maximal Tx output power that can be used by the node
- */
-#define CN470_MAX_TX_POWER                        TX_POWER_0
-
-/*!
- * Default Tx output power used by the node
- */
-#define CN470_DEFAULT_TX_POWER                    TX_POWER_0
-
-/*!
- * Default Max EIRP
- */
-#define CN470_DEFAULT_MAX_EIRP                      19.15f
-
-/*!
- * Default antenna gain
- */
-#define CN470_DEFAULT_ANTENNA_GAIN                  2.15f
-
-/*!
- * ADR Ack limit
- */
-#define CN470_ADR_ACK_LIMIT                         64
-
-/*!
- * ADR Ack delay
- */
-#define CN470_ADR_ACK_DELAY                         32
-
-/*!
- * Enabled or disabled the duty cycle
- */
-#define CN470_DUTY_CYCLE_ENABLED                    0
-
-/*!
- * Maximum RX window duration
- */
-#define CN470_MAX_RX_WINDOW                         3000
-
-/*!
- * Receive delay 1
- */
-#define CN470_RECEIVE_DELAY1                        1000
-
-/*!
- * Receive delay 2
- */
-#define CN470_RECEIVE_DELAY2                        2000
-
-/*!
- * Join accept delay 1
- */
-#define CN470_JOIN_ACCEPT_DELAY1                    5000
-
-/*!
- * Join accept delay 2
- */
-#define CN470_JOIN_ACCEPT_DELAY2                    6000
-
-/*!
- * Maximum frame counter gap
- */
-#define CN470_MAX_FCNT_GAP                          16384
-
-/*!
- * Ack timeout
- */
-#define CN470_ACKTIMEOUT                            2000
-
-/*!
- * Random ack timeout limits
- */
-#define CN470_ACK_TIMEOUT_RND                       1000
-
-/*!
- * Second reception window channel frequency definition.
- */
-#define CN470_RX_WND_2_FREQ                         505300000
-
-/*!
- * Second reception window channel datarate definition.
- */
-#define CN470_RX_WND_2_DR                           DR_0
-
-/*
- * CLASS B
- */
-/*!
- * Beacon frequency
- */
-#define CN470_BEACON_CHANNEL_FREQ                   508300000
-
-/*!
- * Beacon frequency channel stepwidth
- */
-#define CN470_BEACON_CHANNEL_STEPWIDTH              200000
-
-/*!
- * Number of possible beacon channels
- */
-#define CN470_BEACON_NB_CHANNELS                    8
-
-/*!
- * Payload size of a beacon frame
- */
-#define CN470_BEACON_SIZE                           19
-
-/*!
- * Size of RFU 1 field
- */
-#define CN470_RFU1_SIZE                             3
-
-/*!
- * Size of RFU 2 field
- */
-#define CN470_RFU2_SIZE                             1
-
-/*!
- * Datarate of the beacon channel
- */
-#define CN470_BEACON_CHANNEL_DR                     DR_2
-
-/*!
- * Bandwith of the beacon channel
- */
-#define CN470_BEACON_CHANNEL_BW                     0
-
-/*!
- * Ping slot channel datarate
- */
-#define CN470_PING_SLOT_CHANNEL_DR                  DR_2
-
-/*!
- * LoRaMac maximum number of bands
- */
-#define CN470_MAX_NB_BANDS                          1
-
-/*!
- * Band 0 definition
- * { DutyCycle, TxMaxPower, LastJoinTxDoneTime, LastTxDoneTime, TimeOff }
- */
-#define CN470_BAND0                                 { 1, CN470_MAX_TX_POWER, 0, 0, 0 } //  100.0 %
-
-/*!
- * Defines the first channel for RX window 1 for CN470 band
- */
-#define CN470_FIRST_RX1_CHANNEL                     ( (uint32_t) 500300000 )
-
-/*!
- * Defines the last channel for RX window 1 for CN470 band
- */
-#define CN470_LAST_RX1_CHANNEL                      ( (uint32_t) 509700000 )
-
-/*!
- * Defines the step width of the channels for RX window 1
- */
-#define CN470_STEPWIDTH_RX1_CHANNEL                 ( (uint32_t) 200000 )
-
-/*!
- * Data rates table definition
- */
-static const uint8_t DataratesCN470[]  = { 12, 11, 10,  9,  8,  7 };
-
-/*!
- * Bandwidths table definition in Hz
- */
-static const uint32_t BandwidthsCN470[] = { 125000, 125000, 125000, 125000, 125000, 125000 };
-
-/*!
- * Maximum payload with respect to the datarate index.
- */
-static const uint8_t MaxPayloadOfDatarateCN470[] = { 51, 51, 51, 115, 242, 242 };
-
-/*!
- * \brief The function gets a value of a specific phy attribute.
- *
- * \param [IN] getPhy Pointer to the function parameters.
- *
- * \retval Returns a structure containing the PHY parameter.
- */
-PhyParam_t RegionCN470GetPhyParam( GetPhyParams_t* getPhy );
-
-/*!
- * \brief Updates the last TX done parameters of the current channel.
- *
- * \param [IN] txDone Pointer to the function parameters.
- */
-void RegionCN470SetBandTxDone( SetBandTxDoneParams_t* txDone );
-
-/*!
- * \brief Initializes the channels masks and the channels.
- *
- * \param [IN] type Sets the initialization type.
- */
-void RegionCN470InitDefaults( InitDefaultsParams_t* params );
-
-/*!
- * \brief Returns a pointer to the internal context and its size.
- *
- * \param [OUT] params Pointer to the function parameters.
- *
- * \retval      Points to a structure where the module store its non-volatile context.
- */
-void* RegionCN470GetNvmCtx( GetNvmCtxParams_t* params );
-
-/*!
- * \brief Verifies a parameter.
- *
- * \param [IN] verify Pointer to the function parameters.
- *
- * \param [IN] type Sets the initialization type.
- *
- * \retval Returns true, if the parameter is valid.
- */
-bool RegionCN470Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute );
-
-/*!
- * \brief The function parses the input buffer and sets up the channels of the
- *        CF list.
- *
- * \param [IN] applyCFList Pointer to the function parameters.
- */
-void RegionCN470ApplyCFList( ApplyCFListParams_t* applyCFList );
-
-/*!
- * \brief Sets a channels mask.
- *
- * \param [IN] chanMaskSet Pointer to the function parameters.
- *
- * \retval Returns true, if the channels mask could be set.
- */
-bool RegionCN470ChanMaskSet( ChanMaskSetParams_t* chanMaskSet );
-
-/*!
- * Computes the Rx window timeout and offset.
- *
- * \param [IN] datarate     Rx window datarate index to be used
- *
- * \param [IN] minRxSymbols Minimum required number of symbols to detect an Rx frame.
- *
- * \param [IN] rxError      System maximum timing error of the receiver. In milliseconds
- *                          The receiver will turn on in a [-rxError : +rxError] ms
- *                          interval around RxOffset
- *
- * \param [OUT]rxConfigParams Returns updated WindowTimeout and WindowOffset fields.
- */
-void RegionCN470ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams );
-
-/*!
- * \brief Configuration of the RX windows.
- *
- * \param [IN] rxConfig Pointer to the function parameters.
- *
- * \param [OUT] datarate The datarate index which was set.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionCN470RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate );
-
-/*!
- * \brief TX configuration.
- *
- * \param [IN] txConfig Pointer to the function parameters.
- *
- * \param [OUT] txPower The tx power index which was set.
- *
- * \param [OUT] txTimeOnAir The time-on-air of the frame.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionCN470TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir );
-
-/*!
- * \brief The function processes a Link ADR Request.
- *
- * \param [IN] linkAdrReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionCN470LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed );
-
-/*!
- * \brief The function processes a RX Parameter Setup Request.
- *
- * \param [IN] rxParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionCN470RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq );
-
-/*!
- * \brief The function processes a Channel Request.
- *
- * \param [IN] newChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionCN470NewChannelReq( NewChannelReqParams_t* newChannelReq );
-
-/*!
- * \brief The function processes a TX ParamSetup Request.
- *
- * \param [IN] txParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- *         Returns -1, if the functionality is not implemented. In this case, the end node
- *         shall not process the command.
- */
-int8_t RegionCN470TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq );
-
-/*!
- * \brief The function processes a DlChannel Request.
- *
- * \param [IN] dlChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionCN470DlChannelReq( DlChannelReqParams_t* dlChannelReq );
-
-/*!
- * \brief Alternates the datarate of the channel for the join request.
- *
- * \param [IN] currentDr Current datarate.
- *
- * \retval Datarate to apply.
- */
-int8_t RegionCN470AlternateDr( int8_t currentDr, AlternateDrType_t type );
-
-/*!
- * \brief Calculates the back-off time.
- *
- * \param [IN] calcBackOff Pointer to the function parameters.
- */
-void RegionCN470CalcBackOff( CalcBackOffParams_t* calcBackOff );
-
-/*!
- * \brief Searches and set the next random available channel
- *
- * \param [OUT] channel Next channel to use for TX.
- *
- * \param [OUT] time Time to wait for the next transmission according to the duty
- *              cycle.
- *
- * \param [OUT] aggregatedTimeOff Updates the aggregated time off.
- *
- * \retval Function status [1: OK, 0: Unable to find a channel on the current datarate]
- */
-LoRaMacStatus_t RegionCN470NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff );
-
-/*!
- * \brief Adds a channel.
- *
- * \param [IN] channelAdd Pointer to the function parameters.
- *
- * \retval Status of the operation.
- */
-LoRaMacStatus_t RegionCN470ChannelAdd( ChannelAddParams_t* channelAdd );
-
-/*!
- * \brief Removes a channel.
- *
- * \param [IN] channelRemove Pointer to the function parameters.
- *
- * \retval Returns true, if the channel was removed successfully.
- */
-bool RegionCN470ChannelsRemove( ChannelRemoveParams_t* channelRemove  );
-
-/*!
- * \brief Sets the radio into continuous wave mode.
- *
- * \param [IN] continuousWave Pointer to the function parameters.
- */
-void RegionCN470SetContinuousWave( ContinuousWaveParams_t* continuousWave );
-
-/*!
- * \brief Computes new datarate according to the given offset
- *
- * \param [IN] downlinkDwellTime Downlink dwell time configuration. 0: No limit, 1: 400ms
- *
- * \param [IN] dr Current datarate
- *
- * \param [IN] drOffset Offset to be applied
- *
- * \retval newDr Computed datarate.
- */
-uint8_t RegionCN470ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset );
-
-/*!
- * \brief Sets the radio into beacon reception mode
- *
- * \param [IN] rxBeaconSetup Pointer to the function parameters
- */
- void RegionCN470RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr );
-
-/*! \} defgroup REGIONCN470 */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __REGION_CN470_H__
diff --git a/mac/region/RegionCN779.c b/mac/region/RegionCN779.c
deleted file mode 100644
index 6e6c5db..0000000
--- a/mac/region/RegionCN779.c
+++ /dev/null
@@ -1,973 +0,0 @@
-/*!
- * \file      RegionCN779.c
- *
- * \brief     Region implementation for CN779
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
-*/
-#include "utilities.h"
-
-#include "RegionCommon.h"
-#include "RegionCN779.h"
-
-// Definitions
-#define CHANNELS_MASK_SIZE              1
-
-/*!
- * Region specific context
- */
-typedef struct sRegionCN779NvmCtx
-{
-    /*!
-     * LoRaMAC channels
-     */
-    ChannelParams_t Channels[ CN779_MAX_NB_CHANNELS ];
-    /*!
-     * LoRaMac bands
-     */
-    Band_t Bands[ CN779_MAX_NB_BANDS ];
-    /*!
-     * LoRaMac channels mask
-     */
-    uint16_t ChannelsMask[ CHANNELS_MASK_SIZE ];
-    /*!
-     * LoRaMac channels default mask
-     */
-    uint16_t ChannelsDefaultMask[ CHANNELS_MASK_SIZE ];
-}RegionCN779NvmCtx_t;
-
-/*
- * Non-volatile module context.
- */
-static RegionCN779NvmCtx_t NvmCtx;
-
-// Static functions
-static int8_t GetNextLowerTxDr( int8_t dr, int8_t minDr )
-{
-    uint8_t nextLowerDr = 0;
-
-    if( dr == minDr )
-    {
-        nextLowerDr = minDr;
-    }
-    else
-    {
-        nextLowerDr = dr - 1;
-    }
-    return nextLowerDr;
-}
-
-static uint32_t GetBandwidth( uint32_t drIndex )
-{
-    switch( BandwidthsCN779[drIndex] )
-    {
-        default:
-        case 125000:
-            return 0;
-        case 250000:
-            return 1;
-        case 500000:
-            return 2;
-    }
-}
-
-static int8_t LimitTxPower( int8_t txPower, int8_t maxBandTxPower, int8_t datarate, uint16_t* channelsMask )
-{
-    int8_t txPowerResult = txPower;
-
-    // Limit tx power to the band max
-    txPowerResult =  MAX( txPower, maxBandTxPower );
-
-    return txPowerResult;
-}
-
-static bool VerifyRfFreq( uint32_t freq )
-{
-    // Check radio driver support
-    if( Radio.CheckRfFrequency( freq ) == false )
-    {
-        return false;
-    }
-
-    if( ( freq < 779500000 ) || ( freq > 786500000 ) )
-    {
-        return false;
-    }
-    return true;
-}
-
-PhyParam_t RegionCN779GetPhyParam( GetPhyParams_t* getPhy )
-{
-    PhyParam_t phyParam = { 0 };
-
-    switch( getPhy->Attribute )
-    {
-        case PHY_MIN_RX_DR:
-        {
-            phyParam.Value = CN779_RX_MIN_DATARATE;
-            break;
-        }
-        case PHY_MIN_TX_DR:
-        {
-            phyParam.Value = CN779_TX_MIN_DATARATE;
-            break;
-        }
-        case PHY_DEF_TX_DR:
-        {
-            phyParam.Value = CN779_DEFAULT_DATARATE;
-            break;
-        }
-        case PHY_NEXT_LOWER_TX_DR:
-        {
-            phyParam.Value = GetNextLowerTxDr( getPhy->Datarate, CN779_TX_MIN_DATARATE );
-            break;
-        }
-        case PHY_MAX_TX_POWER:
-        {
-            phyParam.Value = CN779_MAX_TX_POWER;
-            break;
-        }
-        case PHY_DEF_TX_POWER:
-        {
-            phyParam.Value = CN779_DEFAULT_TX_POWER;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_LIMIT:
-        {
-            phyParam.Value = CN779_ADR_ACK_LIMIT;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_DELAY:
-        {
-            phyParam.Value = CN779_ADR_ACK_DELAY;
-            break;
-        }
-        case PHY_MAX_PAYLOAD:
-        {
-            phyParam.Value = MaxPayloadOfDatarateCN779[getPhy->Datarate];
-            break;
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            phyParam.Value = CN779_DUTY_CYCLE_ENABLED;
-            break;
-        }
-        case PHY_MAX_RX_WINDOW:
-        {
-            phyParam.Value = CN779_MAX_RX_WINDOW;
-            break;
-        }
-        case PHY_RECEIVE_DELAY1:
-        {
-            phyParam.Value = CN779_RECEIVE_DELAY1;
-            break;
-        }
-        case PHY_RECEIVE_DELAY2:
-        {
-            phyParam.Value = CN779_RECEIVE_DELAY2;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY1:
-        {
-            phyParam.Value = CN779_JOIN_ACCEPT_DELAY1;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY2:
-        {
-            phyParam.Value = CN779_JOIN_ACCEPT_DELAY2;
-            break;
-        }
-        case PHY_MAX_FCNT_GAP:
-        {
-            phyParam.Value = CN779_MAX_FCNT_GAP;
-            break;
-        }
-        case PHY_ACK_TIMEOUT:
-        {
-            phyParam.Value = ( CN779_ACKTIMEOUT + randr( -CN779_ACK_TIMEOUT_RND, CN779_ACK_TIMEOUT_RND ) );
-            break;
-        }
-        case PHY_DEF_DR1_OFFSET:
-        {
-            phyParam.Value = CN779_DEFAULT_RX1_DR_OFFSET;
-            break;
-        }
-        case PHY_DEF_RX2_FREQUENCY:
-        {
-            phyParam.Value = CN779_RX_WND_2_FREQ;
-            break;
-        }
-        case PHY_DEF_RX2_DR:
-        {
-            phyParam.Value = CN779_RX_WND_2_DR;
-            break;
-        }
-        case PHY_CHANNELS_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsMask;
-            break;
-        }
-        case PHY_CHANNELS_DEFAULT_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsDefaultMask;
-            break;
-        }
-        case PHY_MAX_NB_CHANNELS:
-        {
-            phyParam.Value = CN779_MAX_NB_CHANNELS;
-            break;
-        }
-        case PHY_CHANNELS:
-        {
-            phyParam.Channels = NvmCtx.Channels;
-            break;
-        }
-        case PHY_DEF_UPLINK_DWELL_TIME:
-        case PHY_DEF_DOWNLINK_DWELL_TIME:
-        {
-            phyParam.Value = 0;
-            break;
-        }
-        case PHY_DEF_MAX_EIRP:
-        {
-            phyParam.fValue = CN779_DEFAULT_MAX_EIRP;
-            break;
-        }
-        case PHY_DEF_ANTENNA_GAIN:
-        {
-            phyParam.fValue = CN779_DEFAULT_ANTENNA_GAIN;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_FREQ:
-        {
-            phyParam.Value = CN779_BEACON_CHANNEL_FREQ;
-            break;
-        }
-        case PHY_BEACON_FORMAT:
-        {
-            phyParam.BeaconFormat.BeaconSize = CN779_BEACON_SIZE;
-            phyParam.BeaconFormat.Rfu1Size = CN779_RFU1_SIZE;
-            phyParam.BeaconFormat.Rfu2Size = CN779_RFU2_SIZE;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_DR:
-        {
-            phyParam.Value = CN779_BEACON_CHANNEL_DR;
-            break;
-        }
-        case PHY_PING_SLOT_CHANNEL_DR:
-        {
-            phyParam.Value = CN779_PING_SLOT_CHANNEL_DR;
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-
-    return phyParam;
-}
-
-void RegionCN779SetBandTxDone( SetBandTxDoneParams_t* txDone )
-{
-    RegionCommonSetBandTxDone( txDone->Joined, &NvmCtx.Bands[NvmCtx.Channels[txDone->Channel].Band], txDone->LastTxDoneTime );
-}
-
-void RegionCN779InitDefaults( InitDefaultsParams_t* params )
-{
-    Band_t bands[CN779_MAX_NB_BANDS] =
-    {
-        CN779_BAND0
-    };
-
-    switch( params->Type )
-    {
-        case INIT_TYPE_BANDS:
-        {
-            // Initialize bands
-            memcpy1( ( uint8_t* )NvmCtx.Bands, ( uint8_t* )bands, sizeof( Band_t ) * CN779_MAX_NB_BANDS );
-            break;
-        }
-        case INIT_TYPE_INIT:
-        {
-            // Channels
-            NvmCtx.Channels[0] = ( ChannelParams_t ) CN779_LC1;
-            NvmCtx.Channels[1] = ( ChannelParams_t ) CN779_LC2;
-            NvmCtx.Channels[2] = ( ChannelParams_t ) CN779_LC3;
-
-            // Initialize the channels default mask
-            NvmCtx.ChannelsDefaultMask[0] = LC( 1 ) + LC( 2 ) + LC( 3 );
-
-            // Update the channels mask
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, NvmCtx.ChannelsDefaultMask, 1 );
-            break;
-        }
-        case INIT_TYPE_RESTORE_CTX:
-        {
-            if( params->NvmCtx != 0 )
-            {
-                memcpy1( (uint8_t*) &NvmCtx, (uint8_t*) params->NvmCtx, sizeof( NvmCtx ) );
-            }
-            break;
-        }
-        case INIT_TYPE_RESTORE_DEFAULT_CHANNELS:
-        {
-            // Restore channels default mask
-            NvmCtx.ChannelsMask[0] |= NvmCtx.ChannelsDefaultMask[0];
-
-            // Channels
-            NvmCtx.Channels[0] = ( ChannelParams_t ) CN779_LC1;
-            NvmCtx.Channels[1] = ( ChannelParams_t ) CN779_LC2;
-            NvmCtx.Channels[2] = ( ChannelParams_t ) CN779_LC3;
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-}
-
-void* RegionCN779GetNvmCtx( GetNvmCtxParams_t* params )
-{
-    params->nvmCtxSize = sizeof( RegionCN779NvmCtx_t );
-    return &NvmCtx;
-}
-
-bool RegionCN779Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute )
-{
-    switch( phyAttribute )
-    {
-        case PHY_FREQUENCY:
-        {
-            return VerifyRfFreq( verify->Frequency );
-        }
-        case PHY_TX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, CN779_TX_MIN_DATARATE, CN779_TX_MAX_DATARATE );
-        }
-        case PHY_DEF_TX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, DR_0, DR_5 );
-        }
-        case PHY_RX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, CN779_RX_MIN_DATARATE, CN779_RX_MAX_DATARATE );
-        }
-        case PHY_DEF_TX_POWER:
-        case PHY_TX_POWER:
-        {
-            // Remark: switched min and max!
-            return RegionCommonValueInRange( verify->TxPower, CN779_MAX_TX_POWER, CN779_MIN_TX_POWER );
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            return CN779_DUTY_CYCLE_ENABLED;
-        }
-        default:
-            return false;
-    }
-}
-
-void RegionCN779ApplyCFList( ApplyCFListParams_t* applyCFList )
-{
-    ChannelParams_t newChannel;
-    ChannelAddParams_t channelAdd;
-    ChannelRemoveParams_t channelRemove;
-
-    // Setup default datarate range
-    newChannel.DrRange.Value = ( DR_5 << 4 ) | DR_0;
-
-    // Size of the optional CF list
-    if( applyCFList->Size != 16 )
-    {
-        return;
-    }
-
-    // Last byte CFListType must be 0 to indicate the CFList contains a list of frequencies
-    if( applyCFList->Payload[15] != 0 )
-    {
-        return;
-    }
-
-    // Last byte is RFU, don't take it into account
-    for( uint8_t i = 0, chanIdx = CN779_NUMB_DEFAULT_CHANNELS; chanIdx < CN779_MAX_NB_CHANNELS; i+=3, chanIdx++ )
-    {
-        if( chanIdx < ( CN779_NUMB_CHANNELS_CF_LIST + CN779_NUMB_DEFAULT_CHANNELS ) )
-        {
-            // Channel frequency
-            newChannel.Frequency = (uint32_t) applyCFList->Payload[i];
-            newChannel.Frequency |= ( (uint32_t) applyCFList->Payload[i + 1] << 8 );
-            newChannel.Frequency |= ( (uint32_t) applyCFList->Payload[i + 2] << 16 );
-            newChannel.Frequency *= 100;
-
-            // Initialize alternative frequency to 0
-            newChannel.Rx1Frequency = 0;
-        }
-        else
-        {
-            newChannel.Frequency = 0;
-            newChannel.DrRange.Value = 0;
-            newChannel.Rx1Frequency = 0;
-        }
-
-        if( newChannel.Frequency != 0 )
-        {
-            channelAdd.NewChannel = &newChannel;
-            channelAdd.ChannelId = chanIdx;
-
-            // Try to add all channels
-            RegionCN779ChannelAdd( &channelAdd );
-        }
-        else
-        {
-            channelRemove.ChannelId = chanIdx;
-
-            RegionCN779ChannelsRemove( &channelRemove );
-        }
-    }
-}
-
-bool RegionCN779ChanMaskSet( ChanMaskSetParams_t* chanMaskSet )
-{
-    switch( chanMaskSet->ChannelsMaskType )
-    {
-        case CHANNELS_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, chanMaskSet->ChannelsMaskIn, 1 );
-            break;
-        }
-        case CHANNELS_DEFAULT_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsDefaultMask, chanMaskSet->ChannelsMaskIn, 1 );
-            break;
-        }
-        default:
-            return false;
-    }
-    return true;
-}
-
-void RegionCN779ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams )
-{
-    double tSymbol = 0.0;
-
-    // Get the datarate, perform a boundary check
-    rxConfigParams->Datarate = MIN( datarate, CN779_RX_MAX_DATARATE );
-    rxConfigParams->Bandwidth = GetBandwidth( rxConfigParams->Datarate );
-
-    if( rxConfigParams->Datarate == DR_7 )
-    { // FSK
-        tSymbol = RegionCommonComputeSymbolTimeFsk( DataratesCN779[rxConfigParams->Datarate] );
-    }
-    else
-    { // LoRa
-        tSymbol = RegionCommonComputeSymbolTimeLoRa( DataratesCN779[rxConfigParams->Datarate], BandwidthsCN779[rxConfigParams->Datarate] );
-    }
-
-    RegionCommonComputeRxWindowParameters( tSymbol, minRxSymbols, rxError, Radio.GetWakeupTime( ), &rxConfigParams->WindowTimeout, &rxConfigParams->WindowOffset );
-}
-
-bool RegionCN779RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate )
-{
-    RadioModems_t modem;
-    int8_t dr = rxConfig->Datarate;
-    int8_t phyDr = 0;
-    uint32_t frequency = rxConfig->Frequency;
-
-    if( Radio.GetStatus( ) != RF_IDLE )
-    {
-        return false;
-    }
-
-    if( rxConfig->RxSlot == RX_SLOT_WIN_1 )
-    {
-        // Apply window 1 frequency
-        frequency = NvmCtx.Channels[rxConfig->Channel].Frequency;
-        // Apply the alternative RX 1 window frequency, if it is available
-        if( NvmCtx.Channels[rxConfig->Channel].Rx1Frequency != 0 )
-        {
-            frequency = NvmCtx.Channels[rxConfig->Channel].Rx1Frequency;
-        }
-    }
-
-    // Read the physical datarate from the datarates table
-    phyDr = DataratesCN779[dr];
-
-    Radio.SetChannel( frequency );
-
-    // Radio configuration
-    if( dr == DR_7 )
-    {
-        modem = MODEM_FSK;
-        Radio.SetRxConfig( modem, 50000, phyDr * 1000, 0, 83333, 5, rxConfig->WindowTimeout, false, 0, true, 0, 0, false, rxConfig->RxContinuous );
-    }
-    else
-    {
-        modem = MODEM_LORA;
-        Radio.SetRxConfig( modem, rxConfig->Bandwidth, phyDr, 1, 0, 8, rxConfig->WindowTimeout, false, 0, false, 0, 0, true, rxConfig->RxContinuous );
-    }
-
-    Radio.SetMaxPayloadLength( modem, MaxPayloadOfDatarateCN779[dr] + LORA_MAC_FRMPAYLOAD_OVERHEAD );
-
-    *datarate = (uint8_t) dr;
-    return true;
-}
-
-bool RegionCN779TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir )
-{
-    RadioModems_t modem;
-    int8_t phyDr = DataratesCN779[txConfig->Datarate];
-    int8_t txPowerLimited = LimitTxPower( txConfig->TxPower, NvmCtx.Bands[NvmCtx.Channels[txConfig->Channel].Band].TxMaxPower, txConfig->Datarate, NvmCtx.ChannelsMask );
-    uint32_t bandwidth = GetBandwidth( txConfig->Datarate );
-    int8_t phyTxPower = 0;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, txConfig->MaxEirp, txConfig->AntennaGain );
-
-    // Setup the radio frequency
-    Radio.SetChannel( NvmCtx.Channels[txConfig->Channel].Frequency );
-
-    if( txConfig->Datarate == DR_7 )
-    { // High Speed FSK channel
-        modem = MODEM_FSK;
-        Radio.SetTxConfig( modem, phyTxPower, 25000, bandwidth, phyDr * 1000, 0, 5, false, true, 0, 0, false, 4000 );
-    }
-    else
-    {
-        modem = MODEM_LORA;
-        Radio.SetTxConfig( modem, phyTxPower, 0, bandwidth, phyDr, 1, 8, false, true, 0, 0, false, 4000 );
-    }
-
-    // Setup maximum payload lenght of the radio driver
-    Radio.SetMaxPayloadLength( modem, txConfig->PktLen );
-    // Get the time-on-air of the next tx frame
-    *txTimeOnAir = Radio.TimeOnAir( modem, txConfig->PktLen );
-
-    *txPower = txPowerLimited;
-    return true;
-}
-
-uint8_t RegionCN779LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed )
-{
-    uint8_t status = 0x07;
-    RegionCommonLinkAdrParams_t linkAdrParams;
-    uint8_t nextIndex = 0;
-    uint8_t bytesProcessed = 0;
-    uint16_t chMask = 0;
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-    RegionCommonLinkAdrReqVerifyParams_t linkAdrVerifyParams;
-
-    while( bytesProcessed < linkAdrReq->PayloadSize )
-    {
-        // Get ADR request parameters
-        nextIndex = RegionCommonParseLinkAdrReq( &( linkAdrReq->Payload[bytesProcessed] ), &linkAdrParams );
-
-        if( nextIndex == 0 )
-            break; // break loop, since no more request has been found
-
-        // Update bytes processed
-        bytesProcessed += nextIndex;
-
-        // Revert status, as we only check the last ADR request for the channel mask KO
-        status = 0x07;
-
-        // Setup temporary channels mask
-        chMask = linkAdrParams.ChMask;
-
-        // Verify channels mask
-        if( ( linkAdrParams.ChMaskCtrl == 0 ) && ( chMask == 0 ) )
-        {
-            status &= 0xFE; // Channel mask KO
-        }
-        else if( ( ( linkAdrParams.ChMaskCtrl >= 1 ) && ( linkAdrParams.ChMaskCtrl <= 5 )) ||
-                ( linkAdrParams.ChMaskCtrl >= 7 ) )
-        {
-            // RFU
-            status &= 0xFE; // Channel mask KO
-        }
-        else
-        {
-            for( uint8_t i = 0; i < CN779_MAX_NB_CHANNELS; i++ )
-            {
-                if( linkAdrParams.ChMaskCtrl == 6 )
-                {
-                    if( NvmCtx.Channels[i].Frequency != 0 )
-                    {
-                        chMask |= 1 << i;
-                    }
-                }
-                else
-                {
-                    if( ( ( chMask & ( 1 << i ) ) != 0 ) &&
-                        ( NvmCtx.Channels[i].Frequency == 0 ) )
-                    {// Trying to enable an undefined channel
-                        status &= 0xFE; // Channel mask KO
-                    }
-                }
-            }
-        }
-    }
-
-    // Get the minimum possible datarate
-    getPhy.Attribute = PHY_MIN_TX_DR;
-    getPhy.UplinkDwellTime = linkAdrReq->UplinkDwellTime;
-    phyParam = RegionCN779GetPhyParam( &getPhy );
-
-    linkAdrVerifyParams.Status = status;
-    linkAdrVerifyParams.AdrEnabled = linkAdrReq->AdrEnabled;
-    linkAdrVerifyParams.Datarate = linkAdrParams.Datarate;
-    linkAdrVerifyParams.TxPower = linkAdrParams.TxPower;
-    linkAdrVerifyParams.NbRep = linkAdrParams.NbRep;
-    linkAdrVerifyParams.CurrentDatarate = linkAdrReq->CurrentDatarate;
-    linkAdrVerifyParams.CurrentTxPower = linkAdrReq->CurrentTxPower;
-    linkAdrVerifyParams.CurrentNbRep = linkAdrReq->CurrentNbRep;
-    linkAdrVerifyParams.NbChannels = CN779_MAX_NB_CHANNELS;
-    linkAdrVerifyParams.ChannelsMask = &chMask;
-    linkAdrVerifyParams.MinDatarate = ( int8_t )phyParam.Value;
-    linkAdrVerifyParams.MaxDatarate = CN779_TX_MAX_DATARATE;
-    linkAdrVerifyParams.Channels = NvmCtx.Channels;
-    linkAdrVerifyParams.MinTxPower = CN779_MIN_TX_POWER;
-    linkAdrVerifyParams.MaxTxPower = CN779_MAX_TX_POWER;
-    linkAdrVerifyParams.Version = linkAdrReq->Version;
-
-    // Verify the parameters and update, if necessary
-    status = RegionCommonLinkAdrReqVerifyParams( &linkAdrVerifyParams, &linkAdrParams.Datarate, &linkAdrParams.TxPower, &linkAdrParams.NbRep );
-
-    // Update channelsMask if everything is correct
-    if( status == 0x07 )
-    {
-        // Set the channels mask to a default value
-        memset1( ( uint8_t* ) NvmCtx.ChannelsMask, 0, sizeof( NvmCtx.ChannelsMask ) );
-        // Update the channels mask
-        NvmCtx.ChannelsMask[0] = chMask;
-    }
-
-    // Update status variables
-    *drOut = linkAdrParams.Datarate;
-    *txPowOut = linkAdrParams.TxPower;
-    *nbRepOut = linkAdrParams.NbRep;
-    *nbBytesParsed = bytesProcessed;
-
-    return status;
-}
-
-uint8_t RegionCN779RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq )
-{
-    uint8_t status = 0x07;
-
-    // Verify radio frequency
-    if( VerifyRfFreq( rxParamSetupReq->Frequency ) == false )
-    {
-        status &= 0xFE; // Channel frequency KO
-    }
-
-    // Verify datarate
-    if( RegionCommonValueInRange( rxParamSetupReq->Datarate, CN779_RX_MIN_DATARATE, CN779_RX_MAX_DATARATE ) == false )
-    {
-        status &= 0xFD; // Datarate KO
-    }
-
-    // Verify datarate offset
-    if( RegionCommonValueInRange( rxParamSetupReq->DrOffset, CN779_MIN_RX1_DR_OFFSET, CN779_MAX_RX1_DR_OFFSET ) == false )
-    {
-        status &= 0xFB; // Rx1DrOffset range KO
-    }
-
-    return status;
-}
-
-uint8_t RegionCN779NewChannelReq( NewChannelReqParams_t* newChannelReq )
-{
-    uint8_t status = 0x03;
-    ChannelAddParams_t channelAdd;
-    ChannelRemoveParams_t channelRemove;
-
-    if( newChannelReq->NewChannel->Frequency == 0 )
-    {
-        channelRemove.ChannelId = newChannelReq->ChannelId;
-
-        // Remove
-        if( RegionCN779ChannelsRemove( &channelRemove ) == false )
-        {
-            status &= 0xFC;
-        }
-    }
-    else
-    {
-        channelAdd.NewChannel = newChannelReq->NewChannel;
-        channelAdd.ChannelId = newChannelReq->ChannelId;
-
-        switch( RegionCN779ChannelAdd( &channelAdd ) )
-        {
-            case LORAMAC_STATUS_OK:
-            {
-                break;
-            }
-            case LORAMAC_STATUS_FREQUENCY_INVALID:
-            {
-                status &= 0xFE;
-                break;
-            }
-            case LORAMAC_STATUS_DATARATE_INVALID:
-            {
-                status &= 0xFD;
-                break;
-            }
-            case LORAMAC_STATUS_FREQ_AND_DR_INVALID:
-            {
-                status &= 0xFC;
-                break;
-            }
-            default:
-            {
-                status &= 0xFC;
-                break;
-            }
-        }
-    }
-
-    return status;
-}
-
-int8_t RegionCN779TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq )
-{
-    return -1;
-}
-
-uint8_t RegionCN779DlChannelReq( DlChannelReqParams_t* dlChannelReq )
-{
-    uint8_t status = 0x03;
-
-    // Verify if the frequency is supported
-    if( VerifyRfFreq( dlChannelReq->Rx1Frequency ) == false )
-    {
-        status &= 0xFE;
-    }
-
-    // Verify if an uplink frequency exists
-    if( NvmCtx.Channels[dlChannelReq->ChannelId].Frequency == 0 )
-    {
-        status &= 0xFD;
-    }
-
-    // Apply Rx1 frequency, if the status is OK
-    if( status == 0x03 )
-    {
-        NvmCtx.Channels[dlChannelReq->ChannelId].Rx1Frequency = dlChannelReq->Rx1Frequency;
-    }
-
-    return status;
-}
-
-int8_t RegionCN779AlternateDr( int8_t currentDr, AlternateDrType_t type )
-{
-    return currentDr;
-}
-
-void RegionCN779CalcBackOff( CalcBackOffParams_t* calcBackOff )
-{
-    RegionCommonCalcBackOffParams_t calcBackOffParams;
-
-    calcBackOffParams.Channels = NvmCtx.Channels;
-    calcBackOffParams.Bands = NvmCtx.Bands;
-    calcBackOffParams.LastTxIsJoinRequest = calcBackOff->LastTxIsJoinRequest;
-    calcBackOffParams.Joined = calcBackOff->Joined;
-    calcBackOffParams.DutyCycleEnabled = calcBackOff->DutyCycleEnabled;
-    calcBackOffParams.Channel = calcBackOff->Channel;
-    calcBackOffParams.ElapsedTime = calcBackOff->ElapsedTime;
-    calcBackOffParams.TxTimeOnAir = calcBackOff->TxTimeOnAir;
-
-    RegionCommonCalcBackOff( &calcBackOffParams );
-}
-
-LoRaMacStatus_t RegionCN779NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff )
-{
-    uint8_t nbEnabledChannels = 0;
-    uint8_t nbRestrictedChannels = 0;
-    uint8_t enabledChannels[CN779_MAX_NB_CHANNELS] = { 0 };
-    RegionCommonIdentifyChannelsParam_t identifyChannelsParam;
-    RegionCommonCountNbOfEnabledChannelsParams_t countChannelsParams;
-    LoRaMacStatus_t status = LORAMAC_STATUS_NO_CHANNEL_FOUND;
-
-    if( RegionCommonCountChannels( NvmCtx.ChannelsMask, 0, 1 ) == 0 )
-    { // Reactivate default channels
-        NvmCtx.ChannelsMask[0] |= LC( 1 ) + LC( 2 ) + LC( 3 );
-    }
-
-    // Search how many channels are enabled
-    countChannelsParams.Joined = nextChanParams->Joined;
-    countChannelsParams.Datarate = nextChanParams->Datarate;
-    countChannelsParams.ChannelsMask = NvmCtx.ChannelsMask;
-    countChannelsParams.Channels = NvmCtx.Channels;
-    countChannelsParams.Bands = NvmCtx.Bands;
-    countChannelsParams.MaxNbChannels = CN779_MAX_NB_CHANNELS;
-    countChannelsParams.JoinChannels = CN779_JOIN_CHANNELS;
-
-    identifyChannelsParam.AggrTimeOff = nextChanParams->AggrTimeOff;
-    identifyChannelsParam.LastAggrTx = nextChanParams->LastAggrTx;
-    identifyChannelsParam.DutyCycleEnabled = nextChanParams->DutyCycleEnabled;
-    identifyChannelsParam.MaxBands = CN779_MAX_NB_BANDS;
-
-    identifyChannelsParam.CountNbOfEnabledChannelsParam = &countChannelsParams;
-
-    status = RegionCommonIdentifyChannels( &identifyChannelsParam, aggregatedTimeOff, enabledChannels,
-                                           &nbEnabledChannels, &nbRestrictedChannels, time );
-
-    if( nextChanParams->QueryNextTxDelayOnly == true )
-    {
-        return status;
-    }
-
-    if( status == LORAMAC_STATUS_OK )
-    {
-        // We found a valid channel
-        *channel = enabledChannels[randr( 0, nbEnabledChannels - 1 )];
-    }
-    else if( status == LORAMAC_STATUS_NO_CHANNEL_FOUND )
-    {
-        // Datarate not supported by any channel, restore defaults
-        NvmCtx.ChannelsMask[0] |= LC( 1 ) + LC( 2 ) + LC( 3 );
-    }
-    return status;
-}
-
-LoRaMacStatus_t RegionCN779ChannelAdd( ChannelAddParams_t* channelAdd )
-{
-    bool drInvalid = false;
-    bool freqInvalid = false;
-    uint8_t id = channelAdd->ChannelId;
-
-    if( id < CN779_NUMB_DEFAULT_CHANNELS )
-    {
-        return LORAMAC_STATUS_FREQ_AND_DR_INVALID;
-    }
-
-    if( id >= CN779_MAX_NB_CHANNELS )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-
-    // Validate the datarate range
-    if( RegionCommonValueInRange( channelAdd->NewChannel->DrRange.Fields.Min, CN779_TX_MIN_DATARATE, CN779_TX_MAX_DATARATE ) == false )
-    {
-        drInvalid = true;
-    }
-    if( RegionCommonValueInRange( channelAdd->NewChannel->DrRange.Fields.Max, CN779_TX_MIN_DATARATE, CN779_TX_MAX_DATARATE ) == false )
-    {
-        drInvalid = true;
-    }
-    if( channelAdd->NewChannel->DrRange.Fields.Min > channelAdd->NewChannel->DrRange.Fields.Max )
-    {
-        drInvalid = true;
-    }
-
-    // Check frequency
-    if( freqInvalid == false )
-    {
-        if( VerifyRfFreq( channelAdd->NewChannel->Frequency ) == false )
-        {
-            freqInvalid = true;
-        }
-    }
-
-    // Check status
-    if( ( drInvalid == true ) && ( freqInvalid == true ) )
-    {
-        return LORAMAC_STATUS_FREQ_AND_DR_INVALID;
-    }
-    if( drInvalid == true )
-    {
-        return LORAMAC_STATUS_DATARATE_INVALID;
-    }
-    if( freqInvalid == true )
-    {
-        return LORAMAC_STATUS_FREQUENCY_INVALID;
-    }
-
-    memcpy1( ( uint8_t* ) &(NvmCtx.Channels[id]), ( uint8_t* ) channelAdd->NewChannel, sizeof( NvmCtx.Channels[id] ) );
-    NvmCtx.Channels[id].Band = 0;
-    NvmCtx.ChannelsMask[0] |= ( 1 << id );
-    return LORAMAC_STATUS_OK;
-}
-
-bool RegionCN779ChannelsRemove( ChannelRemoveParams_t* channelRemove  )
-{
-    uint8_t id = channelRemove->ChannelId;
-
-    if( id < CN779_NUMB_DEFAULT_CHANNELS )
-    {
-        return false;
-    }
-
-    // Remove the channel from the list of channels
-    NvmCtx.Channels[id] = ( ChannelParams_t ){ 0, 0, { 0 }, 0 };
-
-    return RegionCommonChanDisable( NvmCtx.ChannelsMask, id, CN779_MAX_NB_CHANNELS );
-}
-
-void RegionCN779SetContinuousWave( ContinuousWaveParams_t* continuousWave )
-{
-    int8_t txPowerLimited = LimitTxPower( continuousWave->TxPower, NvmCtx.Bands[NvmCtx.Channels[continuousWave->Channel].Band].TxMaxPower, continuousWave->Datarate, NvmCtx.ChannelsMask );
-    int8_t phyTxPower = 0;
-    uint32_t frequency = NvmCtx.Channels[continuousWave->Channel].Frequency;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, continuousWave->MaxEirp, continuousWave->AntennaGain );
-
-    Radio.SetTxContinuousWave( frequency, phyTxPower, continuousWave->Timeout );
-}
-
-uint8_t RegionCN779ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset )
-{
-    int8_t datarate = dr - drOffset;
-
-    if( datarate < 0 )
-    {
-        datarate = DR_0;
-    }
-    return datarate;
-}
-
-void RegionCN779RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr )
-{
-    RegionCommonRxBeaconSetupParams_t regionCommonRxBeaconSetup;
-
-    regionCommonRxBeaconSetup.Datarates = DataratesCN779;
-    regionCommonRxBeaconSetup.Frequency = rxBeaconSetup->Frequency;
-    regionCommonRxBeaconSetup.BeaconSize = CN779_BEACON_SIZE;
-    regionCommonRxBeaconSetup.BeaconDatarate = CN779_BEACON_CHANNEL_DR;
-    regionCommonRxBeaconSetup.BeaconChannelBW = CN779_BEACON_CHANNEL_BW;
-    regionCommonRxBeaconSetup.RxTime = rxBeaconSetup->RxTime;
-    regionCommonRxBeaconSetup.SymbolTimeout = rxBeaconSetup->SymbolTimeout;
-
-    RegionCommonRxBeaconSetup( &regionCommonRxBeaconSetup );
-
-    // Store downlink datarate
-    *outDr = CN779_BEACON_CHANNEL_DR;
-}
diff --git a/mac/region/RegionCN779.h b/mac/region/RegionCN779.h
deleted file mode 100644
index 05ecdbf..0000000
--- a/mac/region/RegionCN779.h
+++ /dev/null
@@ -1,512 +0,0 @@
-/*!
- * \file      RegionCN779.h
- *
- * \brief     Region definition for CN779
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * \defgroup  REGIONCN779 Region CN779
- *            Implementation according to LoRaWAN Specification v1.0.2.
- * \{
- */
-#ifndef __REGION_CN779_H__
-#define __REGION_CN779_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include "region/Region.h"
-
-/*!
- * LoRaMac maximum number of channels
- */
-#define CN779_MAX_NB_CHANNELS                       16
-
-/*!
- * Number of default channels
- */
-#define CN779_NUMB_DEFAULT_CHANNELS                 3
-
-/*!
- * Number of channels to apply for the CF list
- */
-#define CN779_NUMB_CHANNELS_CF_LIST                 5
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define CN779_TX_MIN_DATARATE                       DR_0
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define CN779_TX_MAX_DATARATE                       DR_7
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define CN779_RX_MIN_DATARATE                       DR_0
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define CN779_RX_MAX_DATARATE                       DR_7
-
-/*!
- * Default datarate used by the node
- */
-#define CN779_DEFAULT_DATARATE                      DR_0
-
-/*!
- * Minimal Rx1 receive datarate offset
- */
-#define CN779_MIN_RX1_DR_OFFSET                     0
-
-/*!
- * Maximal Rx1 receive datarate offset
- */
-#define CN779_MAX_RX1_DR_OFFSET                     5
-
-/*!
- * Default Rx1 receive datarate offset
- */
-#define CN779_DEFAULT_RX1_DR_OFFSET                 0
-
-/*!
- * Minimal Tx output power that can be used by the node
- */
-#define CN779_MIN_TX_POWER                          TX_POWER_5
-
-/*!
- * Maximal Tx output power that can be used by the node
- */
-#define CN779_MAX_TX_POWER                          TX_POWER_0
-
-/*!
- * Default Tx output power used by the node
- */
-#define CN779_DEFAULT_TX_POWER                      TX_POWER_0
-
-/*!
- * Default Max EIRP
- */
-#define CN779_DEFAULT_MAX_EIRP                      12.15f
-
-/*!
- * Default antenna gain
- */
-#define CN779_DEFAULT_ANTENNA_GAIN                  2.15f
-
-/*!
- * ADR Ack limit
- */
-#define CN779_ADR_ACK_LIMIT                         64
-
-/*!
- * ADR Ack delay
- */
-#define CN779_ADR_ACK_DELAY                         32
-
-/*!
- * Enabled or disabled the duty cycle
- */
-#define CN779_DUTY_CYCLE_ENABLED                    1
-
-/*!
- * Maximum RX window duration
- */
-#define CN779_MAX_RX_WINDOW                         3000
-
-/*!
- * Receive delay 1
- */
-#define CN779_RECEIVE_DELAY1                        1000
-
-/*!
- * Receive delay 2
- */
-#define CN779_RECEIVE_DELAY2                        2000
-
-/*!
- * Join accept delay 1
- */
-#define CN779_JOIN_ACCEPT_DELAY1                    5000
-
-/*!
- * Join accept delay 2
- */
-#define CN779_JOIN_ACCEPT_DELAY2                    6000
-
-/*!
- * Maximum frame counter gap
- */
-#define CN779_MAX_FCNT_GAP                          16384
-
-/*!
- * Ack timeout
- */
-#define CN779_ACKTIMEOUT                            2000
-
-/*!
- * Random ack timeout limits
- */
-#define CN779_ACK_TIMEOUT_RND                       1000
-
-/*!
- * Verification of default datarate
- */
-#if ( CN779_DEFAULT_DATARATE > DR_5 )
-#error "A default DR higher than DR_5 may lead to connectivity loss."
-#endif
-
-/*!
- * Second reception window channel frequency definition.
- */
-#define CN779_RX_WND_2_FREQ                         786000000
-
-/*!
- * Second reception window channel datarate definition.
- */
-#define CN779_RX_WND_2_DR                           DR_0
-
-/*
- * CLASS B
- */
-/*!
- * Beacon frequency
- */
-#define CN779_BEACON_CHANNEL_FREQ                   785000000
-
-/*!
- * Payload size of a beacon frame
- */
-#define CN779_BEACON_SIZE                           17
-
-/*!
- * Size of RFU 1 field
- */
-#define CN779_RFU1_SIZE                             2
-
-/*!
- * Size of RFU 2 field
- */
-#define CN779_RFU2_SIZE                             0
-
-/*!
- * Datarate of the beacon channel
- */
-#define CN779_BEACON_CHANNEL_DR                     DR_3
-
-/*!
- * Bandwith of the beacon channel
- */
-#define CN779_BEACON_CHANNEL_BW                     0
-
-/*!
- * Ping slot channel datarate
- */
-#define CN779_PING_SLOT_CHANNEL_DR                  DR_3
-
-/*!
- * LoRaMac maximum number of bands
- */
-#define CN779_MAX_NB_BANDS                           1
-
-/*!
- * Band 0 definition
- * { DutyCycle, TxMaxPower, LastJoinTxDoneTime, LastTxDoneTime, TimeOff }
- */
-#define CN779_BAND0                                 { 100, CN779_MAX_TX_POWER, 0, 0, 0 } //  1.0 %
-
-/*!
- * LoRaMac default channel 1
- * Channel = { Frequency [Hz], RX1 Frequency [Hz], { ( ( DrMax << 4 ) | DrMin ) }, Band }
- */
-#define CN779_LC1                                   { 779500000, 0, { ( ( DR_5 << 4 ) | DR_0 ) }, 0 }
-/*!
- * LoRaMac default channel 2
- * Channel = { Frequency [Hz], RX1 Frequency [Hz], { ( ( DrMax << 4 ) | DrMin ) }, Band }
- */
-#define CN779_LC2                                   { 779700000, 0, { ( ( DR_5 << 4 ) | DR_0 ) }, 0 }
-
-/*!
- * LoRaMac default channel 3
- * Channel = { Frequency [Hz], RX1 Frequency [Hz], { ( ( DrMax << 4 ) | DrMin ) }, Band }
- */
-#define CN779_LC3                                   { 779900000, 0, { ( ( DR_5 << 4 ) | DR_0 ) }, 0 }
-
-/*!
- * LoRaMac channels which are allowed for the join procedure
- */
-#define CN779_JOIN_CHANNELS                         ( uint16_t )( LC( 1 ) | LC( 2 ) | LC( 3 ) )
-
-/*!
- * Data rates table definition
- */
-static const uint8_t DataratesCN779[]  = { 12, 11, 10,  9,  8,  7,  7, 50 };
-
-/*!
- * Bandwidths table definition in Hz
- */
-static const uint32_t BandwidthsCN779[] = { 125000, 125000, 125000, 125000, 125000, 125000, 250000, 0 };
-
-/*!
- * Maximum payload with respect to the datarate index.
- */
-static const uint8_t MaxPayloadOfDatarateCN779[] = { 51, 51, 51, 115, 242, 242, 242, 242 };
-
-/*!
- * \brief The function gets a value of a specific phy attribute.
- *
- * \param [IN] getPhy Pointer to the function parameters.
- *
- * \retval Returns a structure containing the PHY parameter.
- */
-PhyParam_t RegionCN779GetPhyParam( GetPhyParams_t* getPhy );
-
-/*!
- * \brief Updates the last TX done parameters of the current channel.
- *
- * \param [IN] txDone Pointer to the function parameters.
- */
-void RegionCN779SetBandTxDone( SetBandTxDoneParams_t* txDone );
-
-/*!
- * \brief Initializes the channels masks and the channels.
- *
- * \param [IN] type Sets the initialization type.
- */
-void RegionCN779InitDefaults( InitDefaultsParams_t* params );
-
-/*!
- * \brief Returns a pointer to the internal context and its size.
- *
- * \param [OUT] params Pointer to the function parameters.
- *
- * \retval      Points to a structure where the module store its non-volatile context.
- */
-void* RegionCN779GetNvmCtx( GetNvmCtxParams_t* params );
-
-/*!
- * \brief Verifies a parameter.
- *
- * \param [IN] verify Pointer to the function parameters.
- *
- * \param [IN] type Sets the initialization type.
- *
- * \retval Returns true, if the parameter is valid.
- */
-bool RegionCN779Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute );
-
-/*!
- * \brief The function parses the input buffer and sets up the channels of the
- *        CF list.
- *
- * \param [IN] applyCFList Pointer to the function parameters.
- */
-void RegionCN779ApplyCFList( ApplyCFListParams_t* applyCFList );
-
-/*!
- * \brief Sets a channels mask.
- *
- * \param [IN] chanMaskSet Pointer to the function parameters.
- *
- * \retval Returns true, if the channels mask could be set.
- */
-bool RegionCN779ChanMaskSet( ChanMaskSetParams_t* chanMaskSet );
-
-/*!
- * Computes the Rx window timeout and offset.
- *
- * \param [IN] datarate     Rx window datarate index to be used
- *
- * \param [IN] minRxSymbols Minimum required number of symbols to detect an Rx frame.
- *
- * \param [IN] rxError      System maximum timing error of the receiver. In milliseconds
- *                          The receiver will turn on in a [-rxError : +rxError] ms
- *                          interval around RxOffset
- *
- * \param [OUT]rxConfigParams Returns updated WindowTimeout and WindowOffset fields.
- */
-void RegionCN779ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams );
-
-/*!
- * \brief Configuration of the RX windows.
- *
- * \param [IN] rxConfig Pointer to the function parameters.
- *
- * \param [OUT] datarate The datarate index which was set.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionCN779RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate );
-
-/*!
- * \brief TX configuration.
- *
- * \param [IN] txConfig Pointer to the function parameters.
- *
- * \param [OUT] txPower The tx power index which was set.
- *
- * \param [OUT] txTimeOnAir The time-on-air of the frame.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionCN779TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir );
-
-/*!
- * \brief The function processes a Link ADR Request.
- *
- * \param [IN] linkAdrReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionCN779LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed );
-
-/*!
- * \brief The function processes a RX Parameter Setup Request.
- *
- * \param [IN] rxParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionCN779RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq );
-
-/*!
- * \brief The function processes a Channel Request.
- *
- * \param [IN] newChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionCN779NewChannelReq( NewChannelReqParams_t* newChannelReq );
-
-/*!
- * \brief The function processes a TX ParamSetup Request.
- *
- * \param [IN] txParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- *         Returns -1, if the functionality is not implemented. In this case, the end node
- *         shall not process the command.
- */
-int8_t RegionCN779TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq );
-
-/*!
- * \brief The function processes a DlChannel Request.
- *
- * \param [IN] dlChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionCN779DlChannelReq( DlChannelReqParams_t* dlChannelReq );
-
-/*!
- * \brief Alternates the datarate of the channel for the join request.
- *
- * \param [IN] currentDr Current datarate.
- *
- * \retval Datarate to apply.
- */
-int8_t RegionCN779AlternateDr( int8_t currentDr, AlternateDrType_t type );
-
-/*!
- * \brief Calculates the back-off time.
- *
- * \param [IN] calcBackOff Pointer to the function parameters.
- */
-void RegionCN779CalcBackOff( CalcBackOffParams_t* calcBackOff );
-
-/*!
- * \brief Searches and set the next random available channel
- *
- * \param [OUT] channel Next channel to use for TX.
- *
- * \param [OUT] time Time to wait for the next transmission according to the duty
- *              cycle.
- *
- * \param [OUT] aggregatedTimeOff Updates the aggregated time off.
- *
- * \retval Function status [1: OK, 0: Unable to find a channel on the current datarate]
- */
-LoRaMacStatus_t RegionCN779NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff );
-
-/*!
- * \brief Adds a channel.
- *
- * \param [IN] channelAdd Pointer to the function parameters.
- *
- * \retval Status of the operation.
- */
-LoRaMacStatus_t RegionCN779ChannelAdd( ChannelAddParams_t* channelAdd );
-
-/*!
- * \brief Removes a channel.
- *
- * \param [IN] channelRemove Pointer to the function parameters.
- *
- * \retval Returns true, if the channel was removed successfully.
- */
-bool RegionCN779ChannelsRemove( ChannelRemoveParams_t* channelRemove  );
-
-/*!
- * \brief Sets the radio into continuous wave mode.
- *
- * \param [IN] continuousWave Pointer to the function parameters.
- */
-void RegionCN779SetContinuousWave( ContinuousWaveParams_t* continuousWave );
-
-/*!
- * \brief Computes new datarate according to the given offset
- *
- * \param [IN] downlinkDwellTime Downlink dwell time configuration. 0: No limit, 1: 400ms
- *
- * \param [IN] dr Current datarate
- *
- * \param [IN] drOffset Offset to be applied
- *
- * \retval newDr Computed datarate.
- */
-uint8_t RegionCN779ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset );
-
-/*!
- * \brief Sets the radio into beacon reception mode
- *
- * \param [IN] rxBeaconSetup Pointer to the function parameters
- */
- void RegionCN779RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr );
-
-/*! \} defgroup REGIONCN779 */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __REGION_CN779_H__
diff --git a/mac/region/RegionCommon.c b/mac/region/RegionCommon.c
deleted file mode 100644
index 6dfdf3b..0000000
--- a/mac/region/RegionCommon.c
+++ /dev/null
@@ -1,471 +0,0 @@
-/*!
- * \file      RegionCommon.c
- *
- * \brief     LoRa MAC common region implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- */
-#include <math.h>
-#include "radio.h"
-#include "utilities.h"
-#include "RegionCommon.h"
-
-#define BACKOFF_DC_1_HOUR       100
-#define BACKOFF_DC_10_HOURS     1000
-#define BACKOFF_DC_24_HOURS     10000
-
-static uint8_t CountChannels( uint16_t mask, uint8_t nbBits )
-{
-    uint8_t nbActiveBits = 0;
-
-    for( uint8_t j = 0; j < nbBits; j++ )
-    {
-        if( ( mask & ( 1 << j ) ) == ( 1 << j ) )
-        {
-            nbActiveBits++;
-        }
-    }
-    return nbActiveBits;
-}
-
-uint16_t RegionCommonGetJoinDc( SysTime_t elapsedTime )
-{
-    uint16_t dutyCycle = 0;
-
-    if( elapsedTime.Seconds < 3600 )
-    {
-        dutyCycle = BACKOFF_DC_1_HOUR;
-    }
-    else if( elapsedTime.Seconds < ( 3600 + 36000 ) )
-    {
-        dutyCycle = BACKOFF_DC_10_HOURS;
-    }
-    else
-    {
-        dutyCycle = BACKOFF_DC_24_HOURS;
-    }
-    return dutyCycle;
-}
-
-bool RegionCommonChanVerifyDr( uint8_t nbChannels, uint16_t* channelsMask, int8_t dr, int8_t minDr, int8_t maxDr, ChannelParams_t* channels )
-{
-    if( RegionCommonValueInRange( dr, minDr, maxDr ) == 0 )
-    {
-        return false;
-    }
-
-    for( uint8_t i = 0, k = 0; i < nbChannels; i += 16, k++ )
-    {
-        for( uint8_t j = 0; j < 16; j++ )
-        {
-            if( ( ( channelsMask[k] & ( 1 << j ) ) != 0 ) )
-            {// Check datarate validity for enabled channels
-                if( RegionCommonValueInRange( dr, ( channels[i + j].DrRange.Fields.Min & 0x0F ),
-                                                  ( channels[i + j].DrRange.Fields.Max & 0x0F ) ) == 1 )
-                {
-                    // At least 1 channel has been found we can return OK.
-                    return true;
-                }
-            }
-        }
-    }
-    return false;
-}
-
-uint8_t RegionCommonValueInRange( int8_t value, int8_t min, int8_t max )
-{
-    if( ( value >= min ) && ( value <= max ) )
-    {
-        return 1;
-    }
-    return 0;
-}
-
-bool RegionCommonChanDisable( uint16_t* channelsMask, uint8_t id, uint8_t maxChannels )
-{
-    uint8_t index = id / 16;
-
-    if( ( index > ( maxChannels / 16 ) ) || ( id >= maxChannels ) )
-    {
-        return false;
-    }
-
-    // Deactivate channel
-    channelsMask[index] &= ~( 1 << ( id % 16 ) );
-
-    return true;
-}
-
-uint8_t RegionCommonCountChannels( uint16_t* channelsMask, uint8_t startIdx, uint8_t stopIdx )
-{
-    uint8_t nbChannels = 0;
-
-    if( channelsMask == NULL )
-    {
-        return 0;
-    }
-
-    for( uint8_t i = startIdx; i < stopIdx; i++ )
-    {
-        nbChannels += CountChannels( channelsMask[i], 16 );
-    }
-
-    return nbChannels;
-}
-
-void RegionCommonChanMaskCopy( uint16_t* channelsMaskDest, uint16_t* channelsMaskSrc, uint8_t len )
-{
-    if( ( channelsMaskDest != NULL ) && ( channelsMaskSrc != NULL ) )
-    {
-        for( uint8_t i = 0; i < len; i++ )
-        {
-            channelsMaskDest[i] = channelsMaskSrc[i];
-        }
-    }
-}
-
-void RegionCommonSetBandTxDone( bool joined, Band_t* band, TimerTime_t lastTxDone )
-{
-    if( joined == true )
-    {
-        band->LastTxDoneTime = lastTxDone;
-    }
-    else
-    {
-        band->LastTxDoneTime = lastTxDone;
-        band->LastJoinTxDoneTime = lastTxDone;
-    }
-}
-
-TimerTime_t RegionCommonUpdateBandTimeOff( bool joined, bool dutyCycle, Band_t* bands, uint8_t nbBands )
-{
-    TimerTime_t nextTxDelay = TIMERTIME_T_MAX;
-
-    // Update bands Time OFF
-    for( uint8_t i = 0; i < nbBands; i++ )
-    {
-        if( joined == false )
-        {
-            TimerTime_t elapsedJoin = TimerGetElapsedTime( bands[i].LastJoinTxDoneTime );
-            TimerTime_t elapsedTx = TimerGetElapsedTime( bands[i].LastTxDoneTime );
-            TimerTime_t txDoneTime =  MAX( elapsedJoin,
-                                        ( dutyCycle == true ) ? elapsedTx : 0 );
-
-            if( bands[i].TimeOff <= txDoneTime )
-            {
-                bands[i].TimeOff = 0;
-            }
-            if( bands[i].TimeOff != 0 )
-            {
-                nextTxDelay = MIN( bands[i].TimeOff - txDoneTime, nextTxDelay );
-            }
-        }
-        else
-        {
-            if( dutyCycle == true )
-            {
-                TimerTime_t elapsed = TimerGetElapsedTime( bands[i].LastTxDoneTime );
-                if( bands[i].TimeOff <= elapsed )
-                {
-                    bands[i].TimeOff = 0;
-                }
-                if( bands[i].TimeOff != 0 )
-                {
-                    nextTxDelay = MIN( bands[i].TimeOff - elapsed, nextTxDelay );
-                }
-            }
-            else
-            {
-                nextTxDelay = 0;
-                bands[i].TimeOff = 0;
-            }
-        }
-    }
-
-    return ( nextTxDelay == TIMERTIME_T_MAX ) ? 0 : nextTxDelay;
-}
-
-uint8_t RegionCommonParseLinkAdrReq( uint8_t* payload, RegionCommonLinkAdrParams_t* linkAdrParams )
-{
-    uint8_t retIndex = 0;
-
-    if( payload[0] == SRV_MAC_LINK_ADR_REQ )
-    {
-        // Parse datarate and tx power
-        linkAdrParams->Datarate = payload[1];
-        linkAdrParams->TxPower = linkAdrParams->Datarate & 0x0F;
-        linkAdrParams->Datarate = ( linkAdrParams->Datarate >> 4 ) & 0x0F;
-        // Parse ChMask
-        linkAdrParams->ChMask = ( uint16_t )payload[2];
-        linkAdrParams->ChMask |= ( uint16_t )payload[3] << 8;
-        // Parse ChMaskCtrl and nbRep
-        linkAdrParams->NbRep = payload[4];
-        linkAdrParams->ChMaskCtrl = ( linkAdrParams->NbRep >> 4 ) & 0x07;
-        linkAdrParams->NbRep &= 0x0F;
-
-        // LinkAdrReq has 4 bytes length + 1 byte CMD
-        retIndex = 5;
-    }
-    return retIndex;
-}
-
-uint8_t RegionCommonLinkAdrReqVerifyParams( RegionCommonLinkAdrReqVerifyParams_t* verifyParams, int8_t* dr, int8_t* txPow, uint8_t* nbRep )
-{
-    uint8_t status = verifyParams->Status;
-    int8_t datarate = verifyParams->Datarate;
-    int8_t txPower = verifyParams->TxPower;
-    int8_t nbRepetitions = verifyParams->NbRep;
-
-    // Handle the case when ADR is off.
-    if( verifyParams->AdrEnabled == false )
-    {
-        // When ADR is off, we are allowed to change the channels mask
-        nbRepetitions = verifyParams->CurrentNbRep;
-        datarate =  verifyParams->CurrentDatarate;
-        txPower =  verifyParams->CurrentTxPower;
-    }
-
-    if( status != 0 )
-    {
-        // Verify datarate. The variable phyParam. Value contains the minimum allowed datarate.
-        if( RegionCommonChanVerifyDr( verifyParams->NbChannels, verifyParams->ChannelsMask, datarate,
-                                      verifyParams->MinDatarate, verifyParams->MaxDatarate, verifyParams->Channels  ) == false )
-        {
-            status &= 0xFD; // Datarate KO
-        }
-
-        // Verify tx power
-        if( RegionCommonValueInRange( txPower, verifyParams->MaxTxPower, verifyParams->MinTxPower ) == 0 )
-        {
-            // Verify if the maximum TX power is exceeded
-            if( verifyParams->MaxTxPower > txPower )
-            { // Apply maximum TX power. Accept TX power.
-                txPower = verifyParams->MaxTxPower;
-            }
-            else
-            {
-                status &= 0xFB; // TxPower KO
-            }
-        }
-    }
-
-    // If the status is ok, verify the NbRep
-    if( status == 0x07 )
-    {
-        if( nbRepetitions == 0 )
-        { // Restore the default value according to the LoRaWAN specification
-            nbRepetitions = 1;
-        }
-    }
-
-    // Apply changes
-    *dr = datarate;
-    *txPow = txPower;
-    *nbRep = nbRepetitions;
-
-    return status;
-}
-
-double RegionCommonComputeSymbolTimeLoRa( uint8_t phyDr, uint32_t bandwidth )
-{
-    return ( ( double )( 1 << phyDr ) / ( double )bandwidth ) * 1000;
-}
-
-double RegionCommonComputeSymbolTimeFsk( uint8_t phyDr )
-{
-    return ( 8.0 / ( double )phyDr ); // 1 symbol equals 1 byte
-}
-
-void RegionCommonComputeRxWindowParameters( double tSymbol, uint8_t minRxSymbols, uint32_t rxError, uint32_t wakeUpTime, uint32_t* windowTimeout, int32_t* windowOffset )
-{
-    *windowTimeout = MAX( ( uint32_t )ceil( ( ( 2 * minRxSymbols - 8 ) * tSymbol + 2 * rxError ) / tSymbol ), minRxSymbols ); // Computed number of symbols
-    *windowOffset = ( int32_t )ceil( ( 4.0 * tSymbol ) - ( ( *windowTimeout * tSymbol ) / 2.0 ) - wakeUpTime );
-}
-
-int8_t RegionCommonComputeTxPower( int8_t txPowerIndex, float maxEirp, float antennaGain )
-{
-    int8_t phyTxPower = 0;
-
-    phyTxPower = ( int8_t )floor( ( maxEirp - ( txPowerIndex * 2U ) ) - antennaGain );
-
-    return phyTxPower;
-}
-
-void RegionCommonCalcBackOff( RegionCommonCalcBackOffParams_t* calcBackOffParams )
-{
-    uint8_t bandIdx = calcBackOffParams->Channels[calcBackOffParams->Channel].Band;
-    uint16_t dutyCycle = calcBackOffParams->Bands[bandIdx].DCycle;
-    uint16_t joinDutyCycle = 0;
-
-    // Reset time-off to initial value.
-    calcBackOffParams->Bands[bandIdx].TimeOff = 0;
-
-    if( calcBackOffParams->Joined == false )
-    {
-        // Get the join duty cycle
-        joinDutyCycle = RegionCommonGetJoinDc( calcBackOffParams->ElapsedTime );
-        // Apply the most restricting duty cycle
-        dutyCycle = MAX( dutyCycle, joinDutyCycle );
-        // Reset the timeoff if the last frame was not a join request and when the duty cycle is not enabled
-        if( ( calcBackOffParams->DutyCycleEnabled == false ) && ( calcBackOffParams->LastTxIsJoinRequest == false ) )
-        {
-            // This is the case when the duty cycle is off and the last uplink frame was not a join.
-            // This could happen in case of a rejoin, e.g. in compliance test mode.
-            // In this special case we have to set the time off to 0, since the join duty cycle shall only
-            // be applied after the first join request.
-            calcBackOffParams->Bands[bandIdx].TimeOff = 0;
-        }
-        else
-        {
-            // Apply band time-off.
-            calcBackOffParams->Bands[bandIdx].TimeOff = calcBackOffParams->TxTimeOnAir * dutyCycle - calcBackOffParams->TxTimeOnAir;
-        }
-    }
-    else
-    {
-        if( calcBackOffParams->DutyCycleEnabled == true )
-        {
-            calcBackOffParams->Bands[bandIdx].TimeOff = calcBackOffParams->TxTimeOnAir * dutyCycle - calcBackOffParams->TxTimeOnAir;
-        }
-        else
-        {
-            calcBackOffParams->Bands[bandIdx].TimeOff = 0;
-        }
-    }
-}
-
-
-void RegionCommonRxBeaconSetup( RegionCommonRxBeaconSetupParams_t* rxBeaconSetupParams )
-{
-    bool rxContinuous = true;
-    uint8_t datarate;
-
-    // Set the radio into sleep mode
-    Radio.Sleep( );
-
-    // Setup frequency and payload length
-    Radio.SetChannel( rxBeaconSetupParams->Frequency );
-    Radio.SetMaxPayloadLength( MODEM_LORA, rxBeaconSetupParams->BeaconSize );
-
-    // Check the RX continuous mode
-    if( rxBeaconSetupParams->RxTime != 0 )
-    {
-        rxContinuous = false;
-    }
-
-    // Get region specific datarate
-    datarate = rxBeaconSetupParams->Datarates[rxBeaconSetupParams->BeaconDatarate];
-
-    // Setup radio
-    Radio.SetRxConfig( MODEM_LORA, rxBeaconSetupParams->BeaconChannelBW, datarate,
-                       1, 0, 10, rxBeaconSetupParams->SymbolTimeout, true, rxBeaconSetupParams->BeaconSize, false, 0, 0, false, rxContinuous );
-
-    Radio.Rx( rxBeaconSetupParams->RxTime );
-}
-
-void RegionCommonCountNbOfEnabledChannels( RegionCommonCountNbOfEnabledChannelsParams_t* countNbOfEnabledChannelsParams,
-                                           uint8_t* enabledChannels, uint8_t* nbEnabledChannels, uint8_t* nbRestrictedChannels )
-{
-    uint8_t nbChannelCount = 0;
-    uint8_t nbRestrictedChannelsCount = 0;
-
-    for( uint8_t i = 0, k = 0; i < countNbOfEnabledChannelsParams->MaxNbChannels; i += 16, k++ )
-    {
-        for( uint8_t j = 0; j < 16; j++ )
-        {
-            if( ( countNbOfEnabledChannelsParams->ChannelsMask[k] & ( 1 << j ) ) != 0 )
-            {
-                if( countNbOfEnabledChannelsParams->Channels[i + j].Frequency == 0 )
-                { // Check if the channel is enabled
-                    continue;
-                }
-                if( ( countNbOfEnabledChannelsParams->Joined == false ) &&
-                    ( countNbOfEnabledChannelsParams->JoinChannels > 0 ) )
-                {
-                    if( ( countNbOfEnabledChannelsParams->JoinChannels & ( 1 << j ) ) == 0 )
-                    {
-                        continue;
-                    }
-                }
-                if( RegionCommonValueInRange( countNbOfEnabledChannelsParams->Datarate,
-                                              countNbOfEnabledChannelsParams->Channels[i + j].DrRange.Fields.Min,
-                                              countNbOfEnabledChannelsParams->Channels[i + j].DrRange.Fields.Max ) == false )
-                { // Check if the current channel selection supports the given datarate
-                    continue;
-                }
-                if( countNbOfEnabledChannelsParams->Bands[countNbOfEnabledChannelsParams->Channels[i + j].Band].TimeOff > 0 )
-                { // Check if the band is available for transmission
-                    nbRestrictedChannelsCount++;
-                    continue;
-                }
-                enabledChannels[nbChannelCount++] = i + j;
-            }
-        }
-    }
-    *nbEnabledChannels = nbChannelCount;
-    *nbRestrictedChannels = nbRestrictedChannelsCount;
-}
-
-LoRaMacStatus_t RegionCommonIdentifyChannels( RegionCommonIdentifyChannelsParam_t* identifyChannelsParam,
-                                              TimerTime_t* aggregatedTimeOff, uint8_t* enabledChannels,
-                                              uint8_t* nbEnabledChannels, uint8_t* nbRestrictedChannels,
-                                              TimerTime_t* nextTxDelay )
-{
-    TimerTime_t elapsed = TimerGetElapsedTime( identifyChannelsParam->LastAggrTx );
-    *nextTxDelay = identifyChannelsParam->AggrTimeOff - elapsed;
-    *nbRestrictedChannels = 1;
-    *nbEnabledChannels = 0;
-
-    if( ( identifyChannelsParam->LastAggrTx == 0 ) ||
-        ( identifyChannelsParam->AggrTimeOff <= elapsed ) )
-    {
-        // Reset Aggregated time off
-        *aggregatedTimeOff = 0;
-
-        // Update bands Time OFF
-        *nextTxDelay = RegionCommonUpdateBandTimeOff( identifyChannelsParam->CountNbOfEnabledChannelsParam->Joined,
-                                                      identifyChannelsParam->DutyCycleEnabled,
-                                                      identifyChannelsParam->CountNbOfEnabledChannelsParam->Bands,
-                                                      identifyChannelsParam->MaxBands );
-
-        RegionCommonCountNbOfEnabledChannels( identifyChannelsParam->CountNbOfEnabledChannelsParam, enabledChannels,
-                                              nbEnabledChannels, nbRestrictedChannels );
-    }
-
-    if( *nbEnabledChannels > 0 )
-    {
-        *nextTxDelay = 0;
-        return LORAMAC_STATUS_OK;
-    }
-    else if( *nbRestrictedChannels > 0 )
-    {
-        return LORAMAC_STATUS_DUTYCYCLE_RESTRICTED;
-    }
-    else
-    {
-        return LORAMAC_STATUS_NO_CHANNEL_FOUND;
-    }
-}
diff --git a/mac/region/RegionCommon.h b/mac/region/RegionCommon.h
deleted file mode 100644
index 5a5ad4e..0000000
--- a/mac/region/RegionCommon.h
+++ /dev/null
@@ -1,526 +0,0 @@
-/*!
- * \file      RegionCommon.h
- *
- * \brief     Region independent implementations which are common to all regions.
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * \defgroup  REGIONCOMMON Common region implementation
- *            Region independent implementations which are common to all regions.
- * \{
- */
-#ifndef __REGIONCOMMON_H__
-#define __REGIONCOMMON_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include "LoRaMacTypes.h"
-#include "region/Region.h"
-
-typedef struct sRegionCommonLinkAdrParams
-{
-    /*!
-     * Number of repetitions.
-     */
-    uint8_t NbRep;
-    /*!
-     * Datarate.
-     */
-    int8_t Datarate;
-    /*!
-     * Tx power.
-     */
-    int8_t TxPower;
-    /*!
-     * Channels mask control field.
-     */
-    uint8_t ChMaskCtrl;
-    /*!
-     * Channels mask field.
-     */
-    uint16_t ChMask;
-}RegionCommonLinkAdrParams_t;
-
-typedef struct sRegionCommonLinkAdrReqVerifyParams
-{
-    /*!
-     * LoRaWAN specification Version
-     */
-    Version_t Version;
-    /*!
-     * The current status of the AdrLinkRequest.
-     */
-    uint8_t Status;
-    /*!
-     * Set to true, if ADR is enabled.
-     */
-    bool AdrEnabled;
-    /*!
-     * The datarate the AdrLinkRequest wants to set.
-     */
-    int8_t Datarate;
-    /*!
-     * The TX power the AdrLinkRequest wants to set.
-     */
-    int8_t TxPower;
-    /*!
-     * The number of repetitions the AdrLinkRequest wants to set.
-     */
-    uint8_t NbRep;
-    /*!
-     * The current datarate the node is using.
-     */
-    int8_t CurrentDatarate;
-    /*!
-     * The current TX power the node is using.
-     */
-    int8_t CurrentTxPower;
-    /*!
-     * The current number of repetitions the node is using.
-     */
-    int8_t CurrentNbRep;
-    /*!
-     * The number of channels.
-     */
-    uint8_t NbChannels;
-    /*!
-     * Pointer to the first element of the channels mask.
-     */
-    uint16_t* ChannelsMask;
-    /*!
-     * The minimum possible datarate.
-     */
-    int8_t MinDatarate;
-    /*!
-     * The maximum possible datarate.
-     */
-    int8_t MaxDatarate;
-    /*!
-     * Pointer to the channels.
-     */
-    ChannelParams_t* Channels;
-    /*!
-     * The minimum possible TX power.
-     */
-    int8_t MinTxPower;
-    /*!
-     * The maximum possible TX power.
-     */
-    int8_t MaxTxPower;
-}RegionCommonLinkAdrReqVerifyParams_t;
-
-typedef struct sRegionCommonCalcBackOffParams
-{
-    /*!
-     * A pointer to region specific channels.
-     */
-    ChannelParams_t* Channels;
-    /*!
-     * A pointer to region specific bands.
-     */
-    Band_t* Bands;
-    /*!
-     * Set to true, if the last uplink was a join request.
-     */
-    bool LastTxIsJoinRequest;
-    /*!
-     * Set to true, if the node is joined.
-     */
-    bool Joined;
-    /*!
-     * Set to true, if the duty cycle is enabled.
-     */
-    bool DutyCycleEnabled;
-    /*!
-     * The current channel.
-     */
-    uint8_t Channel;
-    /*!
-     * The elapsed time since initialization.
-     */
-    SysTime_t ElapsedTime;
-    /*!
-     * The time on air of the last Tx frame.
-     */
-    TimerTime_t TxTimeOnAir;
-}RegionCommonCalcBackOffParams_t;
-
-typedef struct sRegionCommonRxBeaconSetupParams
-{
-    /*!
-     * A pointer to the available datarates.
-     */
-    const uint8_t* Datarates;
-    /*!
-     * Frequency
-     */
-    uint32_t Frequency;
-    /*!
-     * The size of the beacon frame.
-     */
-    uint8_t BeaconSize;
-    /*!
-     * The datarate of the beacon.
-     */
-    uint8_t BeaconDatarate;
-    /*!
-     * The channel bandwidth of the beacon.
-     */
-    uint8_t BeaconChannelBW;
-    /*!
-     * The RX time.
-     */
-    uint32_t RxTime;
-    /*!
-     * The symbol timeout of the RX procedure.
-     */
-    uint16_t SymbolTimeout;
-}RegionCommonRxBeaconSetupParams_t;
-
-typedef struct sRegionCommonCountNbOfEnabledChannelsParams
-{
-    /*!
-     * Set to true, if the device is joined.
-     */
-    bool Joined;
-    /*!
-     * The datarate to count the available channels.
-     */
-    uint8_t Datarate;
-    /*!
-     * A pointer to the channels mask to verify.
-     */
-    uint16_t* ChannelsMask;
-    /*!
-     * A pointer to the channels.
-     */
-    ChannelParams_t* Channels;
-    /*!
-     * A pointer to the bands.
-     */
-    Band_t* Bands;
-    /*!
-     * The number of available channels.
-     */
-    uint16_t MaxNbChannels;
-    /*!
-     * A bitmask containing the join channels.
-     */
-    uint16_t JoinChannels;
-}RegionCommonCountNbOfEnabledChannelsParams_t;
-
-typedef struct sRegionCommonIdentifyChannelsParam
-{
-    /*!
-     * Aggregated time-off time.
-     */
-    TimerTime_t AggrTimeOff;
-    /*!
-     * Time of the last aggregated TX.
-     */
-    TimerTime_t LastAggrTx;
-    /*!
-     * Set to true, if the duty cycle is enabled, otherwise false.
-     */
-    bool DutyCycleEnabled;
-    /*!
-     * Maximum number of bands.
-     */
-    uint8_t MaxBands;
-    /*!
-     * Pointer to a structure of RegionCommonCountNbOfEnabledChannelsParams_t.
-     */
-    RegionCommonCountNbOfEnabledChannelsParams_t* CountNbOfEnabledChannelsParam;
-}RegionCommonIdentifyChannelsParam_t;
-
-/*!
- * \brief Calculates the join duty cycle.
- *        This is a generic function and valid for all regions.
- *
- * \param [IN] elapsedTime Elapsed time since the start of the device.
- *
- * \retval Duty cycle restriction.
- */
-uint16_t RegionCommonGetJoinDc( SysTime_t elapsedTime );
-
-/*!
- * \brief Verifies, if a value is in a given range.
- *        This is a generic function and valid for all regions.
- *
- * \param [IN] value Value to verify, if it is in range.
- *
- * \param [IN] min Minimum possible value.
- *
- * \param [IN] max Maximum possible value.
- *
- * \retval Returns 1 if the value is in range, otherwise 0.
- */
-uint8_t RegionCommonValueInRange( int8_t value, int8_t min, int8_t max );
-
-/*!
- * \brief Verifies, if a datarate is available on an active channel.
- *        This is a generic function and valid for all regions.
- *
- * \param [IN] nbChannels Number of channels.
- *
- * \param [IN] channelsMask The channels mask of the region.
- *
- * \param [IN] dr The datarate to verify.
- *
- * \param [IN] minDr Minimum datarate.
- *
- * \param [IN] maxDr Maximum datarate.
- *
- * \param [IN] channels The channels of the region.
- *
- * \retval Returns true if the datarate is supported, false if not.
- */
-bool RegionCommonChanVerifyDr( uint8_t nbChannels, uint16_t* channelsMask, int8_t dr,
-                            int8_t minDr, int8_t maxDr, ChannelParams_t* channels );
-
-/*!
- * \brief Disables a channel in a given channels mask.
- *        This is a generic function and valid for all regions.
- *
- * \param [IN] channelsMask The channels mask of the region.
- *
- * \param [IN] id The id of the channels mask to disable.
- *
- * \param [IN] maxChannels Maximum number of channels.
- *
- * \retval Returns true if the channel could be disabled, false if not.
- */
-bool RegionCommonChanDisable( uint16_t* channelsMask, uint8_t id, uint8_t maxChannels );
-
-/*!
- * \brief Counts the number of active channels in a given channels mask.
- *        This is a generic function and valid for all regions.
- *
- * \param [IN] channelsMask The channels mask of the region.
- *
- * \param [IN] startIdx Start index.
- *
- * \param [IN] stopIdx Stop index ( the channels of this index will not be counted ).
- *
- * \retval Returns the number of active channels.
- */
-uint8_t RegionCommonCountChannels( uint16_t* channelsMask, uint8_t startIdx, uint8_t stopIdx );
-
-/*!
- * \brief Copy a channels mask.
- *        This is a generic function and valid for all regions.
- *
- * \param [IN] channelsMaskDest The destination channels mask.
- *
- * \param [IN] channelsMaskSrc The source channels mask.
- *
- * \param [IN] len The index length to copy.
- */
-void RegionCommonChanMaskCopy( uint16_t* channelsMaskDest, uint16_t* channelsMaskSrc, uint8_t len );
-
-/*!
- * \brief Sets the last tx done property.
- *        This is a generic function and valid for all regions.
- *
- * \param [IN] joined Set to true, if the node has joined the network
- *
- * \param [IN] band The band to be updated.
- *
- * \param [IN] lastTxDone The time of the last TX done.
- */
-void RegionCommonSetBandTxDone( bool joined, Band_t* band, TimerTime_t lastTxDone );
-
-/*!
- * \brief Updates the time-offs of the bands.
- *        This is a generic function and valid for all regions.
- *
- * \param [IN] joined Set to true, if the node has joined the network
- *
- * \param [IN] dutyCycle Set to true, if the duty cycle is enabled.
- *
- * \param [IN] bands A pointer to the bands.
- *
- * \param [IN] nbBands The number of bands available.
- *
- * \retval Returns the time which must be waited to perform the next uplink.
- */
-TimerTime_t RegionCommonUpdateBandTimeOff( bool joined, bool dutyCycle, Band_t* bands, uint8_t nbBands );
-
-/*!
- * \brief Parses the parameter of an LinkAdrRequest.
- *        This is a generic function and valid for all regions.
- *
- * \param [IN] payload Pointer to the payload containing the MAC commands. The payload
- *                     must contain the CMD identifier, following by the parameters.
- *
- * \param [OUT] parseLinkAdr The function fills the structure with the ADR parameters.
- *
- * \retval Returns the length of the ADR request, if a request was found. Otherwise, the
- *         function returns 0.
- */
-uint8_t RegionCommonParseLinkAdrReq( uint8_t* payload, RegionCommonLinkAdrParams_t* parseLinkAdr );
-
-/*!
- * \brief Verifies and updates the datarate, the TX power and the number of repetitions
- *        of a LinkAdrRequest. This depends on the configuration of ADR also.
- *
- * \param [IN] verifyParams Pointer to a structure containing input parameters.
- *
- * \param [OUT] dr The updated datarate.
- *
- * \param [OUT] txPow The updated TX power.
- *
- * \param [OUT] nbRep The updated number of repetitions.
- *
- * \retval Returns the status according to the LinkAdrRequest definition.
- */
-uint8_t RegionCommonLinkAdrReqVerifyParams( RegionCommonLinkAdrReqVerifyParams_t* verifyParams, int8_t* dr, int8_t* txPow, uint8_t* nbRep );
-
-/*!
- * \brief Computes the symbol time for LoRa modulation.
- *
- * \param [IN] phyDr Physical datarate to use.
- *
- * \param [IN] bandwidth Bandwidth to use.
- *
- * \retval Returns the symbol time.
- */
-double RegionCommonComputeSymbolTimeLoRa( uint8_t phyDr, uint32_t bandwidth );
-
-/*!
- * \brief Computes the symbol time for FSK modulation.
- *
- * \param [IN] phyDr Physical datarate to use.
- *
- * \param [IN] bandwidth Bandwidth to use.
- *
- * \retval Returns the symbol time.
- */
-double RegionCommonComputeSymbolTimeFsk( uint8_t phyDr );
-
-/*!
- * \brief Computes the RX window timeout and the RX window offset.
- *
- * \param [IN] tSymbol Symbol timeout.
- *
- * \param [IN] minRxSymbols Minimum required number of symbols to detect an Rx frame.
- *
- * \param [IN] rxError System maximum timing error of the receiver. In milliseconds
- *                     The receiver will turn on in a [-rxError : +rxError] ms interval around RxOffset.
- *
- * \param [IN] wakeUpTime Wakeup time of the system.
- *
- * \param [OUT] windowTimeout RX window timeout.
- *
- * \param [OUT] windowOffset RX window time offset to be applied to the RX delay.
- */
-void RegionCommonComputeRxWindowParameters( double tSymbol, uint8_t minRxSymbols, uint32_t rxError, uint32_t wakeUpTime, uint32_t* windowTimeout, int32_t* windowOffset );
-
-/*!
- * \brief Computes the txPower, based on the max EIRP and the antenna gain.
- *
- * \remark US915 region uses a conducted power as input value for maxEirp.
- *         Thus, the antennaGain parameter must be set to 0.
- *
- * \param [IN] txPower TX power index.
- *
- * \param [IN] maxEirp Maximum EIRP.
- *
- * \param [IN] antennaGain Antenna gain. Referenced to the isotropic antenna.
- *                         Value is in dBi. ( antennaGain[dBi] = measuredAntennaGain[dBd] + 2.15 )
- *
- * \retval Returns the physical TX power.
- */
-int8_t RegionCommonComputeTxPower( int8_t txPowerIndex, float maxEirp, float antennaGain );
-
-/*!
- * \brief Calculates the duty cycle for the current band.
- *
- * \param [IN] calcBackOffParams A pointer to the input parameters.
- */
-void RegionCommonCalcBackOff( RegionCommonCalcBackOffParams_t* calcBackOffParams );
-
-/*!
- * \brief Sets up the radio into RX beacon mode.
- *
- * \param [IN] rxBeaconSetupParams A pointer to the input parameters.
- */
-void RegionCommonRxBeaconSetup( RegionCommonRxBeaconSetupParams_t* rxBeaconSetupParams );
-
-/*!
- * \brief Counts the number of enabled channels.
- *
- * \param [IN] countNbOfEnabledChannelsParams A pointer to the input parameters.
- *
- * \param [OUT] enabledChannels A pointer to an array of size XX_MAX_NB_CHANNELS. The function
- *              stores the available channels into this array.
- *
- * \param [OUT] nbEnabledChannels The number of available channels found.
- *
- * \param [OUT] nbRestrictedChannels It contains the number of channel
- *                      which are available, but restricted due to duty cycle.
- */
-void RegionCommonCountNbOfEnabledChannels( RegionCommonCountNbOfEnabledChannelsParams_t* countNbOfEnabledChannelsParams,
-                                           uint8_t* enabledChannels, uint8_t* nbEnabledChannels, uint8_t* nbRestrictedChannels );
-
-/*!
- * \brief Identifies all channels which are available currently.
- *
- * \param [IN] identifyChannelsParam A pointer to the input parameters.
- *
- * \param [OUT] aggregatedTimeOff The new value of the aggregatedTimeOff. The function
- *                                may resets it to 0.
- *
- * \param [OUT] enabledChannels A pointer to an array of size XX_MAX_NB_CHANNELS. The function
- *              stores the available channels into this array.
- *
- * \param [OUT] nbEnabledChannels The number of available channels found.
- *
- * \param [OUT] nbRestrictedChannels It contains the number of channel
- *                      which are available, but restricted due to duty cycle.
- *
- * \param [OUT] nextTxDelay Holds the time which has to be waited for the next possible
- *                          uplink transmission.
- *
- *\retval Status of the operation.
- */
-LoRaMacStatus_t RegionCommonIdentifyChannels( RegionCommonIdentifyChannelsParam_t* identifyChannelsParam,
-                                              TimerTime_t* aggregatedTimeOff, uint8_t* enabledChannels,
-                                              uint8_t* nbEnabledChannels, uint8_t* nbRestrictedChannels,
-                                              TimerTime_t* nextTxDelay );
-
-/*! \} defgroup REGIONCOMMON */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __REGIONCOMMON_H__
diff --git a/mac/region/RegionEU433.c b/mac/region/RegionEU433.c
deleted file mode 100644
index a2047dd..0000000
--- a/mac/region/RegionEU433.c
+++ /dev/null
@@ -1,973 +0,0 @@
-/*!
- * \file      RegionEU433.c
- *
- * \brief     Region implementation for EU433
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
-*/
-#include "utilities.h"
-
-#include "RegionCommon.h"
-#include "RegionEU433.h"
-
-// Definitions
-#define CHANNELS_MASK_SIZE              1
-
-/*!
- * Region specific context
- */
-typedef struct sRegionEU433NvmCtx
-{
-    /*!
-     * LoRaMAC channels
-     */
-    ChannelParams_t Channels[ EU433_MAX_NB_CHANNELS ];
-    /*!
-     * LoRaMac bands
-     */
-    Band_t Bands[ EU433_MAX_NB_BANDS ];
-    /*!
-     * LoRaMac channels mask
-     */
-    uint16_t ChannelsMask[ CHANNELS_MASK_SIZE ];
-    /*!
-     * LoRaMac channels default mask
-     */
-    uint16_t ChannelsDefaultMask[ CHANNELS_MASK_SIZE ];
-}RegionEU433NvmCtx_t;
-
-/*
- * Non-volatile module context.
- */
-static RegionEU433NvmCtx_t NvmCtx;
-
-// Static functions
-static int8_t GetNextLowerTxDr( int8_t dr, int8_t minDr )
-{
-    uint8_t nextLowerDr = 0;
-
-    if( dr == minDr )
-    {
-        nextLowerDr = minDr;
-    }
-    else
-    {
-        nextLowerDr = dr - 1;
-    }
-    return nextLowerDr;
-}
-
-static uint32_t GetBandwidth( uint32_t drIndex )
-{
-    switch( BandwidthsEU433[drIndex] )
-    {
-        default:
-        case 125000:
-            return 0;
-        case 250000:
-            return 1;
-        case 500000:
-            return 2;
-    }
-}
-
-static int8_t LimitTxPower( int8_t txPower, int8_t maxBandTxPower, int8_t datarate, uint16_t* channelsMask )
-{
-    int8_t txPowerResult = txPower;
-
-    // Limit tx power to the band max
-    txPowerResult =  MAX( txPower, maxBandTxPower );
-
-    return txPowerResult;
-}
-
-static bool VerifyRfFreq( uint32_t freq )
-{
-    // Check radio driver support
-    if( Radio.CheckRfFrequency( freq ) == false )
-    {
-        return false;
-    }
-
-    if( ( freq < 433175000 ) || ( freq > 434665000 ) )
-    {
-        return false;
-    }
-    return true;
-}
-
-PhyParam_t RegionEU433GetPhyParam( GetPhyParams_t* getPhy )
-{
-    PhyParam_t phyParam = { 0 };
-
-    switch( getPhy->Attribute )
-    {
-        case PHY_MIN_RX_DR:
-        {
-            phyParam.Value = EU433_RX_MIN_DATARATE;
-            break;
-        }
-        case PHY_MIN_TX_DR:
-        {
-            phyParam.Value = EU433_TX_MIN_DATARATE;
-            break;
-        }
-        case PHY_DEF_TX_DR:
-        {
-            phyParam.Value = EU433_DEFAULT_DATARATE;
-            break;
-        }
-        case PHY_NEXT_LOWER_TX_DR:
-        {
-            phyParam.Value = GetNextLowerTxDr( getPhy->Datarate, EU433_TX_MIN_DATARATE );
-            break;
-        }
-        case PHY_MAX_TX_POWER:
-        {
-            phyParam.Value = EU433_MAX_TX_POWER;
-            break;
-        }
-        case PHY_DEF_TX_POWER:
-        {
-            phyParam.Value = EU433_DEFAULT_TX_POWER;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_LIMIT:
-        {
-            phyParam.Value = EU433_ADR_ACK_LIMIT;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_DELAY:
-        {
-            phyParam.Value = EU433_ADR_ACK_DELAY;
-            break;
-        }
-        case PHY_MAX_PAYLOAD:
-        {
-            phyParam.Value = MaxPayloadOfDatarateEU433[getPhy->Datarate];
-            break;
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            phyParam.Value = EU433_DUTY_CYCLE_ENABLED;
-            break;
-        }
-        case PHY_MAX_RX_WINDOW:
-        {
-            phyParam.Value = EU433_MAX_RX_WINDOW;
-            break;
-        }
-        case PHY_RECEIVE_DELAY1:
-        {
-            phyParam.Value = EU433_RECEIVE_DELAY1;
-            break;
-        }
-        case PHY_RECEIVE_DELAY2:
-        {
-            phyParam.Value = EU433_RECEIVE_DELAY2;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY1:
-        {
-            phyParam.Value = EU433_JOIN_ACCEPT_DELAY1;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY2:
-        {
-            phyParam.Value = EU433_JOIN_ACCEPT_DELAY2;
-            break;
-        }
-        case PHY_MAX_FCNT_GAP:
-        {
-            phyParam.Value = EU433_MAX_FCNT_GAP;
-            break;
-        }
-        case PHY_ACK_TIMEOUT:
-        {
-            phyParam.Value = ( EU433_ACKTIMEOUT + randr( -EU433_ACK_TIMEOUT_RND, EU433_ACK_TIMEOUT_RND ) );
-            break;
-        }
-        case PHY_DEF_DR1_OFFSET:
-        {
-            phyParam.Value = EU433_DEFAULT_RX1_DR_OFFSET;
-            break;
-        }
-        case PHY_DEF_RX2_FREQUENCY:
-        {
-            phyParam.Value = EU433_RX_WND_2_FREQ;
-            break;
-        }
-        case PHY_DEF_RX2_DR:
-        {
-            phyParam.Value = EU433_RX_WND_2_DR;
-            break;
-        }
-        case PHY_CHANNELS_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsMask;
-            break;
-        }
-        case PHY_CHANNELS_DEFAULT_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsDefaultMask;
-            break;
-        }
-        case PHY_MAX_NB_CHANNELS:
-        {
-            phyParam.Value = EU433_MAX_NB_CHANNELS;
-            break;
-        }
-        case PHY_CHANNELS:
-        {
-            phyParam.Channels = NvmCtx.Channels;
-            break;
-        }
-        case PHY_DEF_UPLINK_DWELL_TIME:
-        case PHY_DEF_DOWNLINK_DWELL_TIME:
-        {
-            phyParam.Value = 0;
-            break;
-        }
-        case PHY_DEF_MAX_EIRP:
-        {
-            phyParam.fValue = EU433_DEFAULT_MAX_EIRP;
-            break;
-        }
-        case PHY_DEF_ANTENNA_GAIN:
-        {
-            phyParam.fValue = EU433_DEFAULT_ANTENNA_GAIN;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_FREQ:
-        {
-            phyParam.Value = EU433_BEACON_CHANNEL_FREQ;
-            break;
-        }
-        case PHY_BEACON_FORMAT:
-        {
-            phyParam.BeaconFormat.BeaconSize = EU433_BEACON_SIZE;
-            phyParam.BeaconFormat.Rfu1Size = EU433_RFU1_SIZE;
-            phyParam.BeaconFormat.Rfu2Size = EU433_RFU2_SIZE;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_DR:
-        {
-            phyParam.Value = EU433_BEACON_CHANNEL_DR;
-            break;
-        }
-        case PHY_PING_SLOT_CHANNEL_DR:
-        {
-            phyParam.Value = EU433_PING_SLOT_CHANNEL_DR;
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-
-    return phyParam;
-}
-
-void RegionEU433SetBandTxDone( SetBandTxDoneParams_t* txDone )
-{
-    RegionCommonSetBandTxDone( txDone->Joined, &NvmCtx.Bands[NvmCtx.Channels[txDone->Channel].Band], txDone->LastTxDoneTime );
-}
-
-void RegionEU433InitDefaults( InitDefaultsParams_t* params )
-{
-    Band_t bands[EU433_MAX_NB_BANDS] =
-    {
-        EU433_BAND0
-    };
-
-    switch( params->Type )
-    {
-        case INIT_TYPE_BANDS:
-        {
-            // Initialize bands
-            memcpy1( ( uint8_t* )NvmCtx.Bands, ( uint8_t* )bands, sizeof( Band_t ) * EU433_MAX_NB_BANDS );
-            break;
-        }
-        case INIT_TYPE_INIT:
-        {
-            // Channels
-            NvmCtx.Channels[0] = ( ChannelParams_t ) EU433_LC1;
-            NvmCtx.Channels[1] = ( ChannelParams_t ) EU433_LC2;
-            NvmCtx.Channels[2] = ( ChannelParams_t ) EU433_LC3;
-
-            // Initialize the channels default mask
-            NvmCtx.ChannelsDefaultMask[0] = LC( 1 ) + LC( 2 ) + LC( 3 );
-
-            // Update the channels mask
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, NvmCtx.ChannelsDefaultMask, 1 );
-            break;
-        }
-        case INIT_TYPE_RESTORE_CTX:
-        {
-            if( params->NvmCtx != 0 )
-            {
-                memcpy1( (uint8_t*) &NvmCtx, (uint8_t*) params->NvmCtx, sizeof( NvmCtx ) );
-            }
-            break;
-        }
-        case INIT_TYPE_RESTORE_DEFAULT_CHANNELS:
-        {
-            // Restore channels default mask
-            NvmCtx.ChannelsMask[0] |= NvmCtx.ChannelsDefaultMask[0];
-
-            // Channels
-            NvmCtx.Channels[0] = ( ChannelParams_t ) EU433_LC1;
-            NvmCtx.Channels[1] = ( ChannelParams_t ) EU433_LC2;
-            NvmCtx.Channels[2] = ( ChannelParams_t ) EU433_LC3;
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-}
-
-void* RegionEU433GetNvmCtx( GetNvmCtxParams_t* params )
-{
-    params->nvmCtxSize = sizeof( RegionEU433NvmCtx_t );
-    return &NvmCtx;
-}
-
-bool RegionEU433Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute )
-{
-    switch( phyAttribute )
-    {
-        case PHY_FREQUENCY:
-        {
-            return VerifyRfFreq( verify->Frequency );
-        }
-        case PHY_TX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, EU433_TX_MIN_DATARATE, EU433_TX_MAX_DATARATE );
-        }
-        case PHY_DEF_TX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, DR_0, DR_5 );
-        }
-        case PHY_RX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, EU433_RX_MIN_DATARATE, EU433_RX_MAX_DATARATE );
-        }
-        case PHY_DEF_TX_POWER:
-        case PHY_TX_POWER:
-        {
-            // Remark: switched min and max!
-            return RegionCommonValueInRange( verify->TxPower, EU433_MAX_TX_POWER, EU433_MIN_TX_POWER );
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            return EU433_DUTY_CYCLE_ENABLED;
-        }
-        default:
-            return false;
-    }
-}
-
-void RegionEU433ApplyCFList( ApplyCFListParams_t* applyCFList )
-{
-    ChannelParams_t newChannel;
-    ChannelAddParams_t channelAdd;
-    ChannelRemoveParams_t channelRemove;
-
-    // Setup default datarate range
-    newChannel.DrRange.Value = ( DR_5 << 4 ) | DR_0;
-
-    // Size of the optional CF list
-    if( applyCFList->Size != 16 )
-    {
-        return;
-    }
-
-    // Last byte CFListType must be 0 to indicate the CFList contains a list of frequencies
-    if( applyCFList->Payload[15] != 0 )
-    {
-        return;
-    }
-
-    // Last byte is RFU, don't take it into account
-    for( uint8_t i = 0, chanIdx = EU433_NUMB_DEFAULT_CHANNELS; chanIdx < EU433_MAX_NB_CHANNELS; i+=3, chanIdx++ )
-    {
-        if( chanIdx < ( EU433_NUMB_CHANNELS_CF_LIST + EU433_NUMB_DEFAULT_CHANNELS ) )
-        {
-            // Channel frequency
-            newChannel.Frequency = (uint32_t) applyCFList->Payload[i];
-            newChannel.Frequency |= ( (uint32_t) applyCFList->Payload[i + 1] << 8 );
-            newChannel.Frequency |= ( (uint32_t) applyCFList->Payload[i + 2] << 16 );
-            newChannel.Frequency *= 100;
-
-            // Initialize alternative frequency to 0
-            newChannel.Rx1Frequency = 0;
-        }
-        else
-        {
-            newChannel.Frequency = 0;
-            newChannel.DrRange.Value = 0;
-            newChannel.Rx1Frequency = 0;
-        }
-
-        if( newChannel.Frequency != 0 )
-        {
-            channelAdd.NewChannel = &newChannel;
-            channelAdd.ChannelId = chanIdx;
-
-            // Try to add all channels
-            RegionEU433ChannelAdd( &channelAdd );
-        }
-        else
-        {
-            channelRemove.ChannelId = chanIdx;
-
-            RegionEU433ChannelsRemove( &channelRemove );
-        }
-    }
-}
-
-bool RegionEU433ChanMaskSet( ChanMaskSetParams_t* chanMaskSet )
-{
-    switch( chanMaskSet->ChannelsMaskType )
-    {
-        case CHANNELS_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, chanMaskSet->ChannelsMaskIn, 1 );
-            break;
-        }
-        case CHANNELS_DEFAULT_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsDefaultMask, chanMaskSet->ChannelsMaskIn, 1 );
-            break;
-        }
-        default:
-            return false;
-    }
-    return true;
-}
-
-void RegionEU433ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams )
-{
-    double tSymbol = 0.0;
-
-    // Get the datarate, perform a boundary check
-    rxConfigParams->Datarate = MIN( datarate, EU433_RX_MAX_DATARATE );
-    rxConfigParams->Bandwidth = GetBandwidth( rxConfigParams->Datarate );
-
-    if( rxConfigParams->Datarate == DR_7 )
-    { // FSK
-        tSymbol = RegionCommonComputeSymbolTimeFsk( DataratesEU433[rxConfigParams->Datarate] );
-    }
-    else
-    { // LoRa
-        tSymbol = RegionCommonComputeSymbolTimeLoRa( DataratesEU433[rxConfigParams->Datarate], BandwidthsEU433[rxConfigParams->Datarate] );
-    }
-
-    RegionCommonComputeRxWindowParameters( tSymbol, minRxSymbols, rxError, Radio.GetWakeupTime( ), &rxConfigParams->WindowTimeout, &rxConfigParams->WindowOffset );
-}
-
-bool RegionEU433RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate )
-{
-    RadioModems_t modem;
-    int8_t dr = rxConfig->Datarate;
-    int8_t phyDr = 0;
-    uint32_t frequency = rxConfig->Frequency;
-
-    if( Radio.GetStatus( ) != RF_IDLE )
-    {
-        return false;
-    }
-
-    if( rxConfig->RxSlot == RX_SLOT_WIN_1 )
-    {
-        // Apply window 1 frequency
-        frequency = NvmCtx.Channels[rxConfig->Channel].Frequency;
-        // Apply the alternative RX 1 window frequency, if it is available
-        if( NvmCtx.Channels[rxConfig->Channel].Rx1Frequency != 0 )
-        {
-            frequency = NvmCtx.Channels[rxConfig->Channel].Rx1Frequency;
-        }
-    }
-
-    // Read the physical datarate from the datarates table
-    phyDr = DataratesEU433[dr];
-
-    Radio.SetChannel( frequency );
-
-    // Radio configuration
-    if( dr == DR_7 )
-    {
-        modem = MODEM_FSK;
-        Radio.SetRxConfig( modem, 50000, phyDr * 1000, 0, 83333, 5, rxConfig->WindowTimeout, false, 0, true, 0, 0, false, rxConfig->RxContinuous );
-    }
-    else
-    {
-        modem = MODEM_LORA;
-        Radio.SetRxConfig( modem, rxConfig->Bandwidth, phyDr, 1, 0, 8, rxConfig->WindowTimeout, false, 0, false, 0, 0, true, rxConfig->RxContinuous );
-    }
-
-    Radio.SetMaxPayloadLength( modem, MaxPayloadOfDatarateEU433[dr] + LORA_MAC_FRMPAYLOAD_OVERHEAD );
-
-    *datarate = (uint8_t) dr;
-    return true;
-}
-
-bool RegionEU433TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir )
-{
-    RadioModems_t modem;
-    int8_t phyDr = DataratesEU433[txConfig->Datarate];
-    int8_t txPowerLimited = LimitTxPower( txConfig->TxPower, NvmCtx.Bands[NvmCtx.Channels[txConfig->Channel].Band].TxMaxPower, txConfig->Datarate, NvmCtx.ChannelsMask );
-    uint32_t bandwidth = GetBandwidth( txConfig->Datarate );
-    int8_t phyTxPower = 0;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, txConfig->MaxEirp, txConfig->AntennaGain );
-
-    // Setup the radio frequency
-    Radio.SetChannel( NvmCtx.Channels[txConfig->Channel].Frequency );
-
-    if( txConfig->Datarate == DR_7 )
-    { // High Speed FSK channel
-        modem = MODEM_FSK;
-        Radio.SetTxConfig( modem, phyTxPower, 25000, bandwidth, phyDr * 1000, 0, 5, false, true, 0, 0, false, 4000 );
-    }
-    else
-    {
-        modem = MODEM_LORA;
-        Radio.SetTxConfig( modem, phyTxPower, 0, bandwidth, phyDr, 1, 8, false, true, 0, 0, false, 4000 );
-    }
-
-    // Setup maximum payload lenght of the radio driver
-    Radio.SetMaxPayloadLength( modem, txConfig->PktLen );
-    // Get the time-on-air of the next tx frame
-    *txTimeOnAir = Radio.TimeOnAir( modem, txConfig->PktLen );
-
-    *txPower = txPowerLimited;
-    return true;
-}
-
-uint8_t RegionEU433LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed )
-{
-    uint8_t status = 0x07;
-    RegionCommonLinkAdrParams_t linkAdrParams;
-    uint8_t nextIndex = 0;
-    uint8_t bytesProcessed = 0;
-    uint16_t chMask = 0;
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-    RegionCommonLinkAdrReqVerifyParams_t linkAdrVerifyParams;
-
-    while( bytesProcessed < linkAdrReq->PayloadSize )
-    {
-        // Get ADR request parameters
-        nextIndex = RegionCommonParseLinkAdrReq( &( linkAdrReq->Payload[bytesProcessed] ), &linkAdrParams );
-
-        if( nextIndex == 0 )
-            break; // break loop, since no more request has been found
-
-        // Update bytes processed
-        bytesProcessed += nextIndex;
-
-        // Revert status, as we only check the last ADR request for the channel mask KO
-        status = 0x07;
-
-        // Setup temporary channels mask
-        chMask = linkAdrParams.ChMask;
-
-        // Verify channels mask
-        if( ( linkAdrParams.ChMaskCtrl == 0 ) && ( chMask == 0 ) )
-        {
-            status &= 0xFE; // Channel mask KO
-        }
-        else if( ( ( linkAdrParams.ChMaskCtrl >= 1 ) && ( linkAdrParams.ChMaskCtrl <= 5 )) ||
-                ( linkAdrParams.ChMaskCtrl >= 7 ) )
-        {
-            // RFU
-            status &= 0xFE; // Channel mask KO
-        }
-        else
-        {
-            for( uint8_t i = 0; i < EU433_MAX_NB_CHANNELS; i++ )
-            {
-                if( linkAdrParams.ChMaskCtrl == 6 )
-                {
-                    if( NvmCtx.Channels[i].Frequency != 0 )
-                    {
-                        chMask |= 1 << i;
-                    }
-                }
-                else
-                {
-                    if( ( ( chMask & ( 1 << i ) ) != 0 ) &&
-                        ( NvmCtx.Channels[i].Frequency == 0 ) )
-                    {// Trying to enable an undefined channel
-                        status &= 0xFE; // Channel mask KO
-                    }
-                }
-            }
-        }
-    }
-
-        // Get the minimum possible datarate
-    getPhy.Attribute = PHY_MIN_TX_DR;
-    getPhy.UplinkDwellTime = linkAdrReq->UplinkDwellTime;
-    phyParam = RegionEU433GetPhyParam( &getPhy );
-
-    linkAdrVerifyParams.Status = status;
-    linkAdrVerifyParams.AdrEnabled = linkAdrReq->AdrEnabled;
-    linkAdrVerifyParams.Datarate = linkAdrParams.Datarate;
-    linkAdrVerifyParams.TxPower = linkAdrParams.TxPower;
-    linkAdrVerifyParams.NbRep = linkAdrParams.NbRep;
-    linkAdrVerifyParams.CurrentDatarate = linkAdrReq->CurrentDatarate;
-    linkAdrVerifyParams.CurrentTxPower = linkAdrReq->CurrentTxPower;
-    linkAdrVerifyParams.CurrentNbRep = linkAdrReq->CurrentNbRep;
-    linkAdrVerifyParams.NbChannels = EU433_MAX_NB_CHANNELS;
-    linkAdrVerifyParams.ChannelsMask = &chMask;
-    linkAdrVerifyParams.MinDatarate = ( int8_t )phyParam.Value;
-    linkAdrVerifyParams.MaxDatarate = EU433_TX_MAX_DATARATE;
-    linkAdrVerifyParams.Channels = NvmCtx.Channels;
-    linkAdrVerifyParams.MinTxPower = EU433_MIN_TX_POWER;
-    linkAdrVerifyParams.MaxTxPower = EU433_MAX_TX_POWER;
-    linkAdrVerifyParams.Version = linkAdrReq->Version;
-
-    // Verify the parameters and update, if necessary
-    status = RegionCommonLinkAdrReqVerifyParams( &linkAdrVerifyParams, &linkAdrParams.Datarate, &linkAdrParams.TxPower, &linkAdrParams.NbRep );
-
-    // Update channelsMask if everything is correct
-    if( status == 0x07 )
-    {
-        // Set the channels mask to a default value
-        memset1( ( uint8_t* ) NvmCtx.ChannelsMask, 0, sizeof( NvmCtx.ChannelsMask ) );
-        // Update the channels mask
-        NvmCtx.ChannelsMask[0] = chMask;
-    }
-
-    // Update status variables
-    *drOut = linkAdrParams.Datarate;
-    *txPowOut = linkAdrParams.TxPower;
-    *nbRepOut = linkAdrParams.NbRep;
-    *nbBytesParsed = bytesProcessed;
-
-    return status;
-}
-
-uint8_t RegionEU433RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq )
-{
-    uint8_t status = 0x07;
-
-    // Verify radio frequency
-    if( VerifyRfFreq( rxParamSetupReq->Frequency ) == false )
-    {
-        status &= 0xFE; // Channel frequency KO
-    }
-
-    // Verify datarate
-    if( RegionCommonValueInRange( rxParamSetupReq->Datarate, EU433_RX_MIN_DATARATE, EU433_RX_MAX_DATARATE ) == false )
-    {
-        status &= 0xFD; // Datarate KO
-    }
-
-    // Verify datarate offset
-    if( RegionCommonValueInRange( rxParamSetupReq->DrOffset, EU433_MIN_RX1_DR_OFFSET, EU433_MAX_RX1_DR_OFFSET ) == false )
-    {
-        status &= 0xFB; // Rx1DrOffset range KO
-    }
-
-    return status;
-}
-
-uint8_t RegionEU433NewChannelReq( NewChannelReqParams_t* newChannelReq )
-{
-    uint8_t status = 0x03;
-    ChannelAddParams_t channelAdd;
-    ChannelRemoveParams_t channelRemove;
-
-    if( newChannelReq->NewChannel->Frequency == 0 )
-    {
-        channelRemove.ChannelId = newChannelReq->ChannelId;
-
-        // Remove
-        if( RegionEU433ChannelsRemove( &channelRemove ) == false )
-        {
-            status &= 0xFC;
-        }
-    }
-    else
-    {
-        channelAdd.NewChannel = newChannelReq->NewChannel;
-        channelAdd.ChannelId = newChannelReq->ChannelId;
-
-        switch( RegionEU433ChannelAdd( &channelAdd ) )
-        {
-            case LORAMAC_STATUS_OK:
-            {
-                break;
-            }
-            case LORAMAC_STATUS_FREQUENCY_INVALID:
-            {
-                status &= 0xFE;
-                break;
-            }
-            case LORAMAC_STATUS_DATARATE_INVALID:
-            {
-                status &= 0xFD;
-                break;
-            }
-            case LORAMAC_STATUS_FREQ_AND_DR_INVALID:
-            {
-                status &= 0xFC;
-                break;
-            }
-            default:
-            {
-                status &= 0xFC;
-                break;
-            }
-        }
-    }
-
-    return status;
-}
-
-int8_t RegionEU433TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq )
-{
-    return -1;
-}
-
-uint8_t RegionEU433DlChannelReq( DlChannelReqParams_t* dlChannelReq )
-{
-    uint8_t status = 0x03;
-
-    // Verify if the frequency is supported
-    if( VerifyRfFreq( dlChannelReq->Rx1Frequency ) == false )
-    {
-        status &= 0xFE;
-    }
-
-    // Verify if an uplink frequency exists
-    if( NvmCtx.Channels[dlChannelReq->ChannelId].Frequency == 0 )
-    {
-        status &= 0xFD;
-    }
-
-    // Apply Rx1 frequency, if the status is OK
-    if( status == 0x03 )
-    {
-        NvmCtx.Channels[dlChannelReq->ChannelId].Rx1Frequency = dlChannelReq->Rx1Frequency;
-    }
-
-    return status;
-}
-
-int8_t RegionEU433AlternateDr( int8_t currentDr, AlternateDrType_t type )
-{
-    return currentDr;
-}
-
-void RegionEU433CalcBackOff( CalcBackOffParams_t* calcBackOff )
-{
-    RegionCommonCalcBackOffParams_t calcBackOffParams;
-
-    calcBackOffParams.Channels = NvmCtx.Channels;
-    calcBackOffParams.Bands = NvmCtx.Bands;
-    calcBackOffParams.LastTxIsJoinRequest = calcBackOff->LastTxIsJoinRequest;
-    calcBackOffParams.Joined = calcBackOff->Joined;
-    calcBackOffParams.DutyCycleEnabled = calcBackOff->DutyCycleEnabled;
-    calcBackOffParams.Channel = calcBackOff->Channel;
-    calcBackOffParams.ElapsedTime = calcBackOff->ElapsedTime;
-    calcBackOffParams.TxTimeOnAir = calcBackOff->TxTimeOnAir;
-
-    RegionCommonCalcBackOff( &calcBackOffParams );
-}
-
-LoRaMacStatus_t RegionEU433NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff )
-{
-    uint8_t nbEnabledChannels = 0;
-    uint8_t nbRestrictedChannels = 0;
-    uint8_t enabledChannels[EU433_MAX_NB_CHANNELS] = { 0 };
-    RegionCommonIdentifyChannelsParam_t identifyChannelsParam;
-    RegionCommonCountNbOfEnabledChannelsParams_t countChannelsParams;
-    LoRaMacStatus_t status = LORAMAC_STATUS_NO_CHANNEL_FOUND;
-
-    if( RegionCommonCountChannels( NvmCtx.ChannelsMask, 0, 1 ) == 0 )
-    { // Reactivate default channels
-        NvmCtx.ChannelsMask[0] |= LC( 1 ) + LC( 2 ) + LC( 3 );
-    }
-
-    // Search how many channels are enabled
-    countChannelsParams.Joined = nextChanParams->Joined;
-    countChannelsParams.Datarate = nextChanParams->Datarate;
-    countChannelsParams.ChannelsMask = NvmCtx.ChannelsMask;
-    countChannelsParams.Channels = NvmCtx.Channels;
-    countChannelsParams.Bands = NvmCtx.Bands;
-    countChannelsParams.MaxNbChannels = EU433_MAX_NB_CHANNELS;
-    countChannelsParams.JoinChannels = EU433_JOIN_CHANNELS;
-
-    identifyChannelsParam.AggrTimeOff = nextChanParams->AggrTimeOff;
-    identifyChannelsParam.LastAggrTx = nextChanParams->LastAggrTx;
-    identifyChannelsParam.DutyCycleEnabled = nextChanParams->DutyCycleEnabled;
-    identifyChannelsParam.MaxBands = EU433_MAX_NB_BANDS;
-
-    identifyChannelsParam.CountNbOfEnabledChannelsParam = &countChannelsParams;
-
-    status = RegionCommonIdentifyChannels( &identifyChannelsParam, aggregatedTimeOff, enabledChannels,
-                                           &nbEnabledChannels, &nbRestrictedChannels, time );
-
-    if( nextChanParams->QueryNextTxDelayOnly == true )
-    {
-        return status;
-    }
-
-    if( status == LORAMAC_STATUS_OK )
-    {
-        // We found a valid channel
-        *channel = enabledChannels[randr( 0, nbEnabledChannels - 1 )];
-    }
-    else if( status == LORAMAC_STATUS_NO_CHANNEL_FOUND )
-    {
-        // Datarate not supported by any channel, restore defaults
-        NvmCtx.ChannelsMask[0] |= LC( 1 ) + LC( 2 ) + LC( 3 );
-    }
-    return status;
-}
-
-LoRaMacStatus_t RegionEU433ChannelAdd( ChannelAddParams_t* channelAdd )
-{
-    bool drInvalid = false;
-    bool freqInvalid = false;
-    uint8_t id = channelAdd->ChannelId;
-
-    if( id < EU433_NUMB_DEFAULT_CHANNELS )
-    {
-        return LORAMAC_STATUS_FREQ_AND_DR_INVALID;
-    }
-
-    if( id >= EU433_MAX_NB_CHANNELS )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-
-    // Validate the datarate range
-    if( RegionCommonValueInRange( channelAdd->NewChannel->DrRange.Fields.Min, EU433_TX_MIN_DATARATE, EU433_TX_MAX_DATARATE ) == false )
-    {
-        drInvalid = true;
-    }
-    if( RegionCommonValueInRange( channelAdd->NewChannel->DrRange.Fields.Max, EU433_TX_MIN_DATARATE, EU433_TX_MAX_DATARATE ) == false )
-    {
-        drInvalid = true;
-    }
-    if( channelAdd->NewChannel->DrRange.Fields.Min > channelAdd->NewChannel->DrRange.Fields.Max )
-    {
-        drInvalid = true;
-    }
-
-    // Check frequency
-    if( freqInvalid == false )
-    {
-        if( VerifyRfFreq( channelAdd->NewChannel->Frequency ) == false )
-        {
-            freqInvalid = true;
-        }
-    }
-
-    // Check status
-    if( ( drInvalid == true ) && ( freqInvalid == true ) )
-    {
-        return LORAMAC_STATUS_FREQ_AND_DR_INVALID;
-    }
-    if( drInvalid == true )
-    {
-        return LORAMAC_STATUS_DATARATE_INVALID;
-    }
-    if( freqInvalid == true )
-    {
-        return LORAMAC_STATUS_FREQUENCY_INVALID;
-    }
-
-    memcpy1( ( uint8_t* ) &(NvmCtx.Channels[id]), ( uint8_t* ) channelAdd->NewChannel, sizeof( NvmCtx.Channels[id] ) );
-    NvmCtx.Channels[id].Band = 0;
-    NvmCtx.ChannelsMask[0] |= ( 1 << id );
-    return LORAMAC_STATUS_OK;
-}
-
-bool RegionEU433ChannelsRemove( ChannelRemoveParams_t* channelRemove  )
-{
-    uint8_t id = channelRemove->ChannelId;
-
-    if( id < EU433_NUMB_DEFAULT_CHANNELS )
-    {
-        return false;
-    }
-
-    // Remove the channel from the list of channels
-    NvmCtx.Channels[id] = ( ChannelParams_t ){ 0, 0, { 0 }, 0 };
-
-    return RegionCommonChanDisable( NvmCtx.ChannelsMask, id, EU433_MAX_NB_CHANNELS );
-}
-
-void RegionEU433SetContinuousWave( ContinuousWaveParams_t* continuousWave )
-{
-    int8_t txPowerLimited = LimitTxPower( continuousWave->TxPower, NvmCtx.Bands[NvmCtx.Channels[continuousWave->Channel].Band].TxMaxPower, continuousWave->Datarate, NvmCtx.ChannelsMask );
-    int8_t phyTxPower = 0;
-    uint32_t frequency = NvmCtx.Channels[continuousWave->Channel].Frequency;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, continuousWave->MaxEirp, continuousWave->AntennaGain );
-
-    Radio.SetTxContinuousWave( frequency, phyTxPower, continuousWave->Timeout );
-}
-
-uint8_t RegionEU433ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset )
-{
-    int8_t datarate = dr - drOffset;
-
-    if( datarate < 0 )
-    {
-        datarate = DR_0;
-    }
-    return datarate;
-}
-
-void RegionEU433RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr )
-{
-    RegionCommonRxBeaconSetupParams_t regionCommonRxBeaconSetup;
-
-    regionCommonRxBeaconSetup.Datarates = DataratesEU433;
-    regionCommonRxBeaconSetup.Frequency = rxBeaconSetup->Frequency;
-    regionCommonRxBeaconSetup.BeaconSize = EU433_BEACON_SIZE;
-    regionCommonRxBeaconSetup.BeaconDatarate = EU433_BEACON_CHANNEL_DR;
-    regionCommonRxBeaconSetup.BeaconChannelBW = EU433_BEACON_CHANNEL_BW;
-   regionCommonRxBeaconSetup.RxTime = rxBeaconSetup->RxTime;
-    regionCommonRxBeaconSetup.SymbolTimeout = rxBeaconSetup->SymbolTimeout;
-
-    RegionCommonRxBeaconSetup( &regionCommonRxBeaconSetup );
-
-    // Store downlink datarate
-    *outDr = EU433_BEACON_CHANNEL_DR;
-}
diff --git a/mac/region/RegionEU433.h b/mac/region/RegionEU433.h
deleted file mode 100644
index 983aed0..0000000
--- a/mac/region/RegionEU433.h
+++ /dev/null
@@ -1,513 +0,0 @@
-/*!
- * \file      RegionEU433.h
- *
- * \brief     Region definition for EU433
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * \defgroup  REGIONEU433 Region EU433
- *            Implementation according to LoRaWAN Specification v1.0.2.
- * \{
- */
-#ifndef __REGION_EU433_H__
-#define __REGION_EU433_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include "region/Region.h"
-
-/*!
- * LoRaMac maximum number of channels
- */
-#define EU433_MAX_NB_CHANNELS                       16
-
-/*!
- * Number of default channels
- */
-#define EU433_NUMB_DEFAULT_CHANNELS                 3
-
-/*!
- * Number of channels to apply for the CF list
- */
-#define EU433_NUMB_CHANNELS_CF_LIST                 5
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define EU433_TX_MIN_DATARATE                       DR_0
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define EU433_TX_MAX_DATARATE                       DR_7
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define EU433_RX_MIN_DATARATE                       DR_0
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define EU433_RX_MAX_DATARATE                       DR_7
-
-/*!
- * Default datarate used by the node
- */
-#define EU433_DEFAULT_DATARATE                      DR_0
-
-/*!
- * Minimal Rx1 receive datarate offset
- */
-#define EU433_MIN_RX1_DR_OFFSET                     0
-
-/*!
- * Maximal Rx1 receive datarate offset
- */
-#define EU433_MAX_RX1_DR_OFFSET                     5
-
-/*!
- * Default Rx1 receive datarate offset
- */
-#define EU433_DEFAULT_RX1_DR_OFFSET                 0
-
-/*!
- * Minimal Tx output power that can be used by the node
- */
-#define EU433_MIN_TX_POWER                          TX_POWER_5
-
-/*!
- * Maximal Tx output power that can be used by the node
- */
-#define EU433_MAX_TX_POWER                          TX_POWER_0
-
-/*!
- * Default Tx output power used by the node
- */
-#define EU433_DEFAULT_TX_POWER                      TX_POWER_0
-
-/*!
- * Default Max EIRP
- */
-#define EU433_DEFAULT_MAX_EIRP                      12.15f
-
-/*!
- * Default antenna gain
- */
-#define EU433_DEFAULT_ANTENNA_GAIN                  2.15f
-
-/*!
- * ADR Ack limit
- */
-#define EU433_ADR_ACK_LIMIT                         64
-
-/*!
- * ADR Ack delay
- */
-#define EU433_ADR_ACK_DELAY                         32
-
-/*!
- * Enabled or disabled the duty cycle
- */
-#define EU433_DUTY_CYCLE_ENABLED                    1
-
-/*!
- * Maximum RX window duration
- */
-#define EU433_MAX_RX_WINDOW                         3000
-
-/*!
- * Receive delay 1
- */
-#define EU433_RECEIVE_DELAY1                        1000
-
-/*!
- * Receive delay 2
- */
-#define EU433_RECEIVE_DELAY2                        2000
-
-/*!
- * Join accept delay 1
- */
-#define EU433_JOIN_ACCEPT_DELAY1                    5000
-
-/*!
- * Join accept delay 2
- */
-#define EU433_JOIN_ACCEPT_DELAY2                    6000
-
-/*!
- * Maximum frame counter gap
- */
-#define EU433_MAX_FCNT_GAP                          16384
-
-/*!
- * Ack timeout
- */
-#define EU433_ACKTIMEOUT                            2000
-
-/*!
- * Random ack timeout limits
- */
-#define EU433_ACK_TIMEOUT_RND                       1000
-
-/*!
- * Verification of default datarate
- */
-#if ( EU433_DEFAULT_DATARATE > DR_5 )
-#error "A default DR higher than DR_5 may lead to connectivity loss."
-#endif
-
-/*!
- * Second reception window channel frequency definition.
- */
-#define EU433_RX_WND_2_FREQ                         434665000
-
-/*!
- * Second reception window channel datarate definition.
- */
-#define EU433_RX_WND_2_DR                           DR_0
-
-/*!
- * LoRaMac maximum number of bands
- */
-#define EU433_MAX_NB_BANDS                          1
-
-/*
- * CLASS B
- */
-/*!
- * Beacon frequency
- */
-#define EU433_BEACON_CHANNEL_FREQ                   434665000
-
-/*!
- * Payload size of a beacon frame
- */
-#define EU433_BEACON_SIZE                           17
-
-/*!
- * Size of RFU 1 field
- */
-#define EU433_RFU1_SIZE                             2
-
-/*!
- * Size of RFU 2 field
- */
-#define EU433_RFU2_SIZE                             0
-
-/*!
- * Datarate of the beacon channel
- */
-#define EU433_BEACON_CHANNEL_DR                     DR_3
-
-/*!
- * Bandwith of the beacon channel
- */
-#define EU433_BEACON_CHANNEL_BW                     0
-
-/*!
- * Ping slot channel datarate
- */
-#define EU433_PING_SLOT_CHANNEL_DR                  DR_3
-
-/*!
- * Band 0 definition
- * { DutyCycle, TxMaxPower, LastJoinTxDoneTime, LastTxDoneTime, TimeOff }
- */
-#define EU433_BAND0                                 { 100, EU433_MAX_TX_POWER, 0, 0, 0 } //  1.0 %
-
-/*!
- * LoRaMac default channel 1
- * Channel = { Frequency [Hz], RX1 Frequency [Hz], { ( ( DrMax << 4 ) | DrMin ) }, Band }
- */
-#define EU433_LC1                                   { 433175000, 0, { ( ( DR_5 << 4 ) | DR_0 ) }, 0 }
-
-/*!
- * LoRaMac default channel 2
- * Channel = { Frequency [Hz], RX1 Frequency [Hz], { ( ( DrMax << 4 ) | DrMin ) }, Band }
- */
-#define EU433_LC2                                   { 433375000, 0, { ( ( DR_5 << 4 ) | DR_0 ) }, 0 }
-
-/*!
- * LoRaMac default channel 3
- * Channel = { Frequency [Hz], RX1 Frequency [Hz], { ( ( DrMax << 4 ) | DrMin ) }, Band }
- */
-#define EU433_LC3                                   { 433575000, 0, { ( ( DR_5 << 4 ) | DR_0 ) }, 0 }
-
-/*!
- * LoRaMac channels which are allowed for the join procedure
- */
-#define EU433_JOIN_CHANNELS                         ( uint16_t )( LC( 1 ) | LC( 2 ) | LC( 3 ) )
-
-/*!
- * Data rates table definition
- */
-static const uint8_t DataratesEU433[] = { 12, 11, 10,  9,  8,  7,  7, 50 };
-
-/*!
- * Bandwidths table definition in Hz
- */
-static const uint32_t BandwidthsEU433[] = { 125000, 125000, 125000, 125000, 125000, 125000, 250000, 0 };
-
-/*!
- * Maximum payload with respect to the datarate index.
- */
-static const uint8_t MaxPayloadOfDatarateEU433[] = { 51, 51, 51, 115, 242, 242, 242, 242 };
-
-/*!
- * \brief The function gets a value of a specific phy attribute.
- *
- * \param [IN] getPhy Pointer to the function parameters.
- *
- * \retval Returns a structure containing the PHY parameter.
- */
-PhyParam_t RegionEU433GetPhyParam( GetPhyParams_t* getPhy );
-
-/*!
- * \brief Updates the last TX done parameters of the current channel.
- *
- * \param [IN] txDone Pointer to the function parameters.
- */
-void RegionEU433SetBandTxDone( SetBandTxDoneParams_t* txDone );
-
-/*!
- * \brief Initializes the channels masks and the channels.
- *
- * \param [IN] type Sets the initialization type.
- */
-void RegionEU433InitDefaults( InitDefaultsParams_t* params );
-
-/*!
- * \brief Returns a pointer to the internal context and its size.
- *
- * \param [OUT] params Pointer to the function parameters.
- *
- * \retval      Points to a structure where the module store its non-volatile context.
- */
-void* RegionEU433GetNvmCtx( GetNvmCtxParams_t* params );
-
-/*!
- * \brief Verifies a parameter.
- *
- * \param [IN] verify Pointer to the function parameters.
- *
- * \param [IN] type Sets the initialization type.
- *
- * \retval Returns true, if the parameter is valid.
- */
-bool RegionEU433Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute );
-
-/*!
- * \brief The function parses the input buffer and sets up the channels of the
- *        CF list.
- *
- * \param [IN] applyCFList Pointer to the function parameters.
- */
-void RegionEU433ApplyCFList( ApplyCFListParams_t* applyCFList );
-
-/*!
- * \brief Sets a channels mask.
- *
- * \param [IN] chanMaskSet Pointer to the function parameters.
- *
- * \retval Returns true, if the channels mask could be set.
- */
-bool RegionEU433ChanMaskSet( ChanMaskSetParams_t* chanMaskSet );
-
-/*!
- * Computes the Rx window timeout and offset.
- *
- * \param [IN] datarate     Rx window datarate index to be used
- *
- * \param [IN] minRxSymbols Minimum required number of symbols to detect an Rx frame.
- *
- * \param [IN] rxError      System maximum timing error of the receiver. In milliseconds
- *                          The receiver will turn on in a [-rxError : +rxError] ms
- *                          interval around RxOffset
- *
- * \param [OUT]rxConfigParams Returns updated WindowTimeout and WindowOffset fields.
- */
-void RegionEU433ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams );
-
-/*!
- * \brief Configuration of the RX windows.
- *
- * \param [IN] rxConfig Pointer to the function parameters.
- *
- * \param [OUT] datarate The datarate index which was set.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionEU433RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate );
-
-/*!
- * \brief TX configuration.
- *
- * \param [IN] txConfig Pointer to the function parameters.
- *
- * \param [OUT] txPower The tx power index which was set.
- *
- * \param [OUT] txTimeOnAir The time-on-air of the frame.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionEU433TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir );
-
-/*!
- * \brief The function processes a Link ADR Request.
- *
- * \param [IN] linkAdrReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionEU433LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed );
-
-/*!
- * \brief The function processes a RX Parameter Setup Request.
- *
- * \param [IN] rxParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionEU433RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq );
-
-/*!
- * \brief The function processes a Channel Request.
- *
- * \param [IN] newChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionEU433NewChannelReq( NewChannelReqParams_t* newChannelReq );
-
-/*!
- * \brief The function processes a TX ParamSetup Request.
- *
- * \param [IN] txParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- *         Returns -1, if the functionality is not implemented. In this case, the end node
- *         shall not process the command.
- */
-int8_t RegionEU433TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq );
-
-/*!
- * \brief The function processes a DlChannel Request.
- *
- * \param [IN] dlChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionEU433DlChannelReq( DlChannelReqParams_t* dlChannelReq );
-
-/*!
- * \brief Alternates the datarate of the channel for the join request.
- *
- * \param [IN] currentDr Current datarate.
- *
- * \retval Datarate to apply.
- */
-int8_t RegionEU433AlternateDr( int8_t currentDr, AlternateDrType_t type );
-
-/*!
- * \brief Calculates the back-off time.
- *
- * \param [IN] calcBackOff Pointer to the function parameters.
- */
-void RegionEU433CalcBackOff( CalcBackOffParams_t* calcBackOff );
-
-/*!
- * \brief Searches and set the next random available channel
- *
- * \param [OUT] channel Next channel to use for TX.
- *
- * \param [OUT] time Time to wait for the next transmission according to the duty
- *              cycle.
- *
- * \param [OUT] aggregatedTimeOff Updates the aggregated time off.
- *
- * \retval Function status [1: OK, 0: Unable to find a channel on the current datarate]
- */
-LoRaMacStatus_t RegionEU433NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff );
-
-/*!
- * \brief Adds a channel.
- *
- * \param [IN] channelAdd Pointer to the function parameters.
- *
- * \retval Status of the operation.
- */
-LoRaMacStatus_t RegionEU433ChannelAdd( ChannelAddParams_t* channelAdd );
-
-/*!
- * \brief Removes a channel.
- *
- * \param [IN] channelRemove Pointer to the function parameters.
- *
- * \retval Returns true, if the channel was removed successfully.
- */
-bool RegionEU433ChannelsRemove( ChannelRemoveParams_t* channelRemove  );
-
-/*!
- * \brief Sets the radio into continuous wave mode.
- *
- * \param [IN] continuousWave Pointer to the function parameters.
- */
-void RegionEU433SetContinuousWave( ContinuousWaveParams_t* continuousWave );
-
-/*!
- * \brief Computes new datarate according to the given offset
- *
- * \param [IN] downlinkDwellTime Downlink dwell time configuration. 0: No limit, 1: 400ms
- *
- * \param [IN] dr Current datarate
- *
- * \param [IN] drOffset Offset to be applied
- *
- * \retval newDr Computed datarate.
- */
-uint8_t RegionEU433ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset );
-
-/*!
- * \brief Sets the radio into beacon reception mode
- *
- * \param [IN] rxBeaconSetup Pointer to the function parameters
- */
- void RegionEU433RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr );
-
-/*! \} defgroup REGIONEU433 */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __REGION_EU433_H__
diff --git a/mac/region/RegionEU868.c b/mac/region/RegionEU868.c
deleted file mode 100644
index 927cd8f..0000000
--- a/mac/region/RegionEU868.c
+++ /dev/null
@@ -1,1007 +0,0 @@
-/*!
- * \file      RegionEU868.c
- *
- * \brief     Region implementation for EU868
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
-*/
-#include "utilities.h"
-
-#include "RegionCommon.h"
-#include "RegionEU868.h"
-
-// Definitions
-#define CHANNELS_MASK_SIZE              1
-
-/*!
- * Region specific context
- */
-typedef struct sRegionEU868NvmCtx
-{
-    /*!
-     * LoRaMAC channels
-     */
-    ChannelParams_t Channels[ EU868_MAX_NB_CHANNELS ];
-    /*!
-     * LoRaMac bands
-     */
-    Band_t Bands[ EU868_MAX_NB_BANDS ];
-    /*!
-     * LoRaMac channels mask
-     */
-    uint16_t ChannelsMask[ CHANNELS_MASK_SIZE ];
-    /*!
-     * LoRaMac channels default mask
-     */
-    uint16_t ChannelsDefaultMask[ CHANNELS_MASK_SIZE ];
-}RegionEU868NvmCtx_t;
-
-/*
- * Non-volatile module context.
- */
-static RegionEU868NvmCtx_t NvmCtx;
-
-// Static functions
-static int8_t GetNextLowerTxDr( int8_t dr, int8_t minDr )
-{
-    uint8_t nextLowerDr = 0;
-
-    if( dr == minDr )
-    {
-        nextLowerDr = minDr;
-    }
-    else
-    {
-        nextLowerDr = dr - 1;
-    }
-    return nextLowerDr;
-}
-
-static uint32_t GetBandwidth( uint32_t drIndex )
-{
-    switch( BandwidthsEU868[drIndex] )
-    {
-        default:
-        case 125000:
-            return 0;
-        case 250000:
-            return 1;
-        case 500000:
-            return 2;
-    }
-}
-
-static int8_t LimitTxPower( int8_t txPower, int8_t maxBandTxPower, int8_t datarate, uint16_t* channelsMask )
-{
-    int8_t txPowerResult = txPower;
-
-    // Limit tx power to the band max
-    txPowerResult =  MAX( txPower, maxBandTxPower );
-
-    return txPowerResult;
-}
-
-static bool VerifyRfFreq( uint32_t freq, uint8_t *band )
-{
-    // Check radio driver support
-    if( Radio.CheckRfFrequency( freq ) == false )
-    {
-        return false;
-    }
-
-    // Check frequency bands
-    if( ( freq >= 863000000 ) && ( freq < 865000000 ) )
-    {
-        *band = 2;
-    }
-    else if( ( freq >= 865000000 ) && ( freq <= 868000000 ) )
-    {
-        *band = 0;
-    }
-    else if( ( freq > 868000000 ) && ( freq <= 868600000 ) )
-    {
-        *band = 1;
-    }
-    else if( ( freq >= 868700000 ) && ( freq <= 869200000 ) )
-    {
-        *band = 5;
-    }
-    else if( ( freq >= 869400000 ) && ( freq <= 869650000 ) )
-    {
-        *band = 3;
-    }
-    else if( ( freq >= 869700000 ) && ( freq <= 870000000 ) )
-    {
-        *band = 4;
-    }
-    else
-    {
-        return false;
-    }
-    return true;
-}
-
-PhyParam_t RegionEU868GetPhyParam( GetPhyParams_t* getPhy )
-{
-    PhyParam_t phyParam = { 0 };
-
-    switch( getPhy->Attribute )
-    {
-        case PHY_MIN_RX_DR:
-        {
-            phyParam.Value = EU868_RX_MIN_DATARATE;
-            break;
-        }
-        case PHY_MIN_TX_DR:
-        {
-            phyParam.Value = EU868_TX_MIN_DATARATE;
-            break;
-        }
-        case PHY_DEF_TX_DR:
-        {
-            phyParam.Value = EU868_DEFAULT_DATARATE;
-            break;
-        }
-        case PHY_NEXT_LOWER_TX_DR:
-        {
-            phyParam.Value = GetNextLowerTxDr( getPhy->Datarate, EU868_TX_MIN_DATARATE );
-            break;
-        }
-        case PHY_MAX_TX_POWER:
-        {
-            phyParam.Value = EU868_MAX_TX_POWER;
-            break;
-        }
-        case PHY_DEF_TX_POWER:
-        {
-            phyParam.Value = EU868_DEFAULT_TX_POWER;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_LIMIT:
-        {
-            phyParam.Value = EU868_ADR_ACK_LIMIT;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_DELAY:
-        {
-            phyParam.Value = EU868_ADR_ACK_DELAY;
-            break;
-        }
-        case PHY_MAX_PAYLOAD:
-        {
-            phyParam.Value = MaxPayloadOfDatarateEU868[getPhy->Datarate];
-            break;
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            phyParam.Value = EU868_DUTY_CYCLE_ENABLED;
-            break;
-        }
-        case PHY_MAX_RX_WINDOW:
-        {
-            phyParam.Value = EU868_MAX_RX_WINDOW;
-            break;
-        }
-        case PHY_RECEIVE_DELAY1:
-        {
-            phyParam.Value = EU868_RECEIVE_DELAY1;
-            break;
-        }
-        case PHY_RECEIVE_DELAY2:
-        {
-            phyParam.Value = EU868_RECEIVE_DELAY2;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY1:
-        {
-            phyParam.Value = EU868_JOIN_ACCEPT_DELAY1;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY2:
-        {
-            phyParam.Value = EU868_JOIN_ACCEPT_DELAY2;
-            break;
-        }
-        case PHY_MAX_FCNT_GAP:
-        {
-            phyParam.Value = EU868_MAX_FCNT_GAP;
-            break;
-        }
-        case PHY_ACK_TIMEOUT:
-        {
-            phyParam.Value = ( EU868_ACKTIMEOUT + randr( -EU868_ACK_TIMEOUT_RND, EU868_ACK_TIMEOUT_RND ) );
-            break;
-        }
-        case PHY_DEF_DR1_OFFSET:
-        {
-            phyParam.Value = EU868_DEFAULT_RX1_DR_OFFSET;
-            break;
-        }
-        case PHY_DEF_RX2_FREQUENCY:
-        {
-            phyParam.Value = EU868_RX_WND_2_FREQ;
-            break;
-        }
-        case PHY_DEF_RX2_DR:
-        {
-            phyParam.Value = EU868_RX_WND_2_DR;
-            break;
-        }
-        case PHY_CHANNELS_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsMask;
-            break;
-        }
-        case PHY_CHANNELS_DEFAULT_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsDefaultMask;
-            break;
-        }
-        case PHY_MAX_NB_CHANNELS:
-        {
-            phyParam.Value = EU868_MAX_NB_CHANNELS;
-            break;
-        }
-        case PHY_CHANNELS:
-        {
-            phyParam.Channels = NvmCtx.Channels;
-            break;
-        }
-        case PHY_DEF_UPLINK_DWELL_TIME:
-        case PHY_DEF_DOWNLINK_DWELL_TIME:
-        {
-            phyParam.Value = 0;
-            break;
-        }
-        case PHY_DEF_MAX_EIRP:
-        {
-            phyParam.fValue = EU868_DEFAULT_MAX_EIRP;
-            break;
-        }
-        case PHY_DEF_ANTENNA_GAIN:
-        {
-            phyParam.fValue = EU868_DEFAULT_ANTENNA_GAIN;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_FREQ:
-        {
-            phyParam.Value = EU868_BEACON_CHANNEL_FREQ;
-            break;
-        }
-        case PHY_BEACON_FORMAT:
-        {
-            phyParam.BeaconFormat.BeaconSize = EU868_BEACON_SIZE;
-            phyParam.BeaconFormat.Rfu1Size = EU868_RFU1_SIZE;
-            phyParam.BeaconFormat.Rfu2Size = EU868_RFU2_SIZE;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_DR:
-        {
-            phyParam.Value = EU868_BEACON_CHANNEL_DR;
-            break;
-        }
-        case PHY_PING_SLOT_CHANNEL_DR:
-        {
-            phyParam.Value = EU868_PING_SLOT_CHANNEL_DR;
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-
-    return phyParam;
-}
-
-void RegionEU868SetBandTxDone( SetBandTxDoneParams_t* txDone )
-{
-    RegionCommonSetBandTxDone( txDone->Joined, &NvmCtx.Bands[NvmCtx.Channels[txDone->Channel].Band], txDone->LastTxDoneTime );
-}
-
-void RegionEU868InitDefaults( InitDefaultsParams_t* params )
-{
-    Band_t bands[EU868_MAX_NB_BANDS] =
-    {
-        EU868_BAND0,
-        EU868_BAND1,
-        EU868_BAND2,
-        EU868_BAND3,
-        EU868_BAND4,
-        EU868_BAND5,
-    };
-
-    switch( params->Type )
-    {
-        case INIT_TYPE_BANDS:
-        {
-            // Initialize bands
-            memcpy1( ( uint8_t* )NvmCtx.Bands, ( uint8_t* )bands, sizeof( Band_t ) * EU868_MAX_NB_BANDS );
-            break;
-        }
-        case INIT_TYPE_INIT:
-        {
-            // Channels
-            NvmCtx.Channels[0] = ( ChannelParams_t ) EU868_LC1;
-            NvmCtx.Channels[1] = ( ChannelParams_t ) EU868_LC2;
-            NvmCtx.Channels[2] = ( ChannelParams_t ) EU868_LC3;
-
-            // Initialize the channels default mask
-            NvmCtx.ChannelsDefaultMask[0] = LC( 1 ) + LC( 2 ) + LC( 3 );
-
-            // Update the channels mask
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, NvmCtx.ChannelsDefaultMask, 1 );
-            break;
-        }
-        case INIT_TYPE_RESTORE_CTX:
-        {
-            if( params->NvmCtx != 0 )
-            {
-                memcpy1( (uint8_t*) &NvmCtx, (uint8_t*) params->NvmCtx, sizeof( NvmCtx ) );
-            }
-            break;
-        }
-        case INIT_TYPE_RESTORE_DEFAULT_CHANNELS:
-        {
-            // Restore channels default mask
-            NvmCtx.ChannelsMask[0] |= NvmCtx.ChannelsDefaultMask[0];
-
-            // Channels
-            NvmCtx.Channels[0] = ( ChannelParams_t ) EU868_LC1;
-            NvmCtx.Channels[1] = ( ChannelParams_t ) EU868_LC2;
-            NvmCtx.Channels[2] = ( ChannelParams_t ) EU868_LC3;
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-}
-
-void* RegionEU868GetNvmCtx( GetNvmCtxParams_t* params )
-{
-    params->nvmCtxSize = sizeof( RegionEU868NvmCtx_t );
-    return &NvmCtx;
-}
-
-bool RegionEU868Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute )
-{
-    switch( phyAttribute )
-    {
-        case PHY_FREQUENCY:
-        {
-            uint8_t band = 0;
-            return VerifyRfFreq( verify->Frequency, &band );
-        }
-        case PHY_TX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, EU868_TX_MIN_DATARATE, EU868_TX_MAX_DATARATE );
-        }
-        case PHY_DEF_TX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, DR_0, DR_5 );
-        }
-        case PHY_RX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, EU868_RX_MIN_DATARATE, EU868_RX_MAX_DATARATE );
-        }
-        case PHY_DEF_TX_POWER:
-        case PHY_TX_POWER:
-        {
-            // Remark: switched min and max!
-            return RegionCommonValueInRange( verify->TxPower, EU868_MAX_TX_POWER, EU868_MIN_TX_POWER );
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            return EU868_DUTY_CYCLE_ENABLED;
-        }
-        default:
-            return false;
-    }
-}
-
-void RegionEU868ApplyCFList( ApplyCFListParams_t* applyCFList )
-{
-    ChannelParams_t newChannel;
-    ChannelAddParams_t channelAdd;
-    ChannelRemoveParams_t channelRemove;
-
-    // Setup default datarate range
-    newChannel.DrRange.Value = ( DR_5 << 4 ) | DR_0;
-
-    // Size of the optional CF list
-    if( applyCFList->Size != 16 )
-    {
-        return;
-    }
-
-    // Last byte CFListType must be 0 to indicate the CFList contains a list of frequencies
-    if( applyCFList->Payload[15] != 0 )
-    {
-        return;
-    }
-
-    // Last byte is RFU, don't take it into account
-    for( uint8_t i = 0, chanIdx = EU868_NUMB_DEFAULT_CHANNELS; chanIdx < EU868_MAX_NB_CHANNELS; i+=3, chanIdx++ )
-    {
-        if( chanIdx < ( EU868_NUMB_CHANNELS_CF_LIST + EU868_NUMB_DEFAULT_CHANNELS ) )
-        {
-            // Channel frequency
-            newChannel.Frequency = (uint32_t) applyCFList->Payload[i];
-            newChannel.Frequency |= ( (uint32_t) applyCFList->Payload[i + 1] << 8 );
-            newChannel.Frequency |= ( (uint32_t) applyCFList->Payload[i + 2] << 16 );
-            newChannel.Frequency *= 100;
-
-            // Initialize alternative frequency to 0
-            newChannel.Rx1Frequency = 0;
-        }
-        else
-        {
-            newChannel.Frequency = 0;
-            newChannel.DrRange.Value = 0;
-            newChannel.Rx1Frequency = 0;
-        }
-
-        if( newChannel.Frequency != 0 )
-        {
-            channelAdd.NewChannel = &newChannel;
-            channelAdd.ChannelId = chanIdx;
-
-            // Try to add all channels
-            RegionEU868ChannelAdd( &channelAdd );
-        }
-        else
-        {
-            channelRemove.ChannelId = chanIdx;
-
-            RegionEU868ChannelsRemove( &channelRemove );
-        }
-    }
-}
-
-bool RegionEU868ChanMaskSet( ChanMaskSetParams_t* chanMaskSet )
-{
-    switch( chanMaskSet->ChannelsMaskType )
-    {
-        case CHANNELS_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, chanMaskSet->ChannelsMaskIn, 1 );
-            break;
-        }
-        case CHANNELS_DEFAULT_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsDefaultMask, chanMaskSet->ChannelsMaskIn, 1 );
-            break;
-        }
-        default:
-            return false;
-    }
-    return true;
-}
-
-void RegionEU868ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams )
-{
-    double tSymbol = 0.0;
-
-    // Get the datarate, perform a boundary check
-    rxConfigParams->Datarate = MIN( datarate, EU868_RX_MAX_DATARATE );
-    rxConfigParams->Bandwidth = GetBandwidth( rxConfigParams->Datarate );
-
-    if( rxConfigParams->Datarate == DR_7 )
-    { // FSK
-        tSymbol = RegionCommonComputeSymbolTimeFsk( DataratesEU868[rxConfigParams->Datarate] );
-    }
-    else
-    { // LoRa
-        tSymbol = RegionCommonComputeSymbolTimeLoRa( DataratesEU868[rxConfigParams->Datarate], BandwidthsEU868[rxConfigParams->Datarate] );
-    }
-
-    RegionCommonComputeRxWindowParameters( tSymbol, minRxSymbols, rxError, Radio.GetWakeupTime( ), &rxConfigParams->WindowTimeout, &rxConfigParams->WindowOffset );
-}
-
-bool RegionEU868RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate )
-{
-    RadioModems_t modem;
-    int8_t dr = rxConfig->Datarate;
-    int8_t phyDr = 0;
-    uint32_t frequency = rxConfig->Frequency;
-
-    if( Radio.GetStatus( ) != RF_IDLE )
-    {
-        return false;
-    }
-
-    if( rxConfig->RxSlot == RX_SLOT_WIN_1 )
-    {
-        // Apply window 1 frequency
-        frequency = NvmCtx.Channels[rxConfig->Channel].Frequency;
-        // Apply the alternative RX 1 window frequency, if it is available
-        if( NvmCtx.Channels[rxConfig->Channel].Rx1Frequency != 0 )
-        {
-            frequency = NvmCtx.Channels[rxConfig->Channel].Rx1Frequency;
-        }
-    }
-
-    // Read the physical datarate from the datarates table
-    phyDr = DataratesEU868[dr];
-
-    Radio.SetChannel( frequency );
-
-    // Radio configuration
-    if( dr == DR_7 )
-    {
-        modem = MODEM_FSK;
-        Radio.SetRxConfig( modem, 50000, phyDr * 1000, 0, 83333, 5, rxConfig->WindowTimeout, false, 0, true, 0, 0, false, rxConfig->RxContinuous );
-    }
-    else
-    {
-        modem = MODEM_LORA;
-        Radio.SetRxConfig( modem, rxConfig->Bandwidth, phyDr, 1, 0, 8, rxConfig->WindowTimeout, false, 0, false, 0, 0, true, rxConfig->RxContinuous );
-    }
-
-    Radio.SetMaxPayloadLength( modem, MaxPayloadOfDatarateEU868[dr] + LORA_MAC_FRMPAYLOAD_OVERHEAD );
-
-    *datarate = (uint8_t) dr;
-    return true;
-}
-
-bool RegionEU868TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir )
-{
-    RadioModems_t modem;
-    int8_t phyDr = DataratesEU868[txConfig->Datarate];
-    int8_t txPowerLimited = LimitTxPower( txConfig->TxPower, NvmCtx.Bands[NvmCtx.Channels[txConfig->Channel].Band].TxMaxPower, txConfig->Datarate, NvmCtx.ChannelsMask );
-    uint32_t bandwidth = GetBandwidth( txConfig->Datarate );
-    int8_t phyTxPower = 0;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, txConfig->MaxEirp, txConfig->AntennaGain );
-
-    // Setup the radio frequency
-    Radio.SetChannel( NvmCtx.Channels[txConfig->Channel].Frequency );
-
-    if( txConfig->Datarate == DR_7 )
-    { // High Speed FSK channel
-        modem = MODEM_FSK;
-        Radio.SetTxConfig( modem, phyTxPower, 25000, bandwidth, phyDr * 1000, 0, 5, false, true, 0, 0, false, 4000 );
-    }
-    else
-    {
-        modem = MODEM_LORA;
-        Radio.SetTxConfig( modem, phyTxPower, 0, bandwidth, phyDr, 1, 8, false, true, 0, 0, false, 4000 );
-    }
-
-    // Setup maximum payload lenght of the radio driver
-    Radio.SetMaxPayloadLength( modem, txConfig->PktLen );
-    // Get the time-on-air of the next tx frame
-    *txTimeOnAir = Radio.TimeOnAir( modem, txConfig->PktLen );
-
-    *txPower = txPowerLimited;
-    return true;
-}
-
-uint8_t RegionEU868LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed )
-{
-    uint8_t status = 0x07;
-    RegionCommonLinkAdrParams_t linkAdrParams;
-    uint8_t nextIndex = 0;
-    uint8_t bytesProcessed = 0;
-    uint16_t chMask = 0;
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-    RegionCommonLinkAdrReqVerifyParams_t linkAdrVerifyParams;
-
-    while( bytesProcessed < linkAdrReq->PayloadSize )
-    {
-        // Get ADR request parameters
-        nextIndex = RegionCommonParseLinkAdrReq( &( linkAdrReq->Payload[bytesProcessed] ), &linkAdrParams );
-
-        if( nextIndex == 0 )
-            break; // break loop, since no more request has been found
-
-        // Update bytes processed
-        bytesProcessed += nextIndex;
-
-        // Revert status, as we only check the last ADR request for the channel mask KO
-        status = 0x07;
-
-        // Setup temporary channels mask
-        chMask = linkAdrParams.ChMask;
-
-        // Verify channels mask
-        if( ( linkAdrParams.ChMaskCtrl == 0 ) && ( chMask == 0 ) )
-        {
-            status &= 0xFE; // Channel mask KO
-        }
-        else if( ( ( linkAdrParams.ChMaskCtrl >= 1 ) && ( linkAdrParams.ChMaskCtrl <= 5 )) ||
-                ( linkAdrParams.ChMaskCtrl >= 7 ) )
-        {
-            // RFU
-            status &= 0xFE; // Channel mask KO
-        }
-        else
-        {
-            for( uint8_t i = 0; i < EU868_MAX_NB_CHANNELS; i++ )
-            {
-                if( linkAdrParams.ChMaskCtrl == 6 )
-                {
-                    if( NvmCtx.Channels[i].Frequency != 0 )
-                    {
-                        chMask |= 1 << i;
-                    }
-                }
-                else
-                {
-                    if( ( ( chMask & ( 1 << i ) ) != 0 ) &&
-                        ( NvmCtx.Channels[i].Frequency == 0 ) )
-                    {// Trying to enable an undefined channel
-                        status &= 0xFE; // Channel mask KO
-                    }
-                }
-            }
-        }
-    }
-
-    // Get the minimum possible datarate
-    getPhy.Attribute = PHY_MIN_TX_DR;
-    getPhy.UplinkDwellTime = linkAdrReq->UplinkDwellTime;
-    phyParam = RegionEU868GetPhyParam( &getPhy );
-
-    linkAdrVerifyParams.Status = status;
-    linkAdrVerifyParams.AdrEnabled = linkAdrReq->AdrEnabled;
-    linkAdrVerifyParams.Datarate = linkAdrParams.Datarate;
-    linkAdrVerifyParams.TxPower = linkAdrParams.TxPower;
-    linkAdrVerifyParams.NbRep = linkAdrParams.NbRep;
-    linkAdrVerifyParams.CurrentDatarate = linkAdrReq->CurrentDatarate;
-    linkAdrVerifyParams.CurrentTxPower = linkAdrReq->CurrentTxPower;
-    linkAdrVerifyParams.CurrentNbRep = linkAdrReq->CurrentNbRep;
-    linkAdrVerifyParams.NbChannels = EU868_MAX_NB_CHANNELS;
-    linkAdrVerifyParams.ChannelsMask = &chMask;
-    linkAdrVerifyParams.MinDatarate = ( int8_t )phyParam.Value;
-    linkAdrVerifyParams.MaxDatarate = EU868_TX_MAX_DATARATE;
-    linkAdrVerifyParams.Channels = NvmCtx.Channels;
-    linkAdrVerifyParams.MinTxPower = EU868_MIN_TX_POWER;
-    linkAdrVerifyParams.MaxTxPower = EU868_MAX_TX_POWER;
-    linkAdrVerifyParams.Version = linkAdrReq->Version;
-
-    // Verify the parameters and update, if necessary
-    status = RegionCommonLinkAdrReqVerifyParams( &linkAdrVerifyParams, &linkAdrParams.Datarate, &linkAdrParams.TxPower, &linkAdrParams.NbRep );
-
-    // Update channelsMask if everything is correct
-    if( status == 0x07 )
-    {
-        // Set the channels mask to a default value
-        memset1( ( uint8_t* ) NvmCtx.ChannelsMask, 0, sizeof( NvmCtx.ChannelsMask ) );
-        // Update the channels mask
-        NvmCtx.ChannelsMask[0] = chMask;
-    }
-
-    // Update status variables
-    *drOut = linkAdrParams.Datarate;
-    *txPowOut = linkAdrParams.TxPower;
-    *nbRepOut = linkAdrParams.NbRep;
-    *nbBytesParsed = bytesProcessed;
-
-    return status;
-}
-
-uint8_t RegionEU868RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq )
-{
-    uint8_t status = 0x07;
-    uint8_t band = 0;
-
-    // Verify radio frequency
-    if( VerifyRfFreq( rxParamSetupReq->Frequency, &band ) == false )
-    {
-        status &= 0xFE; // Channel frequency KO
-    }
-
-    // Verify datarate
-    if( RegionCommonValueInRange( rxParamSetupReq->Datarate, EU868_RX_MIN_DATARATE, EU868_RX_MAX_DATARATE ) == false )
-    {
-        status &= 0xFD; // Datarate KO
-    }
-
-    // Verify datarate offset
-    if( RegionCommonValueInRange( rxParamSetupReq->DrOffset, EU868_MIN_RX1_DR_OFFSET, EU868_MAX_RX1_DR_OFFSET ) == false )
-    {
-        status &= 0xFB; // Rx1DrOffset range KO
-    }
-
-    return status;
-}
-
-uint8_t RegionEU868NewChannelReq( NewChannelReqParams_t* newChannelReq )
-{
-    uint8_t status = 0x03;
-    ChannelAddParams_t channelAdd;
-    ChannelRemoveParams_t channelRemove;
-
-    if( newChannelReq->NewChannel->Frequency == 0 )
-    {
-        channelRemove.ChannelId = newChannelReq->ChannelId;
-
-        // Remove
-        if( RegionEU868ChannelsRemove( &channelRemove ) == false )
-        {
-            status &= 0xFC;
-        }
-    }
-    else
-    {
-        channelAdd.NewChannel = newChannelReq->NewChannel;
-        channelAdd.ChannelId = newChannelReq->ChannelId;
-
-        switch( RegionEU868ChannelAdd( &channelAdd ) )
-        {
-            case LORAMAC_STATUS_OK:
-            {
-                break;
-            }
-            case LORAMAC_STATUS_FREQUENCY_INVALID:
-            {
-                status &= 0xFE;
-                break;
-            }
-            case LORAMAC_STATUS_DATARATE_INVALID:
-            {
-                status &= 0xFD;
-                break;
-            }
-            case LORAMAC_STATUS_FREQ_AND_DR_INVALID:
-            {
-                status &= 0xFC;
-                break;
-            }
-            default:
-            {
-                status &= 0xFC;
-                break;
-            }
-        }
-    }
-
-    return status;
-}
-
-int8_t RegionEU868TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq )
-{
-    return -1;
-}
-
-uint8_t RegionEU868DlChannelReq( DlChannelReqParams_t* dlChannelReq )
-{
-    uint8_t status = 0x03;
-    uint8_t band = 0;
-
-    // Verify if the frequency is supported
-    if( VerifyRfFreq( dlChannelReq->Rx1Frequency, &band ) == false )
-    {
-        status &= 0xFE;
-    }
-
-    // Verify if an uplink frequency exists
-    if( NvmCtx.Channels[dlChannelReq->ChannelId].Frequency == 0 )
-    {
-        status &= 0xFD;
-    }
-
-    // Apply Rx1 frequency, if the status is OK
-    if( status == 0x03 )
-    {
-        NvmCtx.Channels[dlChannelReq->ChannelId].Rx1Frequency = dlChannelReq->Rx1Frequency;
-    }
-
-    return status;
-}
-
-int8_t RegionEU868AlternateDr( int8_t currentDr, AlternateDrType_t type )
-{
-    return currentDr;
-}
-
-void RegionEU868CalcBackOff( CalcBackOffParams_t* calcBackOff )
-{
-    RegionCommonCalcBackOffParams_t calcBackOffParams;
-
-    calcBackOffParams.Channels = NvmCtx.Channels;
-    calcBackOffParams.Bands = NvmCtx.Bands;
-    calcBackOffParams.LastTxIsJoinRequest = calcBackOff->LastTxIsJoinRequest;
-    calcBackOffParams.Joined = calcBackOff->Joined;
-    calcBackOffParams.DutyCycleEnabled = calcBackOff->DutyCycleEnabled;
-    calcBackOffParams.Channel = calcBackOff->Channel;
-    calcBackOffParams.ElapsedTime = calcBackOff->ElapsedTime;
-    calcBackOffParams.TxTimeOnAir = calcBackOff->TxTimeOnAir;
-
-    RegionCommonCalcBackOff( &calcBackOffParams );
-}
-
-LoRaMacStatus_t RegionEU868NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff )
-{
-    uint8_t nbEnabledChannels = 0;
-    uint8_t nbRestrictedChannels = 0;
-    uint8_t enabledChannels[EU868_MAX_NB_CHANNELS] = { 0 };
-    RegionCommonIdentifyChannelsParam_t identifyChannelsParam;
-    RegionCommonCountNbOfEnabledChannelsParams_t countChannelsParams;
-    LoRaMacStatus_t status = LORAMAC_STATUS_NO_CHANNEL_FOUND;
-
-    if( RegionCommonCountChannels( NvmCtx.ChannelsMask, 0, 1 ) == 0 )
-    { // Reactivate default channels
-        NvmCtx.ChannelsMask[0] |= LC( 1 ) + LC( 2 ) + LC( 3 );
-    }
-
-    // Search how many channels are enabled
-    countChannelsParams.Joined = nextChanParams->Joined;
-    countChannelsParams.Datarate = nextChanParams->Datarate;
-    countChannelsParams.ChannelsMask = NvmCtx.ChannelsMask;
-    countChannelsParams.Channels = NvmCtx.Channels;
-    countChannelsParams.Bands = NvmCtx.Bands;
-    countChannelsParams.MaxNbChannels = EU868_MAX_NB_CHANNELS;
-    countChannelsParams.JoinChannels = EU868_JOIN_CHANNELS;
-
-    identifyChannelsParam.AggrTimeOff = nextChanParams->AggrTimeOff;
-    identifyChannelsParam.LastAggrTx = nextChanParams->LastAggrTx;
-    identifyChannelsParam.DutyCycleEnabled = nextChanParams->DutyCycleEnabled;
-    identifyChannelsParam.MaxBands = EU868_MAX_NB_BANDS;
-
-    identifyChannelsParam.CountNbOfEnabledChannelsParam = &countChannelsParams;
-
-    status = RegionCommonIdentifyChannels( &identifyChannelsParam, aggregatedTimeOff, enabledChannels,
-                                           &nbEnabledChannels, &nbRestrictedChannels, time );
-
-    if( nextChanParams->QueryNextTxDelayOnly == true )
-    {
-        return status;
-    }
-
-    if( status == LORAMAC_STATUS_OK )
-    {
-        // We found a valid channel
-        *channel = enabledChannels[randr( 0, nbEnabledChannels - 1 )];
-    }
-    else if( status == LORAMAC_STATUS_NO_CHANNEL_FOUND )
-    {
-        // Datarate not supported by any channel, restore defaults
-        NvmCtx.ChannelsMask[0] |= LC( 1 ) + LC( 2 ) + LC( 3 );
-    }
-    return status;
-}
-
-LoRaMacStatus_t RegionEU868ChannelAdd( ChannelAddParams_t* channelAdd )
-{
-    uint8_t band = 0;
-    bool drInvalid = false;
-    bool freqInvalid = false;
-    uint8_t id = channelAdd->ChannelId;
-
-    if( id < EU868_NUMB_DEFAULT_CHANNELS )
-    {
-        return LORAMAC_STATUS_FREQ_AND_DR_INVALID;
-    }
-
-    if( id >= EU868_MAX_NB_CHANNELS )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-
-    // Validate the datarate range
-    if( RegionCommonValueInRange( channelAdd->NewChannel->DrRange.Fields.Min, EU868_TX_MIN_DATARATE, EU868_TX_MAX_DATARATE ) == false )
-    {
-        drInvalid = true;
-    }
-    if( RegionCommonValueInRange( channelAdd->NewChannel->DrRange.Fields.Max, EU868_TX_MIN_DATARATE, EU868_TX_MAX_DATARATE ) == false )
-    {
-        drInvalid = true;
-    }
-    if( channelAdd->NewChannel->DrRange.Fields.Min > channelAdd->NewChannel->DrRange.Fields.Max )
-    {
-        drInvalid = true;
-    }
-
-    // Check frequency
-    if( freqInvalid == false )
-    {
-        if( VerifyRfFreq( channelAdd->NewChannel->Frequency, &band ) == false )
-        {
-            freqInvalid = true;
-        }
-    }
-
-    // Check status
-    if( ( drInvalid == true ) && ( freqInvalid == true ) )
-    {
-        return LORAMAC_STATUS_FREQ_AND_DR_INVALID;
-    }
-    if( drInvalid == true )
-    {
-        return LORAMAC_STATUS_DATARATE_INVALID;
-    }
-    if( freqInvalid == true )
-    {
-        return LORAMAC_STATUS_FREQUENCY_INVALID;
-    }
-
-    memcpy1( ( uint8_t* ) &(NvmCtx.Channels[id]), ( uint8_t* ) channelAdd->NewChannel, sizeof( NvmCtx.Channels[id] ) );
-    NvmCtx.Channels[id].Band = band;
-    NvmCtx.ChannelsMask[0] |= ( 1 << id );
-    return LORAMAC_STATUS_OK;
-}
-
-bool RegionEU868ChannelsRemove( ChannelRemoveParams_t* channelRemove  )
-{
-    uint8_t id = channelRemove->ChannelId;
-
-    if( id < EU868_NUMB_DEFAULT_CHANNELS )
-    {
-        return false;
-    }
-
-    // Remove the channel from the list of channels
-    NvmCtx.Channels[id] = ( ChannelParams_t ){ 0, 0, { 0 }, 0 };
-
-    return RegionCommonChanDisable( NvmCtx.ChannelsMask, id, EU868_MAX_NB_CHANNELS );
-}
-
-void RegionEU868SetContinuousWave( ContinuousWaveParams_t* continuousWave )
-{
-    int8_t txPowerLimited = LimitTxPower( continuousWave->TxPower, NvmCtx.Bands[NvmCtx.Channels[continuousWave->Channel].Band].TxMaxPower, continuousWave->Datarate, NvmCtx.ChannelsMask );
-    int8_t phyTxPower = 0;
-    uint32_t frequency = NvmCtx.Channels[continuousWave->Channel].Frequency;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, continuousWave->MaxEirp, continuousWave->AntennaGain );
-
-    Radio.SetTxContinuousWave( frequency, phyTxPower, continuousWave->Timeout );
-}
-
-uint8_t RegionEU868ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset )
-{
-    int8_t datarate = dr - drOffset;
-
-    if( datarate < 0 )
-    {
-        datarate = DR_0;
-    }
-    return datarate;
-}
-
-void RegionEU868RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr )
-{
-    RegionCommonRxBeaconSetupParams_t regionCommonRxBeaconSetup;
-
-    regionCommonRxBeaconSetup.Datarates = DataratesEU868;
-    regionCommonRxBeaconSetup.Frequency = rxBeaconSetup->Frequency;
-    regionCommonRxBeaconSetup.BeaconSize = EU868_BEACON_SIZE;
-    regionCommonRxBeaconSetup.BeaconDatarate = EU868_BEACON_CHANNEL_DR;
-    regionCommonRxBeaconSetup.BeaconChannelBW = EU868_BEACON_CHANNEL_BW;
-    regionCommonRxBeaconSetup.RxTime = rxBeaconSetup->RxTime;
-    regionCommonRxBeaconSetup.SymbolTimeout = rxBeaconSetup->SymbolTimeout;
-
-    RegionCommonRxBeaconSetup( &regionCommonRxBeaconSetup );
-
-    // Store downlink datarate
-    *outDr = EU868_BEACON_CHANNEL_DR;
-}
diff --git a/mac/region/RegionEU868.h b/mac/region/RegionEU868.h
deleted file mode 100644
index e2bed42..0000000
--- a/mac/region/RegionEU868.h
+++ /dev/null
@@ -1,540 +0,0 @@
-/*!
- * \file      RegionEU868.h
- *
- * \brief     Region definition for EU868
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * \defgroup  REGIONEU868 Region EU868
- *            Implementation according to LoRaWAN Specification v1.0.2.
- * \{
- */
-#ifndef __REGION_EU868_H__
-#define __REGION_EU868_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include "region/Region.h"
-
-/*!
- * LoRaMac maximum number of channels
- */
-#define EU868_MAX_NB_CHANNELS                       16
-
-/*!
- * Number of default channels
- */
-#define EU868_NUMB_DEFAULT_CHANNELS                 3
-
-/*!
- * Number of channels to apply for the CF list
- */
-#define EU868_NUMB_CHANNELS_CF_LIST                 5
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define EU868_TX_MIN_DATARATE                       DR_0
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define EU868_TX_MAX_DATARATE                       DR_7
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define EU868_RX_MIN_DATARATE                       DR_0
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define EU868_RX_MAX_DATARATE                       DR_7
-
-/*!
- * Default datarate used by the node
- */
-#define EU868_DEFAULT_DATARATE                      DR_0
-
-/*!
- * Minimal Rx1 receive datarate offset
- */
-#define EU868_MIN_RX1_DR_OFFSET                     0
-
-/*!
- * Maximal Rx1 receive datarate offset
- */
-#define EU868_MAX_RX1_DR_OFFSET                     5
-
-/*!
- * Default Rx1 receive datarate offset
- */
-#define EU868_DEFAULT_RX1_DR_OFFSET                 0
-
-/*!
- * Minimal Tx output power that can be used by the node
- */
-#define EU868_MIN_TX_POWER                          TX_POWER_7
-
-/*!
- * Maximal Tx output power that can be used by the node
- */
-#define EU868_MAX_TX_POWER                          TX_POWER_0
-
-/*!
- * Default Tx output power used by the node
- */
-#define EU868_DEFAULT_TX_POWER                      TX_POWER_0
-
-/*!
- * Default Max EIRP
- */
-#define EU868_DEFAULT_MAX_EIRP                      16.0f
-
-/*!
- * Default antenna gain
- */
-#define EU868_DEFAULT_ANTENNA_GAIN                  2.15f
-
-/*!
- * ADR Ack limit
- */
-#define EU868_ADR_ACK_LIMIT                         64
-
-/*!
- * ADR Ack delay
- */
-#define EU868_ADR_ACK_DELAY                         32
-
-/*!
- * Enabled or disabled the duty cycle
- */
-#define EU868_DUTY_CYCLE_ENABLED                    1
-
-/*!
- * Maximum RX window duration
- */
-#define EU868_MAX_RX_WINDOW                         3000
-
-/*!
- * Receive delay 1
- */
-#define EU868_RECEIVE_DELAY1                        1000
-
-/*!
- * Receive delay 2
- */
-#define EU868_RECEIVE_DELAY2                        2000
-
-/*!
- * Join accept delay 1
- */
-#define EU868_JOIN_ACCEPT_DELAY1                    5000
-
-/*!
- * Join accept delay 2
- */
-#define EU868_JOIN_ACCEPT_DELAY2                    6000
-
-/*!
- * Maximum frame counter gap
- */
-#define EU868_MAX_FCNT_GAP                          16384
-
-/*!
- * Ack timeout
- */
-#define EU868_ACKTIMEOUT                            2000
-
-/*!
- * Random ack timeout limits
- */
-#define EU868_ACK_TIMEOUT_RND                       1000
-
-#if ( EU868_DEFAULT_DATARATE > DR_5 )
-#error "A default DR higher than DR_5 may lead to connectivity loss."
-#endif
-
-/*!
- * Second reception window channel frequency definition.
- */
-#define EU868_RX_WND_2_FREQ                         869525000
-
-/*!
- * Second reception window channel datarate definition.
- */
-#define EU868_RX_WND_2_DR                           DR_0
-
-/*
- * CLASS B
- */
-/*!
- * Beacon frequency
- */
-#define EU868_BEACON_CHANNEL_FREQ                   869525000
-
-/*!
- * Payload size of a beacon frame
- */
-#define EU868_BEACON_SIZE                           17
-
-/*!
- * Size of RFU 1 field
- */
-#define EU868_RFU1_SIZE                             2
-
-/*!
- * Size of RFU 2 field
- */
-#define EU868_RFU2_SIZE                             0
-
-/*!
- * Datarate of the beacon channel
- */
-#define EU868_BEACON_CHANNEL_DR                     DR_3
-
-/*!
- * Bandwith of the beacon channel
- */
-#define EU868_BEACON_CHANNEL_BW                     0
-
-/*!
- * Ping slot channel datarate
- */
-#define EU868_PING_SLOT_CHANNEL_DR                  DR_3
-
-/*!
- * Maximum number of bands
- */
-#define EU868_MAX_NB_BANDS                          6
-
-/*!
- * Band 0 definition
- * { DutyCycle, TxMaxPower, LastJoinTxDoneTime, LastTxDoneTime, TimeOff }
- */
-#define EU868_BAND0                                 { 100 , EU868_MAX_TX_POWER, 0, 0, 0 } //  1.0 %
-
-/*!
- * Band 1 definition
- * { DutyCycle, TxMaxPower, LastJoinTxDoneTime, LastTxDoneTime, TimeOff }
- */
-#define EU868_BAND1                                 { 100 , EU868_MAX_TX_POWER, 0, 0, 0 } //  1.0 %
-
-/*!
- * Band 2 definition
- * Band = { DutyCycle, TxMaxPower, LastJoinTxDoneTime, LastTxDoneTime, TimeOff }
- */
-#define EU868_BAND2                                 { 1000, EU868_MAX_TX_POWER, 0, 0, 0 } //  0.1 %
-
-/*!
- * Band 3 definition
- * Band = { DutyCycle, TxMaxPower, LastJoinTxDoneTime, LastTxDoneTime, TimeOff }
- */
-#define EU868_BAND3                                 { 10  , EU868_MAX_TX_POWER, 0, 0, 0 } // 10.0 %
-
-/*!
- * Band 4 definition
- * Band = { DutyCycle, TxMaxPower, LastJoinTxDoneTime, LastTxDoneTime, TimeOff }
- */
-#define EU868_BAND4                                 { 100 , EU868_MAX_TX_POWER, 0, 0, 0 } //  1.0 %
-
-/*!
- * Band 5 definition
- * Band = { DutyCycle, TxMaxPower, LastJoinTxDoneTime, LastTxDoneTime, TimeOff }
- */
-#define EU868_BAND5                                 { 1000, EU868_MAX_TX_POWER, 0, 0, 0 } //  0.1 %
-
-/*!
- * LoRaMac default channel 1
- * Channel = { Frequency [Hz], RX1 Frequency [Hz], { ( ( DrMax << 4 ) | DrMin ) }, Band }
- */
-#define EU868_LC1                                   { 868100000, 0, { ( ( DR_5 << 4 ) | DR_0 ) }, 1 }
-
-/*!
- * LoRaMac default channel 2
- * Channel = { Frequency [Hz], RX1 Frequency [Hz], { ( ( DrMax << 4 ) | DrMin ) }, Band }
- */
-#define EU868_LC2                                   { 868300000, 0, { ( ( DR_5 << 4 ) | DR_0 ) }, 1 }
-
-/*!
- * LoRaMac default channel 3
- * Channel = { Frequency [Hz], RX1 Frequency [Hz], { ( ( DrMax << 4 ) | DrMin ) }, Band }
- */
-#define EU868_LC3                                   { 868500000, 0, { ( ( DR_5 << 4 ) | DR_0 ) }, 1 }
-
-/*!
- * LoRaMac channels which are allowed for the join procedure
- */
-#define EU868_JOIN_CHANNELS                         ( uint16_t )( LC( 1 ) | LC( 2 ) | LC( 3 ) )
-
-/*!
- * Data rates table definition
- */
-static const uint8_t DataratesEU868[]  = { 12, 11, 10,  9,  8,  7,  7, 50 };
-
-/*!
- * Bandwidths table definition in Hz
- */
-static const uint32_t BandwidthsEU868[] = { 125000, 125000, 125000, 125000, 125000, 125000, 250000, 0 };
-
-/*!
- * Maximum payload with respect to the datarate index.
- */
-static const uint8_t MaxPayloadOfDatarateEU868[] = { 51, 51, 51, 115, 242, 242, 242, 242 };
-
-/*!
- * \brief The function gets a value of a specific phy attribute.
- *
- * \param [IN] getPhy Pointer to the function parameters.
- *
- * \retval Returns a structure containing the PHY parameter.
- */
-PhyParam_t RegionEU868GetPhyParam( GetPhyParams_t* getPhy );
-
-/*!
- * \brief Updates the last TX done parameters of the current channel.
- *
- * \param [IN] txDone Pointer to the function parameters.
- */
-void RegionEU868SetBandTxDone( SetBandTxDoneParams_t* txDone );
-
-/*!
- * \brief Initializes the channels masks and the channels.
- *
- * \param [IN] type Sets the initialization type.
- */
-void RegionEU868InitDefaults( InitDefaultsParams_t* params );
-
-/*!
- * \brief Returns a pointer to the internal context and its size.
- *
- * \param [OUT] params Pointer to the function parameters.
- *
- * \retval      Points to a structure where the module store its non-volatile context.
- */
-void* RegionEU868GetNvmCtx( GetNvmCtxParams_t* params );
-
-/*!
- * \brief Verifies a parameter.
- *
- * \param [IN] verify Pointer to the function parameters.
- *
- * \param [IN] type Sets the initialization type.
- *
- * \retval Returns true, if the parameter is valid.
- */
-bool RegionEU868Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute );
-
-/*!
- * \brief The function parses the input buffer and sets up the channels of the
- *        CF list.
- *
- * \param [IN] applyCFList Pointer to the function parameters.
- */
-void RegionEU868ApplyCFList( ApplyCFListParams_t* applyCFList );
-
-/*!
- * \brief Sets a channels mask.
- *
- * \param [IN] chanMaskSet Pointer to the function parameters.
- *
- * \retval Returns true, if the channels mask could be set.
- */
-bool RegionEU868ChanMaskSet( ChanMaskSetParams_t* chanMaskSet );
-
-/*!
- * Computes the Rx window timeout and offset.
- *
- * \param [IN] datarate     Rx window datarate index to be used
- *
- * \param [IN] minRxSymbols Minimum required number of symbols to detect an Rx frame.
- *
- * \param [IN] rxError      System maximum timing error of the receiver. In milliseconds
- *                          The receiver will turn on in a [-rxError : +rxError] ms
- *                          interval around RxOffset
- *
- * \param [OUT]rxConfigParams Returns updated WindowTimeout and WindowOffset fields.
- */
-void RegionEU868ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams );
-
-/*!
- * \brief Configuration of the RX windows.
- *
- * \param [IN] rxConfig Pointer to the function parameters.
- *
- * \param [OUT] datarate The datarate index which was set.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionEU868RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate );
-
-/*!
- * \brief TX configuration.
- *
- * \param [IN] txConfig Pointer to the function parameters.
- *
- * \param [OUT] txPower The tx power index which was set.
- *
- * \param [OUT] txTimeOnAir The time-on-air of the frame.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionEU868TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir );
-
-/*!
- * \brief The function processes a Link ADR Request.
- *
- * \param [IN] linkAdrReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionEU868LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed );
-
-/*!
- * \brief The function processes a RX Parameter Setup Request.
- *
- * \param [IN] rxParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionEU868RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq );
-
-/*!
- * \brief The function processes a Channel Request.
- *
- * \param [IN] newChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionEU868NewChannelReq( NewChannelReqParams_t* newChannelReq );
-
-/*!
- * \brief The function processes a TX ParamSetup Request.
- *
- * \param [IN] txParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- *         Returns -1, if the functionality is not implemented. In this case, the end node
- *         shall not process the command.
- */
-int8_t RegionEU868TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq );
-
-/*!
- * \brief The function processes a DlChannel Request.
- *
- * \param [IN] dlChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionEU868DlChannelReq( DlChannelReqParams_t* dlChannelReq );
-
-/*!
- * \brief Alternates the datarate of the channel for the join request.
- *
- * \param [IN] currentDr Current datarate.
- *
- * \retval Datarate to apply.
- */
-int8_t RegionEU868AlternateDr( int8_t currentDr, AlternateDrType_t type );
-
-/*!
- * \brief Calculates the back-off time.
- *
- * \param [IN] calcBackOff Pointer to the function parameters.
- */
-void RegionEU868CalcBackOff( CalcBackOffParams_t* calcBackOff );
-
-/*!
- * \brief Searches and set the next random available channel
- *
- * \param [OUT] channel Next channel to use for TX.
- *
- * \param [OUT] time Time to wait for the next transmission according to the duty
- *              cycle.
- *
- * \param [OUT] aggregatedTimeOff Updates the aggregated time off.
- *
- * \retval Function status [1: OK, 0: Unable to find a channel on the current datarate]
- */
-LoRaMacStatus_t RegionEU868NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff );
-
-/*!
- * \brief Adds a channel.
- *
- * \param [IN] channelAdd Pointer to the function parameters.
- *
- * \retval Status of the operation.
- */
-LoRaMacStatus_t RegionEU868ChannelAdd( ChannelAddParams_t* channelAdd );
-
-/*!
- * \brief Removes a channel.
- *
- * \param [IN] channelRemove Pointer to the function parameters.
- *
- * \retval Returns true, if the channel was removed successfully.
- */
-bool RegionEU868ChannelsRemove( ChannelRemoveParams_t* channelRemove  );
-
-/*!
- * \brief Sets the radio into continuous wave mode.
- *
- * \param [IN] continuousWave Pointer to the function parameters.
- */
-void RegionEU868SetContinuousWave( ContinuousWaveParams_t* continuousWave );
-
-/*!
- * \brief Computes new datarate according to the given offset
- *
- * \param [IN] downlinkDwellTime Downlink dwell time configuration. 0: No limit, 1: 400ms
- *
- * \param [IN] dr Current datarate
- *
- * \param [IN] drOffset Offset to be applied
- *
- * \retval newDr Computed datarate.
- */
-uint8_t RegionEU868ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset );
-
-/*!
- * \brief Sets the radio into beacon reception mode
- *
- * \param [IN] rxBeaconSetup Pointer to the function parameters
- */
-void RegionEU868RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr );
-
-/*! \} defgroup REGIONEU868 */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __REGION_EU868_H__
diff --git a/mac/region/RegionIN865.c b/mac/region/RegionIN865.c
deleted file mode 100644
index 30a28e3..0000000
--- a/mac/region/RegionIN865.c
+++ /dev/null
@@ -1,992 +0,0 @@
-/*!
- * \file      RegionIN865.c
- *
- * \brief     Region implementation for IN865
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
-*/
-#include "utilities.h"
-
-#include "RegionCommon.h"
-#include "RegionIN865.h"
-
-// Definitions
-#define CHANNELS_MASK_SIZE              1
-
-/*!
- * Region specific context
- */
-typedef struct sRegionIN865NvmCtx
-{
-    /*!
-     * LoRaMAC channels
-     */
-    ChannelParams_t Channels[ IN865_MAX_NB_CHANNELS ];
-    /*!
-     * LoRaMac bands
-     */
-    Band_t Bands[ IN865_MAX_NB_BANDS ];
-    /*!
-     * LoRaMac channels mask
-     */
-    uint16_t ChannelsMask[ CHANNELS_MASK_SIZE ];
-    /*!
-     * LoRaMac channels default mask
-     */
-    uint16_t ChannelsDefaultMask[ CHANNELS_MASK_SIZE ];
-}RegionIN865NvmCtx_t;
-
-/*
- * Non-volatile module context.
- */
-static RegionIN865NvmCtx_t NvmCtx;
-
-// Static functions
-static int8_t GetNextLowerTxDr( int8_t dr, int8_t minDr )
-{
-    uint8_t nextLowerDr = 0;
-
-    if( dr == minDr )
-    {
-        nextLowerDr = minDr;
-    }
-    else if( dr == DR_7 )
-    {
-        nextLowerDr = DR_5;
-    }
-    else
-    {
-        nextLowerDr = dr - 1;
-    }
-    return nextLowerDr;
-}
-
-static uint32_t GetBandwidth( uint32_t drIndex )
-{
-    switch( BandwidthsIN865[drIndex] )
-    {
-        default:
-        case 125000:
-            return 0;
-        case 250000:
-            return 1;
-        case 500000:
-            return 2;
-    }
-}
-
-static int8_t LimitTxPower( int8_t txPower, int8_t maxBandTxPower, int8_t datarate, uint16_t* channelsMask )
-{
-    int8_t txPowerResult = txPower;
-
-    // Limit tx power to the band max
-    txPowerResult =  MAX( txPower, maxBandTxPower );
-
-    return txPowerResult;
-}
-
-static bool VerifyRfFreq( uint32_t freq )
-{
-    // Check radio driver support
-    if( Radio.CheckRfFrequency( freq ) == false )
-    {
-        return false;
-    }
-
-    if( ( freq < 865000000 ) || ( freq > 867000000 ) )
-    {
-        return false;
-    }
-    return true;
-}
-
-PhyParam_t RegionIN865GetPhyParam( GetPhyParams_t* getPhy )
-{
-    PhyParam_t phyParam = { 0 };
-
-    switch( getPhy->Attribute )
-    {
-        case PHY_MIN_RX_DR:
-        {
-            phyParam.Value = IN865_RX_MIN_DATARATE;
-            break;
-        }
-        case PHY_MIN_TX_DR:
-        {
-            phyParam.Value = IN865_TX_MIN_DATARATE;
-            break;
-        }
-        case PHY_DEF_TX_DR:
-        {
-            phyParam.Value = IN865_DEFAULT_DATARATE;
-            break;
-        }
-        case PHY_NEXT_LOWER_TX_DR:
-        {
-            phyParam.Value = GetNextLowerTxDr( getPhy->Datarate, IN865_TX_MIN_DATARATE );
-            break;
-        }
-        case PHY_MAX_TX_POWER:
-        {
-            phyParam.Value = IN865_MAX_TX_POWER;
-            break;
-        }
-        case PHY_DEF_TX_POWER:
-        {
-            phyParam.Value = IN865_DEFAULT_TX_POWER;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_LIMIT:
-        {
-            phyParam.Value = IN865_ADR_ACK_LIMIT;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_DELAY:
-        {
-            phyParam.Value = IN865_ADR_ACK_DELAY;
-            break;
-        }
-        case PHY_MAX_PAYLOAD:
-        {
-            phyParam.Value = MaxPayloadOfDatarateIN865[getPhy->Datarate];
-            break;
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            phyParam.Value = IN865_DUTY_CYCLE_ENABLED;
-            break;
-        }
-        case PHY_MAX_RX_WINDOW:
-        {
-            phyParam.Value = IN865_MAX_RX_WINDOW;
-            break;
-        }
-        case PHY_RECEIVE_DELAY1:
-        {
-            phyParam.Value = IN865_RECEIVE_DELAY1;
-            break;
-        }
-        case PHY_RECEIVE_DELAY2:
-        {
-            phyParam.Value = IN865_RECEIVE_DELAY2;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY1:
-        {
-            phyParam.Value = IN865_JOIN_ACCEPT_DELAY1;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY2:
-        {
-            phyParam.Value = IN865_JOIN_ACCEPT_DELAY2;
-            break;
-        }
-        case PHY_MAX_FCNT_GAP:
-        {
-            phyParam.Value = IN865_MAX_FCNT_GAP;
-            break;
-        }
-        case PHY_ACK_TIMEOUT:
-        {
-            phyParam.Value = ( IN865_ACKTIMEOUT + randr( -IN865_ACK_TIMEOUT_RND, IN865_ACK_TIMEOUT_RND ) );
-            break;
-        }
-        case PHY_DEF_DR1_OFFSET:
-        {
-            phyParam.Value = IN865_DEFAULT_RX1_DR_OFFSET;
-            break;
-        }
-        case PHY_DEF_RX2_FREQUENCY:
-        {
-            phyParam.Value = IN865_RX_WND_2_FREQ;
-            break;
-        }
-        case PHY_DEF_RX2_DR:
-        {
-            phyParam.Value = IN865_RX_WND_2_DR;
-            break;
-        }
-        case PHY_CHANNELS_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsMask;
-            break;
-        }
-        case PHY_CHANNELS_DEFAULT_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsDefaultMask;
-            break;
-        }
-        case PHY_MAX_NB_CHANNELS:
-        {
-            phyParam.Value = IN865_MAX_NB_CHANNELS;
-            break;
-        }
-        case PHY_CHANNELS:
-        {
-            phyParam.Channels = NvmCtx.Channels;
-            break;
-        }
-        case PHY_DEF_UPLINK_DWELL_TIME:
-        case PHY_DEF_DOWNLINK_DWELL_TIME:
-        {
-            phyParam.Value = 0;
-            break;
-        }
-        case PHY_DEF_MAX_EIRP:
-        {
-            phyParam.fValue = IN865_DEFAULT_MAX_EIRP;
-            break;
-        }
-        case PHY_DEF_ANTENNA_GAIN:
-        {
-            phyParam.fValue = IN865_DEFAULT_ANTENNA_GAIN;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_FREQ:
-        {
-            phyParam.Value = IN865_BEACON_CHANNEL_FREQ;
-            break;
-        }
-        case PHY_BEACON_FORMAT:
-        {
-            phyParam.BeaconFormat.BeaconSize = IN865_BEACON_SIZE;
-            phyParam.BeaconFormat.Rfu1Size = IN865_RFU1_SIZE;
-            phyParam.BeaconFormat.Rfu2Size = IN865_RFU2_SIZE;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_DR:
-        {
-            phyParam.Value = IN865_BEACON_CHANNEL_DR;
-            break;
-        }
-        case PHY_PING_SLOT_CHANNEL_DR:
-        {
-            phyParam.Value = IN865_PING_SLOT_CHANNEL_DR;
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-
-    return phyParam;
-}
-
-void RegionIN865SetBandTxDone( SetBandTxDoneParams_t* txDone )
-{
-    RegionCommonSetBandTxDone( txDone->Joined, &NvmCtx.Bands[NvmCtx.Channels[txDone->Channel].Band], txDone->LastTxDoneTime );
-}
-
-void RegionIN865InitDefaults( InitDefaultsParams_t* params )
-{
-    Band_t bands[IN865_MAX_NB_BANDS] =
-    {
-        IN865_BAND0
-    };
-
-    switch( params->Type )
-    {
-        case INIT_TYPE_BANDS:
-        {
-            // Initialize bands
-            memcpy1( ( uint8_t* )NvmCtx.Bands, ( uint8_t* )bands, sizeof( Band_t ) * IN865_MAX_NB_BANDS );
-            break;
-        }
-        case INIT_TYPE_INIT:
-        {
-            // Channels
-            NvmCtx.Channels[0] = ( ChannelParams_t ) IN865_LC1;
-            NvmCtx.Channels[1] = ( ChannelParams_t ) IN865_LC2;
-            NvmCtx.Channels[2] = ( ChannelParams_t ) IN865_LC3;
-
-            // Initialize the channels default mask
-            NvmCtx.ChannelsDefaultMask[0] = LC( 1 ) + LC( 2 ) + LC( 3 );
-            // Update the channels mask
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, NvmCtx.ChannelsDefaultMask, 1 );
-            break;
-        }
-        case INIT_TYPE_RESTORE_CTX:
-        {
-            if( params->NvmCtx != 0 )
-            {
-                memcpy1( (uint8_t*) &NvmCtx, (uint8_t*) params->NvmCtx, sizeof( NvmCtx ) );
-            }
-            break;
-        }
-        case INIT_TYPE_RESTORE_DEFAULT_CHANNELS:
-        {
-            // Restore channels default mask
-            NvmCtx.ChannelsMask[0] |= NvmCtx.ChannelsDefaultMask[0];
-
-            // Channels
-            NvmCtx.Channels[0] = ( ChannelParams_t ) IN865_LC1;
-            NvmCtx.Channels[1] = ( ChannelParams_t ) IN865_LC2;
-            NvmCtx.Channels[2] = ( ChannelParams_t ) IN865_LC3;
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-}
-
-void* RegionIN865GetNvmCtx( GetNvmCtxParams_t* params )
-{
-    params->nvmCtxSize = sizeof( RegionIN865NvmCtx_t );
-    return &NvmCtx;
-}
-
-bool RegionIN865Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute )
-{
-    switch( phyAttribute )
-    {
-        case PHY_FREQUENCY:
-        {
-            return VerifyRfFreq( verify->Frequency );
-        }
-        case PHY_TX_DR:
-        {
-            if( verify->DatarateParams.Datarate == DR_6 )
-            {// DR_6 is not supported by this region
-                return false;
-            }
-            else
-            {
-                return RegionCommonValueInRange( verify->DatarateParams.Datarate, IN865_TX_MIN_DATARATE, IN865_TX_MAX_DATARATE );
-            }
-        }
-        case PHY_DEF_TX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, DR_0, DR_5 );
-        }
-        case PHY_RX_DR:
-        {
-            if( verify->DatarateParams.Datarate == DR_6 )
-            {// DR_6 is not supported by this region
-                return false;
-            }
-            else
-            {
-                return RegionCommonValueInRange( verify->DatarateParams.Datarate, IN865_RX_MIN_DATARATE, IN865_RX_MAX_DATARATE );
-            }
-        }
-        case PHY_DEF_TX_POWER:
-        case PHY_TX_POWER:
-        {
-            // Remark: switched min and max!
-            return RegionCommonValueInRange( verify->TxPower, IN865_MAX_TX_POWER, IN865_MIN_TX_POWER );
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            return IN865_DUTY_CYCLE_ENABLED;
-        }
-        default:
-            return false;
-    }
-}
-
-void RegionIN865ApplyCFList( ApplyCFListParams_t* applyCFList )
-{
-    ChannelParams_t newChannel;
-    ChannelAddParams_t channelAdd;
-    ChannelRemoveParams_t channelRemove;
-
-    // Setup default datarate range
-    newChannel.DrRange.Value = ( DR_5 << 4 ) | DR_0;
-
-    // Size of the optional CF list
-    if( applyCFList->Size != 16 )
-    {
-        return;
-    }
-
-    // Last byte CFListType must be 0 to indicate the CFList contains a list of frequencies
-    if( applyCFList->Payload[15] != 0 )
-    {
-        return;
-    }
-
-    // Last byte is RFU, don't take it into account
-    for( uint8_t i = 0, chanIdx = IN865_NUMB_DEFAULT_CHANNELS; chanIdx < IN865_MAX_NB_CHANNELS; i+=3, chanIdx++ )
-    {
-        if( chanIdx < ( IN865_NUMB_CHANNELS_CF_LIST + IN865_NUMB_DEFAULT_CHANNELS ) )
-        {
-            // Channel frequency
-            newChannel.Frequency = (uint32_t) applyCFList->Payload[i];
-            newChannel.Frequency |= ( (uint32_t) applyCFList->Payload[i + 1] << 8 );
-            newChannel.Frequency |= ( (uint32_t) applyCFList->Payload[i + 2] << 16 );
-            newChannel.Frequency *= 100;
-
-            // Initialize alternative frequency to 0
-            newChannel.Rx1Frequency = 0;
-        }
-        else
-        {
-            newChannel.Frequency = 0;
-            newChannel.DrRange.Value = 0;
-            newChannel.Rx1Frequency = 0;
-        }
-
-        if( newChannel.Frequency != 0 )
-        {
-            channelAdd.NewChannel = &newChannel;
-            channelAdd.ChannelId = chanIdx;
-
-            // Try to add all channels
-            RegionIN865ChannelAdd( &channelAdd );
-        }
-        else
-        {
-            channelRemove.ChannelId = chanIdx;
-
-            RegionIN865ChannelsRemove( &channelRemove );
-        }
-    }
-}
-
-bool RegionIN865ChanMaskSet( ChanMaskSetParams_t* chanMaskSet )
-{
-    switch( chanMaskSet->ChannelsMaskType )
-    {
-        case CHANNELS_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, chanMaskSet->ChannelsMaskIn, 1 );
-            break;
-        }
-        case CHANNELS_DEFAULT_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsDefaultMask, chanMaskSet->ChannelsMaskIn, 1 );
-            break;
-        }
-        default:
-            return false;
-    }
-    return true;
-}
-
-void RegionIN865ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams )
-{
-    double tSymbol = 0.0;
-
-    // Get the datarate, perform a boundary check
-    rxConfigParams->Datarate = MIN( datarate, IN865_RX_MAX_DATARATE );
-    rxConfigParams->Bandwidth = GetBandwidth( rxConfigParams->Datarate );
-
-    if( rxConfigParams->Datarate == DR_7 )
-    { // FSK
-        tSymbol = RegionCommonComputeSymbolTimeFsk( DataratesIN865[rxConfigParams->Datarate] );
-    }
-    else
-    { // LoRa
-        tSymbol = RegionCommonComputeSymbolTimeLoRa( DataratesIN865[rxConfigParams->Datarate], BandwidthsIN865[rxConfigParams->Datarate] );
-    }
-
-    RegionCommonComputeRxWindowParameters( tSymbol, minRxSymbols, rxError, Radio.GetWakeupTime( ), &rxConfigParams->WindowTimeout, &rxConfigParams->WindowOffset );
-}
-
-bool RegionIN865RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate )
-{
-    RadioModems_t modem;
-    int8_t dr = rxConfig->Datarate;
-    int8_t phyDr = 0;
-    uint32_t frequency = rxConfig->Frequency;
-
-    if( Radio.GetStatus( ) != RF_IDLE )
-    {
-        return false;
-    }
-
-    if( rxConfig->RxSlot == RX_SLOT_WIN_1 )
-    {
-        // Apply window 1 frequency
-        frequency = NvmCtx.Channels[rxConfig->Channel].Frequency;
-        // Apply the alternative RX 1 window frequency, if it is available
-        if( NvmCtx.Channels[rxConfig->Channel].Rx1Frequency != 0 )
-        {
-            frequency = NvmCtx.Channels[rxConfig->Channel].Rx1Frequency;
-        }
-    }
-
-    // Read the physical datarate from the datarates table
-    phyDr = DataratesIN865[dr];
-
-    Radio.SetChannel( frequency );
-
-    // Radio configuration
-    if( dr == DR_7 )
-    {
-        modem = MODEM_FSK;
-        Radio.SetRxConfig( modem, 50000, phyDr * 1000, 0, 83333, 5, rxConfig->WindowTimeout, false, 0, true, 0, 0, false, rxConfig->RxContinuous );
-    }
-    else
-    {
-        modem = MODEM_LORA;
-        Radio.SetRxConfig( modem, rxConfig->Bandwidth, phyDr, 1, 0, 8, rxConfig->WindowTimeout, false, 0, false, 0, 0, true, rxConfig->RxContinuous );
-    }
-
-    Radio.SetMaxPayloadLength( modem, MaxPayloadOfDatarateIN865[dr] + LORA_MAC_FRMPAYLOAD_OVERHEAD );
-
-    *datarate = (uint8_t) dr;
-    return true;
-}
-
-bool RegionIN865TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir )
-{
-    RadioModems_t modem;
-    int8_t phyDr = DataratesIN865[txConfig->Datarate];
-    int8_t txPowerLimited = LimitTxPower( txConfig->TxPower, NvmCtx.Bands[NvmCtx.Channels[txConfig->Channel].Band].TxMaxPower, txConfig->Datarate, NvmCtx.ChannelsMask );
-    uint32_t bandwidth = GetBandwidth( txConfig->Datarate );
-    int8_t phyTxPower = 0;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, txConfig->MaxEirp, txConfig->AntennaGain );
-
-    // Setup the radio frequency
-    Radio.SetChannel( NvmCtx.Channels[txConfig->Channel].Frequency );
-
-    if( txConfig->Datarate == DR_7 )
-    { // High Speed FSK channel
-        modem = MODEM_FSK;
-        Radio.SetTxConfig( modem, phyTxPower, 25000, bandwidth, phyDr * 1000, 0, 5, false, true, 0, 0, false, 4000 );
-    }
-    else
-    {
-        modem = MODEM_LORA;
-        Radio.SetTxConfig( modem, phyTxPower, 0, bandwidth, phyDr, 1, 8, false, true, 0, 0, false, 4000 );
-    }
-
-    // Setup maximum payload lenght of the radio driver
-    Radio.SetMaxPayloadLength( modem, txConfig->PktLen );
-    // Get the time-on-air of the next tx frame
-    *txTimeOnAir = Radio.TimeOnAir( modem, txConfig->PktLen );
-
-    *txPower = txPowerLimited;
-    return true;
-}
-
-uint8_t RegionIN865LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed )
-{
-    uint8_t status = 0x07;
-    RegionCommonLinkAdrParams_t linkAdrParams;
-    uint8_t nextIndex = 0;
-    uint8_t bytesProcessed = 0;
-    uint16_t chMask = 0;
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-    RegionCommonLinkAdrReqVerifyParams_t linkAdrVerifyParams;
-
-    while( bytesProcessed < linkAdrReq->PayloadSize )
-    {
-        // Get ADR request parameters
-        nextIndex = RegionCommonParseLinkAdrReq( &( linkAdrReq->Payload[bytesProcessed] ), &linkAdrParams );
-
-        if( nextIndex == 0 )
-            break; // break loop, since no more request has been found
-
-        // Update bytes processed
-        bytesProcessed += nextIndex;
-
-        // Revert status, as we only check the last ADR request for the channel mask KO
-        status = 0x07;
-
-        // Setup temporary channels mask
-        chMask = linkAdrParams.ChMask;
-
-        // Verify channels mask
-        if( ( linkAdrParams.ChMaskCtrl == 0 ) && ( chMask == 0 ) )
-        {
-            status &= 0xFE; // Channel mask KO
-        }
-        else if( ( ( linkAdrParams.ChMaskCtrl >= 1 ) && ( linkAdrParams.ChMaskCtrl <= 5 )) ||
-                ( linkAdrParams.ChMaskCtrl >= 7 ) )
-        {
-            // RFU
-            status &= 0xFE; // Channel mask KO
-        }
-        else
-        {
-            for( uint8_t i = 0; i < IN865_MAX_NB_CHANNELS; i++ )
-            {
-                if( linkAdrParams.ChMaskCtrl == 6 )
-                {
-                    if( NvmCtx.Channels[i].Frequency != 0 )
-                    {
-                        chMask |= 1 << i;
-                    }
-                }
-                else
-                {
-                    if( ( ( chMask & ( 1 << i ) ) != 0 ) &&
-                        ( NvmCtx.Channels[i].Frequency == 0 ) )
-                    {// Trying to enable an undefined channel
-                        status &= 0xFE; // Channel mask KO
-                    }
-                }
-            }
-        }
-    }
-
-    if( linkAdrParams.Datarate != DR_6 )
-    {
-        // Get the minimum possible datarate
-        getPhy.Attribute = PHY_MIN_TX_DR;
-        getPhy.UplinkDwellTime = linkAdrReq->UplinkDwellTime;
-        phyParam = RegionIN865GetPhyParam( &getPhy );
-
-        linkAdrVerifyParams.Status = status;
-        linkAdrVerifyParams.AdrEnabled = linkAdrReq->AdrEnabled;
-        linkAdrVerifyParams.Datarate = linkAdrParams.Datarate;
-        linkAdrVerifyParams.TxPower = linkAdrParams.TxPower;
-        linkAdrVerifyParams.NbRep = linkAdrParams.NbRep;
-        linkAdrVerifyParams.CurrentDatarate = linkAdrReq->CurrentDatarate;
-        linkAdrVerifyParams.CurrentTxPower = linkAdrReq->CurrentTxPower;
-        linkAdrVerifyParams.CurrentNbRep = linkAdrReq->CurrentNbRep;
-        linkAdrVerifyParams.NbChannels = IN865_MAX_NB_CHANNELS;
-        linkAdrVerifyParams.ChannelsMask = &chMask;
-        linkAdrVerifyParams.MinDatarate = ( int8_t )phyParam.Value;
-        linkAdrVerifyParams.MaxDatarate = IN865_TX_MAX_DATARATE;
-        linkAdrVerifyParams.Channels = NvmCtx.Channels;
-        linkAdrVerifyParams.MinTxPower = IN865_MIN_TX_POWER;
-        linkAdrVerifyParams.MaxTxPower = IN865_MAX_TX_POWER;
-        linkAdrVerifyParams.Version = linkAdrReq->Version;
-
-        // Verify the parameters and update, if necessary
-        status = RegionCommonLinkAdrReqVerifyParams( &linkAdrVerifyParams, &linkAdrParams.Datarate, &linkAdrParams.TxPower, &linkAdrParams.NbRep );
-    }
-    else
-    {// DR_6 is not supported by this region
-        status &= 0xFD; // Datarate KO
-    }
-
-    // Update channelsMask if everything is correct
-    if( status == 0x07 )
-    {
-        // Set the channels mask to a default value
-        memset1( ( uint8_t* ) NvmCtx.ChannelsMask, 0, sizeof( NvmCtx.ChannelsMask ) );
-        // Update the channels mask
-        NvmCtx.ChannelsMask[0] = chMask;
-    }
-
-    // Update status variables
-    *drOut = linkAdrParams.Datarate;
-    *txPowOut = linkAdrParams.TxPower;
-    *nbRepOut = linkAdrParams.NbRep;
-    *nbBytesParsed = bytesProcessed;
-
-    return status;
-}
-
-uint8_t RegionIN865RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq )
-{
-    uint8_t status = 0x07;
-
-    // Verify radio frequency
-    if( VerifyRfFreq( rxParamSetupReq->Frequency ) == false )
-    {
-        status &= 0xFE; // Channel frequency KO
-    }
-
-    // Verify datarate
-    if( RegionCommonValueInRange( rxParamSetupReq->Datarate, IN865_RX_MIN_DATARATE, IN865_RX_MAX_DATARATE ) == false )
-    {
-        status &= 0xFD; // Datarate KO
-    }
-
-    // Verify datarate offset
-    if( RegionCommonValueInRange( rxParamSetupReq->DrOffset, IN865_MIN_RX1_DR_OFFSET, IN865_MAX_RX1_DR_OFFSET ) == false )
-    {
-        status &= 0xFB; // Rx1DrOffset range KO
-    }
-
-    return status;
-}
-
-uint8_t RegionIN865NewChannelReq( NewChannelReqParams_t* newChannelReq )
-{
-    uint8_t status = 0x03;
-    ChannelAddParams_t channelAdd;
-    ChannelRemoveParams_t channelRemove;
-
-    if( newChannelReq->NewChannel->Frequency == 0 )
-    {
-        channelRemove.ChannelId = newChannelReq->ChannelId;
-
-        // Remove
-        if( RegionIN865ChannelsRemove( &channelRemove ) == false )
-        {
-            status &= 0xFC;
-        }
-    }
-    else
-    {
-        channelAdd.NewChannel = newChannelReq->NewChannel;
-        channelAdd.ChannelId = newChannelReq->ChannelId;
-
-        switch( RegionIN865ChannelAdd( &channelAdd ) )
-        {
-            case LORAMAC_STATUS_OK:
-            {
-                break;
-            }
-            case LORAMAC_STATUS_FREQUENCY_INVALID:
-            {
-                status &= 0xFE;
-                break;
-            }
-            case LORAMAC_STATUS_DATARATE_INVALID:
-            {
-                status &= 0xFD;
-                break;
-            }
-            case LORAMAC_STATUS_FREQ_AND_DR_INVALID:
-            {
-                status &= 0xFC;
-                break;
-            }
-            default:
-            {
-                status &= 0xFC;
-                break;
-            }
-        }
-    }
-
-    return status;
-}
-
-int8_t RegionIN865TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq )
-{
-    return -1;
-}
-
-uint8_t RegionIN865DlChannelReq( DlChannelReqParams_t* dlChannelReq )
-{
-    uint8_t status = 0x03;
-
-    // Verify if the frequency is supported
-    if( VerifyRfFreq( dlChannelReq->Rx1Frequency ) == false )
-    {
-        status &= 0xFE;
-    }
-
-    // Verify if an uplink frequency exists
-    if( NvmCtx.Channels[dlChannelReq->ChannelId].Frequency == 0 )
-    {
-        status &= 0xFD;
-    }
-
-    // Apply Rx1 frequency, if the status is OK
-    if( status == 0x03 )
-    {
-        NvmCtx.Channels[dlChannelReq->ChannelId].Rx1Frequency = dlChannelReq->Rx1Frequency;
-    }
-
-    return status;
-}
-
-int8_t RegionIN865AlternateDr( int8_t currentDr, AlternateDrType_t type )
-{
-    return currentDr;
-}
-
-void RegionIN865CalcBackOff( CalcBackOffParams_t* calcBackOff )
-{
-    RegionCommonCalcBackOffParams_t calcBackOffParams;
-
-    calcBackOffParams.Channels = NvmCtx.Channels;
-    calcBackOffParams.Bands = NvmCtx.Bands;
-    calcBackOffParams.LastTxIsJoinRequest = calcBackOff->LastTxIsJoinRequest;
-    calcBackOffParams.Joined = calcBackOff->Joined;
-    calcBackOffParams.DutyCycleEnabled = calcBackOff->DutyCycleEnabled;
-    calcBackOffParams.Channel = calcBackOff->Channel;
-    calcBackOffParams.ElapsedTime = calcBackOff->ElapsedTime;
-    calcBackOffParams.TxTimeOnAir = calcBackOff->TxTimeOnAir;
-
-    RegionCommonCalcBackOff( &calcBackOffParams );
-}
-
-LoRaMacStatus_t RegionIN865NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff )
-{
-    uint8_t nbEnabledChannels = 0;
-    uint8_t nbRestrictedChannels = 0;
-    uint8_t enabledChannels[IN865_MAX_NB_CHANNELS] = { 0 };
-    RegionCommonIdentifyChannelsParam_t identifyChannelsParam;
-    RegionCommonCountNbOfEnabledChannelsParams_t countChannelsParams;
-    LoRaMacStatus_t status = LORAMAC_STATUS_NO_CHANNEL_FOUND;
-
-    if( RegionCommonCountChannels( NvmCtx.ChannelsMask, 0, 1 ) == 0 )
-    { // Reactivate default channels
-        NvmCtx.ChannelsMask[0] |= LC( 1 ) + LC( 2 ) + LC( 3 );
-    }
-
-    // Search how many channels are enabled
-    countChannelsParams.Joined = nextChanParams->Joined;
-    countChannelsParams.Datarate = nextChanParams->Datarate;
-    countChannelsParams.ChannelsMask = NvmCtx.ChannelsMask;
-    countChannelsParams.Channels = NvmCtx.Channels;
-    countChannelsParams.Bands = NvmCtx.Bands;
-    countChannelsParams.MaxNbChannels = IN865_MAX_NB_CHANNELS;
-    countChannelsParams.JoinChannels = IN865_JOIN_CHANNELS;
-
-    identifyChannelsParam.AggrTimeOff = nextChanParams->AggrTimeOff;
-    identifyChannelsParam.LastAggrTx = nextChanParams->LastAggrTx;
-    identifyChannelsParam.DutyCycleEnabled = nextChanParams->DutyCycleEnabled;
-    identifyChannelsParam.MaxBands = IN865_MAX_NB_BANDS;
-
-    identifyChannelsParam.CountNbOfEnabledChannelsParam = &countChannelsParams;
-
-    status = RegionCommonIdentifyChannels( &identifyChannelsParam, aggregatedTimeOff, enabledChannels,
-                                           &nbEnabledChannels, &nbRestrictedChannels, time );
-
-    if( nextChanParams->QueryNextTxDelayOnly == true )
-    {
-        return status;
-    }
-
-    if( status == LORAMAC_STATUS_OK )
-    {
-        // We found a valid channel
-        *channel = enabledChannels[randr( 0, nbEnabledChannels - 1 )];
-    }
-    else if( status == LORAMAC_STATUS_NO_CHANNEL_FOUND )
-    {
-        // Datarate not supported by any channel, restore defaults
-        NvmCtx.ChannelsMask[0] |= LC( 1 ) + LC( 2 ) + LC( 3 );
-    }
-    return status;
-}
-
-LoRaMacStatus_t RegionIN865ChannelAdd( ChannelAddParams_t* channelAdd )
-{
-    bool drInvalid = false;
-    bool freqInvalid = false;
-    uint8_t id = channelAdd->ChannelId;
-
-    if( id < IN865_NUMB_DEFAULT_CHANNELS )
-    {
-        return LORAMAC_STATUS_FREQ_AND_DR_INVALID;
-    }
-
-    if( id >= IN865_MAX_NB_CHANNELS )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-
-    // Validate the datarate range
-    if( RegionCommonValueInRange( channelAdd->NewChannel->DrRange.Fields.Min, IN865_TX_MIN_DATARATE, IN865_TX_MAX_DATARATE ) == false )
-    {
-        drInvalid = true;
-    }
-    if( RegionCommonValueInRange( channelAdd->NewChannel->DrRange.Fields.Max, IN865_TX_MIN_DATARATE, IN865_TX_MAX_DATARATE ) == false )
-    {
-        drInvalid = true;
-    }
-    if( channelAdd->NewChannel->DrRange.Fields.Min > channelAdd->NewChannel->DrRange.Fields.Max )
-    {
-        drInvalid = true;
-    }
-
-    // Check frequency
-    if( freqInvalid == false )
-    {
-        if( VerifyRfFreq( channelAdd->NewChannel->Frequency ) == false )
-        {
-            freqInvalid = true;
-        }
-    }
-
-    // Check status
-    if( ( drInvalid == true ) && ( freqInvalid == true ) )
-    {
-        return LORAMAC_STATUS_FREQ_AND_DR_INVALID;
-    }
-    if( drInvalid == true )
-    {
-        return LORAMAC_STATUS_DATARATE_INVALID;
-    }
-    if( freqInvalid == true )
-    {
-        return LORAMAC_STATUS_FREQUENCY_INVALID;
-    }
-
-    memcpy1( ( uint8_t* ) &(NvmCtx.Channels[id]), ( uint8_t* ) channelAdd->NewChannel, sizeof( NvmCtx.Channels[id] ) );
-    NvmCtx.Channels[id].Band = 0;
-    NvmCtx.ChannelsMask[0] |= ( 1 << id );
-    return LORAMAC_STATUS_OK;
-}
-
-bool RegionIN865ChannelsRemove( ChannelRemoveParams_t* channelRemove  )
-{
-    uint8_t id = channelRemove->ChannelId;
-
-    if( id < IN865_NUMB_DEFAULT_CHANNELS )
-    {
-        return false;
-    }
-
-    // Remove the channel from the list of channels
-    NvmCtx.Channels[id] = ( ChannelParams_t ){ 0, 0, { 0 }, 0 };
-
-    return RegionCommonChanDisable( NvmCtx.ChannelsMask, id, IN865_MAX_NB_CHANNELS );
-}
-
-void RegionIN865SetContinuousWave( ContinuousWaveParams_t* continuousWave )
-{
-    int8_t txPowerLimited = LimitTxPower( continuousWave->TxPower, NvmCtx.Bands[NvmCtx.Channels[continuousWave->Channel].Band].TxMaxPower, continuousWave->Datarate, NvmCtx.ChannelsMask );
-    int8_t phyTxPower = 0;
-    uint32_t frequency = NvmCtx.Channels[continuousWave->Channel].Frequency;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, continuousWave->MaxEirp, continuousWave->AntennaGain );
-
-    Radio.SetTxContinuousWave( frequency, phyTxPower, continuousWave->Timeout );
-}
-
-uint8_t RegionIN865ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset )
-{
-    // Apply offset formula
-    return MIN( DR_5, MAX( DR_0, dr - EffectiveRx1DrOffsetIN865[drOffset] ) );
-}
-
-void RegionIN865RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr )
-{
-    RegionCommonRxBeaconSetupParams_t regionCommonRxBeaconSetup;
-
-    regionCommonRxBeaconSetup.Datarates = DataratesIN865;
-    regionCommonRxBeaconSetup.Frequency = rxBeaconSetup->Frequency;
-    regionCommonRxBeaconSetup.BeaconSize = IN865_BEACON_SIZE;
-    regionCommonRxBeaconSetup.BeaconDatarate = IN865_BEACON_CHANNEL_DR;
-    regionCommonRxBeaconSetup.BeaconChannelBW = IN865_BEACON_CHANNEL_BW;
-    regionCommonRxBeaconSetup.RxTime = rxBeaconSetup->RxTime;
-    regionCommonRxBeaconSetup.SymbolTimeout = rxBeaconSetup->SymbolTimeout;
-
-    RegionCommonRxBeaconSetup( &regionCommonRxBeaconSetup );
-
-    // Store downlink datarate
-    *outDr = IN865_BEACON_CHANNEL_DR;
-}
diff --git a/mac/region/RegionIN865.h b/mac/region/RegionIN865.h
deleted file mode 100644
index 7dc8856..0000000
--- a/mac/region/RegionIN865.h
+++ /dev/null
@@ -1,515 +0,0 @@
-/*!
- * \file      RegionIN865.h
- *
- * \brief     Region definition for IN865
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * \defgroup  REGIONIN865 Region IN865
- *            Implementation according to LoRaWAN Specification v1.0.2.
- * \{
- */
-#ifndef __REGION_IN865_H__
-#define __REGION_IN865_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include "region/Region.h"
-
-/*!
- * LoRaMac maximum number of channels
- */
-#define IN865_MAX_NB_CHANNELS                       16
-
-/*!
- * Number of default channels
- */
-#define IN865_NUMB_DEFAULT_CHANNELS                 3
-
-/*!
- * Number of channels to apply for the CF list
- */
-#define IN865_NUMB_CHANNELS_CF_LIST                 5
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define IN865_TX_MIN_DATARATE                       DR_0
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define IN865_TX_MAX_DATARATE                       DR_7
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define IN865_RX_MIN_DATARATE                       DR_0
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define IN865_RX_MAX_DATARATE                       DR_7
-
-/*!
- * Default datarate used by the node
- */
-#define IN865_DEFAULT_DATARATE                      DR_0
-
-/*!
- * Minimal Rx1 receive datarate offset
- */
-#define IN865_MIN_RX1_DR_OFFSET                     0
-
-/*!
- * Maximal Rx1 receive datarate offset
- */
-#define IN865_MAX_RX1_DR_OFFSET                     7
-
-/*!
- * Default Rx1 receive datarate offset
- */
-#define IN865_DEFAULT_RX1_DR_OFFSET                 0
-
-/*!
- * Minimal Tx output power that can be used by the node
- */
-#define IN865_MIN_TX_POWER                          TX_POWER_10
-
-/*!
- * Maximal Tx output power that can be used by the node
- */
-#define IN865_MAX_TX_POWER                          TX_POWER_0
-
-/*!
- * Default Tx output power used by the node
- */
-#define IN865_DEFAULT_TX_POWER                      TX_POWER_0
-
-/*!
- * Default Max EIRP
- */
-#define IN865_DEFAULT_MAX_EIRP                      30.0f
-
-/*!
- * Default antenna gain
- */
-#define IN865_DEFAULT_ANTENNA_GAIN                  2.15f
-
-/*!
- * ADR Ack limit
- */
-#define IN865_ADR_ACK_LIMIT                         64
-
-/*!
- * ADR Ack delay
- */
-#define IN865_ADR_ACK_DELAY                         32
-
-/*!
- * Enabled or disabled the duty cycle
- */
-#define IN865_DUTY_CYCLE_ENABLED                    1
-
-/*!
- * Maximum RX window duration
- */
-#define IN865_MAX_RX_WINDOW                         3000
-
-/*!
- * Receive delay 1
- */
-#define IN865_RECEIVE_DELAY1                        1000
-
-/*!
- * Receive delay 2
- */
-#define IN865_RECEIVE_DELAY2                        2000
-
-/*!
- * Join accept delay 1
- */
-#define IN865_JOIN_ACCEPT_DELAY1                    5000
-
-/*!
- * Join accept delay 2
- */
-#define IN865_JOIN_ACCEPT_DELAY2                    6000
-
-/*!
- * Maximum frame counter gap
- */
-#define IN865_MAX_FCNT_GAP                          16384
-
-/*!
- * Ack timeout
- */
-#define IN865_ACKTIMEOUT                            2000
-
-/*!
- * Random ack timeout limits
- */
-#define IN865_ACK_TIMEOUT_RND                       1000
-
-#if ( IN865_DEFAULT_DATARATE > DR_5 )
-#error "A default DR higher than DR_5 may lead to connectivity loss."
-#endif
-
-/*!
- * Second reception window channel frequency definition.
- */
-#define IN865_RX_WND_2_FREQ                         866550000
-
-/*!
- * Second reception window channel datarate definition.
- */
-#define IN865_RX_WND_2_DR                           DR_2
-
-/*
- * CLASS B
- */
-/*!
- * Beacon frequency
- */
-#define IN865_BEACON_CHANNEL_FREQ                   866550000
-
-/*!
- * Payload size of a beacon frame
- */
-#define IN865_BEACON_SIZE                           19
-
-/*!
- * Size of RFU 1 field
- */
-#define IN865_RFU1_SIZE                             1
-
-/*!
- * Size of RFU 2 field
- */
-#define IN865_RFU2_SIZE                             3
-
-/*!
- * Datarate of the beacon channel
- */
-#define IN865_BEACON_CHANNEL_DR                     DR_4
-
-/*!
- * Bandwith of the beacon channel
- */
-#define IN865_BEACON_CHANNEL_BW                     0
-
-/*!
- * Ping slot channel datarate
- */
-#define IN865_PING_SLOT_CHANNEL_DR                  DR_4
-
-/*!
- * Maximum number of bands
- */
-#define IN865_MAX_NB_BANDS                          1
-
-/*!
- * Band 0 definition
- * { DutyCycle, TxMaxPower, LastJoinTxDoneTime, LastTxDoneTime, TimeOff }
- */
-#define IN865_BAND0                                 { 1 , IN865_MAX_TX_POWER, 0, 0, 0 } //  100.0 %
-
-/*!
- * LoRaMac default channel 1
- * Channel = { Frequency [Hz], RX1 Frequency [Hz], { ( ( DrMax << 4 ) | DrMin ) }, Band }
- */
-#define IN865_LC1                                   { 865062500, 0, { ( ( DR_5 << 4 ) | DR_0 ) }, 0 }
-
-/*!
- * LoRaMac default channel 2
- * Channel = { Frequency [Hz], RX1 Frequency [Hz], { ( ( DrMax << 4 ) | DrMin ) }, Band }
- */
-#define IN865_LC2                                   { 865402500, 0, { ( ( DR_5 << 4 ) | DR_0 ) }, 0 }
-
-/*!
- * LoRaMac default channel 3
- * Channel = { Frequency [Hz], RX1 Frequency [Hz], { ( ( DrMax << 4 ) | DrMin ) }, Band }
- */
-#define IN865_LC3                                   { 865985000, 0, { ( ( DR_5 << 4 ) | DR_0 ) }, 0 }
-
-/*!
- * LoRaMac channels which are allowed for the join procedure
- */
-#define IN865_JOIN_CHANNELS                         ( uint16_t )( LC( 1 ) | LC( 2 ) | LC( 3 ) )
-
-/*!
- * Data rates table definition
- */
-static const uint8_t DataratesIN865[]  = { 12, 11, 10,  9,  8,  7,  7, 50 };
-
-/*!
- * Bandwidths table definition in Hz
- */
-static const uint32_t BandwidthsIN865[] = { 125000, 125000, 125000, 125000, 125000, 125000, 250000, 0 };
-
-/*!
- * Maximum payload with respect to the datarate index.
- */
-static const uint8_t MaxPayloadOfDatarateIN865[] = { 51, 51, 51, 115, 242, 242, 242, 242 };
-
-/*!
- * Effective datarate offsets for receive window 1.
- */
-static const int8_t EffectiveRx1DrOffsetIN865[] = { 0, 1, 2, 3, 4, 5, -1, -2 };
-
-/*!
- * \brief The function gets a value of a specific phy attribute.
- *
- * \param [IN] getPhy Pointer to the function parameters.
- *
- * \retval Returns a structure containing the PHY parameter.
- */
-PhyParam_t RegionIN865GetPhyParam( GetPhyParams_t* getPhy );
-
-/*!
- * \brief Updates the last TX done parameters of the current channel.
- *
- * \param [IN] txDone Pointer to the function parameters.
- */
-void RegionIN865SetBandTxDone( SetBandTxDoneParams_t* txDone );
-
-/*!
- * \brief Initializes the channels masks and the channels.
- *
- * \param [IN] type Sets the initialization type.
- */
-void RegionIN865InitDefaults( InitDefaultsParams_t* params );
-
-/*!
- * \brief Returns a pointer to the internal context and its size.
- *
- * \param [OUT] params Pointer to the function parameters.
- *
- * \retval      Points to a structure where the module store its non-volatile context.
- */
-void* RegionIN865GetNvmCtx( GetNvmCtxParams_t* params );
-
-/*!
- * \brief Verifies a parameter.
- *
- * \param [IN] verify Pointer to the function parameters.
- *
- * \param [IN] type Sets the initialization type.
- *
- * \retval Returns true, if the parameter is valid.
- */
-bool RegionIN865Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute );
-
-/*!
- * \brief The function parses the input buffer and sets up the channels of the
- *        CF list.
- *
- * \param [IN] applyCFList Pointer to the function parameters.
- */
-void RegionIN865ApplyCFList( ApplyCFListParams_t* applyCFList );
-
-/*!
- * \brief Sets a channels mask.
- *
- * \param [IN] chanMaskSet Pointer to the function parameters.
- *
- * \retval Returns true, if the channels mask could be set.
- */
-bool RegionIN865ChanMaskSet( ChanMaskSetParams_t* chanMaskSet );
-
-/*!
- * Computes the Rx window timeout and offset.
- *
- * \param [IN] datarate     Rx window datarate index to be used
- *
- * \param [IN] minRxSymbols Minimum required number of symbols to detect an Rx frame.
- *
- * \param [IN] rxError      System maximum timing error of the receiver. In milliseconds
- *                          The receiver will turn on in a [-rxError : +rxError] ms
- *                          interval around RxOffset
- *
- * \param [OUT]rxConfigParams Returns updated WindowTimeout and WindowOffset fields.
- */
-void RegionIN865ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams );
-
-/*!
- * \brief Configuration of the RX windows.
- *
- * \param [IN] rxConfig Pointer to the function parameters.
- *
- * \param [OUT] datarate The datarate index which was set.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionIN865RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate );
-
-/*!
- * \brief TX configuration.
- *
- * \param [IN] txConfig Pointer to the function parameters.
- *
- * \param [OUT] txPower The tx power index which was set.
- *
- * \param [OUT] txTimeOnAir The time-on-air of the frame.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionIN865TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir );
-
-/*!
- * \brief The function processes a Link ADR Request.
- *
- * \param [IN] linkAdrReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionIN865LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed );
-
-/*!
- * \brief The function processes a RX Parameter Setup Request.
- *
- * \param [IN] rxParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionIN865RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq );
-
-/*!
- * \brief The function processes a Channel Request.
- *
- * \param [IN] newChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionIN865NewChannelReq( NewChannelReqParams_t* newChannelReq );
-
-/*!
- * \brief The function processes a TX ParamSetup Request.
- *
- * \param [IN] txParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- *         Returns -1, if the functionality is not implemented. In this case, the end node
- *         shall not process the command.
- */
-int8_t RegionIN865TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq );
-
-/*!
- * \brief The function processes a DlChannel Request.
- *
- * \param [IN] dlChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionIN865DlChannelReq( DlChannelReqParams_t* dlChannelReq );
-
-/*!
- * \brief Alternates the datarate of the channel for the join request.
- *
- * \param [IN] currentDr Current datarate.
- *
- * \retval Datarate to apply.
- */
-int8_t RegionIN865AlternateDr( int8_t currentDr, AlternateDrType_t type );
-
-/*!
- * \brief Calculates the back-off time.
- *
- * \param [IN] calcBackOff Pointer to the function parameters.
- */
-void RegionIN865CalcBackOff( CalcBackOffParams_t* calcBackOff );
-
-/*!
- * \brief Searches and set the next random available channel
- *
- * \param [OUT] channel Next channel to use for TX.
- *
- * \param [OUT] time Time to wait for the next transmission according to the duty
- *              cycle.
- *
- * \param [OUT] aggregatedTimeOff Updates the aggregated time off.
- *
- * \retval Function status [1: OK, 0: Unable to find a channel on the current datarate]
- */
-LoRaMacStatus_t RegionIN865NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff );
-
-/*!
- * \brief Adds a channel.
- *
- * \param [IN] channelAdd Pointer to the function parameters.
- *
- * \retval Status of the operation.
- */
-LoRaMacStatus_t RegionIN865ChannelAdd( ChannelAddParams_t* channelAdd );
-
-/*!
- * \brief Removes a channel.
- *
- * \param [IN] channelRemove Pointer to the function parameters.
- *
- * \retval Returns true, if the channel was removed successfully.
- */
-bool RegionIN865ChannelsRemove( ChannelRemoveParams_t* channelRemove  );
-
-/*!
- * \brief Sets the radio into continuous wave mode.
- *
- * \param [IN] continuousWave Pointer to the function parameters.
- */
-void RegionIN865SetContinuousWave( ContinuousWaveParams_t* continuousWave );
-
-/*!
- * \brief Computes new datarate according to the given offset
- *
- * \param [IN] downlinkDwellTime Downlink dwell time configuration. 0: No limit, 1: 400ms
- *
- * \param [IN] dr Current datarate
- *
- * \param [IN] drOffset Offset to be applied
- *
- * \retval newDr Computed datarate.
- */
-uint8_t RegionIN865ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset );
-
-/*!
- * \brief Sets the radio into beacon reception mode
- *
- * \param [IN] rxBeaconSetup Pointer to the function parameters
- */
- void RegionIN865RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr );
-
-/*! \} defgroup REGIONIN865 */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __REGION_IN865_H__
diff --git a/mac/region/RegionKR920.c b/mac/region/RegionKR920.c
deleted file mode 100644
index ede4a36..0000000
--- a/mac/region/RegionKR920.c
+++ /dev/null
@@ -1,994 +0,0 @@
-/*!
- * \file      RegionKR920.c
- *
- * \brief     Region implementation for KR920
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
-*/
-#include "utilities.h"
-
-#include "RegionCommon.h"
-#include "RegionKR920.h"
-
-// Definitions
-#define CHANNELS_MASK_SIZE              1
-
-/*!
- * Region specific context
- */
-typedef struct sRegionKR920NvmCtx
-{
-    /*!
-     * LoRaMAC channels
-     */
-    ChannelParams_t Channels[ KR920_MAX_NB_CHANNELS ];
-    /*!
-     * LoRaMac bands
-     */
-    Band_t Bands[ KR920_MAX_NB_BANDS ];
-    /*!
-     * LoRaMac channels mask
-     */
-    uint16_t ChannelsMask[ CHANNELS_MASK_SIZE ];
-    /*!
-     * LoRaMac channels default mask
-     */
-    uint16_t ChannelsDefaultMask[ CHANNELS_MASK_SIZE ];
-}RegionKR920NvmCtx_t;
-
-/*
- * Non-volatile module context.
- */
-static RegionKR920NvmCtx_t NvmCtx;
-
-// Static functions
-static int8_t GetNextLowerTxDr( int8_t dr, int8_t minDr )
-{
-    uint8_t nextLowerDr = 0;
-
-    if( dr == minDr )
-    {
-        nextLowerDr = minDr;
-    }
-    else
-    {
-        nextLowerDr = dr - 1;
-    }
-    return nextLowerDr;
-}
-
-static int8_t GetMaxEIRP( uint32_t freq )
-{
-    if( freq >= 922100000 )
-    {// Limit to 14dBm
-        return KR920_DEFAULT_MAX_EIRP_HIGH;
-    }
-    // Limit to 10dBm
-    return KR920_DEFAULT_MAX_EIRP_LOW;
-}
-
-static uint32_t GetBandwidth( uint32_t drIndex )
-{
-    switch( BandwidthsKR920[drIndex] )
-    {
-        default:
-        case 125000:
-            return 0;
-        case 250000:
-            return 1;
-        case 500000:
-            return 2;
-    }
-}
-
-static int8_t LimitTxPower( int8_t txPower, int8_t maxBandTxPower, int8_t datarate, uint16_t* channelsMask )
-{
-    int8_t txPowerResult = txPower;
-
-    // Limit tx power to the band max
-    txPowerResult =  MAX( txPower, maxBandTxPower );
-
-    return txPowerResult;
-}
-
-static bool VerifyRfFreq( uint32_t freq )
-{
-    uint32_t tmpFreq = freq;
-
-    // Check radio driver support
-    if( Radio.CheckRfFrequency( tmpFreq ) == false )
-    {
-        return false;
-    }
-
-    // Verify if the frequency is valid. The frequency must be in a specified
-    // range and can be set to specific values.
-    if( ( tmpFreq >= 920900000 ) && ( tmpFreq <=923300000 ) )
-    {
-        // Range ok, check for specific value
-        tmpFreq -= 920900000;
-        if( ( tmpFreq % 200000 ) == 0 )
-        {
-            return true;
-        }
-    }
-    return false;
-}
-
-PhyParam_t RegionKR920GetPhyParam( GetPhyParams_t* getPhy )
-{
-    PhyParam_t phyParam = { 0 };
-
-    switch( getPhy->Attribute )
-    {
-        case PHY_MIN_RX_DR:
-        {
-            phyParam.Value = KR920_RX_MIN_DATARATE;
-            break;
-        }
-        case PHY_MIN_TX_DR:
-        {
-            phyParam.Value = KR920_TX_MIN_DATARATE;
-            break;
-        }
-        case PHY_DEF_TX_DR:
-        {
-            phyParam.Value = KR920_DEFAULT_DATARATE;
-            break;
-        }
-        case PHY_NEXT_LOWER_TX_DR:
-        {
-            phyParam.Value = GetNextLowerTxDr( getPhy->Datarate, KR920_TX_MIN_DATARATE );
-            break;
-        }
-        case PHY_MAX_TX_POWER:
-        {
-            phyParam.Value = KR920_MAX_TX_POWER;
-            break;
-        }
-        case PHY_DEF_TX_POWER:
-        {
-            phyParam.Value = KR920_DEFAULT_TX_POWER;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_LIMIT:
-        {
-            phyParam.Value = KR920_ADR_ACK_LIMIT;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_DELAY:
-        {
-            phyParam.Value = KR920_ADR_ACK_DELAY;
-            break;
-        }
-        case PHY_MAX_PAYLOAD:
-        {
-            phyParam.Value = MaxPayloadOfDatarateKR920[getPhy->Datarate];
-            break;
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            phyParam.Value = KR920_DUTY_CYCLE_ENABLED;
-            break;
-        }
-        case PHY_MAX_RX_WINDOW:
-        {
-            phyParam.Value = KR920_MAX_RX_WINDOW;
-            break;
-        }
-        case PHY_RECEIVE_DELAY1:
-        {
-            phyParam.Value = KR920_RECEIVE_DELAY1;
-            break;
-        }
-        case PHY_RECEIVE_DELAY2:
-        {
-            phyParam.Value = KR920_RECEIVE_DELAY2;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY1:
-        {
-            phyParam.Value = KR920_JOIN_ACCEPT_DELAY1;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY2:
-        {
-            phyParam.Value = KR920_JOIN_ACCEPT_DELAY2;
-            break;
-        }
-        case PHY_MAX_FCNT_GAP:
-        {
-            phyParam.Value = KR920_MAX_FCNT_GAP;
-            break;
-        }
-        case PHY_ACK_TIMEOUT:
-        {
-            phyParam.Value = ( KR920_ACKTIMEOUT + randr( -KR920_ACK_TIMEOUT_RND, KR920_ACK_TIMEOUT_RND ) );
-            break;
-        }
-        case PHY_DEF_DR1_OFFSET:
-        {
-            phyParam.Value = KR920_DEFAULT_RX1_DR_OFFSET;
-            break;
-        }
-        case PHY_DEF_RX2_FREQUENCY:
-        {
-            phyParam.Value = KR920_RX_WND_2_FREQ;
-            break;
-        }
-        case PHY_DEF_RX2_DR:
-        {
-            phyParam.Value = KR920_RX_WND_2_DR;
-            break;
-        }
-        case PHY_CHANNELS_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsMask;
-            break;
-        }
-        case PHY_CHANNELS_DEFAULT_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsDefaultMask;
-            break;
-        }
-        case PHY_MAX_NB_CHANNELS:
-        {
-            phyParam.Value = KR920_MAX_NB_CHANNELS;
-            break;
-        }
-        case PHY_CHANNELS:
-        {
-            phyParam.Channels = NvmCtx.Channels;
-            break;
-        }
-        case PHY_DEF_UPLINK_DWELL_TIME:
-        case PHY_DEF_DOWNLINK_DWELL_TIME:
-        {
-            phyParam.Value = 0;
-            break;
-        }
-        case PHY_DEF_MAX_EIRP:
-        {
-            // We set the higher maximum EIRP as default value.
-            // The reason for this is, that the frequency may
-            // change during a channel selection for the next uplink.
-            // The value has to be recalculated in the TX configuration.
-            phyParam.fValue = KR920_DEFAULT_MAX_EIRP_HIGH;
-            break;
-        }
-        case PHY_DEF_ANTENNA_GAIN:
-        {
-            phyParam.fValue = KR920_DEFAULT_ANTENNA_GAIN;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_FREQ:
-        {
-            phyParam.Value = KR920_BEACON_CHANNEL_FREQ;
-            break;
-        }
-        case PHY_BEACON_FORMAT:
-        {
-            phyParam.BeaconFormat.BeaconSize = KR920_BEACON_SIZE;
-            phyParam.BeaconFormat.Rfu1Size = KR920_RFU1_SIZE;
-            phyParam.BeaconFormat.Rfu2Size = KR920_RFU2_SIZE;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_DR:
-        {
-            phyParam.Value = KR920_BEACON_CHANNEL_DR;
-            break;
-        }
-        case PHY_PING_SLOT_CHANNEL_DR:
-        {
-            phyParam.Value = KR920_PING_SLOT_CHANNEL_DR;
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-
-    return phyParam;
-}
-
-void RegionKR920SetBandTxDone( SetBandTxDoneParams_t* txDone )
-{
-    RegionCommonSetBandTxDone( txDone->Joined, &NvmCtx.Bands[NvmCtx.Channels[txDone->Channel].Band], txDone->LastTxDoneTime );
-}
-
-void RegionKR920InitDefaults( InitDefaultsParams_t* params )
-{
-    Band_t bands[KR920_MAX_NB_BANDS] =
-    {
-        KR920_BAND0
-    };
-
-    switch( params->Type )
-    {
-        case INIT_TYPE_BANDS:
-        {
-            // Initialize bands
-            memcpy1( ( uint8_t* )NvmCtx.Bands, ( uint8_t* )bands, sizeof( Band_t ) * KR920_MAX_NB_BANDS );
-            break;
-        }
-        case INIT_TYPE_INIT:
-        {
-            // Channels
-            NvmCtx.Channels[0] = ( ChannelParams_t ) KR920_LC1;
-            NvmCtx.Channels[1] = ( ChannelParams_t ) KR920_LC2;
-            NvmCtx.Channels[2] = ( ChannelParams_t ) KR920_LC3;
-
-            // Initialize the channels default mask
-            NvmCtx.ChannelsDefaultMask[0] = LC( 1 ) + LC( 2 ) + LC( 3 );
-
-            // Update the channels mask
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, NvmCtx.ChannelsDefaultMask, 1 );
-            break;
-        }
-        case INIT_TYPE_RESTORE_CTX:
-        {
-            if( params->NvmCtx != 0 )
-            {
-                memcpy1( (uint8_t*) &NvmCtx, (uint8_t*) params->NvmCtx, sizeof( NvmCtx ) );
-            }
-            break;
-        }
-        case INIT_TYPE_RESTORE_DEFAULT_CHANNELS:
-        {
-            // Restore channels default mask
-            NvmCtx.ChannelsMask[0] |= NvmCtx.ChannelsDefaultMask[0];
-
-            // Channels
-            NvmCtx.Channels[0] = ( ChannelParams_t ) KR920_LC1;
-            NvmCtx.Channels[1] = ( ChannelParams_t ) KR920_LC2;
-            NvmCtx.Channels[2] = ( ChannelParams_t ) KR920_LC3;
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-}
-
-void* RegionKR920GetNvmCtx( GetNvmCtxParams_t* params )
-{
-    params->nvmCtxSize = sizeof( RegionKR920NvmCtx_t );
-    return &NvmCtx;
-}
-
-bool RegionKR920Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute )
-{
-    switch( phyAttribute )
-    {
-        case PHY_FREQUENCY:
-        {
-            return VerifyRfFreq( verify->Frequency );
-        }
-        case PHY_TX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, KR920_TX_MIN_DATARATE, KR920_TX_MAX_DATARATE );
-        }
-        case PHY_DEF_TX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, DR_0, DR_5 );
-        }
-        case PHY_RX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, KR920_RX_MIN_DATARATE, KR920_RX_MAX_DATARATE );
-        }
-        case PHY_DEF_TX_POWER:
-        case PHY_TX_POWER:
-        {
-            // Remark: switched min and max!
-            return RegionCommonValueInRange( verify->TxPower, KR920_MAX_TX_POWER, KR920_MIN_TX_POWER );
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            return KR920_DUTY_CYCLE_ENABLED;
-        }
-        default:
-            return false;
-    }
-}
-
-void RegionKR920ApplyCFList( ApplyCFListParams_t* applyCFList )
-{
-    ChannelParams_t newChannel;
-    ChannelAddParams_t channelAdd;
-    ChannelRemoveParams_t channelRemove;
-
-    // Setup default datarate range
-    newChannel.DrRange.Value = ( DR_5 << 4 ) | DR_0;
-
-    // Size of the optional CF list
-    if( applyCFList->Size != 16 )
-    {
-        return;
-    }
-
-    // Last byte CFListType must be 0 to indicate the CFList contains a list of frequencies
-    if( applyCFList->Payload[15] != 0 )
-    {
-        return;
-    }
-
-    // Last byte is RFU, don't take it into account
-    for( uint8_t i = 0, chanIdx = KR920_NUMB_DEFAULT_CHANNELS; chanIdx < KR920_MAX_NB_CHANNELS; i+=3, chanIdx++ )
-    {
-        if( chanIdx < ( KR920_NUMB_CHANNELS_CF_LIST + KR920_NUMB_DEFAULT_CHANNELS ) )
-        {
-            // Channel frequency
-            newChannel.Frequency = (uint32_t) applyCFList->Payload[i];
-            newChannel.Frequency |= ( (uint32_t) applyCFList->Payload[i + 1] << 8 );
-            newChannel.Frequency |= ( (uint32_t) applyCFList->Payload[i + 2] << 16 );
-            newChannel.Frequency *= 100;
-
-            // Initialize alternative frequency to 0
-            newChannel.Rx1Frequency = 0;
-        }
-        else
-        {
-            newChannel.Frequency = 0;
-            newChannel.DrRange.Value = 0;
-            newChannel.Rx1Frequency = 0;
-        }
-
-        if( newChannel.Frequency != 0 )
-        {
-            channelAdd.NewChannel = &newChannel;
-            channelAdd.ChannelId = chanIdx;
-
-            // Try to add all channels
-            RegionKR920ChannelAdd( &channelAdd );
-        }
-        else
-        {
-            channelRemove.ChannelId = chanIdx;
-
-            RegionKR920ChannelsRemove( &channelRemove );
-        }
-    }
-}
-
-bool RegionKR920ChanMaskSet( ChanMaskSetParams_t* chanMaskSet )
-{
-    switch( chanMaskSet->ChannelsMaskType )
-    {
-        case CHANNELS_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, chanMaskSet->ChannelsMaskIn, 1 );
-            break;
-        }
-        case CHANNELS_DEFAULT_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsDefaultMask, chanMaskSet->ChannelsMaskIn, 1 );
-            break;
-        }
-        default:
-            return false;
-    }
-    return true;
-}
-
-void RegionKR920ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams )
-{
-    double tSymbol = 0.0;
-
-    // Get the datarate, perform a boundary check
-    rxConfigParams->Datarate = MIN( datarate, KR920_RX_MAX_DATARATE );
-    rxConfigParams->Bandwidth = GetBandwidth( rxConfigParams->Datarate );
-
-    tSymbol = RegionCommonComputeSymbolTimeLoRa( DataratesKR920[rxConfigParams->Datarate], BandwidthsKR920[rxConfigParams->Datarate] );
-
-    RegionCommonComputeRxWindowParameters( tSymbol, minRxSymbols, rxError, Radio.GetWakeupTime( ), &rxConfigParams->WindowTimeout, &rxConfigParams->WindowOffset );
-}
-
-bool RegionKR920RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate )
-{
-    int8_t dr = rxConfig->Datarate;
-    int8_t phyDr = 0;
-    uint32_t frequency = rxConfig->Frequency;
-
-    if( Radio.GetStatus( ) != RF_IDLE )
-    {
-        return false;
-    }
-
-    if( rxConfig->RxSlot == RX_SLOT_WIN_1 )
-    {
-        // Apply window 1 frequency
-        frequency = NvmCtx.Channels[rxConfig->Channel].Frequency;
-        // Apply the alternative RX 1 window frequency, if it is available
-        if( NvmCtx.Channels[rxConfig->Channel].Rx1Frequency != 0 )
-        {
-            frequency = NvmCtx.Channels[rxConfig->Channel].Rx1Frequency;
-        }
-    }
-
-    // Read the physical datarate from the datarates table
-    phyDr = DataratesKR920[dr];
-
-    Radio.SetChannel( frequency );
-
-    // Radio configuration
-    Radio.SetRxConfig( MODEM_LORA, rxConfig->Bandwidth, phyDr, 1, 0, 8, rxConfig->WindowTimeout, false, 0, false, 0, 0, true, rxConfig->RxContinuous );
-    Radio.SetMaxPayloadLength( MODEM_LORA, MaxPayloadOfDatarateKR920[dr] + LORA_MAC_FRMPAYLOAD_OVERHEAD );
-
-    *datarate = (uint8_t) dr;
-    return true;
-}
-
-bool RegionKR920TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir )
-{
-    int8_t phyDr = DataratesKR920[txConfig->Datarate];
-    int8_t txPowerLimited = LimitTxPower( txConfig->TxPower, NvmCtx.Bands[NvmCtx.Channels[txConfig->Channel].Band].TxMaxPower, txConfig->Datarate, NvmCtx.ChannelsMask );
-    uint32_t bandwidth = GetBandwidth( txConfig->Datarate );
-    float maxEIRP = GetMaxEIRP( NvmCtx.Channels[txConfig->Channel].Frequency );
-    int8_t phyTxPower = 0;
-
-    // Take the minimum between the maxEIRP and txConfig->MaxEirp.
-    // The value of txConfig->MaxEirp could have changed during runtime, e.g. due to a MAC command.
-    maxEIRP = MIN( txConfig->MaxEirp, maxEIRP );
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, maxEIRP, txConfig->AntennaGain );
-
-    // Setup the radio frequency
-    Radio.SetChannel( NvmCtx.Channels[txConfig->Channel].Frequency );
-
-    Radio.SetTxConfig( MODEM_LORA, phyTxPower, 0, bandwidth, phyDr, 1, 8, false, true, 0, 0, false, 4000 );
-
-    // Setup maximum payload lenght of the radio driver
-    Radio.SetMaxPayloadLength( MODEM_LORA, txConfig->PktLen );
-    // Get the time-on-air of the next tx frame
-    *txTimeOnAir = Radio.TimeOnAir( MODEM_LORA, txConfig->PktLen );
-
-    *txPower = txPowerLimited;
-    return true;
-}
-
-uint8_t RegionKR920LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed )
-{
-    uint8_t status = 0x07;
-    RegionCommonLinkAdrParams_t linkAdrParams;
-    uint8_t nextIndex = 0;
-    uint8_t bytesProcessed = 0;
-    uint16_t chMask = 0;
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-    RegionCommonLinkAdrReqVerifyParams_t linkAdrVerifyParams;
-
-    while( bytesProcessed < linkAdrReq->PayloadSize )
-    {
-        // Get ADR request parameters
-        nextIndex = RegionCommonParseLinkAdrReq( &( linkAdrReq->Payload[bytesProcessed] ), &linkAdrParams );
-
-        if( nextIndex == 0 )
-            break; // break loop, since no more request has been found
-
-        // Update bytes processed
-        bytesProcessed += nextIndex;
-
-        // Revert status, as we only check the last ADR request for the channel mask KO
-        status = 0x07;
-
-        // Setup temporary channels mask
-        chMask = linkAdrParams.ChMask;
-
-        // Verify channels mask
-        if( ( linkAdrParams.ChMaskCtrl == 0 ) && ( chMask == 0 ) )
-        {
-            status &= 0xFE; // Channel mask KO
-        }
-        else if( ( ( linkAdrParams.ChMaskCtrl >= 1 ) && ( linkAdrParams.ChMaskCtrl <= 5 )) ||
-                ( linkAdrParams.ChMaskCtrl >= 7 ) )
-        {
-            // RFU
-            status &= 0xFE; // Channel mask KO
-        }
-        else
-        {
-            for( uint8_t i = 0; i < KR920_MAX_NB_CHANNELS; i++ )
-            {
-                if( linkAdrParams.ChMaskCtrl == 6 )
-                {
-                    if( NvmCtx.Channels[i].Frequency != 0 )
-                    {
-                        chMask |= 1 << i;
-                    }
-                }
-                else
-                {
-                    if( ( ( chMask & ( 1 << i ) ) != 0 ) &&
-                        ( NvmCtx.Channels[i].Frequency == 0 ) )
-                    {// Trying to enable an undefined channel
-                        status &= 0xFE; // Channel mask KO
-                    }
-                }
-            }
-        }
-    }
-
-    // Get the minimum possible datarate
-    getPhy.Attribute = PHY_MIN_TX_DR;
-    getPhy.UplinkDwellTime = linkAdrReq->UplinkDwellTime;
-    phyParam = RegionKR920GetPhyParam( &getPhy );
-
-    linkAdrVerifyParams.Status = status;
-    linkAdrVerifyParams.AdrEnabled = linkAdrReq->AdrEnabled;
-    linkAdrVerifyParams.Datarate = linkAdrParams.Datarate;
-    linkAdrVerifyParams.TxPower = linkAdrParams.TxPower;
-    linkAdrVerifyParams.NbRep = linkAdrParams.NbRep;
-    linkAdrVerifyParams.CurrentDatarate = linkAdrReq->CurrentDatarate;
-    linkAdrVerifyParams.CurrentTxPower = linkAdrReq->CurrentTxPower;
-    linkAdrVerifyParams.CurrentNbRep = linkAdrReq->CurrentNbRep;
-    linkAdrVerifyParams.NbChannels = KR920_MAX_NB_CHANNELS;
-    linkAdrVerifyParams.ChannelsMask = &chMask;
-    linkAdrVerifyParams.MinDatarate = ( int8_t )phyParam.Value;
-    linkAdrVerifyParams.MaxDatarate = KR920_TX_MAX_DATARATE;
-    linkAdrVerifyParams.Channels = NvmCtx.Channels;
-    linkAdrVerifyParams.MinTxPower = KR920_MIN_TX_POWER;
-    linkAdrVerifyParams.MaxTxPower = KR920_MAX_TX_POWER;
-    linkAdrVerifyParams.Version = linkAdrReq->Version;
-
-    // Verify the parameters and update, if necessary
-    status = RegionCommonLinkAdrReqVerifyParams( &linkAdrVerifyParams, &linkAdrParams.Datarate, &linkAdrParams.TxPower, &linkAdrParams.NbRep );
-
-    // Update channelsMask if everything is correct
-    if( status == 0x07 )
-    {
-        // Set the channels mask to a default value
-        memset1( ( uint8_t* ) NvmCtx.ChannelsMask, 0, sizeof( NvmCtx.ChannelsMask ) );
-        // Update the channels mask
-        NvmCtx.ChannelsMask[0] = chMask;
-    }
-
-    // Update status variables
-    *drOut = linkAdrParams.Datarate;
-    *txPowOut = linkAdrParams.TxPower;
-    *nbRepOut = linkAdrParams.NbRep;
-    *nbBytesParsed = bytesProcessed;
-
-    return status;
-}
-
-uint8_t RegionKR920RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq )
-{
-    uint8_t status = 0x07;
-
-    // Verify radio frequency
-    if( VerifyRfFreq( rxParamSetupReq->Frequency ) == false )
-    {
-        status &= 0xFE; // Channel frequency KO
-    }
-
-    // Verify datarate
-    if( RegionCommonValueInRange( rxParamSetupReq->Datarate, KR920_RX_MIN_DATARATE, KR920_RX_MAX_DATARATE ) == false )
-    {
-        status &= 0xFD; // Datarate KO
-    }
-
-    // Verify datarate offset
-    if( RegionCommonValueInRange( rxParamSetupReq->DrOffset, KR920_MIN_RX1_DR_OFFSET, KR920_MAX_RX1_DR_OFFSET ) == false )
-    {
-        status &= 0xFB; // Rx1DrOffset range KO
-    }
-
-    return status;
-}
-
-uint8_t RegionKR920NewChannelReq( NewChannelReqParams_t* newChannelReq )
-{
-    uint8_t status = 0x03;
-    ChannelAddParams_t channelAdd;
-    ChannelRemoveParams_t channelRemove;
-
-    if( newChannelReq->NewChannel->Frequency == 0 )
-    {
-        channelRemove.ChannelId = newChannelReq->ChannelId;
-
-        // Remove
-        if( RegionKR920ChannelsRemove( &channelRemove ) == false )
-        {
-            status &= 0xFC;
-        }
-    }
-    else
-    {
-        channelAdd.NewChannel = newChannelReq->NewChannel;
-        channelAdd.ChannelId = newChannelReq->ChannelId;
-
-        switch( RegionKR920ChannelAdd( &channelAdd ) )
-        {
-            case LORAMAC_STATUS_OK:
-            {
-                break;
-            }
-            case LORAMAC_STATUS_FREQUENCY_INVALID:
-            {
-                status &= 0xFE;
-                break;
-            }
-            case LORAMAC_STATUS_DATARATE_INVALID:
-            {
-                status &= 0xFD;
-                break;
-            }
-            case LORAMAC_STATUS_FREQ_AND_DR_INVALID:
-            {
-                status &= 0xFC;
-                break;
-            }
-            default:
-            {
-                status &= 0xFC;
-                break;
-            }
-        }
-    }
-
-    return status;
-}
-
-int8_t RegionKR920TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq )
-{
-    return -1;
-}
-
-uint8_t RegionKR920DlChannelReq( DlChannelReqParams_t* dlChannelReq )
-{
-    uint8_t status = 0x03;
-
-    // Verify if the frequency is supported
-    if( VerifyRfFreq( dlChannelReq->Rx1Frequency ) == false )
-    {
-        status &= 0xFE;
-    }
-
-    // Verify if an uplink frequency exists
-    if( NvmCtx.Channels[dlChannelReq->ChannelId].Frequency == 0 )
-    {
-        status &= 0xFD;
-    }
-
-    // Apply Rx1 frequency, if the status is OK
-    if( status == 0x03 )
-    {
-        NvmCtx.Channels[dlChannelReq->ChannelId].Rx1Frequency = dlChannelReq->Rx1Frequency;
-    }
-
-    return status;
-}
-
-int8_t RegionKR920AlternateDr( int8_t currentDr, AlternateDrType_t type )
-{
-    return currentDr;
-}
-
-void RegionKR920CalcBackOff( CalcBackOffParams_t* calcBackOff )
-{
-    RegionCommonCalcBackOffParams_t calcBackOffParams;
-
-    calcBackOffParams.Channels = NvmCtx.Channels;
-    calcBackOffParams.Bands = NvmCtx.Bands;
-    calcBackOffParams.LastTxIsJoinRequest = calcBackOff->LastTxIsJoinRequest;
-    calcBackOffParams.Joined = calcBackOff->Joined;
-    calcBackOffParams.DutyCycleEnabled = calcBackOff->DutyCycleEnabled;
-    calcBackOffParams.Channel = calcBackOff->Channel;
-    calcBackOffParams.ElapsedTime = calcBackOff->ElapsedTime;
-    calcBackOffParams.TxTimeOnAir = calcBackOff->TxTimeOnAir;
-
-    RegionCommonCalcBackOff( &calcBackOffParams );
-}
-
-LoRaMacStatus_t RegionKR920NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff )
-{
-    uint8_t channelNext = 0;
-    uint8_t nbEnabledChannels = 0;
-    uint8_t nbRestrictedChannels = 0;
-    uint8_t enabledChannels[KR920_MAX_NB_CHANNELS] = { 0 };
-    RegionCommonIdentifyChannelsParam_t identifyChannelsParam;
-    RegionCommonCountNbOfEnabledChannelsParams_t countChannelsParams;
-    LoRaMacStatus_t status = LORAMAC_STATUS_NO_CHANNEL_FOUND;
-
-    if( RegionCommonCountChannels( NvmCtx.ChannelsMask, 0, 1 ) == 0 )
-    { // Reactivate default channels
-        NvmCtx.ChannelsMask[0] |= LC( 1 ) + LC( 2 ) + LC( 3 );
-    }
-
-    // Search how many channels are enabled
-    countChannelsParams.Joined = nextChanParams->Joined;
-    countChannelsParams.Datarate = nextChanParams->Datarate;
-    countChannelsParams.ChannelsMask = NvmCtx.ChannelsMask;
-    countChannelsParams.Channels = NvmCtx.Channels;
-    countChannelsParams.Bands = NvmCtx.Bands;
-    countChannelsParams.MaxNbChannels = KR920_MAX_NB_CHANNELS;
-    countChannelsParams.JoinChannels = KR920_JOIN_CHANNELS;
-
-    identifyChannelsParam.AggrTimeOff = nextChanParams->AggrTimeOff;
-    identifyChannelsParam.LastAggrTx = nextChanParams->LastAggrTx;
-    identifyChannelsParam.DutyCycleEnabled = nextChanParams->DutyCycleEnabled;
-    identifyChannelsParam.MaxBands = KR920_MAX_NB_BANDS;
-
-    identifyChannelsParam.CountNbOfEnabledChannelsParam = &countChannelsParams;
-
-    status = RegionCommonIdentifyChannels( &identifyChannelsParam, aggregatedTimeOff, enabledChannels,
-                                           &nbEnabledChannels, &nbRestrictedChannels, time );
-
-    if( nextChanParams->QueryNextTxDelayOnly == true )
-    {
-        return status;
-    }
-
-    if( status == LORAMAC_STATUS_OK )
-    {
-        for( uint8_t  i = 0, j = randr( 0, nbEnabledChannels - 1 ); i < KR920_MAX_NB_CHANNELS; i++ )
-        {
-            channelNext = enabledChannels[j];
-            j = ( j + 1 ) % nbEnabledChannels;
-
-            // Perform carrier sense for KR920_CARRIER_SENSE_TIME
-            // If the channel is free, we can stop the LBT mechanism
-            if( Radio.IsChannelFree( MODEM_LORA, NvmCtx.Channels[channelNext].Frequency, KR920_RSSI_FREE_TH, KR920_CARRIER_SENSE_TIME ) == true )
-            {
-                // Free channel found
-                *channel = channelNext;
-                return LORAMAC_STATUS_OK;
-            }
-        }
-        // Even if one or more channels are available according to the channel plan, no free channel
-        // was found during the LBT procedure.
-        status = LORAMAC_STATUS_NO_FREE_CHANNEL_FOUND;
-    }
-    else if( status == LORAMAC_STATUS_NO_CHANNEL_FOUND )
-    {
-        // Datarate not supported by any channel, restore defaults
-        NvmCtx.ChannelsMask[0] |= LC( 1 ) + LC( 2 ) + LC( 3 );
-    }
-    return status;
-}
-
-LoRaMacStatus_t RegionKR920ChannelAdd( ChannelAddParams_t* channelAdd )
-{
-    bool drInvalid = false;
-    bool freqInvalid = false;
-    uint8_t id = channelAdd->ChannelId;
-
-    if( id < KR920_NUMB_DEFAULT_CHANNELS )
-    {
-        return LORAMAC_STATUS_FREQ_AND_DR_INVALID;
-    }
-
-    if( id >= KR920_MAX_NB_CHANNELS )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-
-    // Validate the datarate range
-    if( RegionCommonValueInRange( channelAdd->NewChannel->DrRange.Fields.Min, KR920_TX_MIN_DATARATE, KR920_TX_MAX_DATARATE ) == false )
-    {
-        drInvalid = true;
-    }
-    if( RegionCommonValueInRange( channelAdd->NewChannel->DrRange.Fields.Max, KR920_TX_MIN_DATARATE, KR920_TX_MAX_DATARATE ) == false )
-    {
-        drInvalid = true;
-    }
-    if( channelAdd->NewChannel->DrRange.Fields.Min > channelAdd->NewChannel->DrRange.Fields.Max )
-    {
-        drInvalid = true;
-    }
-
-    // Check frequency
-    if( freqInvalid == false )
-    {
-        if( VerifyRfFreq( channelAdd->NewChannel->Frequency ) == false )
-        {
-            freqInvalid = true;
-        }
-    }
-
-    // Check status
-    if( ( drInvalid == true ) && ( freqInvalid == true ) )
-    {
-        return LORAMAC_STATUS_FREQ_AND_DR_INVALID;
-    }
-    if( drInvalid == true )
-    {
-        return LORAMAC_STATUS_DATARATE_INVALID;
-    }
-    if( freqInvalid == true )
-    {
-        return LORAMAC_STATUS_FREQUENCY_INVALID;
-    }
-
-    memcpy1( ( uint8_t* ) &(NvmCtx.Channels[id]), ( uint8_t* ) channelAdd->NewChannel, sizeof( NvmCtx.Channels[id] ) );
-    NvmCtx.Channels[id].Band = 0;
-    NvmCtx.ChannelsMask[0] |= ( 1 << id );
-    return LORAMAC_STATUS_OK;
-}
-
-bool RegionKR920ChannelsRemove( ChannelRemoveParams_t* channelRemove  )
-{
-    uint8_t id = channelRemove->ChannelId;
-
-    if( id < KR920_NUMB_DEFAULT_CHANNELS )
-    {
-        return false;
-    }
-
-    // Remove the channel from the list of channels
-    NvmCtx.Channels[id] = ( ChannelParams_t ){ 0, 0, { 0 }, 0 };
-
-    return RegionCommonChanDisable( NvmCtx.ChannelsMask, id, KR920_MAX_NB_CHANNELS );
-}
-
-void RegionKR920SetContinuousWave( ContinuousWaveParams_t* continuousWave )
-{
-    int8_t txPowerLimited = LimitTxPower( continuousWave->TxPower, NvmCtx.Bands[NvmCtx.Channels[continuousWave->Channel].Band].TxMaxPower, continuousWave->Datarate, NvmCtx.ChannelsMask );
-    float maxEIRP = GetMaxEIRP( NvmCtx.Channels[continuousWave->Channel].Frequency );
-    int8_t phyTxPower = 0;
-    uint32_t frequency = NvmCtx.Channels[continuousWave->Channel].Frequency;
-
-    // Take the minimum between the maxEIRP and continuousWave->MaxEirp.
-    // The value of continuousWave->MaxEirp could have changed during runtime, e.g. due to a MAC command.
-    maxEIRP = MIN( continuousWave->MaxEirp, maxEIRP );
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, maxEIRP, continuousWave->AntennaGain );
-
-    Radio.SetTxContinuousWave( frequency, phyTxPower, continuousWave->Timeout );
-}
-
-uint8_t RegionKR920ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset )
-{
-    int8_t datarate = dr - drOffset;
-
-    if( datarate < 0 )
-    {
-        datarate = DR_0;
-    }
-    return datarate;
-}
-
-void RegionKR920RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr )
-{
-    RegionCommonRxBeaconSetupParams_t regionCommonRxBeaconSetup;
-
-    regionCommonRxBeaconSetup.Datarates = DataratesKR920;
-    regionCommonRxBeaconSetup.Frequency = rxBeaconSetup->Frequency;
-    regionCommonRxBeaconSetup.BeaconSize = KR920_BEACON_SIZE;
-    regionCommonRxBeaconSetup.BeaconDatarate = KR920_BEACON_CHANNEL_DR;
-    regionCommonRxBeaconSetup.BeaconChannelBW = KR920_BEACON_CHANNEL_BW;
-    regionCommonRxBeaconSetup.RxTime = rxBeaconSetup->RxTime;
-    regionCommonRxBeaconSetup.SymbolTimeout = rxBeaconSetup->SymbolTimeout;
-
-    RegionCommonRxBeaconSetup( &regionCommonRxBeaconSetup );
-
-    // Store downlink datarate
-    *outDr = KR920_BEACON_CHANNEL_DR;
-}
diff --git a/mac/region/RegionKR920.h b/mac/region/RegionKR920.h
deleted file mode 100644
index d643907..0000000
--- a/mac/region/RegionKR920.h
+++ /dev/null
@@ -1,525 +0,0 @@
-/*!
- * \file      RegionKR920.h
- *
- * \brief     Region definition for KR920
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * \defgroup  REGIONKR920 Region KR920
- *            Implementation according to LoRaWAN Specification v1.0.2.
- * \{
- */
-#ifndef __REGION_KR920_H__
-#define __REGION_KR920_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include "region/Region.h"
-
-/*!
- * LoRaMac maximum number of channels
- */
-#define KR920_MAX_NB_CHANNELS                       16
-
-/*!
- * Number of default channels
- */
-#define KR920_NUMB_DEFAULT_CHANNELS                 3
-
-/*!
- * Number of channels to apply for the CF list
- */
-#define KR920_NUMB_CHANNELS_CF_LIST                 5
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define KR920_TX_MIN_DATARATE                       DR_0
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define KR920_TX_MAX_DATARATE                       DR_5
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define KR920_RX_MIN_DATARATE                       DR_0
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define KR920_RX_MAX_DATARATE                       DR_5
-
-/*!
- * Default datarate used by the node
- */
-#define KR920_DEFAULT_DATARATE                      DR_0
-
-/*!
- * Minimal Rx1 receive datarate offset
- */
-#define KR920_MIN_RX1_DR_OFFSET                     0
-
-/*!
- * Maximal Rx1 receive datarate offset
- */
-#define KR920_MAX_RX1_DR_OFFSET                     5
-
-/*!
- * Default Rx1 receive datarate offset
- */
-#define KR920_DEFAULT_RX1_DR_OFFSET                 0
-
-/*!
- * Minimal Tx output power that can be used by the node
- */
-#define KR920_MIN_TX_POWER                          TX_POWER_7
-
-/*!
- * Maximal Tx output power that can be used by the node
- */
-#define KR920_MAX_TX_POWER                          TX_POWER_0
-
-/*!
- * Default Tx output power used by the node
- */
-#define KR920_DEFAULT_TX_POWER                      TX_POWER_0
-
-/*!
- * Default Max EIRP for frequency 920.9 MHz - 921.9 MHz
- */
-#define KR920_DEFAULT_MAX_EIRP_LOW                  10.0f
-
-/*!
- * Default Max EIRP for frequency 922.1 MHz - 923.3 MHz
- */
-#define KR920_DEFAULT_MAX_EIRP_HIGH                 14.0f
-
-/*!
- * Default antenna gain
- */
-#define KR920_DEFAULT_ANTENNA_GAIN                  2.15f
-
-/*!
- * ADR Ack limit
- */
-#define KR920_ADR_ACK_LIMIT                         64
-
-/*!
- * ADR Ack delay
- */
-#define KR920_ADR_ACK_DELAY                         32
-
-/*!
- * Enabled or disabled the duty cycle
- */
-#define KR920_DUTY_CYCLE_ENABLED                    0
-
-/*!
- * Maximum RX window duration
- */
-#define KR920_MAX_RX_WINDOW                         4000
-
-/*!
- * Receive delay 1
- */
-#define KR920_RECEIVE_DELAY1                        1000
-
-/*!
- * Receive delay 2
- */
-#define KR920_RECEIVE_DELAY2                        2000
-
-/*!
- * Join accept delay 1
- */
-#define KR920_JOIN_ACCEPT_DELAY1                    5000
-
-/*!
- * Join accept delay 2
- */
-#define KR920_JOIN_ACCEPT_DELAY2                    6000
-
-/*!
- * Maximum frame counter gap
- */
-#define KR920_MAX_FCNT_GAP                          16384
-
-/*!
- * Ack timeout
- */
-#define KR920_ACKTIMEOUT                            2000
-
-/*!
- * Random ack timeout limits
- */
-#define KR920_ACK_TIMEOUT_RND                       1000
-
-#if ( KR920_DEFAULT_DATARATE > DR_5 )
-#error "A default DR higher than DR_5 may lead to connectivity loss."
-#endif
-
-/*!
- * Second reception window channel frequency definition.
- */
-#define KR920_RX_WND_2_FREQ                         921900000
-
-/*!
- * Second reception window channel datarate definition.
- */
-#define KR920_RX_WND_2_DR                           DR_0
-
-/*
- * CLASS B
- */
-/*!
- * Beacon frequency
- */
-#define KR920_BEACON_CHANNEL_FREQ                   923100000
-
-/*!
- * Payload size of a beacon frame
- */
-#define KR920_BEACON_SIZE                           17
-
-/*!
- * Size of RFU 1 field
- */
-#define KR920_RFU1_SIZE                             2
-
-/*!
- * Size of RFU 2 field
- */
-#define KR920_RFU2_SIZE                             0
-
-/*!
- * Datarate of the beacon channel
- */
-#define KR920_BEACON_CHANNEL_DR                     DR_3
-
-/*!
- * Bandwith of the beacon channel
- */
-#define KR920_BEACON_CHANNEL_BW                     0
-
-/*!
- * Ping slot channel datarate
- */
-#define KR920_PING_SLOT_CHANNEL_DR                  DR_3
-
-/*!
- * Maximum number of bands
- */
-#define KR920_MAX_NB_BANDS                          1
-
-/*!
- * Band 0 definition
- * { DutyCycle, TxMaxPower, LastJoinTxDoneTime, LastTxDoneTime, TimeOff }
- */
-#define KR920_BAND0                                 { 1 , KR920_MAX_TX_POWER, 0, 0, 0 } //  100.0 %
-
-/*!
- * LoRaMac default channel 1
- * Channel = { Frequency [Hz], RX1 Frequency [Hz], { ( ( DrMax << 4 ) | DrMin ) }, Band }
- */
-#define KR920_LC1                                   { 922100000, 0, { ( ( DR_5 << 4 ) | DR_0 ) }, 0 }
-
-/*!
- * LoRaMac default channel 2
- * Channel = { Frequency [Hz], RX1 Frequency [Hz], { ( ( DrMax << 4 ) | DrMin ) }, Band }
- */
-#define KR920_LC2                                   { 922300000, 0, { ( ( DR_5 << 4 ) | DR_0 ) }, 0 }
-
-/*!
- * LoRaMac default channel 3
- * Channel = { Frequency [Hz], RX1 Frequency [Hz], { ( ( DrMax << 4 ) | DrMin ) }, Band }
- */
-#define KR920_LC3                                   { 922500000, 0, { ( ( DR_5 << 4 ) | DR_0 ) }, 0 }
-
-/*!
- * LoRaMac channels which are allowed for the join procedure
- */
-#define KR920_JOIN_CHANNELS                         ( uint16_t )( LC( 1 ) | LC( 2 ) | LC( 3 ) )
-
-/*!
- * RSSI threshold for a free channel [dBm]
- */
-#define KR920_RSSI_FREE_TH                          -65
-
-/*!
- * Specifies the time the node performs a carrier sense
- */
-#define KR920_CARRIER_SENSE_TIME                    6
-
-/*!
- * Data rates table definition
- */
-static const uint8_t DataratesKR920[]  = { 12, 11, 10,  9,  8,  7 };
-
-/*!
- * Bandwidths table definition in Hz
- */
-static const uint32_t BandwidthsKR920[] = { 125000, 125000, 125000, 125000, 125000, 125000 };
-
-/*!
- * Maximum payload with respect to the datarate index.
- */
-static const uint8_t MaxPayloadOfDatarateKR920[] = { 51, 51, 51, 115, 242, 242 };
-
-/*!
- * \brief The function gets a value of a specific phy attribute.
- *
- * \param [IN] getPhy Pointer to the function parameters.
- *
- * \retval Returns a structure containing the PHY parameter.
- */
-PhyParam_t RegionKR920GetPhyParam( GetPhyParams_t* getPhy );
-
-/*!
- * \brief Updates the last TX done parameters of the current channel.
- *
- * \param [IN] txDone Pointer to the function parameters.
- */
-void RegionKR920SetBandTxDone( SetBandTxDoneParams_t* txDone );
-
-/*!
- * \brief Initializes the channels masks and the channels.
- *
- * \param [IN] type Sets the initialization type.
- */
-void RegionKR920InitDefaults( InitDefaultsParams_t* params );
-
-/*!
- * \brief Returns a pointer to the internal context and its size.
- *
- * \param [OUT] params Pointer to the function parameters.
- *
- * \retval      Points to a structure where the module store its non-volatile context.
- */
-void* RegionKR920GetNvmCtx( GetNvmCtxParams_t* params );
-
-/*!
- * \brief Verifies a parameter.
- *
- * \param [IN] verify Pointer to the function parameters.
- *
- * \param [IN] type Sets the initialization type.
- *
- * \retval Returns true, if the parameter is valid.
- */
-bool RegionKR920Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute );
-
-/*!
- * \brief The function parses the input buffer and sets up the channels of the
- *        CF list.
- *
- * \param [IN] applyCFList Pointer to the function parameters.
- */
-void RegionKR920ApplyCFList( ApplyCFListParams_t* applyCFList );
-
-/*!
- * \brief Sets a channels mask.
- *
- * \param [IN] chanMaskSet Pointer to the function parameters.
- *
- * \retval Returns true, if the channels mask could be set.
- */
-bool RegionKR920ChanMaskSet( ChanMaskSetParams_t* chanMaskSet );
-
-/*!
- * Computes the Rx window timeout and offset.
- *
- * \param [IN] datarate     Rx window datarate index to be used
- *
- * \param [IN] minRxSymbols Minimum required number of symbols to detect an Rx frame.
- *
- * \param [IN] rxError      System maximum timing error of the receiver. In milliseconds
- *                          The receiver will turn on in a [-rxError : +rxError] ms
- *                          interval around RxOffset
- *
- * \param [OUT]rxConfigParams Returns updated WindowTimeout and WindowOffset fields.
- */
-void RegionKR920ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams );
-
-/*!
- * \brief Configuration of the RX windows.
- *
- * \param [IN] rxConfig Pointer to the function parameters.
- *
- * \param [OUT] datarate The datarate index which was set.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionKR920RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate );
-
-/*!
- * \brief TX configuration.
- *
- * \param [IN] txConfig Pointer to the function parameters.
- *
- * \param [OUT] txPower The tx power index which was set.
- *
- * \param [OUT] txTimeOnAir The time-on-air of the frame.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionKR920TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir );
-
-/*!
- * \brief The function processes a Link ADR Request.
- *
- * \param [IN] linkAdrReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionKR920LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed );
-
-/*!
- * \brief The function processes a RX Parameter Setup Request.
- *
- * \param [IN] rxParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionKR920RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq );
-
-/*!
- * \brief The function processes a Channel Request.
- *
- * \param [IN] newChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionKR920NewChannelReq( NewChannelReqParams_t* newChannelReq );
-
-/*!
- * \brief The function processes a TX ParamSetup Request.
- *
- * \param [IN] txParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- *         Returns -1, if the functionality is not implemented. In this case, the end node
- *         shall not process the command.
- */
-int8_t RegionKR920TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq );
-
-/*!
- * \brief The function processes a DlChannel Request.
- *
- * \param [IN] dlChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionKR920DlChannelReq( DlChannelReqParams_t* dlChannelReq );
-
-/*!
- * \brief Alternates the datarate of the channel for the join request.
- *
- * \param [IN] currentDr current datarate.
- *
- * \retval Datarate to apply.
- */
-int8_t RegionKR920AlternateDr( int8_t currentDr, AlternateDrType_t type );
-
-/*!
- * \brief Calculates the back-off time.
- *
- * \param [IN] calcBackOff Pointer to the function parameters.
- */
-void RegionKR920CalcBackOff( CalcBackOffParams_t* calcBackOff );
-
-/*!
- * \brief Searches and set the next random available channel
- *
- * \param [OUT] channel Next channel to use for TX.
- *
- * \param [OUT] time Time to wait for the next transmission according to the duty
- *              cycle.
- *
- * \param [OUT] aggregatedTimeOff Updates the aggregated time off.
- *
- * \retval Function status [1: OK, 0: Unable to find a channel on the current datarate]
- */
-LoRaMacStatus_t RegionKR920NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff );
-
-/*!
- * \brief Adds a channel.
- *
- * \param [IN] channelAdd Pointer to the function parameters.
- *
- * \retval Status of the operation.
- */
-LoRaMacStatus_t RegionKR920ChannelAdd( ChannelAddParams_t* channelAdd );
-
-/*!
- * \brief Removes a channel.
- *
- * \param [IN] channelRemove Pointer to the function parameters.
- *
- * \retval Returns true, if the channel was removed successfully.
- */
-bool RegionKR920ChannelsRemove( ChannelRemoveParams_t* channelRemove  );
-
-/*!
- * \brief Sets the radio into continuous wave mode.
- *
- * \param [IN] continuousWave Pointer to the function parameters.
- */
-void RegionKR920SetContinuousWave( ContinuousWaveParams_t* continuousWave );
-
-/*!
- * \brief Computes new datarate according to the given offset
- *
- * \param [IN] downlinkDwellTime Downlink dwell time configuration. 0: No limit, 1: 400ms
- *
- * \param [IN] dr Current datarate
- *
- * \param [IN] drOffset Offset to be applied
- *
- * \retval newDr Computed datarate.
- */
-uint8_t RegionKR920ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset );
-
-/*!
- * \brief Sets the radio into beacon reception mode
- *
- * \param [IN] rxBeaconSetup Pointer to the function parameters
- */
- void RegionKR920RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr );
-
-/*! \} defgroup REGIONKR920 */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __REGION_KR920_H__
diff --git a/mac/region/RegionRU864.c b/mac/region/RegionRU864.c
deleted file mode 100644
index de55aa3..0000000
--- a/mac/region/RegionRU864.c
+++ /dev/null
@@ -1,966 +0,0 @@
-/*!
- * \file      RegionRU864.c
- *
- * \brief     Region implementation for RU864
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
-*/
-#include "utilities.h"
-
-#include "RegionCommon.h"
-#include "RegionRU864.h"
-
-// Definitions
-#define CHANNELS_MASK_SIZE              1
-
-/*!
- * Region specific context
- */
-typedef struct sRegionRU864NvmCtx
-{
-    /*!
-     * LoRaMAC channels
-     */
-    ChannelParams_t Channels[ RU864_MAX_NB_CHANNELS ];
-    /*!
-     * LoRaMac bands
-     */
-    Band_t Bands[ RU864_MAX_NB_BANDS ];
-    /*!
-     * LoRaMac channels mask
-     */
-    uint16_t ChannelsMask[ CHANNELS_MASK_SIZE ];
-    /*!
-     * LoRaMac channels default mask
-     */
-    uint16_t ChannelsDefaultMask[ CHANNELS_MASK_SIZE ];
-}RegionRU864NvmCtx_t;
-
-/*
- * Non-volatile module context.
- */
-static RegionRU864NvmCtx_t NvmCtx;
-
-// Static functions
-static int8_t GetNextLowerTxDr( int8_t dr, int8_t minDr )
-{
-    uint8_t nextLowerDr = 0;
-
-    if( dr == minDr )
-    {
-        nextLowerDr = minDr;
-    }
-    else
-    {
-        nextLowerDr = dr - 1;
-    }
-    return nextLowerDr;
-}
-
-static uint32_t GetBandwidth( uint32_t drIndex )
-{
-    switch( BandwidthsRU864[drIndex] )
-    {
-        default:
-        case 125000:
-            return 0;
-        case 250000:
-            return 1;
-        case 500000:
-            return 2;
-    }
-}
-
-static int8_t LimitTxPower( int8_t txPower, int8_t maxBandTxPower, int8_t datarate, uint16_t* channelsMask )
-{
-    int8_t txPowerResult = txPower;
-
-    // Limit tx power to the band max
-    txPowerResult =  MAX( txPower, maxBandTxPower );
-
-    return txPowerResult;
-}
-
-static bool VerifyRfFreq( uint32_t freq )
-{
-    // Check radio driver support
-    if( Radio.CheckRfFrequency( freq ) == false )
-    {
-        return false;
-    }
-
-    // Check frequency bands
-    if( ( freq < 864000000 ) ||  ( freq > 870000000 ) )
-    {
-        return false;
-    }
-    return true;
-}
-
-PhyParam_t RegionRU864GetPhyParam( GetPhyParams_t* getPhy )
-{
-    PhyParam_t phyParam = { 0 };
-
-    switch( getPhy->Attribute )
-    {
-        case PHY_MIN_RX_DR:
-        {
-            phyParam.Value = RU864_RX_MIN_DATARATE;
-            break;
-        }
-        case PHY_MIN_TX_DR:
-        {
-            phyParam.Value = RU864_TX_MIN_DATARATE;
-            break;
-        }
-        case PHY_DEF_TX_DR:
-        {
-            phyParam.Value = RU864_DEFAULT_DATARATE;
-            break;
-        }
-        case PHY_NEXT_LOWER_TX_DR:
-        {
-            phyParam.Value = GetNextLowerTxDr( getPhy->Datarate, RU864_TX_MIN_DATARATE );
-            break;
-        }
-        case PHY_MAX_TX_POWER:
-        {
-            phyParam.Value = RU864_MAX_TX_POWER;
-            break;
-        }
-        case PHY_DEF_TX_POWER:
-        {
-            phyParam.Value = RU864_DEFAULT_TX_POWER;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_LIMIT:
-        {
-            phyParam.Value = RU864_ADR_ACK_LIMIT;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_DELAY:
-        {
-            phyParam.Value = RU864_ADR_ACK_DELAY;
-            break;
-        }
-        case PHY_MAX_PAYLOAD:
-        {
-            phyParam.Value = MaxPayloadOfDatarateRU864[getPhy->Datarate];
-            break;
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            phyParam.Value = RU864_DUTY_CYCLE_ENABLED;
-            break;
-        }
-        case PHY_MAX_RX_WINDOW:
-        {
-            phyParam.Value = RU864_MAX_RX_WINDOW;
-            break;
-        }
-        case PHY_RECEIVE_DELAY1:
-        {
-            phyParam.Value = RU864_RECEIVE_DELAY1;
-            break;
-        }
-        case PHY_RECEIVE_DELAY2:
-        {
-            phyParam.Value = RU864_RECEIVE_DELAY2;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY1:
-        {
-            phyParam.Value = RU864_JOIN_ACCEPT_DELAY1;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY2:
-        {
-            phyParam.Value = RU864_JOIN_ACCEPT_DELAY2;
-            break;
-        }
-        case PHY_MAX_FCNT_GAP:
-        {
-            phyParam.Value = RU864_MAX_FCNT_GAP;
-            break;
-        }
-        case PHY_ACK_TIMEOUT:
-        {
-            phyParam.Value = ( RU864_ACKTIMEOUT + randr( -RU864_ACK_TIMEOUT_RND, RU864_ACK_TIMEOUT_RND ) );
-            break;
-        }
-        case PHY_DEF_DR1_OFFSET:
-        {
-            phyParam.Value = RU864_DEFAULT_RX1_DR_OFFSET;
-            break;
-        }
-        case PHY_DEF_RX2_FREQUENCY:
-        {
-            phyParam.Value = RU864_RX_WND_2_FREQ;
-            break;
-        }
-        case PHY_DEF_RX2_DR:
-        {
-            phyParam.Value = RU864_RX_WND_2_DR;
-            break;
-        }
-        case PHY_CHANNELS_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsMask;
-            break;
-        }
-        case PHY_CHANNELS_DEFAULT_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsDefaultMask;
-            break;
-        }
-        case PHY_MAX_NB_CHANNELS:
-        {
-            phyParam.Value = RU864_MAX_NB_CHANNELS;
-            break;
-        }
-        case PHY_CHANNELS:
-        {
-            phyParam.Channels = NvmCtx.Channels;
-            break;
-        }
-        case PHY_DEF_UPLINK_DWELL_TIME:
-        case PHY_DEF_DOWNLINK_DWELL_TIME:
-        {
-            phyParam.Value = 0;
-            break;
-        }
-        case PHY_DEF_MAX_EIRP:
-        {
-            phyParam.fValue = RU864_DEFAULT_MAX_EIRP;
-            break;
-        }
-        case PHY_DEF_ANTENNA_GAIN:
-        {
-            phyParam.fValue = RU864_DEFAULT_ANTENNA_GAIN;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_FREQ:
-        {
-            phyParam.Value = RU864_BEACON_CHANNEL_FREQ;
-            break;
-        }
-        case PHY_BEACON_FORMAT:
-        {
-            phyParam.BeaconFormat.BeaconSize = RU864_BEACON_SIZE;
-            phyParam.BeaconFormat.Rfu1Size = RU864_RFU1_SIZE;
-            phyParam.BeaconFormat.Rfu2Size = RU864_RFU2_SIZE;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_DR:
-        {
-            phyParam.Value = RU864_BEACON_CHANNEL_DR;
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-
-    return phyParam;
-}
-
-void RegionRU864SetBandTxDone( SetBandTxDoneParams_t* txDone )
-{
-    RegionCommonSetBandTxDone( txDone->Joined, &NvmCtx.Bands[NvmCtx.Channels[txDone->Channel].Band], txDone->LastTxDoneTime );
-}
-
-void RegionRU864InitDefaults( InitDefaultsParams_t* params )
-{
-    Band_t bands[RU864_MAX_NB_BANDS] =
-    {
-        RU864_BAND0
-    };
-
-    switch( params->Type )
-    {
-        case INIT_TYPE_BANDS:
-        {
-            // Initialize bands
-            memcpy1( ( uint8_t* )NvmCtx.Bands, ( uint8_t* )bands, sizeof( Band_t ) * RU864_MAX_NB_BANDS );
-            break;
-        }
-        case INIT_TYPE_INIT:
-        {
-            // Channels
-            NvmCtx.Channels[0] = ( ChannelParams_t ) RU864_LC1;
-            NvmCtx.Channels[1] = ( ChannelParams_t ) RU864_LC2;
-
-            // Initialize the channels default mask
-            NvmCtx.ChannelsDefaultMask[0] = LC( 1 ) + LC( 2 );
-            // Update the channels mask
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, NvmCtx.ChannelsDefaultMask, 1 );
-            break;
-        }
-        case INIT_TYPE_RESTORE_CTX:
-        {
-            if( params->NvmCtx != 0 )
-            {
-                memcpy1( (uint8_t*) &NvmCtx, (uint8_t*) params->NvmCtx, sizeof( NvmCtx ) );
-            }
-            break;
-        }
-        case INIT_TYPE_RESTORE_DEFAULT_CHANNELS:
-        {
-            // Restore channels default mask
-            NvmCtx.ChannelsMask[0] |= NvmCtx.ChannelsDefaultMask[0];
-
-            // Channels
-            NvmCtx.Channels[0] = ( ChannelParams_t ) RU864_LC1;
-            NvmCtx.Channels[1] = ( ChannelParams_t ) RU864_LC2;
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-}
-
-void* RegionRU864GetNvmCtx( GetNvmCtxParams_t* params )
-{
-    params->nvmCtxSize = sizeof( RegionRU864NvmCtx_t );
-    return &NvmCtx;
-}
-
-bool RegionRU864Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute )
-{
-    switch( phyAttribute )
-    {
-        case PHY_FREQUENCY:
-        {
-            return VerifyRfFreq( verify->Frequency );
-        }
-        case PHY_TX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, RU864_TX_MIN_DATARATE, RU864_TX_MAX_DATARATE );
-        }
-        case PHY_DEF_TX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, DR_0, DR_5 );
-        }
-        case PHY_RX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, RU864_RX_MIN_DATARATE, RU864_RX_MAX_DATARATE );
-        }
-        case PHY_DEF_TX_POWER:
-        case PHY_TX_POWER:
-        {
-            // Remark: switched min and max!
-            return RegionCommonValueInRange( verify->TxPower, RU864_MAX_TX_POWER, RU864_MIN_TX_POWER );
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            return RU864_DUTY_CYCLE_ENABLED;
-        }
-        default:
-            return false;
-    }
-}
-
-void RegionRU864ApplyCFList( ApplyCFListParams_t* applyCFList )
-{
-    ChannelParams_t newChannel;
-    ChannelAddParams_t channelAdd;
-    ChannelRemoveParams_t channelRemove;
-
-    // Setup default datarate range
-    newChannel.DrRange.Value = ( DR_5 << 4 ) | DR_0;
-
-    // Size of the optional CF list
-    if( applyCFList->Size != 16 )
-    {
-        return;
-    }
-
-    // Last byte CFListType must be 0 to indicate the CFList contains a list of frequencies
-    if( applyCFList->Payload[15] != 0 )
-    {
-        return;
-    }
-
-    // Last byte is RFU, don't take it into account
-    for( uint8_t i = 0, chanIdx = RU864_NUMB_DEFAULT_CHANNELS; chanIdx < RU864_MAX_NB_CHANNELS; i+=3, chanIdx++ )
-    {
-        if( chanIdx < ( RU864_NUMB_CHANNELS_CF_LIST + RU864_NUMB_DEFAULT_CHANNELS ) )
-        {
-            // Channel frequency
-            newChannel.Frequency = (uint32_t) applyCFList->Payload[i];
-            newChannel.Frequency |= ( (uint32_t) applyCFList->Payload[i + 1] << 8 );
-            newChannel.Frequency |= ( (uint32_t) applyCFList->Payload[i + 2] << 16 );
-            newChannel.Frequency *= 100;
-
-            // Initialize alternative frequency to 0
-            newChannel.Rx1Frequency = 0;
-        }
-        else
-        {
-            newChannel.Frequency = 0;
-            newChannel.DrRange.Value = 0;
-            newChannel.Rx1Frequency = 0;
-        }
-
-        if( newChannel.Frequency != 0 )
-        {
-            channelAdd.NewChannel = &newChannel;
-            channelAdd.ChannelId = chanIdx;
-
-            // Try to add all channels
-            RegionRU864ChannelAdd( &channelAdd );
-        }
-        else
-        {
-            channelRemove.ChannelId = chanIdx;
-
-            RegionRU864ChannelsRemove( &channelRemove );
-        }
-    }
-}
-
-bool RegionRU864ChanMaskSet( ChanMaskSetParams_t* chanMaskSet )
-{
-    switch( chanMaskSet->ChannelsMaskType )
-    {
-        case CHANNELS_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, chanMaskSet->ChannelsMaskIn, 1 );
-            break;
-        }
-        case CHANNELS_DEFAULT_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsDefaultMask, chanMaskSet->ChannelsMaskIn, 1 );
-            break;
-        }
-        default:
-            return false;
-    }
-    return true;
-}
-
-void RegionRU864ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams )
-{
-    double tSymbol = 0.0;
-
-    // Get the datarate, perform a boundary check
-    rxConfigParams->Datarate = MIN( datarate, RU864_RX_MAX_DATARATE );
-    rxConfigParams->Bandwidth = GetBandwidth( rxConfigParams->Datarate );
-
-    if( rxConfigParams->Datarate == DR_7 )
-    { // FSK
-        tSymbol = RegionCommonComputeSymbolTimeFsk( DataratesRU864[rxConfigParams->Datarate] );
-    }
-    else
-    { // LoRa
-        tSymbol = RegionCommonComputeSymbolTimeLoRa( DataratesRU864[rxConfigParams->Datarate], BandwidthsRU864[rxConfigParams->Datarate] );
-    }
-
-    RegionCommonComputeRxWindowParameters( tSymbol, minRxSymbols, rxError, Radio.GetWakeupTime( ), &rxConfigParams->WindowTimeout, &rxConfigParams->WindowOffset );
-}
-
-bool RegionRU864RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate )
-{
-    RadioModems_t modem;
-    int8_t dr = rxConfig->Datarate;
-    int8_t phyDr = 0;
-    uint32_t frequency = rxConfig->Frequency;
-
-    if( Radio.GetStatus( ) != RF_IDLE )
-    {
-        return false;
-    }
-
-    if( rxConfig->RxSlot == RX_SLOT_WIN_1 )
-    {
-        // Apply window 1 frequency
-        frequency = NvmCtx.Channels[rxConfig->Channel].Frequency;
-        // Apply the alternative RX 1 window frequency, if it is available
-        if( NvmCtx.Channels[rxConfig->Channel].Rx1Frequency != 0 )
-        {
-            frequency = NvmCtx.Channels[rxConfig->Channel].Rx1Frequency;
-        }
-    }
-
-    // Read the physical datarate from the datarates table
-    phyDr = DataratesRU864[dr];
-
-    Radio.SetChannel( frequency );
-
-    // Radio configuration
-    if( dr == DR_7 )
-    {
-        modem = MODEM_FSK;
-        Radio.SetRxConfig( modem, 50000, phyDr * 1000, 0, 83333, 5, rxConfig->WindowTimeout, false, 0, true, 0, 0, false, rxConfig->RxContinuous );
-    }
-    else
-    {
-        modem = MODEM_LORA;
-        Radio.SetRxConfig( modem, rxConfig->Bandwidth, phyDr, 1, 0, 8, rxConfig->WindowTimeout, false, 0, false, 0, 0, true, rxConfig->RxContinuous );
-    }
-
-    Radio.SetMaxPayloadLength( modem, MaxPayloadOfDatarateRU864[dr] + LORA_MAC_FRMPAYLOAD_OVERHEAD );
-
-    *datarate = (uint8_t) dr;
-    return true;
-}
-
-bool RegionRU864TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir )
-{
-    RadioModems_t modem;
-    int8_t phyDr = DataratesRU864[txConfig->Datarate];
-    int8_t txPowerLimited = LimitTxPower( txConfig->TxPower, NvmCtx.Bands[NvmCtx.Channels[txConfig->Channel].Band].TxMaxPower, txConfig->Datarate, NvmCtx.ChannelsMask );
-    uint32_t bandwidth = GetBandwidth( txConfig->Datarate );
-    int8_t phyTxPower = 0;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, txConfig->MaxEirp, txConfig->AntennaGain );
-
-    // Setup the radio frequency
-    Radio.SetChannel( NvmCtx.Channels[txConfig->Channel].Frequency );
-
-    if( txConfig->Datarate == DR_7 )
-    { // High Speed FSK channel
-        modem = MODEM_FSK;
-        Radio.SetTxConfig( modem, phyTxPower, 25000, bandwidth, phyDr * 1000, 0, 5, false, true, 0, 0, false, 4000 );
-    }
-    else
-    {
-        modem = MODEM_LORA;
-        Radio.SetTxConfig( modem, phyTxPower, 0, bandwidth, phyDr, 1, 8, false, true, 0, 0, false, 4000 );
-    }
-
-    // Setup maximum payload lenght of the radio driver
-    Radio.SetMaxPayloadLength( modem, txConfig->PktLen );
-    // Get the time-on-air of the next tx frame
-    *txTimeOnAir = Radio.TimeOnAir( modem, txConfig->PktLen );
-
-    *txPower = txPowerLimited;
-    return true;
-}
-
-uint8_t RegionRU864LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed )
-{
-    uint8_t status = 0x07;
-    RegionCommonLinkAdrParams_t linkAdrParams;
-    uint8_t nextIndex = 0;
-    uint8_t bytesProcessed = 0;
-    uint16_t chMask = 0;
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-    RegionCommonLinkAdrReqVerifyParams_t linkAdrVerifyParams;
-
-    while( bytesProcessed < linkAdrReq->PayloadSize )
-    {
-        // Get ADR request parameters
-        nextIndex = RegionCommonParseLinkAdrReq( &( linkAdrReq->Payload[bytesProcessed] ), &linkAdrParams );
-
-        if( nextIndex == 0 )
-            break; // break loop, since no more request has been found
-
-        // Update bytes processed
-        bytesProcessed += nextIndex;
-
-        // Revert status, as we only check the last ADR request for the channel mask KO
-        status = 0x07;
-
-        // Setup temporary channels mask
-        chMask = linkAdrParams.ChMask;
-
-        // Verify channels mask
-        if( ( linkAdrParams.ChMaskCtrl == 0 ) && ( chMask == 0 ) )
-        {
-            status &= 0xFE; // Channel mask KO
-        }
-        else if( ( ( linkAdrParams.ChMaskCtrl >= 1 ) && ( linkAdrParams.ChMaskCtrl <= 5 )) ||
-                ( linkAdrParams.ChMaskCtrl >= 7 ) )
-        {
-            // RFU
-            status &= 0xFE; // Channel mask KO
-        }
-        else
-        {
-            for( uint8_t i = 0; i < RU864_MAX_NB_CHANNELS; i++ )
-            {
-                if( linkAdrParams.ChMaskCtrl == 6 )
-                {
-                    if( NvmCtx.Channels[i].Frequency != 0 )
-                    {
-                        chMask |= 1 << i;
-                    }
-                }
-                else
-                {
-                    if( ( ( chMask & ( 1 << i ) ) != 0 ) &&
-                        ( NvmCtx.Channels[i].Frequency == 0 ) )
-                    {// Trying to enable an undefined channel
-                        status &= 0xFE; // Channel mask KO
-                    }
-                }
-            }
-        }
-    }
-
-    // Get the minimum possible datarate
-    getPhy.Attribute = PHY_MIN_TX_DR;
-    getPhy.UplinkDwellTime = linkAdrReq->UplinkDwellTime;
-    phyParam = RegionRU864GetPhyParam( &getPhy );
-
-    linkAdrVerifyParams.Status = status;
-    linkAdrVerifyParams.AdrEnabled = linkAdrReq->AdrEnabled;
-    linkAdrVerifyParams.Datarate = linkAdrParams.Datarate;
-    linkAdrVerifyParams.TxPower = linkAdrParams.TxPower;
-    linkAdrVerifyParams.NbRep = linkAdrParams.NbRep;
-    linkAdrVerifyParams.CurrentDatarate = linkAdrReq->CurrentDatarate;
-    linkAdrVerifyParams.CurrentTxPower = linkAdrReq->CurrentTxPower;
-    linkAdrVerifyParams.CurrentNbRep = linkAdrReq->CurrentNbRep;
-    linkAdrVerifyParams.NbChannels = RU864_MAX_NB_CHANNELS;
-    linkAdrVerifyParams.ChannelsMask = &chMask;
-    linkAdrVerifyParams.MinDatarate = ( int8_t )phyParam.Value;
-    linkAdrVerifyParams.MaxDatarate = RU864_TX_MAX_DATARATE;
-    linkAdrVerifyParams.Channels = NvmCtx.Channels;
-    linkAdrVerifyParams.MinTxPower = RU864_MIN_TX_POWER;
-    linkAdrVerifyParams.MaxTxPower = RU864_MAX_TX_POWER;
-    linkAdrVerifyParams.Version = linkAdrReq->Version;
-
-    // Verify the parameters and update, if necessary
-    status = RegionCommonLinkAdrReqVerifyParams( &linkAdrVerifyParams, &linkAdrParams.Datarate, &linkAdrParams.TxPower, &linkAdrParams.NbRep );
-
-    // Update channelsMask if everything is correct
-    if( status == 0x07 )
-    {
-        // Set the channels mask to a default value
-        memset1( ( uint8_t* ) NvmCtx.ChannelsMask, 0, sizeof( NvmCtx.ChannelsMask ) );
-        // Update the channels mask
-        NvmCtx.ChannelsMask[0] = chMask;
-    }
-
-    // Update status variables
-    *drOut = linkAdrParams.Datarate;
-    *txPowOut = linkAdrParams.TxPower;
-    *nbRepOut = linkAdrParams.NbRep;
-    *nbBytesParsed = bytesProcessed;
-
-    return status;
-}
-
-uint8_t RegionRU864RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq )
-{
-    uint8_t status = 0x07;
-
-    // Verify radio frequency
-    if( VerifyRfFreq( rxParamSetupReq->Frequency ) == false )
-    {
-        status &= 0xFE; // Channel frequency KO
-    }
-
-    // Verify datarate
-    if( RegionCommonValueInRange( rxParamSetupReq->Datarate, RU864_RX_MIN_DATARATE, RU864_RX_MAX_DATARATE ) == false )
-    {
-        status &= 0xFD; // Datarate KO
-    }
-
-    // Verify datarate offset
-    if( RegionCommonValueInRange( rxParamSetupReq->DrOffset, RU864_MIN_RX1_DR_OFFSET, RU864_MAX_RX1_DR_OFFSET ) == false )
-    {
-        status &= 0xFB; // Rx1DrOffset range KO
-    }
-
-    return status;
-}
-
-uint8_t RegionRU864NewChannelReq( NewChannelReqParams_t* newChannelReq )
-{
-    uint8_t status = 0x03;
-    ChannelAddParams_t channelAdd;
-    ChannelRemoveParams_t channelRemove;
-
-    if( newChannelReq->NewChannel->Frequency == 0 )
-    {
-        channelRemove.ChannelId = newChannelReq->ChannelId;
-
-        // Remove
-        if( RegionRU864ChannelsRemove( &channelRemove ) == false )
-        {
-            status &= 0xFC;
-        }
-    }
-    else
-    {
-        channelAdd.NewChannel = newChannelReq->NewChannel;
-        channelAdd.ChannelId = newChannelReq->ChannelId;
-
-        switch( RegionRU864ChannelAdd( &channelAdd ) )
-        {
-            case LORAMAC_STATUS_OK:
-            {
-                break;
-            }
-            case LORAMAC_STATUS_FREQUENCY_INVALID:
-            {
-                status &= 0xFE;
-                break;
-            }
-            case LORAMAC_STATUS_DATARATE_INVALID:
-            {
-                status &= 0xFD;
-                break;
-            }
-            case LORAMAC_STATUS_FREQ_AND_DR_INVALID:
-            {
-                status &= 0xFC;
-                break;
-            }
-            default:
-            {
-                status &= 0xFC;
-                break;
-            }
-        }
-    }
-
-    return status;
-}
-
-int8_t RegionRU864TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq )
-{
-    return -1;
-}
-
-uint8_t RegionRU864DlChannelReq( DlChannelReqParams_t* dlChannelReq )
-{
-    uint8_t status = 0x03;
-
-    // Verify if the frequency is supported
-    if( VerifyRfFreq( dlChannelReq->Rx1Frequency ) == false )
-    {
-        status &= 0xFE;
-    }
-
-    // Verify if an uplink frequency exists
-    if( NvmCtx.Channels[dlChannelReq->ChannelId].Frequency == 0 )
-    {
-        status &= 0xFD;
-    }
-
-    // Apply Rx1 frequency, if the status is OK
-    if( status == 0x03 )
-    {
-        NvmCtx.Channels[dlChannelReq->ChannelId].Rx1Frequency = dlChannelReq->Rx1Frequency;
-    }
-
-    return status;
-}
-
-int8_t RegionRU864AlternateDr( int8_t currentDr, AlternateDrType_t type )
-{
-    return currentDr;
-}
-
-void RegionRU864CalcBackOff( CalcBackOffParams_t* calcBackOff )
-{
-    RegionCommonCalcBackOffParams_t calcBackOffParams;
-
-    calcBackOffParams.Channels = NvmCtx.Channels;
-    calcBackOffParams.Bands = NvmCtx.Bands;
-    calcBackOffParams.LastTxIsJoinRequest = calcBackOff->LastTxIsJoinRequest;
-    calcBackOffParams.Joined = calcBackOff->Joined;
-    calcBackOffParams.DutyCycleEnabled = calcBackOff->DutyCycleEnabled;
-    calcBackOffParams.Channel = calcBackOff->Channel;
-    calcBackOffParams.ElapsedTime = calcBackOff->ElapsedTime;
-    calcBackOffParams.TxTimeOnAir = calcBackOff->TxTimeOnAir;
-
-    RegionCommonCalcBackOff( &calcBackOffParams );
-}
-
-LoRaMacStatus_t RegionRU864NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff )
-{
-    uint8_t nbEnabledChannels = 0;
-    uint8_t nbRestrictedChannels = 0;
-    uint8_t enabledChannels[RU864_MAX_NB_CHANNELS] = { 0 };
-    RegionCommonIdentifyChannelsParam_t identifyChannelsParam;
-    RegionCommonCountNbOfEnabledChannelsParams_t countChannelsParams;
-    LoRaMacStatus_t status = LORAMAC_STATUS_NO_CHANNEL_FOUND;
-
-    if( RegionCommonCountChannels( NvmCtx.ChannelsMask, 0, 1 ) == 0 )
-    { // Reactivate default channels
-        NvmCtx.ChannelsMask[0] |= LC( 1 ) + LC( 2 );
-    }
-
-    // Search how many channels are enabled
-    countChannelsParams.Joined = nextChanParams->Joined;
-    countChannelsParams.Datarate = nextChanParams->Datarate;
-    countChannelsParams.ChannelsMask = NvmCtx.ChannelsMask;
-    countChannelsParams.Channels = NvmCtx.Channels;
-    countChannelsParams.Bands = NvmCtx.Bands;
-    countChannelsParams.MaxNbChannels = RU864_MAX_NB_CHANNELS;
-    countChannelsParams.JoinChannels = RU864_JOIN_CHANNELS;
-
-    identifyChannelsParam.AggrTimeOff = nextChanParams->AggrTimeOff;
-    identifyChannelsParam.LastAggrTx = nextChanParams->LastAggrTx;
-    identifyChannelsParam.DutyCycleEnabled = nextChanParams->DutyCycleEnabled;
-    identifyChannelsParam.MaxBands = RU864_MAX_NB_BANDS;
-
-    identifyChannelsParam.CountNbOfEnabledChannelsParam = &countChannelsParams;
-
-    status = RegionCommonIdentifyChannels( &identifyChannelsParam, aggregatedTimeOff, enabledChannels,
-                                           &nbEnabledChannels, &nbRestrictedChannels, time );
-
-    if( nextChanParams->QueryNextTxDelayOnly == true )
-    {
-        return status;
-    }
-
-    if( status == LORAMAC_STATUS_OK )
-    {
-        // We found a valid channel
-        *channel = enabledChannels[randr( 0, nbEnabledChannels - 1 )];
-    }
-    else if( status == LORAMAC_STATUS_NO_CHANNEL_FOUND )
-    {
-        // Datarate not supported by any channel, restore defaults
-        NvmCtx.ChannelsMask[0] |= LC( 1 ) + LC( 2 );
-    }
-    return status;
-}
-
-LoRaMacStatus_t RegionRU864ChannelAdd( ChannelAddParams_t* channelAdd )
-{
-    bool drInvalid = false;
-    bool freqInvalid = false;
-    uint8_t id = channelAdd->ChannelId;
-
-    if( id < RU864_NUMB_DEFAULT_CHANNELS )
-    {
-        return LORAMAC_STATUS_FREQ_AND_DR_INVALID;
-    }
-
-    if( id >= RU864_MAX_NB_CHANNELS )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-
-    // Validate the datarate range
-    if( RegionCommonValueInRange( channelAdd->NewChannel->DrRange.Fields.Min, RU864_TX_MIN_DATARATE, RU864_TX_MAX_DATARATE ) == false )
-    {
-        drInvalid = true;
-    }
-    if( RegionCommonValueInRange( channelAdd->NewChannel->DrRange.Fields.Max, RU864_TX_MIN_DATARATE, RU864_TX_MAX_DATARATE ) == false )
-    {
-        drInvalid = true;
-    }
-    if( channelAdd->NewChannel->DrRange.Fields.Min > channelAdd->NewChannel->DrRange.Fields.Max )
-    {
-        drInvalid = true;
-    }
-
-    // Check frequency
-    if( freqInvalid == false )
-    {
-        if( VerifyRfFreq( channelAdd->NewChannel->Frequency ) == false )
-        {
-            freqInvalid = true;
-        }
-    }
-
-    // Check status
-    if( ( drInvalid == true ) && ( freqInvalid == true ) )
-    {
-        return LORAMAC_STATUS_FREQ_AND_DR_INVALID;
-    }
-    if( drInvalid == true )
-    {
-        return LORAMAC_STATUS_DATARATE_INVALID;
-    }
-    if( freqInvalid == true )
-    {
-        return LORAMAC_STATUS_FREQUENCY_INVALID;
-    }
-
-    memcpy1( ( uint8_t* ) &(NvmCtx.Channels[id]), ( uint8_t* ) channelAdd->NewChannel, sizeof( NvmCtx.Channels[id] ) );
-    NvmCtx.Channels[id].Band = 0;
-    NvmCtx.ChannelsMask[0] |= ( 1 << id );
-    return LORAMAC_STATUS_OK;
-}
-
-bool RegionRU864ChannelsRemove( ChannelRemoveParams_t* channelRemove  )
-{
-    uint8_t id = channelRemove->ChannelId;
-
-    if( id < RU864_NUMB_DEFAULT_CHANNELS )
-    {
-        return false;
-    }
-
-    // Remove the channel from the list of channels
-    NvmCtx.Channels[id] = ( ChannelParams_t ){ 0, 0, { 0 }, 0 };
-
-    return RegionCommonChanDisable( NvmCtx.ChannelsMask, id, RU864_MAX_NB_CHANNELS );
-}
-
-void RegionRU864SetContinuousWave( ContinuousWaveParams_t* continuousWave )
-{
-    int8_t txPowerLimited = LimitTxPower( continuousWave->TxPower, NvmCtx.Bands[NvmCtx.Channels[continuousWave->Channel].Band].TxMaxPower, continuousWave->Datarate, NvmCtx.ChannelsMask );
-    int8_t phyTxPower = 0;
-    uint32_t frequency = NvmCtx.Channels[continuousWave->Channel].Frequency;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, continuousWave->MaxEirp, continuousWave->AntennaGain );
-
-    Radio.SetTxContinuousWave( frequency, phyTxPower, continuousWave->Timeout );
-}
-
-uint8_t RegionRU864ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset )
-{
-    int8_t datarate = dr - drOffset;
-
-    if( datarate < 0 )
-    {
-        datarate = DR_0;
-    }
-    return datarate;
-}
-
-void RegionRU864RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr )
-{
-    RegionCommonRxBeaconSetupParams_t regionCommonRxBeaconSetup;
-
-    regionCommonRxBeaconSetup.Datarates = DataratesRU864;
-    regionCommonRxBeaconSetup.Frequency = rxBeaconSetup->Frequency;
-    regionCommonRxBeaconSetup.BeaconSize = RU864_BEACON_SIZE;
-    regionCommonRxBeaconSetup.BeaconDatarate = RU864_BEACON_CHANNEL_DR;
-    regionCommonRxBeaconSetup.BeaconChannelBW = RU864_BEACON_CHANNEL_BW;
-    regionCommonRxBeaconSetup.RxTime = rxBeaconSetup->RxTime;
-    regionCommonRxBeaconSetup.SymbolTimeout = rxBeaconSetup->SymbolTimeout;
-
-    RegionCommonRxBeaconSetup( &regionCommonRxBeaconSetup );
-
-    // Store downlink datarate
-    *outDr = RU864_BEACON_CHANNEL_DR;
-}
diff --git a/mac/region/RegionRU864.h b/mac/region/RegionRU864.h
deleted file mode 100644
index c09ceb5..0000000
--- a/mac/region/RegionRU864.h
+++ /dev/null
@@ -1,498 +0,0 @@
-/*!
- * \file      RegionRU864.h
- *
- * \brief     Region definition for RU864
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \defgroup  REGIONRU864 Region RU864
- *            Implementation according to LoRaWAN Specification v1.0.2.
- * \{
- */
-#ifndef __REGION_RU864_H__
-#define __REGION_RU864_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include "LoRaMac.h"
-
-/*!
- * LoRaMac maximum number of channels
- */
-#define RU864_MAX_NB_CHANNELS                       8
-
-/*!
- * Number of default channels
- */
-#define RU864_NUMB_DEFAULT_CHANNELS                 2
-
-/*!
- * Number of channels to apply for the CF list
- */
-#define RU864_NUMB_CHANNELS_CF_LIST                 5
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define RU864_TX_MIN_DATARATE                       DR_0
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define RU864_TX_MAX_DATARATE                       DR_7
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define RU864_RX_MIN_DATARATE                       DR_0
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define RU864_RX_MAX_DATARATE                       DR_7
-
-/*!
- * Default datarate used by the node
- */
-#define RU864_DEFAULT_DATARATE                      DR_0
-
-/*!
- * Minimal Rx1 receive datarate offset
- */
-#define RU864_MIN_RX1_DR_OFFSET                     0
-
-/*!
- * Maximal Rx1 receive datarate offset
- */
-#define RU864_MAX_RX1_DR_OFFSET                     5
-
-/*!
- * Default Rx1 receive datarate offset
- */
-#define RU864_DEFAULT_RX1_DR_OFFSET                 0
-
-/*!
- * Minimal Tx output power that can be used by the node
- */
-#define RU864_MIN_TX_POWER                          TX_POWER_7
-
-/*!
- * Maximal Tx output power that can be used by the node
- */
-#define RU864_MAX_TX_POWER                          TX_POWER_0
-
-/*!
- * Default Tx output power used by the node
- */
-#define RU864_DEFAULT_TX_POWER                      TX_POWER_0
-
-/*!
- * Default Max EIRP
- */
-#define RU864_DEFAULT_MAX_EIRP                      16.0f
-
-/*!
- * Default antenna gain
- */
-#define RU864_DEFAULT_ANTENNA_GAIN                  2.15f
-
-/*!
- * ADR Ack limit
- */
-#define RU864_ADR_ACK_LIMIT                         64
-
-/*!
- * ADR Ack delay
- */
-#define RU864_ADR_ACK_DELAY                         32
-
-/*!
- * Enabled or disabled the duty cycle
- */
-#define RU864_DUTY_CYCLE_ENABLED                    1
-
-/*!
- * Maximum RX window duration
- */
-#define RU864_MAX_RX_WINDOW                         3000 //TODO
-
-/*!
- * Receive delay 1
- */
-#define RU864_RECEIVE_DELAY1                        1000
-
-/*!
- * Receive delay 2
- */
-#define RU864_RECEIVE_DELAY2                        2000
-
-/*!
- * Join accept delay 1
- */
-#define RU864_JOIN_ACCEPT_DELAY1                    5000
-
-/*!
- * Join accept delay 2
- */
-#define RU864_JOIN_ACCEPT_DELAY2                    6000
-
-/*!
- * Maximum frame counter gap
- */
-#define RU864_MAX_FCNT_GAP                          16384
-
-/*!
- * Ack timeout
- */
-#define RU864_ACKTIMEOUT                            2000
-
-/*!
- * Random ack timeout limits
- */
-#define RU864_ACK_TIMEOUT_RND                       1000
-
-#if ( RU864_DEFAULT_DATARATE > DR_5 )
-#error "A default DR higher than DR_5 may lead to connectivity loss."
-#endif
-
-/*!
- * Second reception window channel frequency definition.
- */
-#define RU864_RX_WND_2_FREQ                         869100000
-
-/*!
- * Second reception window channel datarate definition.
- */
-#define RU864_RX_WND_2_DR                           DR_0
-
-/*
- * CLASS B
- */
-/*!
- * Beacon frequency
- */
-#define RU864_BEACON_CHANNEL_FREQ                   869100000
-
-/*!
- * Payload size of a beacon frame
- */
-#define RU864_BEACON_SIZE                           17
-
-/*!
- * Size of RFU 1 field
- */
-#define RU864_RFU1_SIZE                             2
-
-/*!
- * Size of RFU 2 field
- */
-#define RU864_RFU2_SIZE                             0
-
-/*!
- * Datarate of the beacon channel
- */
-#define RU864_BEACON_CHANNEL_DR                     DR_3
-
-/*!
- * Bandwith of the beacon channel (Index of BandwidthsRU864[])
- */
-#define RU864_BEACON_CHANNEL_BW                     0
-
-/*!
- * Maximum number of bands
- */
-#define RU864_MAX_NB_BANDS                          1
-
-/*!
- * Band 0 definition
- * { DutyCycle, TxMaxPower, LastJoinTxDoneTime, LastTxDoneTime, TimeOff }
- */
-#define RU864_BAND0                                 { 100 , RU864_MAX_TX_POWER, 0, 0, 0 } //  1.0 %
-
-/*!
- * LoRaMac default channel 1
- * Channel = { Frequency [Hz], RX1 Frequency [Hz], { ( ( DrMax << 4 ) | DrMin ) }, Band }
- */
-#define RU864_LC1                                   { 868900000, 0, { ( ( DR_5 << 4 ) | DR_0 ) }, 0 }
-
-/*!
- * LoRaMac default channel 2
- * Channel = { Frequency [Hz], RX1 Frequency [Hz], { ( ( DrMax << 4 ) | DrMin ) }, Band }
- */
-#define RU864_LC2                                   { 869100000, 0, { ( ( DR_5 << 4 ) | DR_0 ) }, 0 }
-
-
-/*!
- * LoRaMac channels which are allowed for the join procedure
- */
-#define RU864_JOIN_CHANNELS                         ( uint16_t )( LC( 1 ) | LC( 2 ) )
-
-/*!
- * Data rates table definition
- */
-static const uint8_t DataratesRU864[]  = { 12, 11, 10,  9,  8,  7, 7, 50 };
-
-/*!
- * Bandwidths table definition in Hz
- */
-static const uint32_t BandwidthsRU864[] = { 125000, 125000, 125000, 125000, 125000, 125000, 250000, 0 };
-
-/*!
- * Maximum payload with respect to the datarate index.
- */
-static const uint8_t MaxPayloadOfDatarateRU864[] = { 51, 51, 51, 115, 242, 242, 242, 242 };
-
-/*!
- * \brief The function gets a value of a specific phy attribute.
- *
- * \param [IN] getPhy Pointer to the function parameters.
- *
- * \retval Returns a structure containing the PHY parameter.
- */
-PhyParam_t RegionRU864GetPhyParam( GetPhyParams_t* getPhy );
-
-/*!
- * \brief Updates the last TX done parameters of the current channel.
- *
- * \param [IN] txDone Pointer to the function parameters.
- */
-void RegionRU864SetBandTxDone( SetBandTxDoneParams_t* txDone );
-
-/*!
- * \brief Initializes the channels masks and the channels.
- *
- * \param [IN] type Sets the initialization type.
- */
-void RegionRU864InitDefaults( InitDefaultsParams_t* params );
-
-/*!
- * \brief Returns a pointer to the internal context and its size.
- *
- * \param [OUT] params Pointer to the function parameters.
- *
- * \retval      Points to a structure where the module store its non-volatile context.
- */
-void* RegionRU864GetNvmCtx( GetNvmCtxParams_t* params );
-
-/*!
- * \brief Verifies a parameter.
- *
- * \param [IN] verify Pointer to the function parameters.
- *
- * \param [IN] type Sets the initialization type.
- *
- * \retval Returns true, if the parameter is valid.
- */
-bool RegionRU864Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute );
-
-/*!
- * \brief The function parses the input buffer and sets up the channels of the
- *        CF list.
- *
- * \param [IN] applyCFList Pointer to the function parameters.
- */
-void RegionRU864ApplyCFList( ApplyCFListParams_t* applyCFList );
-
-/*!
- * \brief Sets a channels mask.
- *
- * \param [IN] chanMaskSet Pointer to the function parameters.
- *
- * \retval Returns true, if the channels mask could be set.
- */
-bool RegionRU864ChanMaskSet( ChanMaskSetParams_t* chanMaskSet );
-
-/*!
- * Computes the Rx window timeout and offset.
- *
- * \param [IN] datarate     Rx window datarate index to be used
- *
- * \param [IN] minRxSymbols Minimum required number of symbols to detect an Rx frame.
- *
- * \param [IN] rxError      System maximum timing error of the receiver. In milliseconds
- *                          The receiver will turn on in a [-rxError : +rxError] ms
- *                          interval around RxOffset
- *
- * \param [OUT]rxConfigParams Returns updated WindowTimeout and WindowOffset fields.
- */
-void RegionRU864ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams );
-
-/*!
- * \brief Configuration of the RX windows.
- *
- * \param [IN] rxConfig Pointer to the function parameters.
- *
- * \param [OUT] datarate The datarate index which was set.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionRU864RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate );
-
-/*!
- * \brief TX configuration.
- *
- * \param [IN] txConfig Pointer to the function parameters.
- *
- * \param [OUT] txPower The tx power index which was set.
- *
- * \param [OUT] txTimeOnAir The time-on-air of the frame.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionRU864TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir );
-
-/*!
- * \brief The function processes a Link ADR Request.
- *
- * \param [IN] linkAdrReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionRU864LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed );
-
-/*!
- * \brief The function processes a RX Parameter Setup Request.
- *
- * \param [IN] rxParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionRU864RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq );
-
-/*!
- * \brief The function processes a Channel Request.
- *
- * \param [IN] newChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionRU864NewChannelReq( NewChannelReqParams_t* newChannelReq );
-
-/*!
- * \brief The function processes a TX ParamSetup Request.
- *
- * \param [IN] txParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- *         Returns -1, if the functionality is not implemented. In this case, the end node
- *         shall not process the command.
- */
-int8_t RegionRU864TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq );
-
-/*!
- * \brief The function processes a DlChannel Request.
- *
- * \param [IN] dlChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionRU864DlChannelReq( DlChannelReqParams_t* dlChannelReq );
-
-/*!
- * \brief Alternates the datarate of the channel for the join request.
- *
- * \param [IN] currentDr Current datarate.
- *
- * \retval Datarate to apply.
- */
-int8_t RegionRU864AlternateDr( int8_t currentDr, AlternateDrType_t type );
-
-/*!
- * \brief Calculates the back-off time.
- *
- * \param [IN] calcBackOff Pointer to the function parameters.
- */
-void RegionRU864CalcBackOff( CalcBackOffParams_t* calcBackOff );
-
-/*!
- * \brief Searches and set the next random available channel
- *
- * \param [OUT] channel Next channel to use for TX.
- *
- * \param [OUT] time Time to wait for the next transmission according to the duty
- *              cycle.
- *
- * \param [OUT] aggregatedTimeOff Updates the aggregated time off.
- *
- * \retval Function status [1: OK, 0: Unable to find a channel on the current datarate]
- */
-LoRaMacStatus_t RegionRU864NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff );
-
-/*!
- * \brief Adds a channel.
- *
- * \param [IN] channelAdd Pointer to the function parameters.
- *
- * \retval Status of the operation.
- */
-LoRaMacStatus_t RegionRU864ChannelAdd( ChannelAddParams_t* channelAdd );
-
-/*!
- * \brief Removes a channel.
- *
- * \param [IN] channelRemove Pointer to the function parameters.
- *
- * \retval Returns true, if the channel was removed successfully.
- */
-bool RegionRU864ChannelsRemove( ChannelRemoveParams_t* channelRemove  );
-
-/*!
- * \brief Sets the radio into continuous wave mode.
- *
- * \param [IN] continuousWave Pointer to the function parameters.
- */
-void RegionRU864SetContinuousWave( ContinuousWaveParams_t* continuousWave );
-
-/*!
- * \brief Computes new datarate according to the given offset
- *
- * \param [IN] downlinkDwellTime Downlink dwell time configuration. 0: No limit, 1: 400ms
- *
- * \param [IN] dr Current datarate
- *
- * \param [IN] drOffset Offset to be applied
- *
- * \retval newDr Computed datarate.
- */
-uint8_t RegionRU864ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset );
-
-/*!
- * \brief Sets the radio into beacon reception mode
- *
- * \param [IN] rxBeaconSetup Pointer to the function parameters
- */
-void RegionRU864RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr );
-
-/*! \} defgroup REGIONRU864 */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __REGION_RU864_H__
diff --git a/mac/region/RegionUS915.c b/mac/region/RegionUS915.c
deleted file mode 100644
index 52d4c89..0000000
--- a/mac/region/RegionUS915.c
+++ /dev/null
@@ -1,1093 +0,0 @@
-/*!
- * \file      RegionUS915.c
- *
- * \brief     Region implementation for US915
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
-*/
-#include "utilities.h"
-
-#include "RegionCommon.h"
-#include "RegionUS915.h"
-
-// Definitions
-#define CHANNELS_MASK_SIZE              6
-
-// A mask to select only valid 500KHz channels
-#define CHANNELS_MASK_500KHZ_MASK       0x00FF
-
-/*!
- * Region specific context
- */
-typedef struct sRegionUS915NvmCtx
-{
-    /*!
-     * LoRaMAC channels
-     */
-    ChannelParams_t Channels[ US915_MAX_NB_CHANNELS ];
-    /*!
-     * LoRaMac bands
-     */
-    Band_t Bands[ US915_MAX_NB_BANDS ];
-    /*!
-     * LoRaMac channels mask
-     */
-    uint16_t ChannelsMask[ CHANNELS_MASK_SIZE ];
-    /*!
-     * LoRaMac channels remaining
-     */
-    uint16_t ChannelsMaskRemaining[CHANNELS_MASK_SIZE];
-    /*!
-     * LoRaMac channels default mask
-     */
-    uint16_t ChannelsDefaultMask[ CHANNELS_MASK_SIZE ];
-    /*!
-     * Index of current in use 8 bit group (0: bit 0 - 7, 1: bit 8 - 15, ..., 7: bit 56 - 63)
-     */
-    uint8_t JoinChannelGroupsCurrentIndex;
-    /*!
-     * Counter of join trials needed to alternate between DR0 and DR4, see \ref RegionUS915AlternateDr
-     */
-    uint8_t JoinTrialsCounter;
-}RegionUS915NvmCtx_t;
-
-/*
- * Non-volatile module context.
- */
-static RegionUS915NvmCtx_t NvmCtx;
-
-// Static functions
-static int8_t GetNextLowerTxDr( int8_t dr, int8_t minDr )
-{
-    uint8_t nextLowerDr = 0;
-
-    if( dr == minDr )
-    {
-        nextLowerDr = minDr;
-    }
-    else
-    {
-        nextLowerDr = dr - 1;
-    }
-    return nextLowerDr;
-}
-
-/*!
- * \brief Searches for available 125 kHz channels in the given channel mask.
- *
- * \param [IN] channelMaskRemaining The remaining channel mask.
- *
- * \param [OUT] findAvailableChannelsIndex List containing the indexes of all available 125 kHz channels.
- *
- * \param [OUT] availableChannels Number of available 125 kHz channels.
- *
- * \retval Status
- */
-static LoRaMacStatus_t FindAvailable125kHzChannels( uint8_t* findAvailableChannelsIndex, uint16_t channelMaskRemaining, uint8_t* availableChannels )
-{
-    // Nullpointer check
-    if( findAvailableChannelsIndex == NULL || availableChannels == NULL )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-
-    // Initialize counter
-    *availableChannels = 0;
-    for( uint8_t i = 0; i < 8; i++ )
-    {
-        // Find available channels
-        if( ( channelMaskRemaining & ( 1 << i ) ) != 0 )
-        {
-            // Save available channel index
-            findAvailableChannelsIndex[*availableChannels] = i;
-            // Increment counter of available channels if the current channel is available
-            ( *availableChannels )++;
-        }
-    }
-
-    return LORAMAC_STATUS_OK;
-}
-
-/*!
- * \brief Computes the next 125kHz channel used for join requests.
- *
- * \param [OUT] newChannelIndex Index of available channel.
- *
- * \retval Status
- */
-static LoRaMacStatus_t ComputeNext125kHzJoinChannel( uint8_t* newChannelIndex )
-{
-    uint8_t currentChannelsMaskRemainingIndex;
-    uint16_t channelMaskRemaining;
-    uint8_t findAvailableChannelsIndex[8] = { 0 };
-    uint8_t availableChannels = 0;
-    uint8_t startIndex = NvmCtx.JoinChannelGroupsCurrentIndex;
-
-    // Null pointer check
-    if( newChannelIndex == NULL )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-
-    do {
-        // Current ChannelMaskRemaining, two groups per channel mask. For example Group 0 and 1 (8 bit) are ChannelMaskRemaining 0 (16 bit), etc.
-        currentChannelsMaskRemainingIndex = (uint8_t) startIndex / 2;
-
-        // For even numbers we need the 8 LSBs and for uneven the 8 MSBs
-        if( ( startIndex % 2 ) == 0 )
-        {
-            channelMaskRemaining = ( NvmCtx.ChannelsMaskRemaining[currentChannelsMaskRemainingIndex] & 0x00FF );
-        }
-        else
-        {
-            channelMaskRemaining = ( ( NvmCtx.ChannelsMaskRemaining[currentChannelsMaskRemainingIndex] >> 8 ) & 0x00FF );
-        }
-
-
-        if( FindAvailable125kHzChannels( findAvailableChannelsIndex, channelMaskRemaining, &availableChannels ) == LORAMAC_STATUS_PARAMETER_INVALID )
-        {
-            return LORAMAC_STATUS_PARAMETER_INVALID;
-        }
-
-        if ( availableChannels > 0 )
-        {
-            // Choose randomly a free channel 125kHz
-            *newChannelIndex = ( startIndex * 8 ) + findAvailableChannelsIndex[randr( 0, ( availableChannels - 1 ) )];
-        }
-
-        // Increment start index
-        startIndex++;
-        if ( startIndex > 7 )
-        {
-            startIndex = 0;
-        }
-    } while( ( availableChannels == 0 ) && ( startIndex != NvmCtx.JoinChannelGroupsCurrentIndex ) );
-
-    if ( availableChannels > 0 )
-    {
-        NvmCtx.JoinChannelGroupsCurrentIndex = startIndex;
-        return LORAMAC_STATUS_OK;
-    }
-
-    return LORAMAC_STATUS_PARAMETER_INVALID;
-}
-
-static uint32_t GetBandwidth( uint32_t drIndex )
-{
-    switch( BandwidthsUS915[drIndex] )
-    {
-        default:
-        case 125000:
-            return 0;
-        case 250000:
-            return 1;
-        case 500000:
-            return 2;
-    }
-}
-
-static int8_t LimitTxPower( int8_t txPower, int8_t maxBandTxPower, int8_t datarate, uint16_t* channelsMask )
-{
-    int8_t txPowerResult = txPower;
-
-    // Limit tx power to the band max
-    txPowerResult =  MAX( txPower, maxBandTxPower );
-
-    if( datarate == DR_4 )
-    {// Limit tx power to max 26dBm
-        txPowerResult = MAX( txPower, TX_POWER_2 );
-    }
-    else
-    {
-        if( RegionCommonCountChannels( channelsMask, 0, 4 ) < 50 )
-        {// Limit tx power to max 21dBm
-            txPowerResult = MAX( txPower, TX_POWER_5 );
-        }
-    }
-    return txPowerResult;
-}
-
-static bool VerifyRfFreq( uint32_t freq )
-{
-    // Check radio driver support
-    if( Radio.CheckRfFrequency( freq ) == false )
-    {
-        return false;
-    }
-
-    // Rx frequencies
-    if( ( freq < US915_FIRST_RX1_CHANNEL ) ||
-        ( freq > US915_LAST_RX1_CHANNEL ) ||
-        ( ( ( freq - ( uint32_t ) US915_FIRST_RX1_CHANNEL ) % ( uint32_t ) US915_STEPWIDTH_RX1_CHANNEL ) != 0 ) )
-    {
-        return false;
-    }
-
-    // Test for frequency range - take RX and TX freqencies into account
-    if( ( freq < 902300000 ) ||  ( freq > 927500000 ) )
-    {
-        return false;
-    }
-    return true;
-}
-
-PhyParam_t RegionUS915GetPhyParam( GetPhyParams_t* getPhy )
-{
-    PhyParam_t phyParam = { 0 };
-
-    switch( getPhy->Attribute )
-    {
-        case PHY_MIN_RX_DR:
-        {
-            phyParam.Value = US915_RX_MIN_DATARATE;
-            break;
-        }
-        case PHY_MIN_TX_DR:
-        {
-            phyParam.Value = US915_TX_MIN_DATARATE;
-            break;
-        }
-        case PHY_DEF_TX_DR:
-        {
-            phyParam.Value = US915_DEFAULT_DATARATE;
-            break;
-        }
-        case PHY_NEXT_LOWER_TX_DR:
-        {
-            phyParam.Value = GetNextLowerTxDr( getPhy->Datarate, US915_TX_MIN_DATARATE );
-            break;
-        }
-        case PHY_MAX_TX_POWER:
-        {
-            phyParam.Value = US915_MAX_TX_POWER;
-            break;
-        }
-        case PHY_DEF_TX_POWER:
-        {
-            phyParam.Value = US915_DEFAULT_TX_POWER;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_LIMIT:
-        {
-            phyParam.Value = US915_ADR_ACK_LIMIT;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_DELAY:
-        {
-            phyParam.Value = US915_ADR_ACK_DELAY;
-            break;
-        }
-        case PHY_MAX_PAYLOAD:
-        {
-            phyParam.Value = MaxPayloadOfDatarateUS915[getPhy->Datarate];
-            break;
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            phyParam.Value = US915_DUTY_CYCLE_ENABLED;
-            break;
-        }
-        case PHY_MAX_RX_WINDOW:
-        {
-            phyParam.Value = US915_MAX_RX_WINDOW;
-            break;
-        }
-        case PHY_RECEIVE_DELAY1:
-        {
-            phyParam.Value = US915_RECEIVE_DELAY1;
-            break;
-        }
-        case PHY_RECEIVE_DELAY2:
-        {
-            phyParam.Value = US915_RECEIVE_DELAY2;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY1:
-        {
-            phyParam.Value = US915_JOIN_ACCEPT_DELAY1;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY2:
-        {
-            phyParam.Value = US915_JOIN_ACCEPT_DELAY2;
-            break;
-        }
-        case PHY_MAX_FCNT_GAP:
-        {
-            phyParam.Value = US915_MAX_FCNT_GAP;
-            break;
-        }
-        case PHY_ACK_TIMEOUT:
-        {
-            phyParam.Value = ( US915_ACKTIMEOUT + randr( -US915_ACK_TIMEOUT_RND, US915_ACK_TIMEOUT_RND ) );
-            break;
-        }
-        case PHY_DEF_DR1_OFFSET:
-        {
-            phyParam.Value = US915_DEFAULT_RX1_DR_OFFSET;
-            break;
-        }
-        case PHY_DEF_RX2_FREQUENCY:
-        {
-            phyParam.Value = US915_RX_WND_2_FREQ;
-            break;
-        }
-        case PHY_DEF_RX2_DR:
-        {
-            phyParam.Value = US915_RX_WND_2_DR;
-            break;
-        }
-        case PHY_CHANNELS_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsMask;
-            break;
-        }
-        case PHY_CHANNELS_DEFAULT_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsDefaultMask;
-            break;
-        }
-        case PHY_MAX_NB_CHANNELS:
-        {
-            phyParam.Value = US915_MAX_NB_CHANNELS;
-            break;
-        }
-        case PHY_CHANNELS:
-        {
-            phyParam.Channels = NvmCtx.Channels;
-            break;
-        }
-        case PHY_DEF_UPLINK_DWELL_TIME:
-        case PHY_DEF_DOWNLINK_DWELL_TIME:
-        {
-            phyParam.Value = 0;
-            break;
-        }
-        case PHY_DEF_MAX_EIRP:
-        {
-            phyParam.fValue = US915_DEFAULT_MAX_ERP + 2.15;
-            break;
-        }
-        case PHY_DEF_ANTENNA_GAIN:
-        {
-            phyParam.fValue = 0;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_FREQ:
-        {
-            phyParam.Value = US915_BEACON_CHANNEL_FREQ;
-            break;
-        }
-        case PHY_BEACON_FORMAT:
-        {
-            phyParam.BeaconFormat.BeaconSize = US915_BEACON_SIZE;
-            phyParam.BeaconFormat.Rfu1Size = US915_RFU1_SIZE;
-            phyParam.BeaconFormat.Rfu2Size = US915_RFU2_SIZE;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_DR:
-        {
-            phyParam.Value = US915_BEACON_CHANNEL_DR;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_STEPWIDTH:
-        {
-            phyParam.Value = US915_BEACON_CHANNEL_STEPWIDTH;
-            break;
-        }
-        case PHY_BEACON_NB_CHANNELS:
-        {
-            phyParam.Value = US915_BEACON_NB_CHANNELS;
-            break;
-        }
-        case PHY_PING_SLOT_CHANNEL_DR:
-        {
-            phyParam.Value = US915_PING_SLOT_CHANNEL_DR;
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-
-    return phyParam;
-}
-
-void RegionUS915SetBandTxDone( SetBandTxDoneParams_t* txDone )
-{
-    RegionCommonSetBandTxDone( txDone->Joined, &NvmCtx.Bands[NvmCtx.Channels[txDone->Channel].Band], txDone->LastTxDoneTime );
-}
-
-void RegionUS915InitDefaults( InitDefaultsParams_t* params )
-{
-    Band_t bands[US915_MAX_NB_BANDS] =
-    {
-       US915_BAND0
-    };
-
-    switch( params->Type )
-    {
-        case INIT_TYPE_BANDS:
-        {
-            // Initialize bands
-            memcpy1( ( uint8_t* )NvmCtx.Bands, ( uint8_t* )bands, sizeof( Band_t ) * US915_MAX_NB_BANDS );
-            break;
-        }
-        case INIT_TYPE_INIT:
-        {
-            // Initialize 8 bit channel groups index
-            NvmCtx.JoinChannelGroupsCurrentIndex = 0;
-
-            // Initialize the join trials counter
-            NvmCtx.JoinTrialsCounter = 0;
-
-            // Channels
-            // 125 kHz channels
-            for( uint8_t i = 0; i < US915_MAX_NB_CHANNELS - 8; i++ )
-            {
-                NvmCtx.Channels[i].Frequency = 902300000 + i * 200000;
-                NvmCtx.Channels[i].DrRange.Value = ( DR_3 << 4 ) | DR_0;
-                NvmCtx.Channels[i].Band = 0;
-            }
-            // 500 kHz channels
-            for( uint8_t i = US915_MAX_NB_CHANNELS - 8; i < US915_MAX_NB_CHANNELS; i++ )
-            {
-                NvmCtx.Channels[i].Frequency = 903000000 + ( i - ( US915_MAX_NB_CHANNELS - 8 ) ) * 1600000;
-                NvmCtx.Channels[i].DrRange.Value = ( DR_4 << 4 ) | DR_4;
-                NvmCtx.Channels[i].Band = 0;
-            }
-
-            // ChannelsMask
-//FIXME original            NvmCtx.ChannelsDefaultMask[0] = 0xFFFF;
-            NvmCtx.ChannelsDefaultMask[0] = 0xFF00; // FIXME When using TTN server and Dragino LG308 gateway,
-                                                    // sub band2 is to be used. We will reach to this code
-                                                    // block during Join procedure and if the mask is 0xffff,
-                                                    // sub band1 is likely used and Join fails as a result.
-                                                    // As the temporally countermeasure, set 0x00 to channel0-7
-            NvmCtx.ChannelsDefaultMask[1] = 0xFFFF;
-            NvmCtx.ChannelsDefaultMask[2] = 0xFFFF;
-            NvmCtx.ChannelsDefaultMask[3] = 0xFFFF;
-            NvmCtx.ChannelsDefaultMask[4] = 0x00FF;
-            NvmCtx.ChannelsDefaultMask[5] = 0x0000;
-
-            // Copy channels default mask
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, NvmCtx.ChannelsDefaultMask, 6 );
-
-            // Copy into channels mask remaining
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMaskRemaining, NvmCtx.ChannelsMask, 6 );
-            break;
-        }
-        case INIT_TYPE_RESTORE_CTX:
-        {
-            if( params->NvmCtx != 0 )
-            {
-                memcpy1( (uint8_t*) &NvmCtx, (uint8_t*) params->NvmCtx, sizeof( NvmCtx ) );
-            }
-            break;
-        }
-        case INIT_TYPE_RESTORE_DEFAULT_CHANNELS:
-        {
-            // Copy channels default mask
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, NvmCtx.ChannelsDefaultMask, 6 );
-
-            for( uint8_t i = 0; i < 6; i++ )
-            { // Copy-And the channels mask
-                NvmCtx.ChannelsMaskRemaining[i] &= NvmCtx.ChannelsMask[i];
-            }
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-}
-
-void* RegionUS915GetNvmCtx( GetNvmCtxParams_t* params )
-{
-    params->nvmCtxSize = sizeof( RegionUS915NvmCtx_t );
-    return &NvmCtx;
-}
-
-bool RegionUS915Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute )
-{
-    switch( phyAttribute )
-    {
-        case PHY_FREQUENCY:
-        {
-            return VerifyRfFreq( verify->Frequency );
-        }
-        case PHY_TX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, US915_TX_MIN_DATARATE, US915_TX_MAX_DATARATE );
-        }
-        case PHY_DEF_TX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, DR_0, DR_5 );
-        }
-        case PHY_RX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, US915_RX_MIN_DATARATE, US915_RX_MAX_DATARATE );
-        }
-        case PHY_DEF_TX_POWER:
-        case PHY_TX_POWER:
-        {
-            // Remark: switched min and max!
-            return RegionCommonValueInRange( verify->TxPower, US915_MAX_TX_POWER, US915_MIN_TX_POWER );
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            return US915_DUTY_CYCLE_ENABLED;
-        }
-        default:
-            return false;
-    }
-}
-
-void RegionUS915ApplyCFList( ApplyCFListParams_t* applyCFList )
-{
-    // Size of the optional CF list must be 16 byte
-    if( applyCFList->Size != 16 )
-    {
-        return;
-    }
-
-    // Last byte CFListType must be 0x01 to indicate the CFList contains a series of ChMask fields
-    if( applyCFList->Payload[15] != 0x01 )
-    {
-        return;
-    }
-
-    // ChMask0 - ChMask4 must be set (every ChMask has 16 bit)
-    for( uint8_t chMaskItr = 0, cntPayload = 0; chMaskItr <= 4; chMaskItr++, cntPayload+=2 )
-    {
-        NvmCtx.ChannelsMask[chMaskItr] = (uint16_t) (0x00FF & applyCFList->Payload[cntPayload]);
-        NvmCtx.ChannelsMask[chMaskItr] |= (uint16_t) (applyCFList->Payload[cntPayload+1] << 8);
-        if( chMaskItr == 4 )
-        {
-            NvmCtx.ChannelsMask[chMaskItr] = NvmCtx.ChannelsMask[chMaskItr] & CHANNELS_MASK_500KHZ_MASK;
-        }
-        // Set the channel mask to the remaining
-        NvmCtx.ChannelsMaskRemaining[chMaskItr] &= NvmCtx.ChannelsMask[chMaskItr];
-    }
-}
-
-bool RegionUS915ChanMaskSet( ChanMaskSetParams_t* chanMaskSet )
-{
-    uint8_t nbChannels = RegionCommonCountChannels( chanMaskSet->ChannelsMaskIn, 0, 4 );
-
-    // Check the number of active channels
-    if( ( nbChannels < 2 ) &&
-        ( nbChannels > 0 ) )
-    {
-        return false;
-    }
-
-    switch( chanMaskSet->ChannelsMaskType )
-    {
-        case CHANNELS_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, chanMaskSet->ChannelsMaskIn, CHANNELS_MASK_SIZE );
-
-            NvmCtx.ChannelsDefaultMask[4] = NvmCtx.ChannelsDefaultMask[4] & CHANNELS_MASK_500KHZ_MASK;
-            NvmCtx.ChannelsDefaultMask[5] = 0x0000;
-
-            for( uint8_t i = 0; i < CHANNELS_MASK_SIZE; i++ )
-            { // Copy-And the channels mask
-                NvmCtx.ChannelsMaskRemaining[i] &= NvmCtx.ChannelsMask[i];
-            }
-            break;
-        }
-        case CHANNELS_DEFAULT_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsDefaultMask, chanMaskSet->ChannelsMaskIn, CHANNELS_MASK_SIZE );
-            break;
-        }
-        default:
-            return false;
-    }
-    return true;
-}
-
-void RegionUS915ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams )
-{
-    double tSymbol = 0.0;
-
-    // Get the datarate, perform a boundary check
-    rxConfigParams->Datarate = MIN( datarate, US915_RX_MAX_DATARATE );
-    rxConfigParams->Bandwidth = GetBandwidth( rxConfigParams->Datarate );
-
-    tSymbol = RegionCommonComputeSymbolTimeLoRa( DataratesUS915[rxConfigParams->Datarate], BandwidthsUS915[rxConfigParams->Datarate] );
-
-    RegionCommonComputeRxWindowParameters( tSymbol, minRxSymbols, rxError, Radio.GetWakeupTime( ), &rxConfigParams->WindowTimeout, &rxConfigParams->WindowOffset );
-}
-
-bool RegionUS915RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate )
-{
-    int8_t dr = rxConfig->Datarate;
-    int8_t phyDr = 0;
-    uint32_t frequency = rxConfig->Frequency;
-
-    if( Radio.GetStatus( ) != RF_IDLE )
-    {
-        return false;
-    }
-
-    if( rxConfig->RxSlot == RX_SLOT_WIN_1 )
-    {
-        // Apply window 1 frequency
-        frequency = US915_FIRST_RX1_CHANNEL + ( rxConfig->Channel % 8 ) * US915_STEPWIDTH_RX1_CHANNEL;
-    }
-
-    // Read the physical datarate from the datarates table
-    phyDr = DataratesUS915[dr];
-
-    Radio.SetChannel( frequency );
-
-    // Radio configuration
-    Radio.SetRxConfig( MODEM_LORA, rxConfig->Bandwidth, phyDr, 1, 0, 8, rxConfig->WindowTimeout, false, 0, false, 0, 0, true, rxConfig->RxContinuous );
-
-    Radio.SetMaxPayloadLength( MODEM_LORA, MaxPayloadOfDatarateUS915[dr] + LORA_MAC_FRMPAYLOAD_OVERHEAD );
-
-    *datarate = (uint8_t) dr;
-    return true;
-}
-
-bool RegionUS915TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir )
-{
-    int8_t phyDr = DataratesUS915[txConfig->Datarate];
-    int8_t txPowerLimited = LimitTxPower( txConfig->TxPower, NvmCtx.Bands[NvmCtx.Channels[txConfig->Channel].Band].TxMaxPower, txConfig->Datarate, NvmCtx.ChannelsMask );
-    uint32_t bandwidth = GetBandwidth( txConfig->Datarate );
-    int8_t phyTxPower = 0;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, US915_DEFAULT_MAX_ERP, 0 );
-
-    // Setup the radio frequency
-    Radio.SetChannel( NvmCtx.Channels[txConfig->Channel].Frequency );
-
-    Radio.SetTxConfig( MODEM_LORA, phyTxPower, 0, bandwidth, phyDr, 1, 8, false, true, 0, 0, false, 4000 );
-
-    // Setup maximum payload lenght of the radio driver
-    Radio.SetMaxPayloadLength( MODEM_LORA, txConfig->PktLen );
-    // Get the time-on-air of the next tx frame
-    *txTimeOnAir = Radio.TimeOnAir( MODEM_LORA, txConfig->PktLen );
-    *txPower = txPowerLimited;
-
-    return true;
-}
-
-uint8_t RegionUS915LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed )
-{
-    uint8_t status = 0x07;
-    RegionCommonLinkAdrParams_t linkAdrParams;
-    uint8_t nextIndex = 0;
-    uint8_t bytesProcessed = 0;
-    uint16_t channelsMask[6] = { 0, 0, 0, 0, 0, 0 };
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-    RegionCommonLinkAdrReqVerifyParams_t linkAdrVerifyParams;
-
-    // Initialize local copy of channels mask
-    RegionCommonChanMaskCopy( channelsMask, NvmCtx.ChannelsMask, 6 );
-
-    while( bytesProcessed < linkAdrReq->PayloadSize )
-    {
-        nextIndex = RegionCommonParseLinkAdrReq( &( linkAdrReq->Payload[bytesProcessed] ), &linkAdrParams );
-
-        if( nextIndex == 0 )
-            break; // break loop, since no more request has been found
-
-        // Update bytes processed
-        bytesProcessed += nextIndex;
-
-        // Revert status, as we only check the last ADR request for the channel mask KO
-        status = 0x07;
-
-        if( linkAdrParams.ChMaskCtrl == 6 )
-        {
-            // Enable all 125 kHz channels
-            channelsMask[0] = 0xFFFF;
-            channelsMask[1] = 0xFFFF;
-            channelsMask[2] = 0xFFFF;
-            channelsMask[3] = 0xFFFF;
-            // Apply chMask to channels 64 to 71
-            channelsMask[4] = linkAdrParams.ChMask & CHANNELS_MASK_500KHZ_MASK;
-        }
-        else if( linkAdrParams.ChMaskCtrl == 7 )
-        {
-            // Disable all 125 kHz channels
-            channelsMask[0] = 0x0000;
-            channelsMask[1] = 0x0000;
-            channelsMask[2] = 0x0000;
-            channelsMask[3] = 0x0000;
-            // Apply chMask to channels 64 to 71
-            channelsMask[4] = linkAdrParams.ChMask & CHANNELS_MASK_500KHZ_MASK;
-        }
-        else if( linkAdrParams.ChMaskCtrl == 5 )
-        {
-            // Start value for comparision
-            uint8_t bitMask = 1;
-
-            // cntChannelMask for channelsMask[0] until channelsMask[3]
-            uint8_t cntChannelMask = 0;
-
-            // i will be 1, 2, 3, ..., 7
-            for( uint8_t i = 0; i <= 7; i++ )
-            {
-                // 8 MSBs of ChMask are RFU
-                // Checking if the ChMask is set, then true
-                if( ( ( linkAdrParams.ChMask & 0x00FF ) & ( bitMask << i ) ) != 0 )
-                {
-                    if( ( i % 2 ) == 0 )
-                    {
-                        // Enable a bank of 8 125kHz channels, 8 LSBs
-                        channelsMask[cntChannelMask] |= 0x00FF;
-                        // Enable the corresponding 500kHz channel
-                        channelsMask[4] |= ( bitMask << i );
-                    }
-                    else
-                    {
-                        // Enable a bank of 8 125kHz channels, 8 MSBs
-                        channelsMask[cntChannelMask] |= 0xFF00;
-                        // Enable the corresponding 500kHz channel
-                        channelsMask[4] |= ( bitMask << i );
-                        // cntChannelMask increment for uneven i
-                        cntChannelMask++;
-                    }
-                }
-                // ChMask is not set
-                else
-                {
-                    if( ( i % 2 ) == 0 )
-                    {
-                        // Disable a bank of 8 125kHz channels, 8 LSBs
-                        channelsMask[cntChannelMask] &= 0xFF00;
-                        // Disable the corresponding 500kHz channel
-                        channelsMask[4] &= ~( bitMask << i );
-                    }
-                    else
-                    {
-                        // Enable a bank of 8 125kHz channels, 8 MSBs
-                        channelsMask[cntChannelMask] &= 0x00FF;
-                        // Disable the corresponding 500kHz channel
-                        channelsMask[4] &= ~( bitMask << i );
-                        // cntChannelMask increment for uneven i
-                        cntChannelMask++;
-                    }
-                }
-            }
-        }
-        else
-        {
-            channelsMask[linkAdrParams.ChMaskCtrl] = linkAdrParams.ChMask;
-        }
-    }
-
-    // FCC 15.247 paragraph F mandates to hop on at least 2 125 kHz channels
-    if( ( linkAdrParams.Datarate < DR_4 ) && ( RegionCommonCountChannels( channelsMask, 0, 4 ) < 2 ) )
-    {
-        status &= 0xFE; // Channel mask KO
-    }
-
-    // Get the minimum possible datarate
-    getPhy.Attribute = PHY_MIN_TX_DR;
-    getPhy.UplinkDwellTime = linkAdrReq->UplinkDwellTime;
-    phyParam = RegionUS915GetPhyParam( &getPhy );
-
-    linkAdrVerifyParams.Status = status;
-    linkAdrVerifyParams.AdrEnabled = linkAdrReq->AdrEnabled;
-    linkAdrVerifyParams.Datarate = linkAdrParams.Datarate;
-    linkAdrVerifyParams.TxPower = linkAdrParams.TxPower;
-    linkAdrVerifyParams.NbRep = linkAdrParams.NbRep;
-    linkAdrVerifyParams.CurrentDatarate = linkAdrReq->CurrentDatarate;
-    linkAdrVerifyParams.CurrentTxPower = linkAdrReq->CurrentTxPower;
-    linkAdrVerifyParams.CurrentNbRep = linkAdrReq->CurrentNbRep;
-    linkAdrVerifyParams.NbChannels = US915_MAX_NB_CHANNELS;
-    linkAdrVerifyParams.ChannelsMask = channelsMask;
-    linkAdrVerifyParams.MinDatarate = ( int8_t )phyParam.Value;
-    linkAdrVerifyParams.MaxDatarate = US915_TX_MAX_DATARATE;
-    linkAdrVerifyParams.Channels = NvmCtx.Channels;
-    linkAdrVerifyParams.MinTxPower = US915_MIN_TX_POWER;
-    linkAdrVerifyParams.MaxTxPower = US915_MAX_TX_POWER;
-    linkAdrVerifyParams.Version = linkAdrReq->Version;
-
-    // Verify the parameters and update, if necessary
-    status = RegionCommonLinkAdrReqVerifyParams( &linkAdrVerifyParams, &linkAdrParams.Datarate, &linkAdrParams.TxPower, &linkAdrParams.NbRep );
-
-    // Update channelsMask if everything is correct
-    if( status == 0x07 )
-    {
-        // Copy Mask
-        RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, channelsMask, 6 );
-
-        NvmCtx.ChannelsMaskRemaining[0] &= NvmCtx.ChannelsMask[0];
-        NvmCtx.ChannelsMaskRemaining[1] &= NvmCtx.ChannelsMask[1];
-        NvmCtx.ChannelsMaskRemaining[2] &= NvmCtx.ChannelsMask[2];
-        NvmCtx.ChannelsMaskRemaining[3] &= NvmCtx.ChannelsMask[3];
-        NvmCtx.ChannelsMaskRemaining[4] = NvmCtx.ChannelsMask[4];
-        NvmCtx.ChannelsMaskRemaining[5] = NvmCtx.ChannelsMask[5];
-    }
-
-    // Update status variables
-    *drOut = linkAdrParams.Datarate;
-    *txPowOut = linkAdrParams.TxPower;
-    *nbRepOut = linkAdrParams.NbRep;
-    *nbBytesParsed = bytesProcessed;
-
-    return status;
-}
-
-uint8_t RegionUS915RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq )
-{
-    uint8_t status = 0x07;
-
-    // Verify radio frequency
-    if( VerifyRfFreq( rxParamSetupReq->Frequency ) == false )
-    {
-        status &= 0xFE; // Channel frequency KO
-    }
-
-    // Verify datarate
-    if( RegionCommonValueInRange( rxParamSetupReq->Datarate, US915_RX_MIN_DATARATE, US915_RX_MAX_DATARATE ) == false )
-    {
-        status &= 0xFD; // Datarate KO
-    }
-    if( ( RegionCommonValueInRange( rxParamSetupReq->Datarate, DR_5, DR_7 ) == true ) ||
-        ( rxParamSetupReq->Datarate > DR_13 ) )
-    {
-        status &= 0xFD; // Datarate KO
-    }
-
-    // Verify datarate offset
-    if( RegionCommonValueInRange( rxParamSetupReq->DrOffset, US915_MIN_RX1_DR_OFFSET, US915_MAX_RX1_DR_OFFSET ) == false )
-    {
-        status &= 0xFB; // Rx1DrOffset range KO
-    }
-
-    return status;
-}
-
-uint8_t RegionUS915NewChannelReq( NewChannelReqParams_t* newChannelReq )
-{
-    // Datarate and frequency KO
-    return 0;
-}
-
-int8_t RegionUS915TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq )
-{
-    return -1;
-}
-
-uint8_t RegionUS915DlChannelReq( DlChannelReqParams_t* dlChannelReq )
-{
-    return 0;
-}
-
-int8_t RegionUS915AlternateDr( int8_t currentDr, AlternateDrType_t type )
-{
-    // Alternates the data rate according to the channel sequence:
-    // Eight times a 125kHz DR_0 and then one 500kHz DR_4 channel
-    if( type == ALTERNATE_DR )
-    {
-        NvmCtx.JoinTrialsCounter++;
-    }
-    else
-    {
-        NvmCtx.JoinTrialsCounter--;
-    }
-
-    if( NvmCtx.JoinTrialsCounter % 9 == 0 )
-    {
-        // Use DR_4 every 9th times.
-        currentDr = DR_4;
-    }
-    else
-    {
-        currentDr = DR_0;
-    }
-    return currentDr;
-}
-
-void RegionUS915CalcBackOff( CalcBackOffParams_t* calcBackOff )
-{
-    RegionCommonCalcBackOffParams_t calcBackOffParams;
-
-    calcBackOffParams.Channels = NvmCtx.Channels;
-    calcBackOffParams.Bands = NvmCtx.Bands;
-    calcBackOffParams.LastTxIsJoinRequest = calcBackOff->LastTxIsJoinRequest;
-    calcBackOffParams.Joined = calcBackOff->Joined;
-    calcBackOffParams.DutyCycleEnabled = calcBackOff->DutyCycleEnabled;
-    calcBackOffParams.Channel = calcBackOff->Channel;
-    calcBackOffParams.ElapsedTime = calcBackOff->ElapsedTime;
-    calcBackOffParams.TxTimeOnAir = calcBackOff->TxTimeOnAir;
-
-    RegionCommonCalcBackOff( &calcBackOffParams );
-}
-
-LoRaMacStatus_t RegionUS915NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff )
-{
-    uint8_t nbEnabledChannels = 0;
-    uint8_t nbRestrictedChannels = 0;
-    uint8_t enabledChannels[US915_MAX_NB_CHANNELS] = { 0 };
-    uint8_t newChannelIndex = 0;
-    RegionCommonIdentifyChannelsParam_t identifyChannelsParam;
-    RegionCommonCountNbOfEnabledChannelsParams_t countChannelsParams;
-    LoRaMacStatus_t status = LORAMAC_STATUS_NO_CHANNEL_FOUND;
-
-    // Count 125kHz channels
-    if( RegionCommonCountChannels( NvmCtx.ChannelsMaskRemaining, 0, 4 ) == 0 )
-    { // Reactivate default channels
-        RegionCommonChanMaskCopy( NvmCtx.ChannelsMaskRemaining, NvmCtx.ChannelsMask, 4  );
-
-        NvmCtx.JoinChannelGroupsCurrentIndex = 0;
-    }
-    // Check other channels
-    if( nextChanParams->Datarate >= DR_4 )
-    {
-        if( ( NvmCtx.ChannelsMaskRemaining[4] & CHANNELS_MASK_500KHZ_MASK ) == 0 )
-        {
-            NvmCtx.ChannelsMaskRemaining[4] = NvmCtx.ChannelsMask[4];
-        }
-    }
-
-    // Search how many channels are enabled
-    countChannelsParams.Joined = nextChanParams->Joined;
-    countChannelsParams.Datarate = nextChanParams->Datarate;
-    countChannelsParams.ChannelsMask = NvmCtx.ChannelsMaskRemaining;
-    countChannelsParams.Channels = NvmCtx.Channels;
-    countChannelsParams.Bands = NvmCtx.Bands;
-    countChannelsParams.MaxNbChannels = US915_MAX_NB_CHANNELS;
-    countChannelsParams.JoinChannels = 0;
-
-    identifyChannelsParam.AggrTimeOff = nextChanParams->AggrTimeOff;
-    identifyChannelsParam.LastAggrTx = nextChanParams->LastAggrTx;
-    identifyChannelsParam.DutyCycleEnabled = nextChanParams->DutyCycleEnabled;
-    identifyChannelsParam.MaxBands = US915_MAX_NB_BANDS;
-
-    identifyChannelsParam.CountNbOfEnabledChannelsParam = &countChannelsParams;
-
-    status = RegionCommonIdentifyChannels( &identifyChannelsParam, aggregatedTimeOff, enabledChannels,
-                                           &nbEnabledChannels, &nbRestrictedChannels, time );
-
-    if( nextChanParams->QueryNextTxDelayOnly == true )
-    {
-        return status;
-    }
-
-    if( status == LORAMAC_STATUS_OK )
-    {
-        if( nextChanParams->Joined == true )
-        {
-            // Choose randomly on of the remaining channels
-            *channel = enabledChannels[randr( 0, nbEnabledChannels - 1 )];
-        }
-        else
-        {
-            // For rapid network acquisition in mixed gateway channel plan environments, the device
-            // follow a random channel selection sequence. It probes alternating one out of a
-            // group of eight 125 kHz channels followed by probing one 500 kHz channel each pass.
-            // Each time a 125 kHz channel will be selected from another group.
-
-            // 125kHz Channels (0 - 63) DR0
-            if( nextChanParams->Datarate == DR_0 )
-            {
-                if( ComputeNext125kHzJoinChannel( &newChannelIndex ) == LORAMAC_STATUS_PARAMETER_INVALID )
-                {
-                    return LORAMAC_STATUS_PARAMETER_INVALID;
-                }
-                *channel = newChannelIndex;
-            }
-            // 500kHz Channels (64 - 71) DR4
-            else
-            {
-                // Choose the next available channel
-                uint8_t i = 0;
-                while( ( ( NvmCtx.ChannelsMaskRemaining[4] & CHANNELS_MASK_500KHZ_MASK ) & ( 1 << i ) ) == 0 )
-                {
-                    i++;
-                }
-                *channel = 64 + i;
-            }
-        }
-
-        // Disable the channel in the mask
-        RegionCommonChanDisable( NvmCtx.ChannelsMaskRemaining, *channel, US915_MAX_NB_CHANNELS );
-    }
-    return status;
-}
-
-LoRaMacStatus_t RegionUS915ChannelAdd( ChannelAddParams_t* channelAdd )
-{
-    return LORAMAC_STATUS_PARAMETER_INVALID;
-}
-
-bool RegionUS915ChannelsRemove( ChannelRemoveParams_t* channelRemove  )
-{
-    return LORAMAC_STATUS_PARAMETER_INVALID;
-}
-
-void RegionUS915SetContinuousWave( ContinuousWaveParams_t* continuousWave )
-{
-    int8_t txPowerLimited = LimitTxPower( continuousWave->TxPower, NvmCtx.Bands[NvmCtx.Channels[continuousWave->Channel].Band].TxMaxPower, continuousWave->Datarate, NvmCtx.ChannelsMask );
-    int8_t phyTxPower = 0;
-    uint32_t frequency = NvmCtx.Channels[continuousWave->Channel].Frequency;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, US915_DEFAULT_MAX_ERP, 0 );
-
-    Radio.SetTxContinuousWave( frequency, phyTxPower, continuousWave->Timeout );
-}
-
-uint8_t RegionUS915ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset )
-{
-    int8_t datarate = DatarateOffsetsUS915[dr][drOffset];
-
-    if( datarate < 0 )
-    {
-        datarate = DR_0;
-    }
-    return datarate;
-}
-
-void RegionUS915RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr )
-{
-    RegionCommonRxBeaconSetupParams_t regionCommonRxBeaconSetup;
-
-    regionCommonRxBeaconSetup.Datarates = DataratesUS915;
-    regionCommonRxBeaconSetup.Frequency = rxBeaconSetup->Frequency;
-    regionCommonRxBeaconSetup.BeaconSize = US915_BEACON_SIZE;
-    regionCommonRxBeaconSetup.BeaconDatarate = US915_BEACON_CHANNEL_DR;
-    regionCommonRxBeaconSetup.BeaconChannelBW = US915_BEACON_CHANNEL_BW;
-    regionCommonRxBeaconSetup.RxTime = rxBeaconSetup->RxTime;
-    regionCommonRxBeaconSetup.SymbolTimeout = rxBeaconSetup->SymbolTimeout;
-
-    RegionCommonRxBeaconSetup( &regionCommonRxBeaconSetup );
-
-    // Store downlink datarate
-    *outDr = US915_BEACON_CHANNEL_DR;
-}
diff --git a/mac/region/RegionUS915.c.bak b/mac/region/RegionUS915.c.bak
deleted file mode 100644
index 55a6042..0000000
--- a/mac/region/RegionUS915.c.bak
+++ /dev/null
@@ -1,1088 +0,0 @@
-/*!
- * \file      RegionUS915.c
- *
- * \brief     Region implementation for US915
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
-*/
-#include "utilities.h"
-
-#include "RegionCommon.h"
-#include "RegionUS915.h"
-
-// Definitions
-#define CHANNELS_MASK_SIZE              6
-
-// A mask to select only valid 500KHz channels
-#define CHANNELS_MASK_500KHZ_MASK       0x00FF
-
-/*!
- * Region specific context
- */
-typedef struct sRegionUS915NvmCtx
-{
-    /*!
-     * LoRaMAC channels
-     */
-    ChannelParams_t Channels[ US915_MAX_NB_CHANNELS ];
-    /*!
-     * LoRaMac bands
-     */
-    Band_t Bands[ US915_MAX_NB_BANDS ];
-    /*!
-     * LoRaMac channels mask
-     */
-    uint16_t ChannelsMask[ CHANNELS_MASK_SIZE ];
-    /*!
-     * LoRaMac channels remaining
-     */
-    uint16_t ChannelsMaskRemaining[CHANNELS_MASK_SIZE];
-    /*!
-     * LoRaMac channels default mask
-     */
-    uint16_t ChannelsDefaultMask[ CHANNELS_MASK_SIZE ];
-    /*!
-     * Index of current in use 8 bit group (0: bit 0 - 7, 1: bit 8 - 15, ..., 7: bit 56 - 63)
-     */
-    uint8_t JoinChannelGroupsCurrentIndex;
-    /*!
-     * Counter of join trials needed to alternate between DR0 and DR4, see \ref RegionUS915AlternateDr
-     */
-    uint8_t JoinTrialsCounter;
-}RegionUS915NvmCtx_t;
-
-/*
- * Non-volatile module context.
- */
-static RegionUS915NvmCtx_t NvmCtx;
-
-// Static functions
-static int8_t GetNextLowerTxDr( int8_t dr, int8_t minDr )
-{
-    uint8_t nextLowerDr = 0;
-
-    if( dr == minDr )
-    {
-        nextLowerDr = minDr;
-    }
-    else
-    {
-        nextLowerDr = dr - 1;
-    }
-    return nextLowerDr;
-}
-
-/*!
- * \brief Searches for available 125 kHz channels in the given channel mask.
- *
- * \param [IN] channelMaskRemaining The remaining channel mask.
- *
- * \param [OUT] findAvailableChannelsIndex List containing the indexes of all available 125 kHz channels.
- *
- * \param [OUT] availableChannels Number of available 125 kHz channels.
- *
- * \retval Status
- */
-static LoRaMacStatus_t FindAvailable125kHzChannels( uint8_t* findAvailableChannelsIndex, uint16_t channelMaskRemaining, uint8_t* availableChannels )
-{
-    // Nullpointer check
-    if( findAvailableChannelsIndex == NULL || availableChannels == NULL )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-
-    // Initialize counter
-    *availableChannels = 0;
-    for( uint8_t i = 0; i < 8; i++ )
-    {
-        // Find available channels
-        if( ( channelMaskRemaining & ( 1 << i ) ) != 0 )
-        {
-            // Save available channel index
-            findAvailableChannelsIndex[*availableChannels] = i;
-            // Increment counter of available channels if the current channel is available
-            ( *availableChannels )++;
-        }
-    }
-
-    return LORAMAC_STATUS_OK;
-}
-
-/*!
- * \brief Computes the next 125kHz channel used for join requests.
- *
- * \param [OUT] newChannelIndex Index of available channel.
- *
- * \retval Status
- */
-static LoRaMacStatus_t ComputeNext125kHzJoinChannel( uint8_t* newChannelIndex )
-{
-    uint8_t currentChannelsMaskRemainingIndex;
-    uint16_t channelMaskRemaining;
-    uint8_t findAvailableChannelsIndex[8] = { 0 };
-    uint8_t availableChannels = 0;
-    uint8_t startIndex = NvmCtx.JoinChannelGroupsCurrentIndex;
-
-    // Null pointer check
-    if( newChannelIndex == NULL )
-    {
-        return LORAMAC_STATUS_PARAMETER_INVALID;
-    }
-
-    do {
-        // Current ChannelMaskRemaining, two groups per channel mask. For example Group 0 and 1 (8 bit) are ChannelMaskRemaining 0 (16 bit), etc.
-        currentChannelsMaskRemainingIndex = (uint8_t) startIndex / 2;
-
-        // For even numbers we need the 8 LSBs and for uneven the 8 MSBs
-        if( ( startIndex % 2 ) == 0 )
-        {
-            channelMaskRemaining = ( NvmCtx.ChannelsMaskRemaining[currentChannelsMaskRemainingIndex] & 0x00FF );
-        }
-        else
-        {
-            channelMaskRemaining = ( ( NvmCtx.ChannelsMaskRemaining[currentChannelsMaskRemainingIndex] >> 8 ) & 0x00FF );
-        }
-
-
-        if( FindAvailable125kHzChannels( findAvailableChannelsIndex, channelMaskRemaining, &availableChannels ) == LORAMAC_STATUS_PARAMETER_INVALID )
-        {
-            return LORAMAC_STATUS_PARAMETER_INVALID;
-        }
-
-        if ( availableChannels > 0 )
-        {
-            // Choose randomly a free channel 125kHz
-            *newChannelIndex = ( startIndex * 8 ) + findAvailableChannelsIndex[randr( 0, ( availableChannels - 1 ) )];
-        }
-
-        // Increment start index
-        startIndex++;
-        if ( startIndex > 7 )
-        {
-            startIndex = 0;
-        }
-    } while( ( availableChannels == 0 ) && ( startIndex != NvmCtx.JoinChannelGroupsCurrentIndex ) );
-
-    if ( availableChannels > 0 )
-    {
-        NvmCtx.JoinChannelGroupsCurrentIndex = startIndex;
-        return LORAMAC_STATUS_OK;
-    }
-
-    return LORAMAC_STATUS_PARAMETER_INVALID;
-}
-
-static uint32_t GetBandwidth( uint32_t drIndex )
-{
-    switch( BandwidthsUS915[drIndex] )
-    {
-        default:
-        case 125000:
-            return 0;
-        case 250000:
-            return 1;
-        case 500000:
-            return 2;
-    }
-}
-
-static int8_t LimitTxPower( int8_t txPower, int8_t maxBandTxPower, int8_t datarate, uint16_t* channelsMask )
-{
-    int8_t txPowerResult = txPower;
-
-    // Limit tx power to the band max
-    txPowerResult =  MAX( txPower, maxBandTxPower );
-
-    if( datarate == DR_4 )
-    {// Limit tx power to max 26dBm
-        txPowerResult = MAX( txPower, TX_POWER_2 );
-    }
-    else
-    {
-        if( RegionCommonCountChannels( channelsMask, 0, 4 ) < 50 )
-        {// Limit tx power to max 21dBm
-            txPowerResult = MAX( txPower, TX_POWER_5 );
-        }
-    }
-    return txPowerResult;
-}
-
-static bool VerifyRfFreq( uint32_t freq )
-{
-    // Check radio driver support
-    if( Radio.CheckRfFrequency( freq ) == false )
-    {
-        return false;
-    }
-
-    // Rx frequencies
-    if( ( freq < US915_FIRST_RX1_CHANNEL ) ||
-        ( freq > US915_LAST_RX1_CHANNEL ) ||
-        ( ( ( freq - ( uint32_t ) US915_FIRST_RX1_CHANNEL ) % ( uint32_t ) US915_STEPWIDTH_RX1_CHANNEL ) != 0 ) )
-    {
-        return false;
-    }
-
-    // Test for frequency range - take RX and TX freqencies into account
-    if( ( freq < 902300000 ) ||  ( freq > 927500000 ) )
-    {
-        return false;
-    }
-    return true;
-}
-
-PhyParam_t RegionUS915GetPhyParam( GetPhyParams_t* getPhy )
-{
-    PhyParam_t phyParam = { 0 };
-
-    switch( getPhy->Attribute )
-    {
-        case PHY_MIN_RX_DR:
-        {
-            phyParam.Value = US915_RX_MIN_DATARATE;
-            break;
-        }
-        case PHY_MIN_TX_DR:
-        {
-            phyParam.Value = US915_TX_MIN_DATARATE;
-            break;
-        }
-        case PHY_DEF_TX_DR:
-        {
-            phyParam.Value = US915_DEFAULT_DATARATE;
-            break;
-        }
-        case PHY_NEXT_LOWER_TX_DR:
-        {
-            phyParam.Value = GetNextLowerTxDr( getPhy->Datarate, US915_TX_MIN_DATARATE );
-            break;
-        }
-        case PHY_MAX_TX_POWER:
-        {
-            phyParam.Value = US915_MAX_TX_POWER;
-            break;
-        }
-        case PHY_DEF_TX_POWER:
-        {
-            phyParam.Value = US915_DEFAULT_TX_POWER;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_LIMIT:
-        {
-            phyParam.Value = US915_ADR_ACK_LIMIT;
-            break;
-        }
-        case PHY_DEF_ADR_ACK_DELAY:
-        {
-            phyParam.Value = US915_ADR_ACK_DELAY;
-            break;
-        }
-        case PHY_MAX_PAYLOAD:
-        {
-            phyParam.Value = MaxPayloadOfDatarateUS915[getPhy->Datarate];
-            break;
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            phyParam.Value = US915_DUTY_CYCLE_ENABLED;
-            break;
-        }
-        case PHY_MAX_RX_WINDOW:
-        {
-            phyParam.Value = US915_MAX_RX_WINDOW;
-            break;
-        }
-        case PHY_RECEIVE_DELAY1:
-        {
-            phyParam.Value = US915_RECEIVE_DELAY1;
-            break;
-        }
-        case PHY_RECEIVE_DELAY2:
-        {
-            phyParam.Value = US915_RECEIVE_DELAY2;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY1:
-        {
-            phyParam.Value = US915_JOIN_ACCEPT_DELAY1;
-            break;
-        }
-        case PHY_JOIN_ACCEPT_DELAY2:
-        {
-            phyParam.Value = US915_JOIN_ACCEPT_DELAY2;
-            break;
-        }
-        case PHY_MAX_FCNT_GAP:
-        {
-            phyParam.Value = US915_MAX_FCNT_GAP;
-            break;
-        }
-        case PHY_ACK_TIMEOUT:
-        {
-            phyParam.Value = ( US915_ACKTIMEOUT + randr( -US915_ACK_TIMEOUT_RND, US915_ACK_TIMEOUT_RND ) );
-            break;
-        }
-        case PHY_DEF_DR1_OFFSET:
-        {
-            phyParam.Value = US915_DEFAULT_RX1_DR_OFFSET;
-            break;
-        }
-        case PHY_DEF_RX2_FREQUENCY:
-        {
-            phyParam.Value = US915_RX_WND_2_FREQ;
-            break;
-        }
-        case PHY_DEF_RX2_DR:
-        {
-            phyParam.Value = US915_RX_WND_2_DR;
-            break;
-        }
-        case PHY_CHANNELS_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsMask;
-            break;
-        }
-        case PHY_CHANNELS_DEFAULT_MASK:
-        {
-            phyParam.ChannelsMask = NvmCtx.ChannelsDefaultMask;
-            break;
-        }
-        case PHY_MAX_NB_CHANNELS:
-        {
-            phyParam.Value = US915_MAX_NB_CHANNELS;
-            break;
-        }
-        case PHY_CHANNELS:
-        {
-            phyParam.Channels = NvmCtx.Channels;
-            break;
-        }
-        case PHY_DEF_UPLINK_DWELL_TIME:
-        case PHY_DEF_DOWNLINK_DWELL_TIME:
-        {
-            phyParam.Value = 0;
-            break;
-        }
-        case PHY_DEF_MAX_EIRP:
-        {
-            phyParam.fValue = US915_DEFAULT_MAX_ERP + 2.15;
-            break;
-        }
-        case PHY_DEF_ANTENNA_GAIN:
-        {
-            phyParam.fValue = 0;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_FREQ:
-        {
-            phyParam.Value = US915_BEACON_CHANNEL_FREQ;
-            break;
-        }
-        case PHY_BEACON_FORMAT:
-        {
-            phyParam.BeaconFormat.BeaconSize = US915_BEACON_SIZE;
-            phyParam.BeaconFormat.Rfu1Size = US915_RFU1_SIZE;
-            phyParam.BeaconFormat.Rfu2Size = US915_RFU2_SIZE;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_DR:
-        {
-            phyParam.Value = US915_BEACON_CHANNEL_DR;
-            break;
-        }
-        case PHY_BEACON_CHANNEL_STEPWIDTH:
-        {
-            phyParam.Value = US915_BEACON_CHANNEL_STEPWIDTH;
-            break;
-        }
-        case PHY_BEACON_NB_CHANNELS:
-        {
-            phyParam.Value = US915_BEACON_NB_CHANNELS;
-            break;
-        }
-        case PHY_PING_SLOT_CHANNEL_DR:
-        {
-            phyParam.Value = US915_PING_SLOT_CHANNEL_DR;
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-
-    return phyParam;
-}
-
-void RegionUS915SetBandTxDone( SetBandTxDoneParams_t* txDone )
-{
-    RegionCommonSetBandTxDone( txDone->Joined, &NvmCtx.Bands[NvmCtx.Channels[txDone->Channel].Band], txDone->LastTxDoneTime );
-}
-
-void RegionUS915InitDefaults( InitDefaultsParams_t* params )
-{
-    Band_t bands[US915_MAX_NB_BANDS] =
-    {
-       US915_BAND0
-    };
-
-    switch( params->Type )
-    {
-        case INIT_TYPE_BANDS:
-        {
-            // Initialize bands
-            memcpy1( ( uint8_t* )NvmCtx.Bands, ( uint8_t* )bands, sizeof( Band_t ) * US915_MAX_NB_BANDS );
-            break;
-        }
-        case INIT_TYPE_INIT:
-        {
-            // Initialize 8 bit channel groups index
-            NvmCtx.JoinChannelGroupsCurrentIndex = 0;
-
-            // Initialize the join trials counter
-            NvmCtx.JoinTrialsCounter = 0;
-
-            // Channels
-            // 125 kHz channels
-            for( uint8_t i = 0; i < US915_MAX_NB_CHANNELS - 8; i++ )
-            {
-                NvmCtx.Channels[i].Frequency = 902300000 + i * 200000;
-                NvmCtx.Channels[i].DrRange.Value = ( DR_3 << 4 ) | DR_0;
-                NvmCtx.Channels[i].Band = 0;
-            }
-            // 500 kHz channels
-            for( uint8_t i = US915_MAX_NB_CHANNELS - 8; i < US915_MAX_NB_CHANNELS; i++ )
-            {
-                NvmCtx.Channels[i].Frequency = 903000000 + ( i - ( US915_MAX_NB_CHANNELS - 8 ) ) * 1600000;
-                NvmCtx.Channels[i].DrRange.Value = ( DR_4 << 4 ) | DR_4;
-                NvmCtx.Channels[i].Band = 0;
-            }
-
-            // ChannelsMask
-            NvmCtx.ChannelsDefaultMask[0] = 0xFFFF;
-            NvmCtx.ChannelsDefaultMask[1] = 0xFFFF;
-            NvmCtx.ChannelsDefaultMask[2] = 0xFFFF;
-            NvmCtx.ChannelsDefaultMask[3] = 0xFFFF;
-            NvmCtx.ChannelsDefaultMask[4] = 0x00FF;
-            NvmCtx.ChannelsDefaultMask[5] = 0x0000;
-
-            // Copy channels default mask
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, NvmCtx.ChannelsDefaultMask, 6 );
-
-            // Copy into channels mask remaining
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMaskRemaining, NvmCtx.ChannelsMask, 6 );
-            break;
-        }
-        case INIT_TYPE_RESTORE_CTX:
-        {
-            if( params->NvmCtx != 0 )
-            {
-                memcpy1( (uint8_t*) &NvmCtx, (uint8_t*) params->NvmCtx, sizeof( NvmCtx ) );
-            }
-            break;
-        }
-        case INIT_TYPE_RESTORE_DEFAULT_CHANNELS:
-        {
-            // Copy channels default mask
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, NvmCtx.ChannelsDefaultMask, 6 );
-
-            for( uint8_t i = 0; i < 6; i++ )
-            { // Copy-And the channels mask
-                NvmCtx.ChannelsMaskRemaining[i] &= NvmCtx.ChannelsMask[i];
-            }
-            break;
-        }
-        default:
-        {
-            break;
-        }
-    }
-}
-
-void* RegionUS915GetNvmCtx( GetNvmCtxParams_t* params )
-{
-    params->nvmCtxSize = sizeof( RegionUS915NvmCtx_t );
-    return &NvmCtx;
-}
-
-bool RegionUS915Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute )
-{
-    switch( phyAttribute )
-    {
-        case PHY_FREQUENCY:
-        {
-            return VerifyRfFreq( verify->Frequency );
-        }
-        case PHY_TX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, US915_TX_MIN_DATARATE, US915_TX_MAX_DATARATE );
-        }
-        case PHY_DEF_TX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, DR_0, DR_5 );
-        }
-        case PHY_RX_DR:
-        {
-            return RegionCommonValueInRange( verify->DatarateParams.Datarate, US915_RX_MIN_DATARATE, US915_RX_MAX_DATARATE );
-        }
-        case PHY_DEF_TX_POWER:
-        case PHY_TX_POWER:
-        {
-            // Remark: switched min and max!
-            return RegionCommonValueInRange( verify->TxPower, US915_MAX_TX_POWER, US915_MIN_TX_POWER );
-        }
-        case PHY_DUTY_CYCLE:
-        {
-            return US915_DUTY_CYCLE_ENABLED;
-        }
-        default:
-            return false;
-    }
-}
-
-void RegionUS915ApplyCFList( ApplyCFListParams_t* applyCFList )
-{
-    // Size of the optional CF list must be 16 byte
-    if( applyCFList->Size != 16 )
-    {
-        return;
-    }
-
-    // Last byte CFListType must be 0x01 to indicate the CFList contains a series of ChMask fields
-    if( applyCFList->Payload[15] != 0x01 )
-    {
-        return;
-    }
-
-    // ChMask0 - ChMask4 must be set (every ChMask has 16 bit)
-    for( uint8_t chMaskItr = 0, cntPayload = 0; chMaskItr <= 4; chMaskItr++, cntPayload+=2 )
-    {
-        NvmCtx.ChannelsMask[chMaskItr] = (uint16_t) (0x00FF & applyCFList->Payload[cntPayload]);
-        NvmCtx.ChannelsMask[chMaskItr] |= (uint16_t) (applyCFList->Payload[cntPayload+1] << 8);
-        if( chMaskItr == 4 )
-        {
-            NvmCtx.ChannelsMask[chMaskItr] = NvmCtx.ChannelsMask[chMaskItr] & CHANNELS_MASK_500KHZ_MASK;
-        }
-        // Set the channel mask to the remaining
-        NvmCtx.ChannelsMaskRemaining[chMaskItr] &= NvmCtx.ChannelsMask[chMaskItr];
-    }
-}
-
-bool RegionUS915ChanMaskSet( ChanMaskSetParams_t* chanMaskSet )
-{
-    uint8_t nbChannels = RegionCommonCountChannels( chanMaskSet->ChannelsMaskIn, 0, 4 );
-
-    // Check the number of active channels
-    if( ( nbChannels < 2 ) &&
-        ( nbChannels > 0 ) )
-    {
-        return false;
-    }
-
-    switch( chanMaskSet->ChannelsMaskType )
-    {
-        case CHANNELS_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, chanMaskSet->ChannelsMaskIn, CHANNELS_MASK_SIZE );
-
-            NvmCtx.ChannelsDefaultMask[4] = NvmCtx.ChannelsDefaultMask[4] & CHANNELS_MASK_500KHZ_MASK;
-            NvmCtx.ChannelsDefaultMask[5] = 0x0000;
-
-            for( uint8_t i = 0; i < CHANNELS_MASK_SIZE; i++ )
-            { // Copy-And the channels mask
-                NvmCtx.ChannelsMaskRemaining[i] &= NvmCtx.ChannelsMask[i];
-            }
-            break;
-        }
-        case CHANNELS_DEFAULT_MASK:
-        {
-            RegionCommonChanMaskCopy( NvmCtx.ChannelsDefaultMask, chanMaskSet->ChannelsMaskIn, CHANNELS_MASK_SIZE );
-            break;
-        }
-        default:
-            return false;
-    }
-    return true;
-}
-
-void RegionUS915ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams )
-{
-    double tSymbol = 0.0;
-
-    // Get the datarate, perform a boundary check
-    rxConfigParams->Datarate = MIN( datarate, US915_RX_MAX_DATARATE );
-    rxConfigParams->Bandwidth = GetBandwidth( rxConfigParams->Datarate );
-
-    tSymbol = RegionCommonComputeSymbolTimeLoRa( DataratesUS915[rxConfigParams->Datarate], BandwidthsUS915[rxConfigParams->Datarate] );
-
-    RegionCommonComputeRxWindowParameters( tSymbol, minRxSymbols, rxError, Radio.GetWakeupTime( ), &rxConfigParams->WindowTimeout, &rxConfigParams->WindowOffset );
-}
-
-bool RegionUS915RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate )
-{
-    int8_t dr = rxConfig->Datarate;
-    int8_t phyDr = 0;
-    uint32_t frequency = rxConfig->Frequency;
-
-    if( Radio.GetStatus( ) != RF_IDLE )
-    {
-        return false;
-    }
-
-    if( rxConfig->RxSlot == RX_SLOT_WIN_1 )
-    {
-        // Apply window 1 frequency
-        frequency = US915_FIRST_RX1_CHANNEL + ( rxConfig->Channel % 8 ) * US915_STEPWIDTH_RX1_CHANNEL;
-    }
-
-    // Read the physical datarate from the datarates table
-    phyDr = DataratesUS915[dr];
-
-    Radio.SetChannel( frequency );
-
-    // Radio configuration
-    Radio.SetRxConfig( MODEM_LORA, rxConfig->Bandwidth, phyDr, 1, 0, 8, rxConfig->WindowTimeout, false, 0, false, 0, 0, true, rxConfig->RxContinuous );
-
-    Radio.SetMaxPayloadLength( MODEM_LORA, MaxPayloadOfDatarateUS915[dr] + LORA_MAC_FRMPAYLOAD_OVERHEAD );
-
-    *datarate = (uint8_t) dr;
-    return true;
-}
-
-bool RegionUS915TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir )
-{
-    int8_t phyDr = DataratesUS915[txConfig->Datarate];
-    int8_t txPowerLimited = LimitTxPower( txConfig->TxPower, NvmCtx.Bands[NvmCtx.Channels[txConfig->Channel].Band].TxMaxPower, txConfig->Datarate, NvmCtx.ChannelsMask );
-    uint32_t bandwidth = GetBandwidth( txConfig->Datarate );
-    int8_t phyTxPower = 0;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, US915_DEFAULT_MAX_ERP, 0 );
-
-    // Setup the radio frequency
-    Radio.SetChannel( NvmCtx.Channels[txConfig->Channel].Frequency );
-
-    Radio.SetTxConfig( MODEM_LORA, phyTxPower, 0, bandwidth, phyDr, 1, 8, false, true, 0, 0, false, 4000 );
-
-    // Setup maximum payload lenght of the radio driver
-    Radio.SetMaxPayloadLength( MODEM_LORA, txConfig->PktLen );
-    // Get the time-on-air of the next tx frame
-    *txTimeOnAir = Radio.TimeOnAir( MODEM_LORA, txConfig->PktLen );
-    *txPower = txPowerLimited;
-
-    return true;
-}
-
-uint8_t RegionUS915LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed )
-{
-    uint8_t status = 0x07;
-    RegionCommonLinkAdrParams_t linkAdrParams;
-    uint8_t nextIndex = 0;
-    uint8_t bytesProcessed = 0;
-    uint16_t channelsMask[6] = { 0, 0, 0, 0, 0, 0 };
-    GetPhyParams_t getPhy;
-    PhyParam_t phyParam;
-    RegionCommonLinkAdrReqVerifyParams_t linkAdrVerifyParams;
-
-    // Initialize local copy of channels mask
-    RegionCommonChanMaskCopy( channelsMask, NvmCtx.ChannelsMask, 6 );
-
-    while( bytesProcessed < linkAdrReq->PayloadSize )
-    {
-        nextIndex = RegionCommonParseLinkAdrReq( &( linkAdrReq->Payload[bytesProcessed] ), &linkAdrParams );
-
-        if( nextIndex == 0 )
-            break; // break loop, since no more request has been found
-
-        // Update bytes processed
-        bytesProcessed += nextIndex;
-
-        // Revert status, as we only check the last ADR request for the channel mask KO
-        status = 0x07;
-
-        if( linkAdrParams.ChMaskCtrl == 6 )
-        {
-            // Enable all 125 kHz channels
-            channelsMask[0] = 0xFFFF;
-            channelsMask[1] = 0xFFFF;
-            channelsMask[2] = 0xFFFF;
-            channelsMask[3] = 0xFFFF;
-            // Apply chMask to channels 64 to 71
-            channelsMask[4] = linkAdrParams.ChMask & CHANNELS_MASK_500KHZ_MASK;
-        }
-        else if( linkAdrParams.ChMaskCtrl == 7 )
-        {
-            // Disable all 125 kHz channels
-            channelsMask[0] = 0x0000;
-            channelsMask[1] = 0x0000;
-            channelsMask[2] = 0x0000;
-            channelsMask[3] = 0x0000;
-            // Apply chMask to channels 64 to 71
-            channelsMask[4] = linkAdrParams.ChMask & CHANNELS_MASK_500KHZ_MASK;
-        }
-        else if( linkAdrParams.ChMaskCtrl == 5 )
-        {
-            // Start value for comparision
-            uint8_t bitMask = 1;
-
-            // cntChannelMask for channelsMask[0] until channelsMask[3]
-            uint8_t cntChannelMask = 0;
-
-            // i will be 1, 2, 3, ..., 7
-            for( uint8_t i = 0; i <= 7; i++ )
-            {
-                // 8 MSBs of ChMask are RFU
-                // Checking if the ChMask is set, then true
-                if( ( ( linkAdrParams.ChMask & 0x00FF ) & ( bitMask << i ) ) != 0 )
-                {
-                    if( ( i % 2 ) == 0 )
-                    {
-                        // Enable a bank of 8 125kHz channels, 8 LSBs
-                        channelsMask[cntChannelMask] |= 0x00FF;
-                        // Enable the corresponding 500kHz channel
-                        channelsMask[4] |= ( bitMask << i );
-                    }
-                    else
-                    {
-                        // Enable a bank of 8 125kHz channels, 8 MSBs
-                        channelsMask[cntChannelMask] |= 0xFF00;
-                        // Enable the corresponding 500kHz channel
-                        channelsMask[4] |= ( bitMask << i );
-                        // cntChannelMask increment for uneven i
-                        cntChannelMask++;
-                    }
-                }
-                // ChMask is not set
-                else
-                {
-                    if( ( i % 2 ) == 0 )
-                    {
-                        // Disable a bank of 8 125kHz channels, 8 LSBs
-                        channelsMask[cntChannelMask] &= 0xFF00;
-                        // Disable the corresponding 500kHz channel
-                        channelsMask[4] &= ~( bitMask << i );
-                    }
-                    else
-                    {
-                        // Enable a bank of 8 125kHz channels, 8 MSBs
-                        channelsMask[cntChannelMask] &= 0x00FF;
-                        // Disable the corresponding 500kHz channel
-                        channelsMask[4] &= ~( bitMask << i );
-                        // cntChannelMask increment for uneven i
-                        cntChannelMask++;
-                    }
-                }
-            }
-        }
-        else
-        {
-            channelsMask[linkAdrParams.ChMaskCtrl] = linkAdrParams.ChMask;
-        }
-    }
-
-    // FCC 15.247 paragraph F mandates to hop on at least 2 125 kHz channels
-    if( ( linkAdrParams.Datarate < DR_4 ) && ( RegionCommonCountChannels( channelsMask, 0, 4 ) < 2 ) )
-    {
-        status &= 0xFE; // Channel mask KO
-    }
-
-    // Get the minimum possible datarate
-    getPhy.Attribute = PHY_MIN_TX_DR;
-    getPhy.UplinkDwellTime = linkAdrReq->UplinkDwellTime;
-    phyParam = RegionUS915GetPhyParam( &getPhy );
-
-    linkAdrVerifyParams.Status = status;
-    linkAdrVerifyParams.AdrEnabled = linkAdrReq->AdrEnabled;
-    linkAdrVerifyParams.Datarate = linkAdrParams.Datarate;
-    linkAdrVerifyParams.TxPower = linkAdrParams.TxPower;
-    linkAdrVerifyParams.NbRep = linkAdrParams.NbRep;
-    linkAdrVerifyParams.CurrentDatarate = linkAdrReq->CurrentDatarate;
-    linkAdrVerifyParams.CurrentTxPower = linkAdrReq->CurrentTxPower;
-    linkAdrVerifyParams.CurrentNbRep = linkAdrReq->CurrentNbRep;
-    linkAdrVerifyParams.NbChannels = US915_MAX_NB_CHANNELS;
-    linkAdrVerifyParams.ChannelsMask = channelsMask;
-    linkAdrVerifyParams.MinDatarate = ( int8_t )phyParam.Value;
-    linkAdrVerifyParams.MaxDatarate = US915_TX_MAX_DATARATE;
-    linkAdrVerifyParams.Channels = NvmCtx.Channels;
-    linkAdrVerifyParams.MinTxPower = US915_MIN_TX_POWER;
-    linkAdrVerifyParams.MaxTxPower = US915_MAX_TX_POWER;
-    linkAdrVerifyParams.Version = linkAdrReq->Version;
-
-    // Verify the parameters and update, if necessary
-    status = RegionCommonLinkAdrReqVerifyParams( &linkAdrVerifyParams, &linkAdrParams.Datarate, &linkAdrParams.TxPower, &linkAdrParams.NbRep );
-
-    // Update channelsMask if everything is correct
-    if( status == 0x07 )
-    {
-        // Copy Mask
-        RegionCommonChanMaskCopy( NvmCtx.ChannelsMask, channelsMask, 6 );
-
-        NvmCtx.ChannelsMaskRemaining[0] &= NvmCtx.ChannelsMask[0];
-        NvmCtx.ChannelsMaskRemaining[1] &= NvmCtx.ChannelsMask[1];
-        NvmCtx.ChannelsMaskRemaining[2] &= NvmCtx.ChannelsMask[2];
-        NvmCtx.ChannelsMaskRemaining[3] &= NvmCtx.ChannelsMask[3];
-        NvmCtx.ChannelsMaskRemaining[4] = NvmCtx.ChannelsMask[4];
-        NvmCtx.ChannelsMaskRemaining[5] = NvmCtx.ChannelsMask[5];
-    }
-
-    // Update status variables
-    *drOut = linkAdrParams.Datarate;
-    *txPowOut = linkAdrParams.TxPower;
-    *nbRepOut = linkAdrParams.NbRep;
-    *nbBytesParsed = bytesProcessed;
-
-    return status;
-}
-
-uint8_t RegionUS915RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq )
-{
-    uint8_t status = 0x07;
-
-    // Verify radio frequency
-    if( VerifyRfFreq( rxParamSetupReq->Frequency ) == false )
-    {
-        status &= 0xFE; // Channel frequency KO
-    }
-
-    // Verify datarate
-    if( RegionCommonValueInRange( rxParamSetupReq->Datarate, US915_RX_MIN_DATARATE, US915_RX_MAX_DATARATE ) == false )
-    {
-        status &= 0xFD; // Datarate KO
-    }
-    if( ( RegionCommonValueInRange( rxParamSetupReq->Datarate, DR_5, DR_7 ) == true ) ||
-        ( rxParamSetupReq->Datarate > DR_13 ) )
-    {
-        status &= 0xFD; // Datarate KO
-    }
-
-    // Verify datarate offset
-    if( RegionCommonValueInRange( rxParamSetupReq->DrOffset, US915_MIN_RX1_DR_OFFSET, US915_MAX_RX1_DR_OFFSET ) == false )
-    {
-        status &= 0xFB; // Rx1DrOffset range KO
-    }
-
-    return status;
-}
-
-uint8_t RegionUS915NewChannelReq( NewChannelReqParams_t* newChannelReq )
-{
-    // Datarate and frequency KO
-    return 0;
-}
-
-int8_t RegionUS915TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq )
-{
-    return -1;
-}
-
-uint8_t RegionUS915DlChannelReq( DlChannelReqParams_t* dlChannelReq )
-{
-    return 0;
-}
-
-int8_t RegionUS915AlternateDr( int8_t currentDr, AlternateDrType_t type )
-{
-    // Alternates the data rate according to the channel sequence:
-    // Eight times a 125kHz DR_0 and then one 500kHz DR_4 channel
-    if( type == ALTERNATE_DR )
-    {
-        NvmCtx.JoinTrialsCounter++;
-    }
-    else
-    {
-        NvmCtx.JoinTrialsCounter--;
-    }
-
-    if( NvmCtx.JoinTrialsCounter % 9 == 0 )
-    {
-        // Use DR_4 every 9th times.
-        currentDr = DR_4;
-    }
-    else
-    {
-        currentDr = DR_0;
-    }
-    return currentDr;
-}
-
-void RegionUS915CalcBackOff( CalcBackOffParams_t* calcBackOff )
-{
-    RegionCommonCalcBackOffParams_t calcBackOffParams;
-
-    calcBackOffParams.Channels = NvmCtx.Channels;
-    calcBackOffParams.Bands = NvmCtx.Bands;
-    calcBackOffParams.LastTxIsJoinRequest = calcBackOff->LastTxIsJoinRequest;
-    calcBackOffParams.Joined = calcBackOff->Joined;
-    calcBackOffParams.DutyCycleEnabled = calcBackOff->DutyCycleEnabled;
-    calcBackOffParams.Channel = calcBackOff->Channel;
-    calcBackOffParams.ElapsedTime = calcBackOff->ElapsedTime;
-    calcBackOffParams.TxTimeOnAir = calcBackOff->TxTimeOnAir;
-
-    RegionCommonCalcBackOff( &calcBackOffParams );
-}
-
-LoRaMacStatus_t RegionUS915NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff )
-{
-    uint8_t nbEnabledChannels = 0;
-    uint8_t nbRestrictedChannels = 0;
-    uint8_t enabledChannels[US915_MAX_NB_CHANNELS] = { 0 };
-    uint8_t newChannelIndex = 0;
-    RegionCommonIdentifyChannelsParam_t identifyChannelsParam;
-    RegionCommonCountNbOfEnabledChannelsParams_t countChannelsParams;
-    LoRaMacStatus_t status = LORAMAC_STATUS_NO_CHANNEL_FOUND;
-
-    // Count 125kHz channels
-    if( RegionCommonCountChannels( NvmCtx.ChannelsMaskRemaining, 0, 4 ) == 0 )
-    { // Reactivate default channels
-        RegionCommonChanMaskCopy( NvmCtx.ChannelsMaskRemaining, NvmCtx.ChannelsMask, 4  );
-
-        NvmCtx.JoinChannelGroupsCurrentIndex = 0;
-    }
-    // Check other channels
-    if( nextChanParams->Datarate >= DR_4 )
-    {
-        if( ( NvmCtx.ChannelsMaskRemaining[4] & CHANNELS_MASK_500KHZ_MASK ) == 0 )
-        {
-            NvmCtx.ChannelsMaskRemaining[4] = NvmCtx.ChannelsMask[4];
-        }
-    }
-
-    // Search how many channels are enabled
-    countChannelsParams.Joined = nextChanParams->Joined;
-    countChannelsParams.Datarate = nextChanParams->Datarate;
-    countChannelsParams.ChannelsMask = NvmCtx.ChannelsMaskRemaining;
-    countChannelsParams.Channels = NvmCtx.Channels;
-    countChannelsParams.Bands = NvmCtx.Bands;
-    countChannelsParams.MaxNbChannels = US915_MAX_NB_CHANNELS;
-    countChannelsParams.JoinChannels = 0;
-
-    identifyChannelsParam.AggrTimeOff = nextChanParams->AggrTimeOff;
-    identifyChannelsParam.LastAggrTx = nextChanParams->LastAggrTx;
-    identifyChannelsParam.DutyCycleEnabled = nextChanParams->DutyCycleEnabled;
-    identifyChannelsParam.MaxBands = US915_MAX_NB_BANDS;
-
-    identifyChannelsParam.CountNbOfEnabledChannelsParam = &countChannelsParams;
-
-    status = RegionCommonIdentifyChannels( &identifyChannelsParam, aggregatedTimeOff, enabledChannels,
-                                           &nbEnabledChannels, &nbRestrictedChannels, time );
-
-    if( nextChanParams->QueryNextTxDelayOnly == true )
-    {
-        return status;
-    }
-
-    if( status == LORAMAC_STATUS_OK )
-    {
-        if( nextChanParams->Joined == true )
-        {
-            // Choose randomly on of the remaining channels
-            *channel = enabledChannels[randr( 0, nbEnabledChannels - 1 )];
-        }
-        else
-        {
-            // For rapid network acquisition in mixed gateway channel plan environments, the device
-            // follow a random channel selection sequence. It probes alternating one out of a
-            // group of eight 125 kHz channels followed by probing one 500 kHz channel each pass.
-            // Each time a 125 kHz channel will be selected from another group.
-
-            // 125kHz Channels (0 - 63) DR0
-            if( nextChanParams->Datarate == DR_0 )
-            {
-                if( ComputeNext125kHzJoinChannel( &newChannelIndex ) == LORAMAC_STATUS_PARAMETER_INVALID )
-                {
-                    return LORAMAC_STATUS_PARAMETER_INVALID;
-                }
-                *channel = newChannelIndex;
-            }
-            // 500kHz Channels (64 - 71) DR4
-            else
-            {
-                // Choose the next available channel
-                uint8_t i = 0;
-                while( ( ( NvmCtx.ChannelsMaskRemaining[4] & CHANNELS_MASK_500KHZ_MASK ) & ( 1 << i ) ) == 0 )
-                {
-                    i++;
-                }
-                *channel = 64 + i;
-            }
-        }
-
-        // Disable the channel in the mask
-        RegionCommonChanDisable( NvmCtx.ChannelsMaskRemaining, *channel, US915_MAX_NB_CHANNELS );
-    }
-    return status;
-}
-
-LoRaMacStatus_t RegionUS915ChannelAdd( ChannelAddParams_t* channelAdd )
-{
-    return LORAMAC_STATUS_PARAMETER_INVALID;
-}
-
-bool RegionUS915ChannelsRemove( ChannelRemoveParams_t* channelRemove  )
-{
-    return LORAMAC_STATUS_PARAMETER_INVALID;
-}
-
-void RegionUS915SetContinuousWave( ContinuousWaveParams_t* continuousWave )
-{
-    int8_t txPowerLimited = LimitTxPower( continuousWave->TxPower, NvmCtx.Bands[NvmCtx.Channels[continuousWave->Channel].Band].TxMaxPower, continuousWave->Datarate, NvmCtx.ChannelsMask );
-    int8_t phyTxPower = 0;
-    uint32_t frequency = NvmCtx.Channels[continuousWave->Channel].Frequency;
-
-    // Calculate physical TX power
-    phyTxPower = RegionCommonComputeTxPower( txPowerLimited, US915_DEFAULT_MAX_ERP, 0 );
-
-    Radio.SetTxContinuousWave( frequency, phyTxPower, continuousWave->Timeout );
-}
-
-uint8_t RegionUS915ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset )
-{
-    int8_t datarate = DatarateOffsetsUS915[dr][drOffset];
-
-    if( datarate < 0 )
-    {
-        datarate = DR_0;
-    }
-    return datarate;
-}
-
-void RegionUS915RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr )
-{
-    RegionCommonRxBeaconSetupParams_t regionCommonRxBeaconSetup;
-
-    regionCommonRxBeaconSetup.Datarates = DataratesUS915;
-    regionCommonRxBeaconSetup.Frequency = rxBeaconSetup->Frequency;
-    regionCommonRxBeaconSetup.BeaconSize = US915_BEACON_SIZE;
-    regionCommonRxBeaconSetup.BeaconDatarate = US915_BEACON_CHANNEL_DR;
-    regionCommonRxBeaconSetup.BeaconChannelBW = US915_BEACON_CHANNEL_BW;
-    regionCommonRxBeaconSetup.RxTime = rxBeaconSetup->RxTime;
-    regionCommonRxBeaconSetup.SymbolTimeout = rxBeaconSetup->SymbolTimeout;
-
-    RegionCommonRxBeaconSetup( &regionCommonRxBeaconSetup );
-
-    // Store downlink datarate
-    *outDr = US915_BEACON_CHANNEL_DR;
-}
diff --git a/mac/region/RegionUS915.h b/mac/region/RegionUS915.h
deleted file mode 100644
index feb5cca..0000000
--- a/mac/region/RegionUS915.h
+++ /dev/null
@@ -1,507 +0,0 @@
-/*!
- * \file      RegionUS915.h
- *
- * \brief     Region definition for US915
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * \defgroup  REGIONUS915 Region US915
- *            Implementation according to LoRaWAN Specification v1.0.2.
- * \{
- */
-#ifndef __REGION_US915_H__
-#define __REGION_US915_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include "region/Region.h"
-
-/*!
- * LoRaMac maximum number of channels
- */
-#define US915_MAX_NB_CHANNELS                       72
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define US915_TX_MIN_DATARATE                       DR_0
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define US915_TX_MAX_DATARATE                       DR_4
-
-/*!
- * Minimal datarate that can be used by the node
- */
-#define US915_RX_MIN_DATARATE                       DR_8
-
-/*!
- * Maximal datarate that can be used by the node
- */
-#define US915_RX_MAX_DATARATE                       DR_13
-
-/*!
- * Default datarate used by the node
- */
-#define US915_DEFAULT_DATARATE                      DR_0
-
-/*!
- * Minimal Rx1 receive datarate offset
- */
-#define US915_MIN_RX1_DR_OFFSET                     0
-
-/*!
- * Maximal Rx1 receive datarate offset
- */
-#define US915_MAX_RX1_DR_OFFSET                     3
-
-/*!
- * Default Rx1 receive datarate offset
- */
-#define US915_DEFAULT_RX1_DR_OFFSET                 0
-
-/*!
- * Minimal Tx output power that can be used by the node
- */
-#define US915_MIN_TX_POWER                          TX_POWER_14
-
-/*!
- * Maximal Tx output power that can be used by the node
- */
-#define US915_MAX_TX_POWER                          TX_POWER_0
-
-/*!
- * Default Tx output power used by the node
- */
-#define US915_DEFAULT_TX_POWER                      TX_POWER_0
-
-/*!
- * Default Max ERP
- */
-#define US915_DEFAULT_MAX_ERP                      30.0f
-
-/*!
- * ADR Ack limit
- */
-#define US915_ADR_ACK_LIMIT                         64
-
-/*!
- * ADR Ack delay
- */
-#define US915_ADR_ACK_DELAY                         32
-
-/*!
- * Enabled or disabled the duty cycle
- */
-#define US915_DUTY_CYCLE_ENABLED                    0
-
-/*!
- * Maximum RX window duration
- */
-#define US915_MAX_RX_WINDOW                         3000
-
-/*!
- * Receive delay 1
- */
-#define US915_RECEIVE_DELAY1                        1000
-
-/*!
- * Receive delay 2
- */
-#define US915_RECEIVE_DELAY2                        2000
-
-/*!
- * Join accept delay 1
- */
-#define US915_JOIN_ACCEPT_DELAY1                    5000
-
-/*!
- * Join accept delay 2
- */
-#define US915_JOIN_ACCEPT_DELAY2                    6000
-
-/*!
- * Maximum frame counter gap
- */
-#define US915_MAX_FCNT_GAP                          16384
-
-/*!
- * Ack timeout
- */
-#define US915_ACKTIMEOUT                            2000
-
-/*!
- * Random ack timeout limits
- */
-#define US915_ACK_TIMEOUT_RND                       1000
-
-/*!
- * Second reception window channel frequency definition.
- */
-#define US915_RX_WND_2_FREQ                         923300000
-
-/*!
- * Second reception window channel datarate definition.
- */
-#define US915_RX_WND_2_DR                           DR_8
-
-/*
- * CLASS B
- */
-/*!
- * Beacon frequency
- */
-#define US915_BEACON_CHANNEL_FREQ                   923300000
-
-/*!
- * Beacon frequency channel stepwidth
- */
-#define US915_BEACON_CHANNEL_STEPWIDTH              600000
-
-/*!
- * Number of possible beacon channels
- */
-#define US915_BEACON_NB_CHANNELS                    8
-
-/*!
- * Payload size of a beacon frame
- */
-#define US915_BEACON_SIZE                           23
-
-/*!
- * Size of RFU 1 field
- */
-#define US915_RFU1_SIZE                             5
-
-/*!
- * Size of RFU 2 field
- */
-#define US915_RFU2_SIZE                             3
-
-/*!
- * Datarate of the beacon channel
- */
-#define US915_BEACON_CHANNEL_DR                     DR_8
-
-/*!
- * Bandwith of the beacon channel
- */
-#define US915_BEACON_CHANNEL_BW                     2
-
-/*!
- * Ping slot channel datarate
- */
-#define US915_PING_SLOT_CHANNEL_DR                  DR_8
-
-/*!
- * LoRaMac maximum number of bands
- */
-#define US915_MAX_NB_BANDS                          1
-
-/*!
- * Band 0 definition
- * { DutyCycle, TxMaxPower, LastJoinTxDoneTime, LastTxDoneTime, TimeOff }
- */
-#define US915_BAND0                                 { 1, US915_MAX_TX_POWER, 0, 0, 0 } //  100.0 %
-
-/*!
- * Defines the first channel for RX window 1 for US band
- */
-#define US915_FIRST_RX1_CHANNEL                     ( (uint32_t) 923300000 )
-
-/*!
- * Defines the last channel for RX window 1 for US band
- */
-#define US915_LAST_RX1_CHANNEL                      ( (uint32_t) 927500000 )
-
-/*!
- * Defines the step width of the channels for RX window 1
- */
-#define US915_STEPWIDTH_RX1_CHANNEL                 ( (uint32_t) 600000 )
-
-/*!
- * Data rates table definition
- */
-static const uint8_t DataratesUS915[]  = { 10, 9, 8,  7,  8,  0,  0, 0, 12, 11, 10, 9, 8, 7, 0, 0 };
-
-/*!
- * Bandwidths table definition in Hz
- */
-static const uint32_t BandwidthsUS915[] = { 125000, 125000, 125000, 125000, 500000, 0, 0, 0, 500000, 500000, 500000, 500000, 500000, 500000, 0, 0 };
-
-/*!
- * Up/Down link data rates offset definition
- */
-static const int8_t DatarateOffsetsUS915[5][4] =
-{
-    { DR_10, DR_9 , DR_8 , DR_8  }, // DR_0
-    { DR_11, DR_10, DR_9 , DR_8  }, // DR_1
-    { DR_12, DR_11, DR_10, DR_9  }, // DR_2
-    { DR_13, DR_12, DR_11, DR_10 }, // DR_3
-    { DR_13, DR_13, DR_12, DR_11 }, // DR_4
-};
-
-/*!
- * Maximum payload with respect to the datarate index.
- */
-static const uint8_t MaxPayloadOfDatarateUS915[] = { 11, 53, 125, 242, 242, 0, 0, 0, 53, 129, 242, 242, 242, 242, 0, 0 };
-
-/*!
- * \brief The function gets a value of a specific phy attribute.
- *
- * \param [IN] getPhy Pointer to the function parameters.
- *
- * \retval Returns a structure containing the PHY parameter.
- */
-PhyParam_t RegionUS915GetPhyParam( GetPhyParams_t* getPhy );
-
-/*!
- * \brief Updates the last TX done parameters of the current channel.
- *
- * \param [IN] txDone Pointer to the function parameters.
- */
-void RegionUS915SetBandTxDone( SetBandTxDoneParams_t* txDone );
-
-/*!
- * \brief Initializes the channels masks and the channels.
- *
- * \param [IN] type Sets the initialization type.
- */
-void RegionUS915InitDefaults( InitDefaultsParams_t* params );
-
-/*!
- * \brief Returns a pointer to the internal context and its size.
- *
- * \param [OUT] params Pointer to the function parameters.
- *
- * \retval      Points to a structure where the module store its non-volatile context.
- */
-void* RegionUS915GetNvmCtx( GetNvmCtxParams_t* params );
-
-/*!
- * \brief Verifies a parameter.
- *
- * \param [IN] verify Pointer to the function parameters.
- *
- * \param [IN] type Sets the initialization type.
- *
- * \retval Returns true, if the parameter is valid.
- */
-bool RegionUS915Verify( VerifyParams_t* verify, PhyAttribute_t phyAttribute );
-
-/*!
- * \brief The function parses the input buffer and sets up the channels of the
- *        CF list.
- *
- * \param [IN] applyCFList Pointer to the function parameters.
- */
-void RegionUS915ApplyCFList( ApplyCFListParams_t* applyCFList );
-
-/*!
- * \brief Sets a channels mask.
- *
- * \param [IN] chanMaskSet Pointer to the function parameters.
- *
- * \retval Returns true, if the channels mask could be set.
- */
-bool RegionUS915ChanMaskSet( ChanMaskSetParams_t* chanMaskSet );
-
-/*!
- * Computes the Rx window timeout and offset.
- *
- * \param [IN] datarate     Rx window datarate index to be used
- *
- * \param [IN] minRxSymbols Minimum required number of symbols to detect an Rx frame.
- *
- * \param [IN] rxError      System maximum timing error of the receiver. In milliseconds
- *                          The receiver will turn on in a [-rxError : +rxError] ms
- *                          interval around RxOffset
- *
- * \param [OUT]rxConfigParams Returns updated WindowTimeout and WindowOffset fields.
- */
-void RegionUS915ComputeRxWindowParameters( int8_t datarate, uint8_t minRxSymbols, uint32_t rxError, RxConfigParams_t *rxConfigParams );
-
-/*!
- * \brief Configuration of the RX windows.
- *
- * \param [IN] rxConfig Pointer to the function parameters.
- *
- * \param [OUT] datarate The datarate index which was set.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionUS915RxConfig( RxConfigParams_t* rxConfig, int8_t* datarate );
-
-/*!
- * \brief TX configuration.
- *
- * \param [IN] txConfig Pointer to the function parameters.
- *
- * \param [OUT] txPower The tx power index which was set.
- *
- * \param [OUT] txTimeOnAir The time-on-air of the frame.
- *
- * \retval Returns true, if the configuration was applied successfully.
- */
-bool RegionUS915TxConfig( TxConfigParams_t* txConfig, int8_t* txPower, TimerTime_t* txTimeOnAir );
-
-/*!
- * \brief The function processes a Link ADR Request.
- *
- * \param [IN] linkAdrReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionUS915LinkAdrReq( LinkAdrReqParams_t* linkAdrReq, int8_t* drOut, int8_t* txPowOut, uint8_t* nbRepOut, uint8_t* nbBytesParsed );
-
-/*!
- * \brief The function processes a RX Parameter Setup Request.
- *
- * \param [IN] rxParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionUS915RxParamSetupReq( RxParamSetupReqParams_t* rxParamSetupReq );
-
-/*!
- * \brief The function processes a Channel Request.
- *
- * \param [IN] newChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionUS915NewChannelReq( NewChannelReqParams_t* newChannelReq );
-
-/*!
- * \brief The function processes a TX ParamSetup Request.
- *
- * \param [IN] txParamSetupReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- *         Returns -1, if the functionality is not implemented. In this case, the end node
- *         shall not process the command.
- */
-int8_t RegionUS915TxParamSetupReq( TxParamSetupReqParams_t* txParamSetupReq );
-
-/*!
- * \brief The function processes a DlChannel Request.
- *
- * \param [IN] dlChannelReq Pointer to the function parameters.
- *
- * \retval Returns the status of the operation, according to the LoRaMAC specification.
- */
-uint8_t RegionUS915DlChannelReq( DlChannelReqParams_t* dlChannelReq );
-
-/*!
- * \brief Alternates the datarate of the channel for the join request.
- *
- * \param [IN] currentDr Current datarate.
- *
- * \param [IN] type Alternation type.
- *
- * \retval Datarate to apply.
- */
-int8_t RegionUS915AlternateDr( int8_t currentDr, AlternateDrType_t type );
-
-/*!
- * \brief Calculates the back-off time.
- *
- * \param [IN] calcBackOff Pointer to the function parameters.
- */
-void RegionUS915CalcBackOff( CalcBackOffParams_t* calcBackOff );
-
-/*!
- * \brief Searches and set the next random available channel
- *
- * \param [OUT] channel Next channel to use for TX.
- *
- * \param [OUT] time Time to wait for the next transmission according to the duty
- *              cycle.
- *
- * \param [OUT] aggregatedTimeOff Updates the aggregated time off.
- *
- * \retval Function status [1: OK, 0: Unable to find a channel on the current datarate]
- */
-LoRaMacStatus_t RegionUS915NextChannel( NextChanParams_t* nextChanParams, uint8_t* channel, TimerTime_t* time, TimerTime_t* aggregatedTimeOff );
-
-/*!
- * \brief Adds a channel.
- *
- * \param [IN] channelAdd Pointer to the function parameters.
- *
- * \retval Status of the operation.
- */
-LoRaMacStatus_t RegionUS915ChannelAdd( ChannelAddParams_t* channelAdd );
-
-/*!
- * \brief Removes a channel.
- *
- * \param [IN] channelRemove Pointer to the function parameters.
- *
- * \retval Returns true, if the channel was removed successfully.
- */
-bool RegionUS915ChannelsRemove( ChannelRemoveParams_t* channelRemove  );
-
-/*!
- * \brief Sets the radio into continuous wave mode.
- *
- * \param [IN] continuousWave Pointer to the function parameters.
- */
-void RegionUS915SetContinuousWave( ContinuousWaveParams_t* continuousWave );
-
-/*!
- * \brief Computes new datarate according to the given offset
- *
- * \param [IN] downlinkDwellTime Downlink dwell time configuration. 0: No limit, 1: 400ms
- *
- * \param [IN] dr Current datarate
- *
- * \param [IN] drOffset Offset to be applied
- *
- * \retval newDr Computed datarate.
- */
-uint8_t RegionUS915ApplyDrOffset( uint8_t downlinkDwellTime, int8_t dr, int8_t drOffset );
-
-/*!
- * \brief Sets the radio into beacon reception mode
- *
- * \param [IN] rxBeaconSetup Pointer to the function parameters
- */
- void RegionUS915RxBeaconSetup( RxBeaconSetup_t* rxBeaconSetup, uint8_t* outDr );
-
-/*! \} defgroup REGIONUS915 */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __REGION_US915_H__
diff --git a/mac/secure-element.h b/mac/secure-element.h
deleted file mode 100644
index 7dcd2b6..0000000
--- a/mac/secure-element.h
+++ /dev/null
@@ -1,240 +0,0 @@
-/*!
- * \file      secure-element.h
- *
- * \brief     Secure Element driver API
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013 Semtech
- *
- *               ___ _____ _   ___ _  _____ ___  ___  ___ ___
- *              / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
- *              \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
- *              |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
- *              embedded.connectivity.solutions===============
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    Daniel Jaeckle ( STACKFORCE )
- *
- * \author    Johannes Bruder ( STACKFORCE )
- *
- * \defgroup  SECUREELEMENT Secure Element API Definition
- *
- * \{
- *
- */
-#ifndef __SECURE_ELEMENT_H__
-#define __SECURE_ELEMENT_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-#include "LoRaMacCrypto.h"
-
-#define SE_EUI_SIZE             8
-
-/*!
- * Return values.
- */
-typedef enum eSecureElementStatus
-{
-    /*!
-     * No error occurred
-     */
-    SECURE_ELEMENT_SUCCESS = 0,
-    /*!
-     * Failed to encrypt
-     */
-    SECURE_ELEMENT_FAIL_ENCRYPT,
-    /*!
-     * CMAC does not match
-     */
-    SECURE_ELEMENT_FAIL_CMAC,
-    /*!
-     * Null pointer exception
-     */
-    SECURE_ELEMENT_ERROR_NPE,
-    /*!
-     * Invalid key identifier exception
-     */
-    SECURE_ELEMENT_ERROR_INVALID_KEY_ID,
-    /*!
-     * Invalid LoRaWAN specification version
-     */
-    SECURE_ELEMENT_ERROR_INVALID_LORAWAM_SPEC_VERSION,
-    /*!
-     * Incompatible buffer size
-     */
-    SECURE_ELEMENT_ERROR_BUF_SIZE,
-    /*!
-     * Undefined Error occurred
-     */
-    SECURE_ELEMENT_ERROR,
-}SecureElementStatus_t;
-
-/*!
- * Signature of callback function to be called by the Secure Element driver when the
- * non volatile context have to be stored.
- *
- */
-typedef void ( *SecureElementNvmEvent )( void );
-
-/*!
- * Initialization of Secure Element driver
- *
- * \param[IN]     seNvmCtxChanged           - Callback function which will be called  when the
- *                                            non-volatile context have to be stored.
- * \retval                                  - Status of the operation
- */
-SecureElementStatus_t SecureElementInit( SecureElementNvmEvent seNvmCtxChanged );
-
-/*!
- * Restores the internal nvm context from passed pointer.
- *
- * \param[IN]     seNvmCtx         - Pointer to non-volatile module context to be restored.
- * \retval                         - Status of the operation
- */
-SecureElementStatus_t SecureElementRestoreNvmCtx( void* seNvmCtx );
-
-/*!
- * Returns a pointer to the internal non-volatile context.
- *
- * \param[IN]     seNvmCtxSize    - Size of the module non volatile context
- * \retval                        - Points to a structure where the module store its non volatile context
- */
-void* SecureElementGetNvmCtx( size_t* seNvmCtxSize );
-
-/*!
- * Sets a key
- *
- * \param[IN]  keyID          - Key identifier
- * \param[IN]  key            - Key value
- * \retval                    - Status of the operation
- */
-SecureElementStatus_t SecureElementSetKey( KeyIdentifier_t keyID, uint8_t* key );
-
-/*!
- * Computes a CMAC of a message using provided initial Bx block
- *
- * \param[IN]  micBxBuffer    - Buffer containing the initial Bx block
- * \param[IN]  buffer         - Data buffer
- * \param[IN]  size           - Data buffer size
- * \param[IN]  keyID          - Key identifier to determine the AES key to be used
- * \param[OUT] cmac           - Computed cmac
- * \retval                    - Status of the operation
- */
-SecureElementStatus_t SecureElementComputeAesCmac( uint8_t* micBxBuffer, uint8_t* buffer, uint16_t size, KeyIdentifier_t keyID, uint32_t* cmac );
-
-/*!
- * Verifies a CMAC (computes and compare with expected cmac)
- *
- * \param[IN]  buffer         - Data buffer
- * \param[IN]  size           - Data buffer size
- * \param[in]  expectedCmac   - Expected cmac
- * \param[IN]  keyID          - Key identifier to determine the AES key to be used
- * \retval                    - Status of the operation
- */
-SecureElementStatus_t SecureElementVerifyAesCmac( uint8_t* buffer, uint16_t size, uint32_t expectedCmac, KeyIdentifier_t keyID );
-
-/*!
- * Encrypt a buffer
- *
- * \param[IN]  buffer         - Data buffer
- * \param[IN]  size           - Data buffer size
- * \param[IN]  keyID          - Key identifier to determine the AES key to be used
- * \param[OUT] encBuffer      - Encrypted buffer
- * \retval                    - Status of the operation
- */
-SecureElementStatus_t SecureElementAesEncrypt( uint8_t* buffer, uint16_t size, KeyIdentifier_t keyID, uint8_t* encBuffer );
-
-/*!
- * Derives and store a key
- *
- * \param[IN]  version        - LoRaWAN specification version currently in use.
- * \param[IN]  input          - Input data from which the key is derived ( 16 byte )
- * \param[IN]  rootKeyID      - Key identifier of the root key to use to perform the derivation
- * \param[IN]  targetKeyID    - Key identifier of the key which will be derived
- * \retval                    - Status of the operation
- */
-SecureElementStatus_t SecureElementDeriveAndStoreKey( Version_t version, uint8_t* input, KeyIdentifier_t rootKeyID, KeyIdentifier_t targetKeyID );
-
-/*!
- * Process JoinAccept message.
- *
- * \param[IN]  encKeyID          - Key identifier of the key which will be used to decrypt the JoinAccept message
- * \param[IN]  micKeyID          - Key identifier of the key which will be used to compute the JoinAccept message MIC
- * \param[IN]  versionMinor      - LoRaWAN specification version minor field which will be used to perform the processing.
- *                                     - 0 -> LoRaWAN 1.0.x
- *                                     - 1 -> LoRaWAN 1.1.x
- * \param[IN]  micHeader         - Header buffer to be used for MIC computation
- *                                     - LoRaWAN 1.0.x : micHeader = [MHDR(1)]
- *                                     - LoRaWAN 1.1.x : micHeader = [JoinReqType(1), JoinEUI(8), DevNonce(2), MHDR(1)]
- * \param[IN]  encJoinAccept     - Received encrypted JoinAccept message
- * \param[IN]  encJoinAcceptSize - Received encrypted JoinAccept message Size
- * \param[IN]  decJoinAccept     - Decrypted and validated JoinAccept message
- * \retval                       - Status of the operation
- */
-SecureElementStatus_t SecureElementProcessJoinAccept( KeyIdentifier_t encKeyID, KeyIdentifier_t micKeyID, uint8_t versionMinor,
-                                                      uint8_t *micHeader, uint8_t *encJoinAccept, uint8_t encJoinAcceptSize,
-                                                      uint8_t *decJoinAccept );
-
-/*!
- * Generates a random number
- *
- * \param[OUT] randomNum      - 32 bit random number
- * \retval                    - Status of the operation
- */
-SecureElementStatus_t SecureElementRandomNumber( uint32_t* randomNum );
-
-/*!
- * Sets the DevEUI
- *
- * \param[IN] devEui          - Pointer to the 16-byte devEUI
- * \retval                    - Status of the operation
- */
-SecureElementStatus_t SecureElementSetDevEui( uint8_t* devEui );
-
-/*!
- * Gets the DevEUI
- *
- * \retval                    - Pointer to the 16-byte devEUI
- */
-uint8_t* SecureElementGetDevEui( void );
-
-/*!
- * Sets the JoinEUI
- *
- * \param[IN] joinEui         - Pointer to the 16-byte joinEui
- * \retval                    - Status of the operation
- */
-SecureElementStatus_t SecureElementSetJoinEui( uint8_t* joinEui );
-
-/*!
- * Gets the DevEUI
- *
- * \retval                    - Pointer to the 16-byte joinEui
- */
-uint8_t* SecureElementGetJoinEui( void );
-
-/*! \} defgroup SECUREELEMENT */
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif //  __SECURE_ELEMENT_H__
diff --git a/main.h b/main.h
deleted file mode 100644
index 9f75c78..0000000
--- a/main.h
+++ /dev/null
@@ -1,426 +0,0 @@
-/**********************************************************************************************************************
- Includes   <System Includes> , "Project Includes"
- *********************************************************************************************************************/
-#include <resource.h>
-#include <sensor_data_screen.h>
-#include "board-config.h"
-#include "board.h"
-#include "board_uart.h"
-#include "lpm-board.h"
-#include "RE01_256KB.h"
-#include "radio.h"
-#include "LoRaMac.h"
-#include "Commissioning.h"
-#include "delay.h"
-#include "timer.h"
-#include "gpio.h"
-#include "r_rtc.h"
-#include "utilities.h"
-#include "error.h"
-#include "sys_lpm.h"
-#include "sensors.h"
-#include "agt0_timer.h"
-#include "r_core_cfg.h"
-#include "r_system_api.h"
-#include "r_lpm_api.h"
-#include "r_smip_api.h"
-#include "pin.h"
-#include "lcd.h"
-#include "lvd_lvdbat.h"
-#include "mip_display.h"
-#include "sx126x.h"
-
-/**********************************************************************************************************************
- Macro definitions
- *********************************************************************************************************************/
-#define APP_USE_REAL_VAL
-
-#define ON                                          1
-#define OFF                                         0
-
-/*! Specify the number here in mV. For example set '2300' to make the threshold voltage as 2.3V. */
-#if !defined( BATT_VOLTAGE_MEAS_THRESHOLD )
-#define BATT_VOLTAGE_MEAS_THRESHOLD                 (2330)  /* 2.3V */
-#endif
-
-#ifndef ACTIVE_REGION
-#warning "No active region defined, LORAMAC_REGION_EU868 will be used as default."
-#define ACTIVE_REGION LORAMAC_REGION_US915
-#endif
-
-/*!
- * Defines the join duty cycle. Value in [ms].
- */
-#define JOIN_DUTYCYCLE                              15000
-
-/*!
- * Defines the application data transmission duty cycle. Value in [ms].
- */
-#define APP_TX_DUTYCYCLE                            30000
-
-/*!
- * Defines a random delay for application data transmission duty cycle. 1s,
- * value in [ms].
- */
-#define APP_TX_DUTYCYCLE_RND                        1000
-
-/*!
-* LoRaWAN Default datarate
-*/
-#define LORAWAN_DEFAULT_DATARATE                    DR_0
-
-/*!
-* LoRaWAN confirmed messages
-*/
-#define LORAWAN_CONFIRMED_MSG_ON                    false
-
-/*!
-* LoRaWAN Adaptive Data Rate
-* \remark Please note that when ADR is enabled the end-device should be static
-*/
-#define LORAWAN_ADR_ON                              1
-
-#if defined( REGION_EU868 )
-#include "LoRaMacTest.h"
-
-/*!
-* LoRaWAN ETSI duty cycle control enable/disable
-* \remark Please note that ETSI mandates duty cycled transmissions. Use only for test purposes
-*/
-#define LORAWAN_DUTYCYCLE_ON                        true
-#endif
-
-/*!
-* LoRaWAN application port
-*/
-#define LORAWAN_APP_PORT                            2
-
-/*!
-* User application data buffer size
-*/
-#define LORAWAN_APP_DATA_MAX_SIZE                   242
-
-/* Port register */
-/* DCDC EHC EN */
-#define MAIN_PRV_DCDC_EHC_EN_REG_PODR               (PORT2->PODR_b.PODR09)
-/* LED */
-#define MAIN_PRV_LED_REG_PODR                       (PORT4->PODR_b.PODR10)
-
-/* Interrupt setting */
-#define MAIN_PRV_GROUP4_EVENT_PORT_IRQ4             (0x13)
-#define MAIN_PRV_GROUP0_EVENT_AGT1_AGTI             (0x06)
-
-/* Bitmap data num */
-#define MAIN_PRV_BITMAP_LOWPOWER_LIST_MAX           (2)
-#define MAIN_PRV_BITMAP_NORMALPOWER_LIST_MAX        (2)
-#define MAIN_PRV_BITMAP_HIGHPOWER_LIST_MAX          (4)
-
-/* LED flash num */
-#define MAIN_PRV_LED_LOWPOWER_FLASH_NUM             (1)
-#define MAIN_PRV_LED_NORMALPOWER_FLASH_NUM          (2)
-#define MAIN_PRV_LED_HIGHPOWER_FLASH_NUM            (3)
-#define MAIN_PRV_LED_BRECOVERY_FLASH_NUM            (5)
-
-/* Status */
-#define MAIN_PRV_APP_STATUS_DEFAULT                 (0)
-#define MAIN_PRV_APP_STATUS_LOWPOWER                (0)
-#define MAIN_PRV_APP_STATUS_NORMALPOWER             (1)
-#define MAIN_PRV_APP_STATUS_HIGHPOWER               (2)
-#define MAIN_PRV_APP_STATUS_MAX                     (3)
-
-/* SW interrupt flag status */
-#define MAIN_PRV_SW_INT_NOT_DETECTED                (0)
-#define MAIN_PRV_SW_INT_DETECTED                    (1)
-
-/* Active interrupt ISR number */
-#define MAIN_PRV_IPSR_NMI                           (2)
-
-/* Clock frequency LOCO (KHz) */
-#define MAIN_PRV_FREQUENCY_LOCO_KHZ                 (2000)
-
-/* LCD keep time (ms) */
-#define MAIN_PRV_LCD_KEEP_TIME_MS                   (2000)
-/* LED flash interval time (ms) */
-#define MAIN_PRV_LED_FLASH_TIME_MS                  (100)
-/* SW chattering prevention time (ms) */
-#define MAIN_PRV_SW_CHATTERING_TIME_MS              (300)
-
-/******************************************************************************************************************//**
- * @brief LVD1 level select
- *         0 = 2.83V
- *         1 = 2.66V
- *         2 = 2.50V
- *         3 = 2.33V
- *         4 = 2.17V
- *         5 = 2.00V
- *         6 = 1.84V
- *         7 = 1.67V
- *********************************************************************************************************************/
-#define MAIN_PRV_LVDLVL_SHUTDOWN                    (6)
-
-/******************************************************************************************************************//**
- * @brief LVDBAT level select
- *         3 = 2.33V
- *         4 = 2.17V
- *         5 = 2.00V
- *         6 = 1.84V
- *         7 = 1.67V
- *********************************************************************************************************************/
-#define MAIN_PRV_LVDBATLVL_BRECOVERY_WAKEUP         (3)
-
-/* Level definition is the same as MAIN_PRV_LVDBATLVL_BRECOVERY_WAKEUP */
-#define MAIN_PRV_LVDBATLVL_BRECOVERY_ENTRY          (5)
-
-/* Heap memory allocation
- * IMPORTANT NOTICE : Heap memory is mandatory to allocate when using stdout printf function.
- */
-#define CFG_HEAP_SIZE                               (0x1000)
-
-/**********************************************************************************************************************
- Private (static) variables and functions
- *********************************************************************************************************************/
-extern Gpio_t   Led1;
-extern Gpio_t   Led2;
-extern Gpio_t   DcdcEnable;
-
-#if( ABP_ACTIVATION_LRWAN_VERSION == ABP_ACTIVATION_LRWAN_VERSION_V10x )
-static uint8_t GenAppKey[] = LORAWAN_GEN_APP_KEY;
-#else
-static uint8_t AppKey[] = LORAWAN_APP_KEY;
-#endif
-
-static uint8_t NwkKey[] = LORAWAN_NWK_KEY;
-
-#if( OVER_THE_AIR_ACTIVATION == 0 )
-
-static uint8_t FNwkSIntKey[] = LORAWAN_F_NWK_S_INT_KEY;
-static uint8_t SNwkSIntKey[] = LORAWAN_S_NWK_S_INT_KEY;
-static uint8_t NwkSEncKey[] = LORAWAN_NWK_S_ENC_KEY;
-static uint8_t AppSKey[] = LORAWAN_APP_S_KEY;
-
-/*!
-* LoRaWAN Device Address
-*/
-static uint32_t DevAddr = LORAWAN_DEVICE_ADDRESS;
-#endif
-
-/*!
-* LoRaWAN Application port
-*/
-static uint8_t AppPort = LORAWAN_APP_PORT;
-
-/*!
-* User application data size
-*/
-static uint8_t AppDataSize = 1;
-static uint8_t AppDataSizeBackup = 1;
-
-/*!
-* User application data
-*/
-static uint8_t AppDataBuffer[LORAWAN_APP_DATA_MAX_SIZE];
-
-/*!
-* Indicates if the node is sending confirmed or unconfirmed messages
-*/
-static uint8_t IsTxConfirmed = LORAWAN_CONFIRMED_MSG_ON;
-
-/*!
- * Defines the application data transmission duty cycle
- */
-static uint32_t TxDutyCycleTime;
-
-/*!
-* Timer to handle the application data transmission duty cycle
-*/
-static TimerEvent_t TxNextPacketTimer;
-
-/*!
-* Timer to handle the state of LED1
-*/
-static TimerEvent_t Led1Timer;
-
-/*!
-* Timer to handle the state of LED2
-*/
-static TimerEvent_t Led2Timer;
-
-/*!
-* Indicates if a new packet can be sent
-*/
-static bool NextTx = true;
-
-static uint8_t IsMacProcessPending = 0;
-
-static uint32_t s_sw_flag = MAIN_PRV_SW_INT_NOT_DETECTED;
-static uint32_t s_app_status = MAIN_PRV_APP_STATUS_DEFAULT;
-
-#ifdef APP_USE_UART
-static char sense_buf[24];
-#endif
-
-static uint32_t elapsedTime;
-static uint32_t pastTime;
-static uint32_t maskStandby;
-
-extern SX126x_t SX126x;
-
-
-uint8_t g_heap[CFG_HEAP_SIZE] __attribute__ ((section(".heap"))) __attribute__ ((aligned (8))) = {0U};
-
-/**********************************************************************************************************************
- Enums and structures
- *********************************************************************************************************************/
-/*!
-* Device states
-*/
-typedef enum eDeviceState
-{
-    DEVICE_STATE_RESTORE,
-    DEVICE_STATE_START,
-    DEVICE_STATE_JOIN,
-    DEVICE_STATE_SEND,
-    DEVICE_STATE_CYCLE,
-    DEVICE_STATE_SLEEP
-} device_state_t;
-
-/*!
-* LoRaWAN compliance tests support data
-*/
-typedef struct ComplianceTest_s
-{
-    bool        Running;
-    uint8_t     State;
-    bool        IsTxConfirmed;
-    uint8_t     AppPort;
-    uint8_t     AppDataSize;
-    uint8_t *   AppDataBuffer;
-    uint16_t    DownLinkCounter;
-    bool        LinkCheck;
-    uint8_t     DemodMargin;
-    uint8_t     NbGateways;
-} compliance_test_t;
-
-/*!
-* LoRaWAN communication stage
-*/
-typedef enum eLoRaComStage
-{
-    LORA_COM_STAGE_IDLE,
-    LORA_COM_STAGE_TX,
-    LORA_COM_STAGE_RX1,
-    LORA_COM_STAGE_RX2
-} lora_com_stage_t;
-
-/*!
- * LoRaWAN message handler
- */
-typedef enum
-{
-    LORAMAC_HANDLER_UNCONFIRMED_MSG = 0,
-    LORAMAC_HANDLER_CONFIRMED_MSG = !LORAMAC_HANDLER_UNCONFIRMED_MSG
-}LoRaMacHandlerMsgTypes_t;
-
-typedef union uCopiedLoRaMacRadioEvents
-{
-    uint32_t Value;
-    struct sEvents
-    {
-        uint32_t RxTimeout : 1;
-        uint32_t RxError   : 1;
-        uint32_t TxTimeout : 1;
-        uint32_t RxDone    : 1;
-        uint32_t TxDone    : 1;
-    }Events;
-} LoRaMacRadioEvents_t;
-
-/*!
- * Application data structure
- */
-typedef struct LoRaMacHandlerAppData_s
-{
-    LoRaMacHandlerMsgTypes_t MsgType;
-    uint8_t Port;
-    uint8_t BufferSize;
-    uint8_t *Buffer;
-}LoRaMacHandlerAppData_t;
-
-LoRaMacHandlerAppData_t AppData =
-{
-    .MsgType = LORAMAC_HANDLER_UNCONFIRMED_MSG,
-    .Buffer = NULL,
-    .BufferSize = 0,
-    .Port = 0
-};
-
-static device_state_t       DeviceState;
-static compliance_test_t    ComplianceTest;
-static lora_com_stage_t     LoRaComStage;
-
-static sensor_group_all_t   sensors;
-extern LoRaMacRadioEvents_t LoRaMacRadioEvents;
-LoRaMacRadioEvents_t RadioEvents;
-
-/**********************************************************************************************************************
- Functions
- *********************************************************************************************************************/
-void print(char * str);
-/* Main application routine */
-static void app_run(void);
-/* Sub routine to prepare LoRaMAC payload */
-static void PrepareTxFrame( uint8_t port );
-/* Sub routine to send LoRaMAC frame */
-static bool SendFrame( void );
-/* Sub routine to execute an event action on TxNextPacket Timeout event */
-static void OnTxNextPacketTimerEvent(  void* context );
-/* LoRaMAC callback for the MCPS-Confirm event */
-static void McpsConfirm( McpsConfirm_t *mcpsConfirm );
-/* LoRaMAC callback for the MCPS-Indication event */
-static void McpsIndication( McpsIndication_t *mcpsIndication );
-/* LoRaMAC callback for the MLME-Confirm event */
-static void MlmeConfirm( MlmeConfirm_t *mlmeConfirm );
-/* LoRaMAC callback for the MLME-Indication event */
-static void MlmeIndication( MlmeIndication_t *mlmeIndication );
-#ifdef APP_USE_UART
-static void serial_send(sensor_group_all_t * sensor);
-#endif
-
-/* entry function */
-static void sample_application (void);
-static void battery_recovery (void);
-
-/* user application function */
-static void app_lowpower_intermittet (void);
-static void app_normalpower_intermittet (void);
-static void app_highpower_continuous (void);
-
-/* initialize */
-static void re01_init (void);
-static void main_loop(void);
-static void ext_power_on (void);
-static void ext_power_off (void);
-static void board_led_on (void);
-static void board_led_off (void);
-
-static void lcd_update(const uint8_t *lcd_data);
-void lcd_sensor_data_update();
-
-/* error */
-static void main_error (void);
-static void LoRa_init(LoRaMacPrimitives_t *macPrimitives, LoRaMacCallback_t *macCallbacks);
-void OnMacProcessNotify( void );
-
-/* timer */
-static void timer_start (uint32_t time);
-static void timer_stop (void);
-
-/* clock set */
-static void transfer_toBoost_HOCO (void);
-static void transfer_toLowspeedExfpwon_MOCO (void);
-static void transfer_toHispeedAllpwon_MOSC (void);
-
-/* callback functions */
-static void lvd_callback (void);
-
-/* interrupt handler function */
-void NMI_Handler (void);
diff --git a/mip_display.c b/mip_display.c
deleted file mode 100644
index 93b2bcb..0000000
--- a/mip_display.c
+++ /dev/null
@@ -1,293 +0,0 @@
-/*********************************************************************************************************************
-* DISCLAIMER
-* This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No 
-* other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all 
-* applicable laws, including copyright laws. 
-* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
-* THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, 
-* FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM 
-* EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES 
-* SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
-* SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
-* Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of 
-* this software. By using this software, you agree to the additional terms and conditions found by accessing the 
-* following link:
-* http://www.renesas.com/disclaimer 
-*
-* Copyright (C) 2020 Renesas Electronics Corporation. All rights reserved.
-**********************************************************************************************************************/
-/**********************************************************************************************************************
-* File Name    : mip_diaplay.c
-* Description  : MIP Display Function
-**********************************************************************************************************************/
-
-/**********************************************************************************************************************
- Includes   <System Includes> , "Project Includes"
- *********************************************************************************************************************/
-#include "r_smip_api.h"
-#include "mip_display.h"
-#include "math.h"
-#include "error.h"
-#include "lcd.h"
-
-/**********************************************************************************************************************
- Macro definitions
- *********************************************************************************************************************/
-#define NUMBER_IMAGE_HEIGHT     (24)
-#define NUMBER_OF_NUMBER_IMAGE  (11)
-#define MIP_ADDESS_BYTE         (SMIP_CFG_KYOCERA_ADDR_SIZE >> 3)
-#define MIP_BYTES_PER_LINE      (SMIP_CFG_KYOCERA_DUMMY_SIZE)
-#define MIP_DUMMY_CYCLE_BYTES   (5)
-#define FP_DOT_IMG_NUMBER       (10)
-#define MAX_NUMBER_STRINGS_IN_BYTE  (5)
-#define SPACE_CHAR              (' ')
-#define SPI_SCLK                (500000)
-
-/**********************************************************************************************************************
- Typedef definitions
- *********************************************************************************************************************/
-
-/**********************************************************************************************************************
- Exported global variables (to be accessed by other files)
- *********************************************************************************************************************/
-
-/**********************************************************************************************************************
- Private global variables and functions
- *********************************************************************************************************************/
-
-/* Flag for SMIP transfer success/fail */
-volatile uint8_t f_disp_end = 0;
-
-/******************************************************************************/
-/* Serial MIP Driver Call back function */
-/******************************************************************************/
-__attribute__ ((section(".ramfunc"))) static void smip_cb(uint32_t event)
-{
-    f_disp_end = 1;
-} /* End of function smip_cb() */
-
-int DisplayOpen( uint8_t * image )
-{
-    e_smip_err_t ret;
-
-    /* Initialize Serial MIP LCD */
-    ret = R_SMIP_Open(0, SPI_SCLK, &g_smip_tbl_lcd_info[SMIP_TYPE_KYOCERA], smip_cb);
-    APP_ERR_HANDLER(ret != SMIP_OK);
-
-    ret = R_SMIP_PowerOn();
-    APP_ERR_HANDLER(ret != SMIP_OK);
-
-    ret = R_SMIP_Send(0, 256, image);
-    APP_ERR_HANDLER(ret != SMIP_OK);
-
-    /* Wait for transmission completion */
-    while( 0 == f_disp_end );
-
-    f_disp_end = 0;
-
-    return 0;
-} /* End of function DisplayOpen() */
-
-int DisplaySuspend( void )
-{
-    while(SMIP_OK != R_SMIP_Suspend())
-    {
-        R_SYS_SoftwareDelay(1, SYSTEM_DELAY_UNITS_MILLISECONDS);
-    }
-    return 0;
-} /* End of function DisplaySuspend() */
-
-int DisplayResume( void )
-{
-    R_SMIP_Resume(SPI_SCLK);
-    return 0;
-} /* End of function DisplayResume() */
-
-///***********************************************************************************************************************
-//* Function Name: display
-//* Revision     : 1.10
-//* Description  : This function initializes the system, system clock, timer (AGT1), and interrupt.
-//                  Every 100 ms, connection to ISL29125 light sensor are made through I2C.
-//                  Data received (G, R, and B value) from the light sensor are processed and converted to lux value and RGB level bar.
-//                  Lux value and RGB level bar are then displayed to MIP LCD.
-//* Arguments    : none
-//* Return Value : none
-//***********************************************************************************************************************/
-//int DisplayDraw( uint8_t * image, int startRow, int numberOfLines )
-//{
-//    s_end_flag = LCD_PRV_SEND_NOT_END;
-//
-//   /* Start sending to LCD. */
-//   if (R_SMIP_Send(startRow, numberOfLines, image) != SMIP_OK)
-//   {
-//       lcd_error();
-//   }
-//   while (LCD_PRV_SEND_NOT_END == s_end_flag)
-//   {
-//       ; /* wait to end */
-//   }
-//   if (LCD_PRV_SEND_COMPLETE != s_end_flag)
-//   {
-//       lcd_error();
-//   }
-//
-//   return;
-//} /* End of function DisplayDraw() */
-
-__attribute__ ((section(".ramfunc"))) void reverse(char* str, int len)
-{
-    int i = 0, j = len - 1, temp;
-    while (i < j) {
-        temp = str[i];
-        str[i] = str[j];
-        str[j] = temp;
-        i++;
-        j--;
-    }
-} /* End of function reverse() */
-
-// Converts a given integer x to string str[].
-// d is the number of digits required in the output.
-// If d is more than the number of digits in x,
-// then 0s are added at the beginning.
-__attribute__ ((section(".ramfunc"))) int intToStr(int x, char str[], int d)
-{
-    int i = 0;
-
-    if (0 == x)
-    {
-        str[i++] = '0';
-    }
-    else
-    {
-        while (x) {
-            str[i++] = (x % 10) + '0';
-            x = x / 10;
-        }
-
-        // If number of digits required is more, then
-        // add 0s at the beginning
-        while (i < d)
-            str[i++] = '0';
-    }
-
-    reverse(str, i);
-    str[i] = '\0';
-    return i;
-} /* End of function intToStr() */
-
-// Converts a floating-point/double number to a string.
-__attribute__ ((section(".ramfunc"))) void ftoa(float n, char* res, int afterpoint)
-{
-    // Extract integer part
-    int ipart = (int)n;
-
-    // Extract floating part
-    float fpart = n - (float)ipart;
-
-    // convert integer part to string
-    int i = intToStr(ipart, res, 0);
-
-    // check for display option after point
-    if (afterpoint != 0) {
-        res[i] = '.'; // add dot
-
-        // Get the value of fraction part upto given no.
-        // of points after dot. The third parameter
-        // is needed to handle cases like 233.007
-        fpart = fpart * pow(10, afterpoint);
-
-        intToStr((int)fpart, res + i + 1, afterpoint);
-    }
-} /* End of function ftoa() */
-
-/**************************************************************************
-* @brief Convert a numeric to the raster image and write it into the image data
-* @param numberToDisplay : Number to display
-* @param digit_max       : Digits of the number
-* @param afterpoint      : Digits after the floating-point in numberToDisplay
-* @param pad             : Option to pad with zero or space
-* @param imageData       : Pointer to the background image
-* @param numberImageData : Pointer to the numerical number strings image
-* @param x               : Horizontal offset in pixel. The number should be a multiple of 8.
-* @param y               : Vertical offset in line
-* @return none
-*************************************************************************/
-void NumberToRasterImage( float numberToDisplay, int digit_max, int afterpoint, display_char_pad_t pad,
-                          uint8_t * imageData, uint8_t * numberImageData, int x, int y )
-{  
-    int       srcPos = 0;
-    int       dstPos = 0;
-    int       digit = 0;
-    int       zero_count = 0;
-    uint8_t   NumberToDraw;
-    uint8_t   printChr[MAX_NUMBER_STRINGS_IN_BYTE + 1] = {0};
-
-    ftoa(numberToDisplay, (char *)printChr, afterpoint);
-
-    while ( digit < digit_max )
-    {
-        if (0 == printChr[digit++])
-        {
-            zero_count++;
-        }
-    }
-
-    digit = digit_max;
-    while ( digit > 0 )
-    {
-        printChr[digit] = printChr[digit - zero_count];
-        digit--;
-    }
-
-    memset ( printChr, 0, zero_count );
-
-    digit = 0;
-    while ( digit < digit_max )
-    {
-        NumberToDraw = printChr[digit];
-        if ( '.' == NumberToDraw )
-        {
-            NumberToDraw = FP_DOT_IMG_NUMBER;
-        }
-        else if ( 0 == NumberToDraw )
-        {
-            if (DISPLAY_CHAR_ZERO_PAD == pad)
-            {
-                NumberToDraw = 0;
-            }
-            else
-            {   /* CHAR_SPACE_PAD */
-                NumberToDraw = SPACE_CHAR;
-            }
-
-        }
-        else
-        {
-            NumberToDraw -= 0x30;   /* Ascii code to number */
-        }
-
-        for( int i = 0; i < NUMBER_IMAGE_HEIGHT; i++ )
-        {
-            srcPos = (NumberToDraw * 2) + i * (NUMBER_OF_NUMBER_IMAGE * 2);
-            dstPos = MIP_ADDESS_BYTE + (x >> 3) + ((y + i) * (MIP_BYTES_PER_LINE + MIP_DUMMY_CYCLE_BYTES)) + (digit * 2);
-
-            if ( SPACE_CHAR != NumberToDraw)
-            {
-                /* Copy number image to the image buffer */
-                imageData[dstPos]     = numberImageData[srcPos];
-                imageData[dstPos + 1] = numberImageData[srcPos + 1];
-            }
-            else
-            {
-                /* Writing zero will be a space character " " */
-                imageData[dstPos]     = 0x0;
-                imageData[dstPos + 1] = 0x0;
-            }
-        }
-
-        digit++;
-    }
-} /* End of function NumberToRasterImage() */
-
-/* End of File */
diff --git a/mip_display.h b/mip_display.h
deleted file mode 100644
index 0708f6d..0000000
--- a/mip_display.h
+++ /dev/null
@@ -1,61 +0,0 @@
-/**********************************************************************************************************************
-* DISCLAIMER
-* This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
-* other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
-* applicable laws, including copyright laws.
-* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
-* THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MECHANTABILITY,
-* FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
-* EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
-* SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
-* SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
-* Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
-* this software. By using this software, you agree to the additional terms and conditions found by accessing the
-* following link:
-* http://www.renesas.com/disclaimer
-*
-* Copyright (C) 2020 Renesas Electronics Corporation. All rights reserved.
-**********************************************************************************************************************/
-/**********************************************************************************************************************
-* File Name    : mip_diaplay.h
-* Description  : MIP Display Function
-**********************************************************************************************************************/
-
-#ifndef MIP_DISPLAY_H_
-#define MIP_DISPLAY_H_
-
-/**********************************************************************************************************************
- Includes   <System Includes> , "Project Includes"
- *********************************************************************************************************************/
-
-/**********************************************************************************************************************
- Macro definitions
- *********************************************************************************************************************/
-#define R_MIP_DISPLAY_FUNC_LOCATION __attribute__ ((section(".ramfunc")))
-
-/**********************************************************************************************************************
- Typedef definitions
- *********************************************************************************************************************/
-typedef enum e_char_pad
-{
-    DISPLAY_CHAR_ZERO_PAD,
-    DISPLAY_CHAR_SPACE_PAD,
-} display_char_pad_t;
-
-/**********************************************************************************************************************
- Exported global variables
- *********************************************************************************************************************/
-
-/**********************************************************************************************************************
- Exported global functions (to be accessed by other files)
- *********************************************************************************************************************/
-int DisplayOpen ( uint8_t * image ) R_MIP_DISPLAY_FUNC_LOCATION;
-int DisplaySuspend( void ) R_MIP_DISPLAY_FUNC_LOCATION;
-int DisplayResume( void ) R_MIP_DISPLAY_FUNC_LOCATION;
-int DisplayDraw( uint8_t * imageData, int startRow, int numberOfLines ) R_MIP_DISPLAY_FUNC_LOCATION;
-void NumberToRasterImage( float numberToDisplay, int digit, int afterpoint, display_char_pad_t pad,
-                          uint8_t * imageData, uint8_t * numberImageData, int x, int y ) R_MIP_DISPLAY_FUNC_LOCATION;
-
-#endif /* MIP_DISPLAY_H_ */
-
-/* End of file (mip_display.h) */
diff --git a/r01an5753_re_lora.dep b/r01an5753_re_lora.dep
deleted file mode 100644
index 9c7ced4..0000000
--- a/r01an5753_re_lora.dep
+++ /dev/null
@@ -1,1210 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project>
-    <fileVersion>4</fileVersion>
-    <fileChecksum>1936627179</fileChecksum>
-    <configuration>
-        <name>Flash Debug</name>
-        <outputs>
-            <file>$PROJ_DIR$\boards\mcu\RE01_256KB\r_rtc.c</file>
-            <file>$PROJ_DIR$\boards\rtk70e0118c00000bj\board.c</file>
-            <file>$PROJ_DIR$\boards\rtk70e0118c00000bj\gpio-board.c</file>
-            <file>$PROJ_DIR$\boards\rtk70e0118c00000bj\spi-board.c</file>
-            <file>$PROJ_DIR$\boards\rtk70e0118c00000bj\i2c-board.c</file>
-            <file>$PROJ_DIR$\boards\rtk70e0118c00000bj\uart-board.c</file>
-            <file>$PROJ_DIR$\boards\mcu\utilities.c</file>
-            <file>$PROJ_DIR$\boards\rtk70e0118c00000bj\rtc-board.c</file>
-            <file>$PROJ_DIR$\boards\rtk70e0118c00000bj\rtk70e015dc00001bj-board.c</file>
-            <file>$PROJ_DIR$\boards\rtk70e0118c00000bj\lpm-board.c</file>
-            <file>$PROJ_DIR$\boards\rtk70e0118c00000bj\delay-board.c</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionIN865.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\Region.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Exe\r01an5753_re_lora.mot</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\lpm-board.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\LoRaMacSerializer.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\gpio.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\pin.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\LoRaMacCommands.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\LoRaMacConfirmQueue.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\sys_lpm.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\cmac.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionKR920.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_usart_cmsis_api.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\spi-board.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\timer.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\bitmap_opening_data.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\system_RE01_256KB.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\i2c.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\radio.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\main.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\LoRaMacConfirmQueue.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\startup_RE01_256KB.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\uart-board.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\main.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionCommon.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionIN865.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionRU864.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_spi_cmsis_api.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_flash_lowlevel.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\gpio-board.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\aes.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\LoRaMac.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\utilities.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_dtc_api.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\sx126x.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\LoRaMacCommands.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\uart.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionAS923.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Exe\r01an5753_re_lora.out</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\timer.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionUS915.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_system_api.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\sys_lpm.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\hs300x.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\LoRaMacAdr.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionCN779.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\fifo.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\utilities.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_usart_cmsis_api.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\agt1.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionUS915.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\fifo.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r01an5753_re_lora.pbd</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\LoRaMacCrypto.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_lpm_api.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionAU915.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\i2c-board.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\LoRaMac.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionKR920.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\lcd.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionEU868.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_rtc.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_rtc.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_flash_lowlevel.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionRU864.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionCN470.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\delay.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\sensors.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\gpio-board.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\LoRaMacClassB.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\lpm-board.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_dmac_api.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\Region.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionEU433.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_spi_cmsis_api.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionCN470.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\board.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\radio.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_pmip_api.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_i2c_cmsis_api.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_adc_api.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\aes.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\startup_RE01_256KB.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\cmac.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\systime.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\agt0_timer.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\rtc-board.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_gdt_api.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionEU868.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\sx126x.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\LoRaMacCrypto.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionCommon.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionAU915.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_smip_api.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\rtk70e015dc00001bj-board.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_dmac_api.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\LoRaMacClassB.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\i2c.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_flash_api.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\LoRaMacParser.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\uart-board.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_ehc.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\uart.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_system_api.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\pin.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\mip_display.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\hs300x.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\lcd.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\bitmap_charge_data.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\sensors.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\gpio.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_ehc.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionAS923.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\lvd_lvdbat.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\agt1.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_dtc_api.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_lpm_api.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\systime.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\soft-se.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\LoRaMacParser.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\bitmap_shutdown_data.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\rtc-board.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\delay.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\bitmap_charge_data.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\lvd_lvdbat.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\LoRaMacAdr.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_adc_api.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_smip_api.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_i2c_cmsis_api.xcl</file>
-            <file>$PROJ_DIR$\Device\CMSIS_Driver\Src\r_usart_cmsis_api.c</file>
-            <file>$PROJ_DIR$\Device\CMSIS_Driver\Src\r_spi_cmsis_api.c</file>
-            <file>$PROJ_DIR$\Device\CMSIS_Driver\Src\r_i2c_cmsis_api.c</file>
-            <file>$PROJ_DIR$\Device\Driver\Src\r_flash\r_flash_lowlevel.c</file>
-            <file>$PROJ_DIR$\Device\Driver\Src\r_gdt\r_gdt_api.c</file>
-            <file>$PROJ_DIR$\Device\Driver\Src\r_smip\r_smip_api.c</file>
-            <file>$PROJ_DIR$\Device\Driver\Src\r_adc\r_adc_api.c</file>
-            <file>$PROJ_DIR$\Device\Driver\Src\r_dtc\r_dtc_api.c</file>
-            <file>$PROJ_DIR$\Device\Driver\Src\r_flash\r_flash_api.c</file>
-            <file>$PROJ_DIR$\Device\Driver\Src\r_dmac\r_dmac_api.c</file>
-            <file>$PROJ_DIR$\Device\Driver\Src\r_ehc\r_ehc.c</file>
-            <file>$PROJ_DIR$\Device\Driver\Src\r_lpm\r_lpm_api.c</file>
-            <file>$PROJ_DIR$\Device\Driver\Src\r_pmip\r_pmip_api.c</file>
-            <file>$PROJ_DIR$\Device\Driver\Src\r_system\r_system_api.c</file>
-            <file>$PROJ_DIR$\mac\region\RegionCommon.c</file>
-            <file>$PROJ_DIR$\mac\region\RegionKR920.c</file>
-            <file>$PROJ_DIR$\mac\region\RegionCN779.c</file>
-            <file>$PROJ_DIR$\mac\region\RegionRU864.c</file>
-            <file>$PROJ_DIR$\Device\startup_RE01_256KB.c</file>
-            <file>$PROJ_DIR$\mac\region\RegionEU433.c</file>
-            <file>$PROJ_DIR$\mac\region\RegionUS915.c</file>
-            <file>$PROJ_DIR$\Device\system_RE01_256KB.c</file>
-            <file>$PROJ_DIR$\mac\region\RegionAS923.c</file>
-            <file>$PROJ_DIR$\mac\region\RegionCN470.c</file>
-            <file>$PROJ_DIR$\mac\region\RegionEU868.c</file>
-            <file>$PROJ_DIR$\mac\region\RegionIN865.c</file>
-            <file>$PROJ_DIR$\mac\LoRaMac.c</file>
-            <file>$PROJ_DIR$\mac\region\Region.c</file>
-            <file>$PROJ_DIR$\mac\region\RegionAU915.c</file>
-            <file>$PROJ_DIR$\Device\pin.c</file>
-            <file>$PROJ_DIR$\mac\LoRaMacCommands.c</file>
-            <file>$PROJ_DIR$\Resource\bitmap_charge_data.c</file>
-            <file>$PROJ_DIR$\Resource\bitmap_opening_data.c</file>
-            <file>$PROJ_DIR$\Resource\bitmap_shutdown_data.c</file>
-            <file>$PROJ_DIR$\system\crypto\aes.c</file>
-            <file>$PROJ_DIR$\mac\LoRaMacAdr.c</file>
-            <file>$PROJ_DIR$\mac\LoRaMacClassB.c</file>
-            <file>$PROJ_DIR$\mac\LoRaMacConfirmQueue.c</file>
-            <file>$PROJ_DIR$\mac\LoRaMacParser.c</file>
-            <file>$PROJ_DIR$\mac\LoRaMacSerializer.c</file>
-            <file>$PROJ_DIR$\radio\sx126x\sx126x.c</file>
-            <file>$PROJ_DIR$\mac\LoRaMacCrypto.c</file>
-            <file>$PROJ_DIR$\radio\radio.c</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\soft-se.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\system_RE01_256KB.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\delay-board.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\mip_display.o</file>
-            <file>$PROJ_DIR$\lvd_lvdbat.c</file>
-            <file>$PROJ_DIR$\lcd.h</file>
-            <file>$PROJ_DIR$\lvd_lvdbat.h</file>
-            <file>$PROJ_DIR$\sensors.c</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\adc.xcl</file>
-            <file>$PROJ_DIR$\lcd.c</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\agt0_timer.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\bitmap_opening_data.xcl</file>
-            <file>$PROJ_DIR$\main.c</file>
-            <file>$PROJ_DIR$\mip_display.h</file>
-            <file>$PROJ_DIR$\sensors.h</file>
-            <file>$PROJ_DIR$\sys_lpm.c</file>
-            <file>$PROJ_DIR$\sys_lpm.h</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_gdt_api.o</file>
-            <file>$PROJ_DIR$\mip_display.c</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\bitmap_shutdown_data.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_flash_api.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\rtk70e015dc00001bj-board.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\delay-board.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionCN779.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\spi-board.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\adc.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\i2c-board.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\board.o</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\LoRaMacSerializer.xcl</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\RegionEU433.o</file>
-            <file>$PROJ_DIR$\main.h</file>
-            <file>$PROJ_DIR$\Flash Debug\Obj\r_pmip_api.o</file>
-            <file>$PROJ_DIR$\system\systime.c</file>
-            <file>$PROJ_DIR$\system\fifo.c</file>
-            <file>$PROJ_DIR$\system\i2c.c</file>
-            <file>$PROJ_DIR$\system\uart.c</file>
-            <file>$PROJ_DIR$\system\crypto\soft-se.c</file>
-            <file>$PROJ_DIR$\agt0_timer.c</file>
-            <file>$PROJ_DIR$\agt0_timer.h</file>
-            <file>$PROJ_DIR$\agt1.c</file>
-            <file>$PROJ_DIR$\agt1.h</file>
-            <file>$PROJ_DIR$\Commissioning.h</file>
-            <file>$PROJ_DIR$\system\timer.c</file>
-            <file>$PROJ_DIR$\error.h</file>
-            <file>$PROJ_DIR$\hs300x.c</file>
-            <file>$PROJ_DIR$\system\crypto\cmac.c</file>
-            <file>$PROJ_DIR$\system\gpio.c</file>
-            <file>$PROJ_DIR$\system\delay.c</file>
-            <file>$PROJ_DIR$\hs300x.h</file>
-            <file>$PROJ_DIR$\system\adc.c</file>
-        </outputs>
-        <file>
-            <name>[ROOT_NODE]</name>
-            <outputs>
-                <tool>
-                    <name>ILINK</name>
-                    <file> 49</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\mcu\RE01_256KB\r_rtc.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 73</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 72</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\board.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 210</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 87</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\gpio-board.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 79</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 40</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\spi-board.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 24</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 207</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\i2c-board.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 67</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 209</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\uart-board.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 33</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 111</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\mcu\utilities.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 43</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 58</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\rtc-board.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 97</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 132</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\rtk70e015dc00001bj-board.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 204</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 105</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\lpm-board.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 14</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 81</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\delay-board.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 205</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 185</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Flash Debug\Exe\r01an5753_re_lora.out</name>
-            <outputs>
-                <tool>
-                    <name>OBJCOPY</name>
-                    <file> 13</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\CMSIS_Driver\Src\r_usart_cmsis_api.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 59</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 23</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\CMSIS_Driver\Src\r_spi_cmsis_api.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 38</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 85</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\CMSIS_Driver\Src\r_i2c_cmsis_api.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 90</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 139</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\Driver\Src\r_flash\r_flash_lowlevel.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 74</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 39</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\Driver\Src\r_gdt\r_gdt_api.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 200</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 98</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\Driver\Src\r_smip\r_smip_api.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 138</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 104</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\Driver\Src\r_adc\r_adc_api.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 91</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 137</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\Driver\Src\r_dtc\r_dtc_api.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 44</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 126</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\Driver\Src\r_flash\r_flash_api.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 109</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 203</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\Driver\Src\r_dmac\r_dmac_api.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 106</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 82</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\Driver\Src\r_ehc\r_ehc.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 112</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 122</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\Driver\Src\r_lpm\r_lpm_api.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 127</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 65</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\Driver\Src\r_pmip\r_pmip_api.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 214</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 89</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\Driver\Src\r_system\r_system_api.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 52</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 114</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\region\RegionCommon.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 102</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 35</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\region\RegionKR920.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 69</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 22</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\region\RegionCN779.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 56</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 206</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\region\RegionRU864.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 37</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 75</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\startup_RE01_256KB.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 93</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 32</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\region\RegionEU433.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 212</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 84</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\region\RegionUS915.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 51</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 61</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\system_RE01_256KB.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 184</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 27</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\region\RegionAS923.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 123</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 48</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\region\RegionCN470.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 86</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 76</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\region\RegionEU868.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 99</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 71</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\region\RegionIN865.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 36</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 11</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMac.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 42</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 68</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\region\Region.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 83</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 12</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\region\RegionAU915.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 103</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 66</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\pin.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 17</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 115</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacCommands.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 18</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 46</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Resource\bitmap_charge_data.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 134</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 119</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Resource\bitmap_opening_data.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 26</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 194</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Resource\bitmap_shutdown_data.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 131</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 202</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\crypto\aes.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 41</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 92</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacAdr.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 55</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 136</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacClassB.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 107</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 80</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacConfirmQueue.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 19</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 31</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacParser.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 130</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 110</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacSerializer.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 15</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 211</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\radio\sx126x\sx126x.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 100</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 45</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacCrypto.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 101</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 64</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\radio\radio.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 29</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 88</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\lvd_lvdbat.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 135</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 124</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\sensors.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 78</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 120</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\lcd.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 70</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 118</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\main.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 30</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 34</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\sys_lpm.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 53</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 20</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mip_display.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 186</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 116</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\systime.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 128</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 95</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\fifo.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 57</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 62</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\i2c.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 108</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 28</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\uart.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 113</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 47</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\crypto\soft-se.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 183</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 129</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\agt0_timer.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 96</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 193</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\agt1.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 60</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 125</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\timer.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 25</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 50</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\hs300x.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 54</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 117</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\crypto\cmac.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 94</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 21</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\gpio.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 16</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 121</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\delay.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 133</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 77</file>
-                </tool>
-            </outputs>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\adc.c</name>
-            <outputs>
-                <tool>
-                    <name>ICCARM</name>
-                    <file> 208</file>
-                </tool>
-                <tool>
-                    <name>BICOMP</name>
-                    <file> 191</file>
-                </tool>
-            </outputs>
-        </file>
-    </configuration>
-</project>
diff --git a/r01an5753_re_lora.elf.jlink b/r01an5753_re_lora.elf.jlink
deleted file mode 100644
index 518cb26..0000000
--- a/r01an5753_re_lora.elf.jlink
+++ /dev/null
@@ -1,39 +0,0 @@
-[BREAKPOINTS]
-ForceImpTypeAny=0
-ShowInfoWin=1
-EnableFlashBP=2
-BPDuringExecution=0
-[CFI]
-CFISize=0x00
-CFIAddr=0x00
-[CPU]
-MonModeVTableAddr=0xFFFFFFFF
-MonModeDebug=0
-MaxNumAPs=0
-LowPowerHandlingMode=1
-OverrideMemMap=0
-AllowSimulation=1
-ScriptFile=""
-[FLASH]
-CacheExcludeSize=0x00
-CacheExcludeAddr=0x00
-MinNumBytesFlashDL=0
-SkipProgOnCRCMatch=1
-VerifyDownload=1
-AllowCaching=1
-EnableFlashDL=2
-Override=0
-Device="ARM7"
-[GENERAL]
-WorkRAMSize=0x00
-WorkRAMAddr=0x00
-RAMUsageLimit=0x00
-[SWO]
-SWOLogFile=""
-[MEM]
-RdOverrideOrMask=0x00
-RdOverrideAndMask=0xFFFFFFFF
-RdOverrideAddr=0xFFFFFFFF
-WrOverrideOrMask=0x00
-WrOverrideAndMask=0xFFFFFFFF
-WrOverrideAddr=0xFFFFFFFF
diff --git a/r01an5753_re_lora.elf.launch b/r01an5753_re_lora.elf.launch
deleted file mode 100644
index f1c299a..0000000
--- a/r01an5753_re_lora.elf.launch
+++ /dev/null
@@ -1,117 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<launchConfiguration type="com.renesas.cdt.launch.dsf.gdbremote.launchConfigurationType">
-    <booleanAttribute key=".setStepMode" value="false"/>
-    <stringAttribute key="com.renesas.cdt.core.additionalServerArgs" value=""/>
-    <stringAttribute key="com.renesas.cdt.core.imageFileName" value="${workspace_loc:\r01an5753_re_lora\HardwareDebug/r01an5753_re_lora.elf}"/>
-    <stringAttribute key="com.renesas.cdt.core.initCommands" value=""/>
-    <stringAttribute key="com.renesas.cdt.core.ipAddress" value="localhost"/>
-    <stringAttribute key="com.renesas.cdt.core.jtagDeviceId" value="com.renesas.hardwaredebug.rz.jlink"/>
-    <listAttribute key="com.renesas.cdt.core.listGDBExe">
-        <listEntry value="arm-none-eabi-gdb"/>
-    </listAttribute>
-    <listAttribute key="com.renesas.cdt.core.listGDBLaunchName">
-        <listEntry value="main"/>
-    </listAttribute>
-    <listAttribute key="com.renesas.cdt.core.listGDBPort">
-        <listEntry value="61234"/>
-    </listAttribute>
-    <booleanAttribute key="com.renesas.cdt.core.loadImage" value="true"/>
-    <stringAttribute key="com.renesas.cdt.core.optionInitCommands" value=""/>
-    <intAttribute key="com.renesas.cdt.core.portNumber" value="61234"/>
-    <stringAttribute key="com.renesas.cdt.core.runCommands" value=""/>
-    <stringAttribute key="com.renesas.cdt.core.secondGDBExe" value="green_dsp-elf-gdb"/>
-    <booleanAttribute key="com.renesas.cdt.core.secondGDBSupport" value="false"/>
-    <intAttribute key="com.renesas.cdt.core.secondGdbPortNumber" value="61237"/>
-    <stringAttribute key="com.renesas.cdt.core.serverParam" value="-g SEGGERJLINKARM -t R7F0E01182CFP  -uSelect= USB -uJLinkSetting= ${workspace_loc:/${ProjName}}/${LaunchConfigName}.jlink -uLowPower= 1 -uInteface= SWD -uIfSpeed= 320 -uNoReset= 1 -uIdCodeBytes=  FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF -uResetBefDownload= 1 -uReleaseCM3= 0 -uSWOcoreClock= 0 -uresetOnReload= 1 -n 0 -uFlashBp= 0 -uSimulation= 0 -uOSRestriction= 0 -uProgReWriteIRom= 1 -uCPUFrequency= 0 -uCECycle= 1"/>
-    <booleanAttribute key="com.renesas.cdt.core.setResume" value="true"/>
-    <booleanAttribute key="com.renesas.cdt.core.setStopAt" value="true"/>
-    <booleanAttribute key="com.renesas.cdt.core.startServer" value="true"/>
-    <stringAttribute key="com.renesas.cdt.core.stopAt" value="main"/>
-    <stringAttribute key="com.renesas.cdt.core.targetDevice" value="R7F0E01182CFP"/>
-    <booleanAttribute key="com.renesas.cdt.core.useRemoteTarget" value="true"/>
-    <stringAttribute key="com.renesas.cdt.debug.ioview.dsf.registerSelection0" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#13;&#10;&lt;selectedRegisterList ioFilePath=&quot;C:\Users\a5098388\.eclipse\com.renesas.platform_1435879475\DebugComp\re\IoFiles\R7F0E01182CFP.sfrx&quot;/&gt;&#13;&#10;"/>
-    <stringAttribute key="com.renesas.cdt.launch.dsf.IO_MAP" value="${support_area_loc}"/>
-    <booleanAttribute key="com.renesas.cdt.launch.dsf.USE_DEFAULT_IO_MAP" value="true"/>
-    <listAttribute key="com.renesas.cdt.launch.dsf.downloadImages">
-        <listEntry value="|true|true|true||true|No core"/>
-    </listAttribute>
-    <booleanAttribute key="com.renesas.cdt.launch.dsf.downloadImagesUpgradedV30" value="true"/>
-    <stringAttribute key="com.renesas.cdt.launch.dsf.launchSeqType" value="com.renesas.cdt.launch.dsf.launchSequence.e2GdbServer"/>
-    <stringAttribute key="com.renesas.cdt.launch.dsf.serverPath" value="${renesas.support.targetLoc:com.renesas.ide.supportfiles.re.debug.debugSupportFileTarget}\e2-server-gdb"/>
-    <booleanAttribute key="com.renesas.hardwaredebug.arm.jlink.break.allowSimulation" value="false"/>
-    <booleanAttribute key="com.renesas.hardwaredebug.arm.jlink.break.useFlashBreakpoints.resetorrepurposed" value="false"/>
-    <booleanAttribute key="com.renesas.hardwaredebug.arm.jlink.cfiFlash.enable" value="false"/>
-    <stringAttribute key="com.renesas.hardwaredebug.arm.jlink.cfiFlash.endAddr" value="0x0"/>
-    <stringAttribute key="com.renesas.hardwaredebug.arm.jlink.cfiFlash.startAddr" value="0x0"/>
-    <stringAttribute key="com.renesas.hardwaredebug.arm.jlink.cfiFlash.workRam.endAddr" value=""/>
-    <stringAttribute key="com.renesas.hardwaredebug.arm.jlink.cfiFlash.workRam.startAddr" value=""/>
-    <booleanAttribute key="com.renesas.hardwaredebug.arm.jlink.connection.id_code.format.big_endian" value="false"/>
-    <intAttribute key="com.renesas.hardwaredebug.arm.jlink.connection.id_code.input_type" value="0"/>
-    <stringAttribute key="com.renesas.hardwaredebug.arm.jlink.connection.id_code2" value="FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"/>
-    <stringAttribute key="com.renesas.hardwaredebug.arm.jlink.connection.jlinkScript" value=""/>
-    <booleanAttribute key="com.renesas.hardwaredebug.arm.jlink.connection.registerInit" value="false"/>
-    <booleanAttribute key="com.renesas.hardwaredebug.arm.jlink.connection.reset" value="false"/>
-    <booleanAttribute key="com.renesas.hardwaredebug.arm.jlink.connection.resetAfterDownload" value="true"/>
-    <booleanAttribute key="com.renesas.hardwaredebug.arm.jlink.connection.resetCon" value="false"/>
-    <booleanAttribute key="com.renesas.hardwaredebug.arm.jlink.connection.resetPreRun" value="false"/>
-    <stringAttribute key="com.renesas.hardwaredebug.arm.jlink.connection.swv.coreClockSpeed" value="0"/>
-    <intAttribute key="com.renesas.hardwaredebug.arm.jlink.interface.speed" value="320"/>
-    <stringAttribute key="com.renesas.hardwaredebug.arm.jlink.interface.type" value="SWD"/>
-    <stringAttribute key="com.renesas.hardwaredebug.arm.jlink.jlink.ipAddress" value=""/>
-    <stringAttribute key="com.renesas.hardwaredebug.arm.jlink.jlink.lowPowerHandling" value="Yes"/>
-    <stringAttribute key="com.renesas.hardwaredebug.arm.jlink.jlink.scriptFile" value=""/>
-    <stringAttribute key="com.renesas.hardwaredebug.arm.jlink.jlink.settingsFile" value="${workspace_loc:/${ProjName}}/${LaunchConfigName}.jlink"/>
-    <stringAttribute key="com.renesas.hardwaredebug.arm.jlink.jlink.type" value="USB"/>
-    <stringAttribute key="com.renesas.hardwaredebug.arm.jlink.jlink.usbSerial" value=""/>
-    <booleanAttribute key="com.renesas.hardwaredebug.arm.jlink.memory.isLittleEndian" value="true"/>
-    <booleanAttribute key="com.renesas.hardwaredebug.arm.jlink.options.ArmJLinkDebugToolSettingsTree.prog_rewrite_irom" value="true"/>
-    <intAttribute key="com.renesas.hardwaredebug.arm.jlink.options.ArmJLinkDebugToolSettingsTree.rbtm" value="0"/>
-    <booleanAttribute key="com.renesas.hardwaredebug.arm.jlink.options.ArmJLinkDebugToolSettingsTree.rbtm.everycycleenable" value="true"/>
-    <booleanAttribute key="com.renesas.hardwaredebug.arm.jlink.options.ArmJLinkDebugToolSettingsTree.resetAfterReload" value="true"/>
-    <booleanAttribute key="com.renesas.hardwaredebug.arm.jlink.options.ArmJLinkDebugToolSettingsTree.rtosIntegrationInDebugView" value="true"/>
-    <booleanAttribute key="com.renesas.hardwaredebug.arm.jlink.options.ArmJLinkDebugToolSettingsTree.rtosintegrationthreadsrunning" value="false"/>
-    <booleanAttribute key="com.renesas.hardwaredebug.arm.jlink.release.reset" value="true"/>
-    <intAttribute key="com.renesas.hardwaredebug.arm.jlink.scanChain.drPre" value="0"/>
-    <intAttribute key="com.renesas.hardwaredebug.arm.jlink.scanChain.irPre" value="0"/>
-    <booleanAttribute key="com.renesas.hardwaredebug.arm.jlink.scanChain.multiDevices" value="false"/>
-    <stringAttribute key="com.renesas.hardwaredebug.arm.jlink.semihosting.breakpointAddress" value=""/>
-    <booleanAttribute key="com.renesas.hardwaredebug.arm.jlink.setTZBoundaries" value="false"/>
-    <booleanAttribute key="com.renesas.hardwaredebug.timemeasurement" value="true"/>
-    <intAttribute key="org.eclipse.cdt.debug.gdbjtag.core.delay" value="0"/>
-    <booleanAttribute key="org.eclipse.cdt.debug.gdbjtag.core.doHalt" value="false"/>
-    <booleanAttribute key="org.eclipse.cdt.debug.gdbjtag.core.doReset" value="false"/>
-    <stringAttribute key="org.eclipse.cdt.debug.gdbjtag.core.imageFileName" value="C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora\HardwareDebug\r01an5753_re_lora.elf"/>
-    <stringAttribute key="org.eclipse.cdt.debug.gdbjtag.core.imageOffset" value=""/>
-    <stringAttribute key="org.eclipse.cdt.debug.gdbjtag.core.initCommands" value=""/>
-    <booleanAttribute key="org.eclipse.cdt.debug.gdbjtag.core.loadImage" value="true"/>
-    <booleanAttribute key="org.eclipse.cdt.debug.gdbjtag.core.loadSymbols" value="true"/>
-    <stringAttribute key="org.eclipse.cdt.debug.gdbjtag.core.pcRegister" value=""/>
-    <stringAttribute key="org.eclipse.cdt.debug.gdbjtag.core.runCommands" value=""/>
-    <booleanAttribute key="org.eclipse.cdt.debug.gdbjtag.core.setPcRegister" value="false"/>
-    <booleanAttribute key="org.eclipse.cdt.debug.gdbjtag.core.setResume" value="false"/>
-    <booleanAttribute key="org.eclipse.cdt.debug.gdbjtag.core.setStopAt" value="true"/>
-    <stringAttribute key="org.eclipse.cdt.debug.gdbjtag.core.stopAt" value="main"/>
-    <stringAttribute key="org.eclipse.cdt.debug.gdbjtag.core.symbolsFileName" value="C:\Users\a5098388\e2_studio\workspace\r01an5753_re_lora\HardwareDebug\r01an5753_re_lora.elf"/>
-    <stringAttribute key="org.eclipse.cdt.debug.gdbjtag.core.symbolsOffset" value=""/>
-    <booleanAttribute key="org.eclipse.cdt.debug.gdbjtag.core.useFileForImage" value="false"/>
-    <booleanAttribute key="org.eclipse.cdt.debug.gdbjtag.core.useFileForSymbols" value="false"/>
-    <booleanAttribute key="org.eclipse.cdt.debug.gdbjtag.core.useProjBinaryForImage" value="true"/>
-    <booleanAttribute key="org.eclipse.cdt.debug.gdbjtag.core.useProjBinaryForSymbols" value="true"/>
-    <stringAttribute key="org.eclipse.cdt.dsf.gdb.DEBUG_NAME" value="arm-none-eabi-gdb"/>
-    <booleanAttribute key="org.eclipse.cdt.dsf.gdb.NON_STOP" value="true"/>
-    <intAttribute key="org.eclipse.cdt.launch.ATTR_BUILD_BEFORE_LAUNCH_ATTR" value="2"/>
-    <booleanAttribute key="org.eclipse.cdt.launch.DEBUGGER_STOP_AT_MAIN" value="true"/>
-    <stringAttribute key="org.eclipse.cdt.launch.DEBUGGER_STOP_AT_MAIN_SYMBOL" value="main"/>
-    <stringAttribute key="org.eclipse.cdt.launch.PROGRAM_NAME" value="HardwareDebug/r01an5753_re_lora.elf"/>
-    <stringAttribute key="org.eclipse.cdt.launch.PROJECT_ATTR" value="r01an5753_re_lora"/>
-    <booleanAttribute key="org.eclipse.cdt.launch.PROJECT_BUILD_CONFIG_AUTO_ATTR" value="false"/>
-    <stringAttribute key="org.eclipse.cdt.launch.PROJECT_BUILD_CONFIG_ID_ATTR" value=""/>
-    <listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
-        <listEntry value="/r01an5753_re_lora"/>
-    </listAttribute>
-    <listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
-        <listEntry value="4"/>
-    </listAttribute>
-    <stringAttribute key="org.eclipse.dsf.launch.MEMORY_BLOCKS" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&lt;memoryBlockExpressionList context=&quot;reserved-for-future-use&quot;/&gt;"/>
-    <stringAttribute key="process_factory_id" value="org.eclipse.cdt.dsf.gdb.GdbProcessFactory"/>
-</launchConfiguration>
diff --git a/r01an5753_re_lora.ewd b/r01an5753_re_lora.ewd
deleted file mode 100644
index 403dabe..0000000
--- a/r01an5753_re_lora.ewd
+++ /dev/null
@@ -1,1489 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project>
-    <fileVersion>3</fileVersion>
-    <configuration>
-        <name>Flash Debug</name>
-        <toolchain>
-            <name>ARM</name>
-        </toolchain>
-        <debug>1</debug>
-        <settings>
-            <name>C-SPY</name>
-            <archiveVersion>2</archiveVersion>
-            <data>
-                <version>32</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>CInput</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CEndian</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CProcessor</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>OCVariant</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>MacOverride</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>MacFile</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>MemOverride</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>MemFile</name>
-                    <state>$TOOLKIT_DIR$\CONFIG\debugger\Renesas\R7F0E01182CFP.ddf</state>
-                </option>
-                <option>
-                    <name>RunToEnable</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>RunToName</name>
-                    <state>main</state>
-                </option>
-                <option>
-                    <name>CExtraOptionsCheck</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CExtraOptions</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CFpuProcessor</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>OCDDFArgumentProducer</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>OCDownloadSuppressDownload</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCDownloadVerifyAll</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCProductVersion</name>
-                    <state>8.20.2.14834</state>
-                </option>
-                <option>
-                    <name>OCDynDriverList</name>
-                    <state>JLINK_ID</state>
-                </option>
-                <option>
-                    <name>OCLastSavedByProductVersion</name>
-                    <state>8.50.6.28950</state>
-                </option>
-                <option>
-                    <name>UseFlashLoader</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CLowLevel</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>OCBE8Slave</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>MacFile2</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CDevice</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>FlashLoadersV3</name>
-                    <state>$TOOLKIT_DIR$\config\flashloader\Renesas\FlashR7F0E01x_256KB.board</state>
-                </option>
-                <option>
-                    <name>OCImagesSuppressCheck1</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCImagesPath1</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>OCImagesSuppressCheck2</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCImagesPath2</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>OCImagesSuppressCheck3</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCImagesPath3</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>OverrideDefFlashBoard</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCImagesOffset1</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>OCImagesOffset2</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>OCImagesOffset3</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>OCImagesUse1</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCImagesUse2</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCImagesUse3</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCDeviceConfigMacroFile</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>OCDebuggerExtraOption</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>OCAllMTBOptions</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>OCMulticoreNrOfCores</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>OCMulticoreWorkspace</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>OCMulticoreSlaveProject</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>OCMulticoreSlaveConfiguration</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>OCDownloadExtraImage</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>OCAttachSlave</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>MassEraseBeforeFlashing</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCMulticoreNrOfCoresSlave</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>OCMulticoreAMPConfigType</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCMulticoreSessionFile</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>OCTpiuBaseOption</name>
-                    <state>1</state>
-                </option>
-            </data>
-        </settings>
-        <settings>
-            <name>ARMSIM_ID</name>
-            <archiveVersion>2</archiveVersion>
-            <data>
-                <version>1</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>OCSimDriverInfo</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>OCSimEnablePSP</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCSimPspOverrideConfig</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCSimPspConfigFile</name>
-                    <state></state>
-                </option>
-            </data>
-        </settings>
-        <settings>
-            <name>CADI_ID</name>
-            <archiveVersion>2</archiveVersion>
-            <data>
-                <version>0</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>CCadiMemory</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>Fast Model</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CCADILogFileCheck</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCADILogFileEditB</name>
-                    <state>$PROJ_DIR$\cspycomm.log</state>
-                </option>
-                <option>
-                    <name>OCDriverInfo</name>
-                    <state>1</state>
-                </option>
-            </data>
-        </settings>
-        <settings>
-            <name>CMSISDAP_ID</name>
-            <archiveVersion>2</archiveVersion>
-            <data>
-                <version>4</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>OCDriverInfo</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>OCIarProbeScriptFile</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CMSISDAPResetList</name>
-                    <version>1</version>
-                    <state>10</state>
-                </option>
-                <option>
-                    <name>CMSISDAPHWResetDuration</name>
-                    <state>300</state>
-                </option>
-                <option>
-                    <name>CMSISDAPHWResetDelay</name>
-                    <state>200</state>
-                </option>
-                <option>
-                    <name>CMSISDAPDoLogfile</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CMSISDAPLogFile</name>
-                    <state>$PROJ_DIR$\cspycomm.log</state>
-                </option>
-                <option>
-                    <name>CMSISDAPInterfaceRadio</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CMSISDAPInterfaceCmdLine</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CMSISDAPMultiTargetEnable</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CMSISDAPMultiTarget</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CMSISDAPJtagSpeedList</name>
-                    <version>0</version>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CMSISDAPBreakpointRadio</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CMSISDAPRestoreBreakpointsCheck</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CMSISDAPUpdateBreakpointsEdit</name>
-                    <state>_call_main</state>
-                </option>
-                <option>
-                    <name>RDICatchReset</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>RDICatchUndef</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>RDICatchSWI</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>RDICatchData</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>RDICatchPrefetch</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>RDICatchIRQ</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>RDICatchFIQ</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CatchCORERESET</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CatchMMERR</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CatchNOCPERR</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CatchCHKERR</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CatchSTATERR</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CatchBUSERR</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CatchINTERR</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CatchSFERR</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CatchHARDERR</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CatchDummy</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CMSISDAPMultiCPUEnable</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CMSISDAPMultiCPUNumber</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCProbeCfgOverride</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCProbeConfig</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CMSISDAPProbeConfigRadio</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CMSISDAPSelectedCPUBehaviour</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>ICpuName</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>OCJetEmuParams</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CCCMSISDAPUsbSerialNo</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CCCMSISDAPUsbSerialNoSelect</name>
-                    <state>0</state>
-                </option>
-            </data>
-        </settings>
-        <settings>
-            <name>GDBSERVER_ID</name>
-            <archiveVersion>2</archiveVersion>
-            <data>
-                <version>0</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>OCDriverInfo</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>TCPIP</name>
-                    <state>aaa.bbb.ccc.ddd</state>
-                </option>
-                <option>
-                    <name>DoLogfile</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>LogFile</name>
-                    <state>$PROJ_DIR$\cspycomm.log</state>
-                </option>
-                <option>
-                    <name>CCJTagBreakpointRadio</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCJTagDoUpdateBreakpoints</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCJTagUpdateBreakpoints</name>
-                    <state>_call_main</state>
-                </option>
-            </data>
-        </settings>
-        <settings>
-            <name>IJET_ID</name>
-            <archiveVersion>2</archiveVersion>
-            <data>
-                <version>8</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>OCDriverInfo</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>OCIarProbeScriptFile</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IjetResetList</name>
-                    <version>1</version>
-                    <state>9</state>
-                </option>
-                <option>
-                    <name>IjetHWResetDuration</name>
-                    <state>300</state>
-                </option>
-                <option>
-                    <name>IjetHWResetDelay</name>
-                    <state>200</state>
-                </option>
-                <option>
-                    <name>IjetPowerFromProbe</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IjetPowerRadio</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IjetDoLogfile</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IjetLogFile</name>
-                    <state>$PROJ_DIR$\cspycomm.log</state>
-                </option>
-                <option>
-                    <name>IjetInterfaceRadio</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IjetInterfaceCmdLine</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IjetMultiTargetEnable</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IjetMultiTarget</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IjetScanChainNonARMDevices</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IjetIRLength</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IjetJtagSpeedList</name>
-                    <version>0</version>
-                    <state>12</state>
-                </option>
-                <option>
-                    <name>IjetProtocolRadio</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IjetSwoPin</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IjetCpuClockEdit</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IjetSwoPrescalerList</name>
-                    <version>1</version>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IjetBreakpointRadio</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IjetRestoreBreakpointsCheck</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IjetUpdateBreakpointsEdit</name>
-                    <state>_call_main</state>
-                </option>
-                <option>
-                    <name>RDICatchReset</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>RDICatchUndef</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>RDICatchSWI</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>RDICatchData</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>RDICatchPrefetch</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>RDICatchIRQ</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>RDICatchFIQ</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CatchCORERESET</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CatchMMERR</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CatchNOCPERR</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CatchCHKERR</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CatchSTATERR</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CatchBUSERR</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CatchINTERR</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CatchSFERR</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CatchHARDERR</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CatchDummy</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCProbeCfgOverride</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCProbeConfig</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IjetProbeConfigRadio</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IjetMultiCPUEnable</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IjetMultiCPUNumber</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IjetSelectedCPUBehaviour</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>ICpuName</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>OCJetEmuParams</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IjetPreferETB</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IjetTraceSettingsList</name>
-                    <version>0</version>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IjetTraceSizeList</name>
-                    <version>0</version>
-                    <state>4</state>
-                </option>
-                <option>
-                    <name>FlashBoardPathSlave</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCIjetUsbSerialNo</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CCIjetUsbSerialNoSelect</name>
-                    <state>0</state>
-                </option>
-            </data>
-        </settings>
-        <settings>
-            <name>JLINK_ID</name>
-            <archiveVersion>2</archiveVersion>
-            <data>
-                <version>16</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>JLinkSpeed</name>
-                    <state>320</state>
-                </option>
-                <option>
-                    <name>CCJLinkDoLogfile</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCJLinkLogFile</name>
-                    <state>$PROJ_DIR$\cspycomm.log</state>
-                </option>
-                <option>
-                    <name>CCJLinkHWResetDelay</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCDriverInfo</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>JLinkInitialSpeed</name>
-                    <state>1000</state>
-                </option>
-                <option>
-                    <name>CCDoJlinkMultiTarget</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCScanChainNonARMDevices</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCJLinkMultiTarget</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCJLinkIRLength</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCJLinkCommRadio</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCJLinkTCPIP</name>
-                    <state>aaa.bbb.ccc.ddd</state>
-                </option>
-                <option>
-                    <name>CCJLinkSpeedRadioV2</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCUSBDevice</name>
-                    <version>1</version>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CCRDICatchReset</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCRDICatchUndef</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCRDICatchSWI</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCRDICatchData</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCRDICatchPrefetch</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCRDICatchIRQ</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCRDICatchFIQ</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCJLinkBreakpointRadio</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCJLinkDoUpdateBreakpoints</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCJLinkUpdateBreakpoints</name>
-                    <state>_call_main</state>
-                </option>
-                <option>
-                    <name>CCJLinkInterfaceRadio</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CCJLinkResetList</name>
-                    <version>6</version>
-                    <state>12</state>
-                </option>
-                <option>
-                    <name>CCJLinkInterfaceCmdLine</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCCatchCORERESET</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCCatchMMERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCCatchNOCPERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCCatchCHRERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCCatchSTATERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCCatchBUSERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCCatchINTERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCCatchSFERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCCatchHARDERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCCatchDummy</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCJLinkScriptFile</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CCJLinkUsbSerialNo</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CCTcpIpAlt</name>
-                    <version>0</version>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCJLinkTcpIpSerialNo</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CCCpuClockEdit</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CCSwoClockAuto</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSwoClockEdit</name>
-                    <state>2000</state>
-                </option>
-                <option>
-                    <name>OCJLinkTraceSource</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCJLinkTraceSourceDummy</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCJLinkDeviceName</name>
-                    <state>1</state>
-                </option>
-            </data>
-        </settings>
-        <settings>
-            <name>LMIFTDI_ID</name>
-            <archiveVersion>2</archiveVersion>
-            <data>
-                <version>2</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>OCDriverInfo</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>LmiftdiSpeed</name>
-                    <state>500</state>
-                </option>
-                <option>
-                    <name>CCLmiftdiDoLogfile</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCLmiftdiLogFile</name>
-                    <state>$PROJ_DIR$\cspycomm.log</state>
-                </option>
-                <option>
-                    <name>CCLmiFtdiInterfaceRadio</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCLmiFtdiInterfaceCmdLine</name>
-                    <state>0</state>
-                </option>
-            </data>
-        </settings>
-        <settings>
-            <name>NULINK_ID</name>
-            <archiveVersion>2</archiveVersion>
-            <data>
-                <version>0</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>OCDriverInfo</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>DoLogfile</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>LogFile</name>
-                    <state>$PROJ_DIR$\cspycomm.log</state>
-                </option>
-            </data>
-        </settings>
-        <settings>
-            <name>PEMICRO_ID</name>
-            <archiveVersion>2</archiveVersion>
-            <data>
-                <version>3</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>OCDriverInfo</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CCJPEMicroShowSettings</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>DoLogfile</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>LogFile</name>
-                    <state>$PROJ_DIR$\cspycomm.log</state>
-                </option>
-            </data>
-        </settings>
-        <settings>
-            <name>STLINK_ID</name>
-            <archiveVersion>2</archiveVersion>
-            <data>
-                <version>7</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>OCDriverInfo</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CCSTLinkInterfaceRadio</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSTLinkInterfaceCmdLine</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSTLinkResetList</name>
-                    <version>3</version>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCCpuClockEdit</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CCSwoClockAuto</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSwoClockEdit</name>
-                    <state>2000</state>
-                </option>
-                <option>
-                    <name>DoLogfile</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>LogFile</name>
-                    <state>$PROJ_DIR$\cspycomm.log</state>
-                </option>
-                <option>
-                    <name>CCSTLinkDoUpdateBreakpoints</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSTLinkUpdateBreakpoints</name>
-                    <state>_call_main</state>
-                </option>
-                <option>
-                    <name>CCSTLinkCatchCORERESET</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSTLinkCatchMMERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSTLinkCatchNOCPERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSTLinkCatchCHRERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSTLinkCatchSTATERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSTLinkCatchBUSERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSTLinkCatchINTERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSTLinkCatchSFERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSTLinkCatchHARDERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSTLinkCatchDummy</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSTLinkUsbSerialNo</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CCSTLinkUsbSerialNoSelect</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSTLinkJtagSpeedList</name>
-                    <version>2</version>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSTLinkDAPNumber</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CCSTLinkDebugAccessPortRadio</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSTLinkUseServerSelect</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSTLinkProbeList</name>
-                    <version>1</version>
-                    <state>2</state>
-                </option>
-            </data>
-        </settings>
-        <settings>
-            <name>THIRDPARTY_ID</name>
-            <archiveVersion>2</archiveVersion>
-            <data>
-                <version>0</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>CThirdPartyDriverDll</name>
-                    <state>お使いのサードパーティ製ドライバを探します</state>
-                </option>
-                <option>
-                    <name>CThirdPartyLogFileCheck</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CThirdPartyLogFileEditB</name>
-                    <state>$PROJ_DIR$\cspycomm.log</state>
-                </option>
-                <option>
-                    <name>OCDriverInfo</name>
-                    <state>1</state>
-                </option>
-            </data>
-        </settings>
-        <settings>
-            <name>TIFET_ID</name>
-            <archiveVersion>2</archiveVersion>
-            <data>
-                <version>1</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>OCDriverInfo</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CCMSPFetResetList</name>
-                    <version>0</version>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCMSPFetInterfaceRadio</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCMSPFetInterfaceCmdLine</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCMSPFetTargetVccTypeDefault</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCMSPFetTargetVoltage</name>
-                    <state>3.0</state>
-                </option>
-                <option>
-                    <name>CCMSPFetVCCDefault</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CCMSPFetTargetSettlingtime</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCMSPFetRadioJtagSpeedType</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CCMSPFetConnection</name>
-                    <version>0</version>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCMSPFetUsbComPort</name>
-                    <state>Automatic</state>
-                </option>
-                <option>
-                    <name>CCMSPFetAllowAccessToBSL</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCMSPFetDoLogfile</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCMSPFetLogFile</name>
-                    <state>$PROJ_DIR$\cspycomm.log</state>
-                </option>
-                <option>
-                    <name>CCMSPFetRadioEraseFlash</name>
-                    <state>1</state>
-                </option>
-            </data>
-        </settings>
-        <settings>
-            <name>XDS100_ID</name>
-            <archiveVersion>2</archiveVersion>
-            <data>
-                <version>8</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>OCDriverInfo</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>TIPackageOverride</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>TIPackage</name>
-                    <state>C:\ti\ccs_base</state>
-                </option>
-                <option>
-                    <name>BoardFile</name>
-                    <state>$TOOLKIT_DIR$\config\debugger\TexasInstruments\xds\UNKNOWN_XDS200_CJTAG.dat</state>
-                </option>
-                <option>
-                    <name>DoLogfile</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>LogFile</name>
-                    <state>$PROJ_DIR$\cspycomm.log</state>
-                </option>
-                <option>
-                    <name>CCXds100BreakpointRadio</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100DoUpdateBreakpoints</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100UpdateBreakpoints</name>
-                    <state>_call_main</state>
-                </option>
-                <option>
-                    <name>CCXds100CatchReset</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100CatchUndef</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100CatchSWI</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100CatchData</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100CatchPrefetch</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100CatchIRQ</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100CatchFIQ</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100CatchCORERESET</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100CatchMMERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100CatchNOCPERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100CatchCHRERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100CatchSTATERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100CatchBUSERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100CatchINTERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100CatchSFERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100CatchHARDERR</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100CatchDummy</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100CpuClockEdit</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CCXds100SwoClockAuto</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100SwoClockEdit</name>
-                    <state>1000</state>
-                </option>
-                <option>
-                    <name>CCXds100HWResetDelay</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100ResetList</name>
-                    <version>0</version>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100UsbSerialNo</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CCXds100UsbSerialNoSelect</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100JtagSpeedList</name>
-                    <version>0</version>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100InterfaceRadio</name>
-                    <state>2</state>
-                </option>
-                <option>
-                    <name>CCXds100InterfaceCmdLine</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100ProbeList</name>
-                    <version>0</version>
-                    <state>2</state>
-                </option>
-                <option>
-                    <name>CCXds100SWOPortRadio</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXds100SWOPort</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CCXDSTargetVccEnable</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCXDSTargetVoltage</name>
-                    <state>3.3</state>
-                </option>
-                <option>
-                    <name>OCXDSDigitalStatesConfigFile</name>
-                    <state>1</state>
-                </option>
-            </data>
-        </settings>
-        <debuggerPlugins>
-            <plugin>
-                <file>$TOOLKIT_DIR$\plugins\rtos\CMX\CmxArmPlugin.JPN.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-            <plugin>
-                <file>$TOOLKIT_DIR$\plugins\rtos\CMX\CmxTinyArmPlugin.JPN.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-            <plugin>
-                <file>$TOOLKIT_DIR$\plugins\rtos\embOS\embOSPlugin.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-            <plugin>
-                <file>$TOOLKIT_DIR$\plugins\rtos\FreeRtos\FreeRtosArmPlugin.JPN.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-            <plugin>
-                <file>$TOOLKIT_DIR$\plugins\rtos\HWRTOSplugin\HWRTOSplugin.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-            <plugin>
-                <file>$TOOLKIT_DIR$\plugins\rtos\Mbed\MbedArmPlugin.JPN.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-            <plugin>
-                <file>$TOOLKIT_DIR$\plugins\rtos\Mbed\MbedArmPlugin2.JPN.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-            <plugin>
-                <file>$TOOLKIT_DIR$\plugins\rtos\OpenRTOS\OpenRTOSPlugin.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-            <plugin>
-                <file>$TOOLKIT_DIR$\plugins\rtos\RemedyRtosViewer\RemedyRtosViewer.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-            <plugin>
-                <file>$TOOLKIT_DIR$\plugins\rtos\SafeRTOS\SafeRTOSPlugin.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-            <plugin>
-                <file>$TOOLKIT_DIR$\plugins\rtos\SMX\smxAwareIarArm8b.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-            <plugin>
-                <file>$TOOLKIT_DIR$\plugins\rtos\SMX\smxAwareIarArm8bBE.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-            <plugin>
-                <file>$TOOLKIT_DIR$\plugins\rtos\ThreadX\ThreadXArmPlugin.JPN.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-            <plugin>
-                <file>$TOOLKIT_DIR$\plugins\rtos\TI-RTOS\tirtosplugin.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-            <plugin>
-                <file>$TOOLKIT_DIR$\plugins\rtos\uCOS-II\uCOS-II-286-KA-CSpy.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-            <plugin>
-                <file>$TOOLKIT_DIR$\plugins\rtos\uCOS-II\uCOS-II-KA-CSpy.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-            <plugin>
-                <file>$TOOLKIT_DIR$\plugins\rtos\uCOS-III\uCOS-III-KA-CSpy.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-            <plugin>
-                <file>$EW_DIR$\common\plugins\Orti\Orti.JPN.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-            <plugin>
-                <file>$EW_DIR$\common\plugins\TargetAccessServer\TargetAccessServer.JPN.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-            <plugin>
-                <file>$EW_DIR$\common\plugins\uCProbe\uCProbePlugin.JPN.ewplugin</file>
-                <loadFlag>0</loadFlag>
-            </plugin>
-        </debuggerPlugins>
-    </configuration>
-</project>
diff --git a/r01an5753_re_lora.ewp b/r01an5753_re_lora.ewp
deleted file mode 100644
index bfbc77b..0000000
--- a/r01an5753_re_lora.ewp
+++ /dev/null
@@ -1,1791 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project>
-    <fileVersion>3</fileVersion>
-    <configuration>
-        <name>Flash Debug</name>
-        <toolchain>
-            <name>ARM</name>
-        </toolchain>
-        <debug>1</debug>
-        <settings>
-            <name>General</name>
-            <archiveVersion>3</archiveVersion>
-            <data>
-                <version>31</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>ExePath</name>
-                    <state>Flash Debug\Exe</state>
-                </option>
-                <option>
-                    <name>ObjPath</name>
-                    <state>Flash Debug\Obj</state>
-                </option>
-                <option>
-                    <name>ListPath</name>
-                    <state>Flash Debug\List</state>
-                </option>
-                <option>
-                    <name>GEndianMode</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>Input description</name>
-                    <state>マルチバイトサポートなしのフルフォーマット。</state>
-                </option>
-                <option>
-                    <name>Output description</name>
-                    <state>マルチバイトサポートなしのフルフォーマット。</state>
-                </option>
-                <option>
-                    <name>GOutputBinary</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OGCoreOrChip</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>GRuntimeLibSelect</name>
-                    <version>0</version>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>GRuntimeLibSelectSlave</name>
-                    <version>0</version>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>RTDescription</name>
-                    <state>C/C++ランタイムライブラリの通常の設定を使用します。ロケールインタフェースなし、Cロケール、ファイル記述子サポートなし、printf/scanfでのマルチバイト文字なし、strtodでの16進数浮動小数点数なし。</state>
-                </option>
-                <option>
-                    <name>OGProductVersion</name>
-                    <state>5.10.0.159</state>
-                </option>
-                <option>
-                    <name>OGLastSavedByProductVersion</name>
-                    <state>8.50.6.28950</state>
-                </option>
-                <option>
-                    <name>GeneralEnableMisra</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>GeneralMisraVerbose</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OGChipSelectEditMenu</name>
-                    <state>R7F0E01182CFP	Renesas R7F0E01182CFP</state>
-                </option>
-                <option>
-                    <name>GenLowLevelInterface</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>GEndianModeBE</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>OGBufferedTerminalOutput</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>GenStdoutInterface</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>GeneralMisraRules98</name>
-                    <version>0</version>
-                    <state>1000111110110101101110011100111111101110011011000101110111101101100111111111111100110011111001110111001111111111111111111111111</state>
-                </option>
-                <option>
-                    <name>GeneralMisraVer</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>GeneralMisraRules04</name>
-                    <version>0</version>
-                    <state>111101110010111111111000110111111111111111111111111110010111101111010101111111111111111111111111101111111011111001111011111011111111111111111</state>
-                </option>
-                <option>
-                    <name>RTConfigPath2</name>
-                    <state>$TOOLKIT_DIR$\inc\c\DLib_Config_Normal.h</state>
-                </option>
-                <option>
-                    <name>GBECoreSlave</name>
-                    <version>28</version>
-                    <state>35</state>
-                </option>
-                <option>
-                    <name>OGUseCmsis</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OGUseCmsisDspLib</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>GRuntimeLibThreads</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CoreVariant</name>
-                    <version>28</version>
-                    <state>35</state>
-                </option>
-                <option>
-                    <name>GFPUDeviceSlave</name>
-                    <state>R7F0E01182CFP	Renesas R7F0E01182CFP</state>
-                </option>
-                <option>
-                    <name>FPU2</name>
-                    <version>0</version>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>NrRegs</name>
-                    <version>0</version>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>NEON</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>GFPUCoreSlave2</name>
-                    <version>28</version>
-                    <state>35</state>
-                </option>
-                <option>
-                    <name>OGCMSISPackSelectDevice</name>
-                </option>
-                <option>
-                    <name>OgLibHeap</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OGLibAdditionalLocale</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OGPrintfVariant</name>
-                    <version>0</version>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>OGPrintfMultibyteSupport</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OGScanfVariant</name>
-                    <version>0</version>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>OGScanfMultibyteSupport</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>GenLocaleTags</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>GenLocaleDisplayOnly</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>DSPExtension</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>TrustZone</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>TrustZoneModes</name>
-                    <version>0</version>
-                    <state>0</state>
-                </option>
-            </data>
-        </settings>
-        <settings>
-            <name>ICCARM</name>
-            <archiveVersion>2</archiveVersion>
-            <data>
-                <version>36</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>CCOptimizationNoSizeConstraints</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCDefines</name>
-                    <state>ACTIVE_REGION=LORAMAC_REGION_US915</state>
-                    <state>SX126X_TRIM_ENABLE</state>
-                    <state>USE_RTC</state>
-                    <state>REGION_US915</state>
-                    <state>SX1262MB2xAS</state>
-                </option>
-                <option>
-                    <name>CCPreprocFile</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCPreprocComments</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCPreprocLine</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCListCFile</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCListCMnemonics</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCListCMessages</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCListAssFile</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCListAssSource</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCEnableRemarks</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCDiagSuppress</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CCDiagRemark</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CCDiagWarning</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CCDiagError</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CCObjPrefix</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CCAllowList</name>
-                    <version>1</version>
-                    <state>00000000</state>
-                </option>
-                <option>
-                    <name>CCDebugInfo</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IEndianMode</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IProcessor</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IExtraOptionsCheck</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IExtraOptions</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CCLangConformance</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCSignedPlainChar</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CCRequirePrototypes</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCDiagWarnAreErr</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCCompilerRuntimeInfo</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IFpuProcessor</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>OutputFile</name>
-                    <state>$FILE_BNAME$.o</state>
-                </option>
-                <option>
-                    <name>CCLibConfigHeader</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>PreInclude</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CompilerMisraOverride</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCIncludePath2</name>
-                    <state>$PROJ_DIR$\</state>
-                    <state>$PROJ_DIR$\boards</state>
-                    <state>$PROJ_DIR$\boards\mcu\RE01_256KB</state>
-                    <state>$PROJ_DIR$\boards\rtk70e0118c00000bj</state>
-                    <state>$PROJ_DIR$\CMSIS\</state>
-                    <state>$PROJ_DIR$\CMSIS\Core\include</state>
-                    <state>$PROJ_DIR$\CMSIS\Driver\Include</state>
-                    <state>$PROJ_DIR$\Device</state>
-                    <state>$PROJ_DIR$\Device\CMSIS_Driver\Include</state>
-                    <state>$PROJ_DIR$\Device\Config</state>
-                    <state>$PROJ_DIR$\Device\Driver\Include</state>
-                    <state>$PROJ_DIR$\CMSIS\DSP_Lib\Include</state>
-                    <state>$PROJ_DIR$\mac</state>
-                    <state>$PROJ_DIR$\radio</state>
-                    <state>$PROJ_DIR$\radio\sx126x</state>
-                    <state>$PROJ_DIR$\system</state>
-                    <state>$PROJ_DIR$\system\crypto</state>
-                    <state>$PROJ_DIR$\Resource</state>
-                </option>
-                <option>
-                    <name>CCStdIncCheck</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCCodeSection</name>
-                    <state>.text</state>
-                </option>
-                <option>
-                    <name>IProcessorMode2</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CCOptLevel</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCOptStrategy</name>
-                    <version>0</version>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCOptLevelSlave</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CompilerMisraRules98</name>
-                    <version>0</version>
-                    <state>1000111110110101101110011100111111101110011011000101110111101101100111111111111100110011111001110111001111111111111111111111111</state>
-                </option>
-                <option>
-                    <name>CompilerMisraRules04</name>
-                    <version>0</version>
-                    <state>111101110010111111111000110111111111111111111111111110010111101111010101111111111111111111111111101111111011111001111011111011111111111111111</state>
-                </option>
-                <option>
-                    <name>CCPosIndRopi</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCPosIndRwpi</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCPosIndNoDynInit</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IccLang</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IccCDialect</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IccAllowVLA</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IccStaticDestr</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IccCppInlineSemantics</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IccCmsis</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IccFloatSemantics</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCNoLiteralPool</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCOptStrategySlave</name>
-                    <version>0</version>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCGuardCalls</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CCEncSource</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCEncOutput</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CCEncOutputBom</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CCEncInput</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IccExceptions2</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IccRTTI2</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OICompilerExtraOption</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CCStackProtection</name>
-                    <state>0</state>
-                </option>
-            </data>
-        </settings>
-        <settings>
-            <name>AARM</name>
-            <archiveVersion>2</archiveVersion>
-            <data>
-                <version>10</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>AObjPrefix</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>AEndian</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>ACaseSensitivity</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>MacroChars</name>
-                    <version>0</version>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>AWarnEnable</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>AWarnWhat</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>AWarnOne</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>AWarnRange1</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>AWarnRange2</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>ADebug</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>AltRegisterNames</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>ADefines</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>AList</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>AListHeader</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>AListing</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>Includes</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>MacDefs</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>MacExps</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>MacExec</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OnlyAssed</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>MultiLine</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>PageLengthCheck</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>PageLength</name>
-                    <state>80</state>
-                </option>
-                <option>
-                    <name>TabSpacing</name>
-                    <state>8</state>
-                </option>
-                <option>
-                    <name>AXRef</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>AXRefDefines</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>AXRefInternal</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>AXRefDual</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>AProcessor</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>AFpuProcessor</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>AOutputFile</name>
-                    <state>$FILE_BNAME$.o</state>
-                </option>
-                <option>
-                    <name>ALimitErrorsCheck</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>ALimitErrorsEdit</name>
-                    <state>100</state>
-                </option>
-                <option>
-                    <name>AIgnoreStdInclude</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>AUserIncludes</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>AExtraOptionsCheckV2</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>AExtraOptionsV2</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>AsmNoLiteralPool</name>
-                    <state>0</state>
-                </option>
-            </data>
-        </settings>
-        <settings>
-            <name>OBJCOPY</name>
-            <archiveVersion>0</archiveVersion>
-            <data>
-                <version>1</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>OOCOutputFormat</name>
-                    <version>3</version>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>OCOutputOverride</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>OOCOutputFile</name>
-                    <state>r01an5753_re_lora.mot</state>
-                </option>
-                <option>
-                    <name>OOCCommandLineProducer</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>OOCObjCopyEnable</name>
-                    <state>1</state>
-                </option>
-            </data>
-        </settings>
-        <settings>
-            <name>CUSTOM</name>
-            <archiveVersion>3</archiveVersion>
-            <data>
-                <extensions></extensions>
-                <cmdline></cmdline>
-                <hasPrio>0</hasPrio>
-            </data>
-        </settings>
-        <settings>
-            <name>BICOMP</name>
-            <archiveVersion>0</archiveVersion>
-            <data />
-        </settings>
-        <settings>
-            <name>BUILDACTION</name>
-            <archiveVersion>1</archiveVersion>
-            <data>
-                <prebuild></prebuild>
-                <postbuild></postbuild>
-            </data>
-        </settings>
-        <settings>
-            <name>ILINK</name>
-            <archiveVersion>0</archiveVersion>
-            <data>
-                <version>23</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>IlinkOutputFile</name>
-                    <state>$PROJ_FNAME$.out</state>
-                </option>
-                <option>
-                    <name>IlinkLibIOConfig</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>XLinkMisraHandler</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkInputFileSlave</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkDebugInfoEnable</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IlinkKeepSymbols</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IlinkRawBinaryFile</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IlinkRawBinarySymbol</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IlinkRawBinarySegment</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IlinkRawBinaryAlign</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IlinkDefines</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IlinkConfigDefines</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IlinkMapFile</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IlinkLogFile</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkLogInitialization</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkLogModule</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkLogSection</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkLogVeneer</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkIcfOverride</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IlinkIcfFile</name>
-                    <state>$PROJ_DIR$\config\RE01_256KB.icf</state>
-                </option>
-                <option>
-                    <name>IlinkIcfFileSlave</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IlinkEnableRemarks</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkSuppressDiags</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IlinkTreatAsRem</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IlinkTreatAsWarn</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IlinkTreatAsErr</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IlinkWarningsAreErrors</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkUseExtraOptions</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkExtraOptions</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IlinkLowLevelInterfaceSlave</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IlinkAutoLibEnable</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IlinkAdditionalLibs</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IlinkOverrideProgramEntryLabel</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkProgramEntryLabelSelect</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkProgramEntryLabel</name>
-                    <state>__iar_program_start</state>
-                </option>
-                <option>
-                    <name>DoFill</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>FillerByte</name>
-                    <state>0xFF</state>
-                </option>
-                <option>
-                    <name>FillerStart</name>
-                    <state>0x0</state>
-                </option>
-                <option>
-                    <name>FillerEnd</name>
-                    <state>0x0</state>
-                </option>
-                <option>
-                    <name>CrcSize</name>
-                    <version>0</version>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CrcAlign</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CrcPoly</name>
-                    <state>0x11021</state>
-                </option>
-                <option>
-                    <name>CrcCompl</name>
-                    <version>0</version>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CrcBitOrder</name>
-                    <version>0</version>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>CrcInitialValue</name>
-                    <state>0x0</state>
-                </option>
-                <option>
-                    <name>DoCrc</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkBE8Slave</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IlinkBufferedTerminalOutput</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IlinkStdoutInterfaceSlave</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CrcFullSize</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkIElfToolPostProcess</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkLogAutoLibSelect</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkLogRedirSymbols</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkLogUnusedFragments</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkCrcReverseByteOrder</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkCrcUseAsInput</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IlinkOptInline</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkOptExceptionsAllow</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IlinkOptExceptionsForce</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkCmsis</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IlinkOptMergeDuplSections</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkOptUseVfe</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IlinkOptForceVfe</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkStackAnalysisEnable</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkStackControlFile</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IlinkStackCallGraphFile</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>CrcAlgorithm</name>
-                    <version>1</version>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>CrcUnitSize</name>
-                    <version>0</version>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkThreadsSlave</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IlinkLogCallGraph</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkIcfFile_AltDefault</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IlinkEncInput</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkEncOutput</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IlinkEncOutputBom</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IlinkHeapSelect</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IlinkLocaleSelect</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IlinkTrustzoneImportLibraryOut</name>
-                    <state>Exf_to_Min_sstby_LLC_re01_256KB.import_lib.o</state>
-                </option>
-                <option>
-                    <name>OILinkExtraOption</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>IlinkRawBinaryFile2</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IlinkRawBinarySymbol2</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IlinkRawBinarySegment2</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IlinkRawBinaryAlign2</name>
-                    <state></state>
-                </option>
-            </data>
-        </settings>
-        <settings>
-            <name>IARCHIVE</name>
-            <archiveVersion>0</archiveVersion>
-            <data>
-                <version>0</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>IarchiveInputs</name>
-                    <state></state>
-                </option>
-                <option>
-                    <name>IarchiveOverride</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>IarchiveOutput</name>
-                    <state>###Unitialized###</state>
-                </option>
-            </data>
-        </settings>
-        <settings>
-            <name>BILINK</name>
-            <archiveVersion>0</archiveVersion>
-            <data />
-        </settings>
-    </configuration>
-    <group>
-        <name>boards</name>
-        <group>
-            <name>mcu</name>
-            <group>
-                <name>RE01_256KB</name>
-                <file>
-                    <name>$PROJ_DIR$\boards\mcu\RE01_256KB\pinName-board.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\boards\mcu\RE01_256KB\r_rtc.c</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\boards\mcu\RE01_256KB\r_rtc.h</name>
-                </file>
-            </group>
-            <file>
-                <name>$PROJ_DIR$\boards\mcu\utilities.c</name>
-            </file>
-        </group>
-        <group>
-            <name>rtk70e0118c00000bj</name>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\board-config.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\board.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\delay-board.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\gpio-board.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\i2c-board.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\lpm-board.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\lpm-board.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\pinName-ioe.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\rtc-board.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\rtk70e015dc00001bj-board.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\spi-board.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\uart-board.c</name>
-            </file>
-        </group>
-        <file>
-            <name>$PROJ_DIR$\boards\adc-board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\board_uart.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\delay-board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\gpio-board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\i2c-board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\rtc-board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\spi-board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\sx126x-board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\uart-board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\uart-usb-board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\utilities.h</name>
-        </file>
-    </group>
-    <group>
-        <name>CMSIS</name>
-        <group>
-            <name>Core</name>
-            <group>
-                <name>Include</name>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Core\Include\cmsis_armcc.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Core\Include\cmsis_armclang.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Core\Include\cmsis_compiler.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Core\Include\cmsis_gcc.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Core\Include\cmsis_iccarm.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Core\Include\cmsis_version.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Core\Include\core_cm0plus.h</name>
-                </file>
-            </group>
-        </group>
-        <group>
-            <name>Driver</name>
-            <group>
-                <name>Include</name>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_CAN.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_Common.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_ETH.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_ETH_MAC.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_ETH_PHY.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_Flash.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_I2C.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_MCI.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_NAND.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_SAI.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_SPI.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_Storage.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_USART.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_USB.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_USBD.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_USBH.h</name>
-                </file>
-            </group>
-        </group>
-        <group>
-            <name>DSP_Lib</name>
-            <group>
-                <name>Include</name>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\DSP_Lib\Include\arm_common_tables.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\DSP_Lib\Include\arm_const_structs.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\DSP_Lib\Include\arm_math.h</name>
-                </file>
-            </group>
-        </group>
-    </group>
-    <group>
-        <name>Device</name>
-        <group>
-            <name>CMSIS_Driver</name>
-            <group>
-                <name>Include</name>
-                <file>
-                    <name>$PROJ_DIR$\Device\CMSIS_Driver\Include\R_Driver_I2C.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\CMSIS_Driver\Include\R_Driver_USART.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\CMSIS_Driver\Include\r_i2c_cmsis_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\CMSIS_Driver\Include\r_spi_cmsis_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\CMSIS_Driver\Include\r_usart_cmsis_api.h</name>
-                </file>
-            </group>
-            <group>
-                <name>Src</name>
-                <file>
-                    <name>$PROJ_DIR$\Device\CMSIS_Driver\Src\r_i2c_cmsis_api.c</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\CMSIS_Driver\Src\r_spi_cmsis_api.c</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\CMSIS_Driver\Src\r_usart_cmsis_api.c</name>
-                </file>
-            </group>
-        </group>
-        <group>
-            <name>Config</name>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_adc_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_core_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_dmac_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_dtc_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_flash_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_gdt_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_i2c_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_lpm_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_pmip_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_smip_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_spi_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_system_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_usart_cfg.h</name>
-            </file>
-        </group>
-        <group>
-            <name>Driver</name>
-            <group>
-                <name>Include</name>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_adc_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_dma_common_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_dmac_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_dtc_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_flash_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_flash_lowlevel.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_flash_re01_256kb.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_gdt_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_lpm_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_pmip_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_smip_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_system_api.h</name>
-                </file>
-            </group>
-            <group>
-                <name>Src</name>
-                <group>
-                    <name>r_adc</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_adc\r_adc_api.c</name>
-                    </file>
-                </group>
-                <group>
-                    <name>r_dmac</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_dmac\r_dmac_api.c</name>
-                    </file>
-                </group>
-                <group>
-                    <name>r_dtc</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_dtc\r_dtc_api.c</name>
-                    </file>
-                </group>
-                <group>
-                    <name>r_ehc</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_ehc\r_ehc.c</name>
-                    </file>
-                </group>
-                <group>
-                    <name>r_flash</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_flash\r_flash_api.c</name>
-                    </file>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_flash\r_flash_lowlevel.c</name>
-                    </file>
-                </group>
-                <group>
-                    <name>r_gdt</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_gdt\r_gdt_api.c</name>
-                    </file>
-                </group>
-                <group>
-                    <name>r_lpm</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_lpm\r_lpm_api.c</name>
-                    </file>
-                </group>
-                <group>
-                    <name>r_pmip</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_pmip\r_pmip_api.c</name>
-                    </file>
-                </group>
-                <group>
-                    <name>r_smip</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_smip\r_smip_api.c</name>
-                    </file>
-                </group>
-                <group>
-                    <name>r_system</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_system\r_system_api.c</name>
-                    </file>
-                </group>
-            </group>
-        </group>
-        <file>
-            <name>$PROJ_DIR$\Device\pin.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\pin.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\RE01_256KB.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\startup_RE01_256KB.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\system_RE01_256KB.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\system_RE01_256KB.h</name>
-        </file>
-    </group>
-    <group>
-        <name>mac</name>
-        <group>
-            <name>region</name>
-            <file>
-                <name>$PROJ_DIR$\mac\region\Region.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\Region.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionAS923.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionAS923.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionAU915.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionAU915.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionCN470.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionCN470.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionCN779.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionCN779.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionCommon.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionCommon.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionEU433.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionEU433.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionEU868.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionEU868.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionIN865.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionIN865.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionKR920.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionKR920.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionRU864.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionRU864.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionUS915.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionUS915.h</name>
-            </file>
-        </group>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMac.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMac.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacAdr.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacAdr.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacClassB.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacClassB.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacClassBConfig.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacCommands.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacCommands.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacConfirmQueue.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacConfirmQueue.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacCrypto.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacCrypto.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacHeaderTypes.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacMessageTypes.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacParser.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacParser.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacSerializer.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacSerializer.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacTest.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacTypes.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\secure-element.h</name>
-        </file>
-    </group>
-    <group>
-        <name>radio</name>
-        <group>
-            <name>sx126x</name>
-            <file>
-                <name>$PROJ_DIR$\radio\sx126x\sx126x.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\radio\sx126x\sx126x.h</name>
-            </file>
-        </group>
-        <file>
-            <name>$PROJ_DIR$\radio\radio.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\radio\radio.h</name>
-        </file>
-    </group>
-    <group>
-        <name>Resource</name>
-        <file>
-            <name>$PROJ_DIR$\Resource\bitmap_charge_data.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Resource\bitmap_opening_data.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Resource\bitmap_shutdown_data.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Resource\resource.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Resource\sensor_data_screen.h</name>
-        </file>
-    </group>
-    <group>
-        <name>system</name>
-        <group>
-            <name>crypto</name>
-            <file>
-                <name>$PROJ_DIR$\system\crypto\aes.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\system\crypto\aes.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\system\crypto\cmac.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\system\crypto\cmac.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\system\crypto\soft-se.c</name>
-            </file>
-        </group>
-        <file>
-            <name>$PROJ_DIR$\system\adc.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\adc.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\delay.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\delay.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\fifo.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\fifo.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\gpio.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\gpio.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\i2c.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\i2c.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\spi.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\systime.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\systime.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\timer.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\timer.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\uart.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\uart.h</name>
-        </file>
-    </group>
-    <file>
-        <name>$PROJ_DIR$\agt0_timer.c</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\agt0_timer.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\agt1.c</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\agt1.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\Commissioning.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\error.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\hs300x.c</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\hs300x.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\lcd.c</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\lcd.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\lvd_lvdbat.c</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\lvd_lvdbat.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\main.c</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\main.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\mip_display.c</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\mip_display.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\sensors.c</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\sensors.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\sys_lpm.c</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\sys_lpm.h</name>
-    </file>
-</project>
diff --git a/r01an5753_re_lora.ewt b/r01an5753_re_lora.ewt
deleted file mode 100644
index 1690746..0000000
--- a/r01an5753_re_lora.ewt
+++ /dev/null
@@ -1,2134 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project>
-    <fileVersion>3</fileVersion>
-    <configuration>
-        <name>Flash Debug</name>
-        <toolchain>
-            <name>ARM</name>
-        </toolchain>
-        <debug>1</debug>
-        <settings>
-            <name>C-STAT</name>
-            <archiveVersion>264</archiveVersion>
-            <data>
-                <version>264</version>
-                <cstatargs>
-                    <useExtraArgs>0</useExtraArgs>
-                    <extraArgs></extraArgs>
-                    <analyzeTimeoutEnabled>1</analyzeTimeoutEnabled>
-                    <analyzeTimeout>600</analyzeTimeout>
-                    <enableParallel>0</enableParallel>
-                    <parallelThreads>2</parallelThreads>
-                    <enableFalsePositives>0</enableFalsePositives>
-                    <messagesLimitEnabled>1</messagesLimitEnabled>
-                    <messagesLimit>100</messagesLimit>
-                </cstatargs>
-                <cstat_settings>
-                    <cstat_version>1.8.1</cstat_version>
-                    <checks_tree>
-                        <package enabled="true" name="STDCHECKS">
-                            <group enabled="true" name="ARR">
-                                <check enabled="true" name="ARR-inv-index-pos" />
-                                <check enabled="true" name="ARR-inv-index-ptr-pos" />
-                                <check enabled="true" name="ARR-inv-index-ptr" />
-                                <check enabled="true" name="ARR-inv-index" />
-                                <check enabled="true" name="ARR-neg-index" />
-                                <check enabled="true" name="ARR-uninit-index" />
-                            </group>
-                            <group enabled="true" name="ATH">
-                                <check enabled="true" name="ATH-cmp-float" />
-                                <check enabled="true" name="ATH-cmp-unsign-neg" />
-                                <check enabled="true" name="ATH-cmp-unsign-pos" />
-                                <check enabled="true" name="ATH-div-0-assign" />
-                                <check enabled="false" name="ATH-div-0-cmp-aft" />
-                                <check enabled="true" name="ATH-div-0-cmp-bef" />
-                                <check enabled="true" name="ATH-div-0-interval" />
-                                <check enabled="true" name="ATH-div-0-pos" />
-                                <check enabled="true" name="ATH-div-0-unchk-global" />
-                                <check enabled="true" name="ATH-div-0-unchk-local" />
-                                <check enabled="true" name="ATH-div-0-unchk-param" />
-                                <check enabled="true" name="ATH-div-0" />
-                                <check enabled="true" name="ATH-inc-bool" />
-                                <check enabled="true" name="ATH-malloc-overrun" />
-                                <check enabled="true" name="ATH-neg-check-nonneg" />
-                                <check enabled="true" name="ATH-neg-check-pos" />
-                                <check enabled="true" name="ATH-new-overrun" />
-                                <check enabled="false" name="ATH-overflow-cast" />
-                                <check enabled="true" name="ATH-overflow" />
-                                <check enabled="true" name="ATH-shift-bounds" />
-                                <check enabled="true" name="ATH-shift-neg" />
-                                <check enabled="true" name="ATH-sizeof-by-sizeof" />
-                            </group>
-                            <group enabled="true" name="CAST">
-                                <check enabled="false" name="CAST-old-style" />
-                            </group>
-                            <group enabled="true" name="CATCH">
-                                <check enabled="true" name="CATCH-object-slicing" />
-                                <check enabled="false" name="CATCH-xtor-bad-member" />
-                            </group>
-                            <group enabled="true" name="COMMA">
-                                <check enabled="false" name="COMMA-overload" />
-                            </group>
-                            <group enabled="true" name="COMMENT">
-                                <check enabled="true" name="COMMENT-nested" />
-                            </group>
-                            <group enabled="true" name="CONST">
-                                <check enabled="true" name="CONST-member-ret" />
-                            </group>
-                            <group enabled="true" name="COP">
-                                <check enabled="false" name="COP-alloc-ctor" />
-                                <check enabled="true" name="COP-assign-op-ret" />
-                                <check enabled="true" name="COP-assign-op-self" />
-                                <check enabled="true" name="COP-assign-op" />
-                                <check enabled="true" name="COP-copy-ctor" />
-                                <check enabled="false" name="COP-dealloc-dtor" />
-                                <check enabled="true" name="COP-dtor-throw" />
-                                <check enabled="true" name="COP-dtor" />
-                                <check enabled="true" name="COP-init-order" />
-                                <check enabled="true" name="COP-init-uninit" />
-                                <check enabled="true" name="COP-member-uninit" />
-                            </group>
-                            <group enabled="true" name="CPU">
-                                <check enabled="true" name="CPU-ctor-call-virt" />
-                                <check enabled="false" name="CPU-ctor-implicit" />
-                                <check enabled="true" name="CPU-delete-throw" />
-                                <check enabled="true" name="CPU-delete-void" />
-                                <check enabled="true" name="CPU-dtor-call-virt" />
-                                <check enabled="true" name="CPU-malloc-class" />
-                                <check enabled="true" name="CPU-nonvirt-dtor" />
-                                <check enabled="true" name="CPU-return-ref-to-class-data" />
-                            </group>
-                            <group enabled="true" name="DECL">
-                                <check enabled="false" name="DECL-implicit-int" />
-                            </group>
-                            <group enabled="true" name="DEFINE">
-                                <check enabled="true" name="DEFINE-hash-multiple" />
-                            </group>
-                            <group enabled="true" name="ENUM">
-                                <check enabled="false" name="ENUM-bounds" />
-                            </group>
-                            <group enabled="true" name="EXP">
-                                <check enabled="true" name="EXP-cond-assign" />
-                                <check enabled="true" name="EXP-dangling-else" />
-                                <check enabled="true" name="EXP-loop-exit" />
-                                <check enabled="false" name="EXP-main-ret-int" />
-                                <check enabled="false" name="EXP-null-stmt" />
-                                <check enabled="false" name="EXP-stray-semicolon" />
-                            </group>
-                            <group enabled="true" name="EXPR">
-                                <check enabled="true" name="EXPR-const-overflow" />
-                            </group>
-                            <group enabled="true" name="FPT">
-                                <check enabled="true" name="FPT-cmp-null" />
-                                <check enabled="false" name="FPT-literal" />
-                                <check enabled="true" name="FPT-misuse" />
-                            </group>
-                            <group enabled="true" name="FUNC">
-                                <check enabled="false" name="FUNC-implicit-decl" />
-                                <check enabled="false" name="FUNC-unprototyped-all" />
-                                <check enabled="true" name="FUNC-unprototyped-used" />
-                            </group>
-                            <group enabled="true" name="INCLUDE">
-                                <check enabled="false" name="INCLUDE-c-file" />
-                            </group>
-                            <group enabled="true" name="INT">
-                                <check enabled="false" name="INT-use-signed-as-unsigned-pos" />
-                                <check enabled="true" name="INT-use-signed-as-unsigned" />
-                            </group>
-                            <group enabled="true" name="ITR">
-                                <check enabled="true" name="ITR-end-cmp-aft" />
-                                <check enabled="true" name="ITR-end-cmp-bef" />
-                                <check enabled="true" name="ITR-invalidated" />
-                                <check enabled="false" name="ITR-mismatch-alg" />
-                                <check enabled="false" name="ITR-store" />
-                                <check enabled="true" name="ITR-uninit" />
-                            </group>
-                            <group enabled="true" name="LIB">
-                                <check enabled="false" name="LIB-bsearch-overrun-pos" />
-                                <check enabled="false" name="LIB-bsearch-overrun" />
-                                <check enabled="false" name="LIB-fn-unsafe" />
-                                <check enabled="false" name="LIB-fread-overrun-pos" />
-                                <check enabled="true" name="LIB-fread-overrun" />
-                                <check enabled="false" name="LIB-memchr-overrun-pos" />
-                                <check enabled="true" name="LIB-memchr-overrun" />
-                                <check enabled="false" name="LIB-memcpy-overrun-pos" />
-                                <check enabled="true" name="LIB-memcpy-overrun" />
-                                <check enabled="false" name="LIB-memset-overrun-pos" />
-                                <check enabled="true" name="LIB-memset-overrun" />
-                                <check enabled="false" name="LIB-putenv" />
-                                <check enabled="false" name="LIB-qsort-overrun-pos" />
-                                <check enabled="false" name="LIB-qsort-overrun" />
-                                <check enabled="true" name="LIB-return-const" />
-                                <check enabled="true" name="LIB-return-error" />
-                                <check enabled="true" name="LIB-return-leak" />
-                                <check enabled="true" name="LIB-return-neg" />
-                                <check enabled="true" name="LIB-return-null" />
-                                <check enabled="false" name="LIB-sprintf-overrun" />
-                                <check enabled="false" name="LIB-std-sort-overrun-pos" />
-                                <check enabled="true" name="LIB-std-sort-overrun" />
-                                <check enabled="false" name="LIB-strcat-overrun-pos" />
-                                <check enabled="true" name="LIB-strcat-overrun" />
-                                <check enabled="false" name="LIB-strcpy-overrun-pos" />
-                                <check enabled="true" name="LIB-strcpy-overrun" />
-                                <check enabled="false" name="LIB-strncat-overrun-pos" />
-                                <check enabled="true" name="LIB-strncat-overrun" />
-                                <check enabled="false" name="LIB-strncmp-overrun-pos" />
-                                <check enabled="true" name="LIB-strncmp-overrun" />
-                                <check enabled="false" name="LIB-strncpy-overrun-pos" />
-                                <check enabled="true" name="LIB-strncpy-overrun" />
-                            </group>
-                            <group enabled="true" name="LOGIC">
-                                <check enabled="false" name="LOGIC-overload" />
-                            </group>
-                            <group enabled="true" name="MEM">
-                                <check enabled="true" name="MEM-delete-array-op" />
-                                <check enabled="true" name="MEM-delete-op" />
-                                <check enabled="true" name="MEM-double-free-alias" />
-                                <check enabled="true" name="MEM-double-free-some" />
-                                <check enabled="true" name="MEM-double-free" />
-                                <check enabled="true" name="MEM-free-field" />
-                                <check enabled="true" name="MEM-free-fptr" />
-                                <check enabled="false" name="MEM-free-no-alloc-struct" />
-                                <check enabled="false" name="MEM-free-no-alloc" />
-                                <check enabled="true" name="MEM-free-no-use" />
-                                <check enabled="true" name="MEM-free-op" />
-                                <check enabled="true" name="MEM-free-struct-field" />
-                                <check enabled="true" name="MEM-free-variable-alias" />
-                                <check enabled="true" name="MEM-free-variable" />
-                                <check enabled="true" name="MEM-leak-alias" />
-                                <check enabled="false" name="MEM-leak" />
-                                <check enabled="false" name="MEM-malloc-arith" />
-                                <check enabled="true" name="MEM-malloc-diff-type" />
-                                <check enabled="true" name="MEM-malloc-sizeof-ptr" />
-                                <check enabled="true" name="MEM-malloc-sizeof" />
-                                <check enabled="false" name="MEM-malloc-strlen" />
-                                <check enabled="true" name="MEM-realloc-diff-type" />
-                                <check enabled="true" name="MEM-return-free" />
-                                <check enabled="true" name="MEM-return-no-assign" />
-                                <check enabled="true" name="MEM-stack-global-field" />
-                                <check enabled="true" name="MEM-stack-global" />
-                                <check enabled="true" name="MEM-stack-param-ref" />
-                                <check enabled="true" name="MEM-stack-param" />
-                                <check enabled="true" name="MEM-stack-pos" />
-                                <check enabled="true" name="MEM-stack-ref" />
-                                <check enabled="true" name="MEM-stack" />
-                                <check enabled="true" name="MEM-use-free-all" />
-                                <check enabled="true" name="MEM-use-free-some" />
-                            </group>
-                            <group enabled="true" name="PTR">
-                                <check enabled="true" name="PTR-arith-field" />
-                                <check enabled="true" name="PTR-arith-stack" />
-                                <check enabled="true" name="PTR-arith-var" />
-                                <check enabled="true" name="PTR-cmp-str-lit" />
-                                <check enabled="false" name="PTR-null-assign-fun-pos" />
-                                <check enabled="false" name="PTR-null-assign-pos" />
-                                <check enabled="true" name="PTR-null-assign" />
-                                <check enabled="true" name="PTR-null-cmp-aft" />
-                                <check enabled="true" name="PTR-null-cmp-bef-fun" />
-                                <check enabled="true" name="PTR-null-cmp-bef" />
-                                <check enabled="true" name="PTR-null-fun-pos" />
-                                <check enabled="false" name="PTR-null-literal-pos" />
-                                <check enabled="false" name="PTR-overload" />
-                                <check enabled="false" name="PTR-singleton-arith-pos" />
-                                <check enabled="true" name="PTR-singleton-arith" />
-                                <check enabled="true" name="PTR-unchk-param-some" />
-                                <check enabled="false" name="PTR-unchk-param" />
-                                <check enabled="false" name="PTR-uninit-pos" />
-                                <check enabled="true" name="PTR-uninit" />
-                            </group>
-                            <group enabled="true" name="RED">
-                                <check enabled="false" name="RED-alloc-zero-bytes" />
-                                <check enabled="false" name="RED-case-reach" />
-                                <check enabled="false" name="RED-cmp-always" />
-                                <check enabled="false" name="RED-cmp-never" />
-                                <check enabled="false" name="RED-cond-always" />
-                                <check enabled="true" name="RED-cond-const-assign" />
-                                <check enabled="false" name="RED-cond-const-expr" />
-                                <check enabled="false" name="RED-cond-const" />
-                                <check enabled="false" name="RED-cond-never" />
-                                <check enabled="true" name="RED-dead" />
-                                <check enabled="false" name="RED-expr" />
-                                <check enabled="false" name="RED-func-no-effect" />
-                                <check enabled="true" name="RED-local-hides-global" />
-                                <check enabled="false" name="RED-local-hides-local" />
-                                <check enabled="false" name="RED-local-hides-member" />
-                                <check enabled="true" name="RED-local-hides-param" />
-                                <check enabled="false" name="RED-no-effect" />
-                                <check enabled="true" name="RED-self-assign" />
-                                <check enabled="true" name="RED-unused-assign" />
-                                <check enabled="false" name="RED-unused-param" />
-                                <check enabled="false" name="RED-unused-return-val" />
-                                <check enabled="false" name="RED-unused-val" />
-                                <check enabled="true" name="RED-unused-var-all" />
-                            </group>
-                            <group enabled="true" name="RESOURCE">
-                                <check enabled="false" name="RESOURCE-deref-file" />
-                                <check enabled="true" name="RESOURCE-double-close" />
-                                <check enabled="true" name="RESOURCE-file-no-close-all" />
-                                <check enabled="false" name="RESOURCE-file-pos-neg" />
-                                <check enabled="true" name="RESOURCE-file-use-after-close" />
-                                <check enabled="false" name="RESOURCE-implicit-deref-file" />
-                                <check enabled="true" name="RESOURCE-write-ronly-file" />
-                            </group>
-                            <group enabled="true" name="SIZEOF">
-                                <check enabled="true" name="SIZEOF-side-effect" />
-                            </group>
-                            <group enabled="true" name="SPC">
-                                <check enabled="true" name="SPC-order" />
-                                <check enabled="false" name="SPC-uninit-arr-all" />
-                                <check enabled="true" name="SPC-uninit-struct-field-heap" />
-                                <check enabled="false" name="SPC-uninit-struct-field" />
-                                <check enabled="true" name="SPC-uninit-struct" />
-                                <check enabled="true" name="SPC-uninit-var-all" />
-                                <check enabled="true" name="SPC-uninit-var-some" />
-                                <check enabled="false" name="SPC-volatile-reads" />
-                                <check enabled="false" name="SPC-volatile-writes" />
-                            </group>
-                            <group enabled="true" name="STRUCT">
-                                <check enabled="false" name="STRUCT-signed-bit" />
-                            </group>
-                            <group enabled="true" name="SWITCH">
-                                <check enabled="true" name="SWITCH-fall-through" />
-                            </group>
-                            <group enabled="true" name="THROW">
-                                <check enabled="false" name="THROW-empty" />
-                                <check enabled="false" name="THROW-main" />
-                                <check enabled="true" name="THROW-null" />
-                                <check enabled="true" name="THROW-ptr" />
-                                <check enabled="true" name="THROW-static" />
-                                <check enabled="true" name="THROW-unhandled" />
-                            </group>
-                            <group enabled="true" name="UNION">
-                                <check enabled="true" name="UNION-overlap-assign" />
-                                <check enabled="true" name="UNION-type-punning" />
-                            </group>
-                        </package>
-                        <package enabled="false" name="CERT">
-                            <group enabled="true" name="CERT-ARR">
-                                <check enabled="true" name="CERT-ARR30-C_a" />
-                                <check enabled="true" name="CERT-ARR30-C_b" />
-                                <check enabled="true" name="CERT-ARR30-C_c" />
-                                <check enabled="true" name="CERT-ARR30-C_d" />
-                                <check enabled="true" name="CERT-ARR30-C_e" />
-                                <check enabled="true" name="CERT-ARR30-C_f" />
-                                <check enabled="true" name="CERT-ARR30-C_g" />
-                                <check enabled="true" name="CERT-ARR30-C_h" />
-                                <check enabled="true" name="CERT-ARR30-C_i" />
-                                <check enabled="true" name="CERT-ARR30-C_j" />
-                                <check enabled="true" name="CERT-ARR32-C" />
-                                <check enabled="true" name="CERT-ARR36-C_a" />
-                                <check enabled="true" name="CERT-ARR36-C_b" />
-                                <check enabled="true" name="CERT-ARR37-C" />
-                                <check enabled="true" name="CERT-ARR38-C_a" />
-                                <check enabled="true" name="CERT-ARR38-C_b" />
-                                <check enabled="true" name="CERT-ARR38-C_c" />
-                                <check enabled="true" name="CERT-ARR38-C_d" />
-                                <check enabled="true" name="CERT-ARR38-C_e" />
-                                <check enabled="true" name="CERT-ARR38-C_f" />
-                                <check enabled="true" name="CERT-ARR39-C" />
-                            </group>
-                            <group enabled="true" name="CERT-DCL">
-                                <check enabled="true" name="CERT-DCL30-C_a" />
-                                <check enabled="true" name="CERT-DCL30-C_b" />
-                                <check enabled="true" name="CERT-DCL30-C_c" />
-                                <check enabled="true" name="CERT-DCL30-C_d" />
-                                <check enabled="true" name="CERT-DCL30-C_e" />
-                                <check enabled="true" name="CERT-DCL31-C" />
-                                <check enabled="true" name="CERT-DCL36-C" />
-                                <check enabled="true" name="CERT-DCL37-C_a" />
-                                <check enabled="true" name="CERT-DCL37-C_b" />
-                                <check enabled="false" name="CERT-DCL37-C_c" />
-                                <check enabled="true" name="CERT-DCL38-C" />
-                                <check enabled="true" name="CERT-DCL39-C" />
-                                <check enabled="true" name="CERT-DCL40-C" />
-                                <check enabled="true" name="CERT-DCL41-C" />
-                            </group>
-                            <group enabled="true" name="CERT-ENV">
-                                <check enabled="true" name="CERT-ENV30-C" />
-                                <check enabled="true" name="CERT-ENV31-C" />
-                                <check enabled="true" name="CERT-ENV32-C" />
-                                <check enabled="true" name="CERT-ENV33-C" />
-                                <check enabled="true" name="CERT-ENV34-C" />
-                            </group>
-                            <group enabled="true" name="CERT-ERR">
-                                <check enabled="true" name="CERT-ERR30-C_a" />
-                                <check enabled="true" name="CERT-ERR30-C_b" />
-                                <check enabled="true" name="CERT-ERR30-C_c" />
-                                <check enabled="true" name="CERT-ERR30-C_d" />
-                                <check enabled="true" name="CERT-ERR32-C" />
-                                <check enabled="true" name="CERT-ERR33-C_a" />
-                                <check enabled="true" name="CERT-ERR33-C_b" />
-                                <check enabled="true" name="CERT-ERR33-C_c" />
-                                <check enabled="true" name="CERT-ERR33-C_d" />
-                                <check enabled="true" name="CERT-ERR34-C_a" />
-                                <check enabled="true" name="CERT-ERR34-C_b" />
-                            </group>
-                            <group enabled="true" name="CERT-EXP">
-                                <check enabled="true" name="CERT-EXP19-C" />
-                                <check enabled="true" name="CERT-EXP30-C_a" />
-                                <check enabled="true" name="CERT-EXP30-C_b" />
-                                <check enabled="true" name="CERT-EXP32-C" />
-                                <check enabled="true" name="CERT-EXP33-C_a" />
-                                <check enabled="true" name="CERT-EXP33-C_b" />
-                                <check enabled="true" name="CERT-EXP33-C_c" />
-                                <check enabled="true" name="CERT-EXP33-C_d" />
-                                <check enabled="true" name="CERT-EXP33-C_e" />
-                                <check enabled="true" name="CERT-EXP33-C_f" />
-                                <check enabled="true" name="CERT-EXP34-C_a" />
-                                <check enabled="true" name="CERT-EXP34-C_b" />
-                                <check enabled="true" name="CERT-EXP34-C_c" />
-                                <check enabled="true" name="CERT-EXP34-C_d" />
-                                <check enabled="true" name="CERT-EXP34-C_e" />
-                                <check enabled="true" name="CERT-EXP34-C_f" />
-                                <check enabled="true" name="CERT-EXP34-C_g" />
-                                <check enabled="true" name="CERT-EXP35-C" />
-                                <check enabled="true" name="CERT-EXP36-C_a" />
-                                <check enabled="true" name="CERT-EXP36-C_b" />
-                                <check enabled="true" name="CERT-EXP37-C_a" />
-                                <check enabled="true" name="CERT-EXP37-C_b" />
-                                <check enabled="true" name="CERT-EXP37-C_c" />
-                                <check enabled="true" name="CERT-EXP39-C_a" />
-                                <check enabled="true" name="CERT-EXP39-C_b" />
-                                <check enabled="true" name="CERT-EXP39-C_c" />
-                                <check enabled="true" name="CERT-EXP39-C_d" />
-                                <check enabled="true" name="CERT-EXP39-C_e" />
-                                <check enabled="true" name="CERT-EXP40-C_a" />
-                                <check enabled="true" name="CERT-EXP40-C_b" />
-                                <check enabled="true" name="CERT-EXP42-C" />
-                                <check enabled="true" name="CERT-EXP43-C_a" />
-                                <check enabled="true" name="CERT-EXP43-C_b" />
-                                <check enabled="true" name="CERT-EXP43-C_c" />
-                                <check enabled="true" name="CERT-EXP43-C_d" />
-                                <check enabled="true" name="CERT-EXP44-C" />
-                                <check enabled="true" name="CERT-EXP45-C" />
-                                <check enabled="true" name="CERT-EXP46-C" />
-                                <check enabled="true" name="CERT-EXP47-C_a" />
-                                <check enabled="true" name="CERT-EXP47-C_b" />
-                            </group>
-                            <group enabled="true" name="CERT-FIO">
-                                <check enabled="true" name="CERT-FIO30-C" />
-                                <check enabled="true" name="CERT-FIO32-C" />
-                                <check enabled="true" name="CERT-FIO34-C" />
-                                <check enabled="true" name="CERT-FIO37-C" />
-                                <check enabled="true" name="CERT-FIO38-C" />
-                                <check enabled="true" name="CERT-FIO39-C" />
-                                <check enabled="true" name="CERT-FIO40-C" />
-                                <check enabled="true" name="CERT-FIO41-C" />
-                                <check enabled="true" name="CERT-FIO42-C_a" />
-                                <check enabled="false" name="CERT-FIO42-C_b" />
-                                <check enabled="true" name="CERT-FIO44-C" />
-                                <check enabled="true" name="CERT-FIO45-C" />
-                                <check enabled="true" name="CERT-FIO46-C_a" />
-                                <check enabled="true" name="CERT-FIO46-C_b" />
-                                <check enabled="true" name="CERT-FIO46-C_c" />
-                                <check enabled="true" name="CERT-FIO47-C_a" />
-                                <check enabled="true" name="CERT-FIO47-C_b" />
-                                <check enabled="true" name="CERT-FIO47-C_c" />
-                            </group>
-                            <group enabled="true" name="CERT-FLP">
-                                <check enabled="true" name="CERT-FLP30-C_a" />
-                                <check enabled="true" name="CERT-FLP30-C_b" />
-                                <check enabled="true" name="CERT-FLP32-C_a" />
-                                <check enabled="true" name="CERT-FLP32-C_b" />
-                                <check enabled="true" name="CERT-FLP34-C" />
-                                <check enabled="true" name="CERT-FLP36-C" />
-                                <check enabled="true" name="CERT-FLP37-C" />
-                            </group>
-                            <group enabled="true" name="CERT-INT">
-                                <check enabled="true" name="CERT-INT30-C_a" />
-                                <check enabled="false" name="CERT-INT30-C_b" />
-                                <check enabled="true" name="CERT-INT31-C_a" />
-                                <check enabled="true" name="CERT-INT31-C_b" />
-                                <check enabled="true" name="CERT-INT31-C_c" />
-                                <check enabled="true" name="CERT-INT32-C_a" />
-                                <check enabled="false" name="CERT-INT32-C_b" />
-                                <check enabled="true" name="CERT-INT33-C_a" />
-                                <check enabled="true" name="CERT-INT33-C_b" />
-                                <check enabled="true" name="CERT-INT33-C_c" />
-                                <check enabled="true" name="CERT-INT33-C_d" />
-                                <check enabled="true" name="CERT-INT33-C_e" />
-                                <check enabled="true" name="CERT-INT33-C_f" />
-                                <check enabled="true" name="CERT-INT33-C_g" />
-                                <check enabled="true" name="CERT-INT33-C_h" />
-                                <check enabled="true" name="CERT-INT33-C_i" />
-                                <check enabled="true" name="CERT-INT34-C_a" />
-                                <check enabled="true" name="CERT-INT34-C_b" />
-                                <check enabled="true" name="CERT-INT34-C_c" />
-                                <check enabled="true" name="CERT-INT35-C" />
-                                <check enabled="true" name="CERT-INT36-C" />
-                            </group>
-                            <group enabled="true" name="CERT-MEM">
-                                <check enabled="true" name="CERT-MEM30-C_a" />
-                                <check enabled="true" name="CERT-MEM30-C_b" />
-                                <check enabled="true" name="CERT-MEM30-C_c" />
-                                <check enabled="true" name="CERT-MEM31-C" />
-                                <check enabled="true" name="CERT-MEM33-C_a" />
-                                <check enabled="true" name="CERT-MEM33-C_b" />
-                                <check enabled="true" name="CERT-MEM34-C_a" />
-                                <check enabled="true" name="CERT-MEM34-C_b" />
-                                <check enabled="true" name="CERT-MEM34-C_c" />
-                                <check enabled="true" name="CERT-MEM35-C_a" />
-                                <check enabled="true" name="CERT-MEM35-C_b" />
-                                <check enabled="true" name="CERT-MEM35-C_c" />
-                                <check enabled="true" name="CERT-MEM36-C" />
-                            </group>
-                            <group enabled="true" name="CERT-MSC">
-                                <check enabled="true" name="CERT-MSC30-C" />
-                                <check enabled="true" name="CERT-MSC32-C" />
-                                <check enabled="false" name="CERT-MSC33-C" />
-                                <check enabled="true" name="CERT-MSC37-C" />
-                                <check enabled="true" name="CERT-MSC38-C" />
-                                <check enabled="true" name="CERT-MSC39-C" />
-                                <check enabled="true" name="CERT-MSC40-C_a" />
-                                <check enabled="true" name="CERT-MSC40-C_b" />
-                                <check enabled="true" name="CERT-MSC40-C_c" />
-                                <check enabled="true" name="CERT-MSC40-C_d" />
-                                <check enabled="false" name="CERT-MSC40-C_e" />
-                                <check enabled="true" name="CERT-MSC41-C_a" />
-                                <check enabled="true" name="CERT-MSC41-C_b" />
-                                <check enabled="true" name="CERT-MSC41-C_c" />
-                            </group>
-                            <group enabled="true" name="CERT-PRE">
-                                <check enabled="true" name="CERT-PRE31-C" />
-                                <check enabled="true" name="CERT-PRE32-C_a" />
-                                <check enabled="true" name="CERT-PRE32-C_b" />
-                            </group>
-                            <group enabled="true" name="CERT-SIG">
-                                <check enabled="true" name="CERT-SIG30-C" />
-                                <check enabled="true" name="CERT-SIG31-C" />
-                                <check enabled="true" name="CERT-SIG34-C" />
-                                <check enabled="true" name="CERT-SIG35-C" />
-                            </group>
-                            <group enabled="true" name="CERT-STR">
-                                <check enabled="true" name="CERT-STR30-C" />
-                                <check enabled="true" name="CERT-STR31-C_a" />
-                                <check enabled="true" name="CERT-STR31-C_b" />
-                                <check enabled="true" name="CERT-STR31-C_c" />
-                                <check enabled="true" name="CERT-STR31-C_d" />
-                                <check enabled="true" name="CERT-STR31-C_e" />
-                                <check enabled="true" name="CERT-STR31-C_f" />
-                                <check enabled="true" name="CERT-STR31-C_g" />
-                                <check enabled="true" name="CERT-STR31-C_h" />
-                                <check enabled="true" name="CERT-STR32-C" />
-                                <check enabled="true" name="CERT-STR34-C" />
-                                <check enabled="true" name="CERT-STR37-C" />
-                            </group>
-                        </package>
-                        <package enabled="false" name="SECURITY">
-                            <group enabled="true" name="SEC-BUFFER">
-                                <check enabled="true" name="SEC-BUFFER-memory-leak-alias" />
-                                <check enabled="false" name="SEC-BUFFER-memory-leak" />
-                                <check enabled="false" name="SEC-BUFFER-memset-overrun-pos" />
-                                <check enabled="true" name="SEC-BUFFER-memset-overrun" />
-                                <check enabled="false" name="SEC-BUFFER-qsort-overrun-pos" />
-                                <check enabled="true" name="SEC-BUFFER-qsort-overrun" />
-                                <check enabled="true" name="SEC-BUFFER-sprintf-overrun" />
-                                <check enabled="false" name="SEC-BUFFER-std-sort-overrun-pos" />
-                                <check enabled="true" name="SEC-BUFFER-std-sort-overrun" />
-                                <check enabled="false" name="SEC-BUFFER-strcat-overrun-pos" />
-                                <check enabled="true" name="SEC-BUFFER-strcat-overrun" />
-                                <check enabled="false" name="SEC-BUFFER-strcpy-overrun-pos" />
-                                <check enabled="true" name="SEC-BUFFER-strcpy-overrun" />
-                                <check enabled="false" name="SEC-BUFFER-strncat-overrun-pos" />
-                                <check enabled="true" name="SEC-BUFFER-strncat-overrun" />
-                                <check enabled="false" name="SEC-BUFFER-strncmp-overrun-pos" />
-                                <check enabled="true" name="SEC-BUFFER-strncmp-overrun" />
-                                <check enabled="false" name="SEC-BUFFER-strncpy-overrun-pos" />
-                                <check enabled="true" name="SEC-BUFFER-strncpy-overrun" />
-                                <check enabled="true" name="SEC-BUFFER-tainted-alloc-size" />
-                                <check enabled="true" name="SEC-BUFFER-tainted-copy-length" />
-                                <check enabled="true" name="SEC-BUFFER-tainted-copy" />
-                                <check enabled="true" name="SEC-BUFFER-tainted-index" />
-                                <check enabled="true" name="SEC-BUFFER-tainted-offset" />
-                                <check enabled="true" name="SEC-BUFFER-use-after-free-all" />
-                                <check enabled="true" name="SEC-BUFFER-use-after-free-some" />
-                            </group>
-                            <group enabled="true" name="SEC-DIV-0">
-                                <check enabled="true" name="SEC-DIV-0-compare-after" />
-                                <check enabled="true" name="SEC-DIV-0-compare-before" />
-                                <check enabled="true" name="SEC-DIV-0-tainted" />
-                            </group>
-                            <group enabled="true" name="SEC-FILEOP">
-                                <check enabled="true" name="SEC-FILEOP-open-no-close" />
-                                <check enabled="false" name="SEC-FILEOP-path-traversal" />
-                                <check enabled="true" name="SEC-FILEOP-use-after-close" />
-                            </group>
-                            <group enabled="true" name="SEC-INJECTION">
-                                <check enabled="false" name="SEC-INJECTION-sql" />
-                                <check enabled="false" name="SEC-INJECTION-xpath" />
-                            </group>
-                            <group enabled="true" name="SEC-LOOP">
-                                <check enabled="true" name="SEC-LOOP-tainted-bound" />
-                            </group>
-                            <group enabled="true" name="SEC-NULL">
-                                <check enabled="false" name="SEC-NULL-assignment-fun-pos" />
-                                <check enabled="true" name="SEC-NULL-assignment" />
-                                <check enabled="true" name="SEC-NULL-cmp-aft" />
-                                <check enabled="true" name="SEC-NULL-cmp-bef-fun" />
-                                <check enabled="true" name="SEC-NULL-cmp-bef" />
-                                <check enabled="false" name="SEC-NULL-literal-pos" />
-                            </group>
-                            <group enabled="true" name="SEC-STRING">
-                                <check enabled="true" name="SEC-STRING-format-string" />
-                                <check enabled="false" name="SEC-STRING-hard-coded-credentials" />
-                            </group>
-                        </package>
-                        <package enabled="false" name="MISRAC2004">
-                            <group enabled="true" name="MISRAC2004-1">
-                                <check enabled="true" name="MISRAC2004-1.1" />
-                                <check enabled="true" name="MISRAC2004-1.2_a" />
-                                <check enabled="true" name="MISRAC2004-1.2_b" />
-                                <check enabled="true" name="MISRAC2004-1.2_c" />
-                                <check enabled="true" name="MISRAC2004-1.2_d" />
-                                <check enabled="true" name="MISRAC2004-1.2_e" />
-                                <check enabled="true" name="MISRAC2004-1.2_f" />
-                                <check enabled="true" name="MISRAC2004-1.2_g" />
-                                <check enabled="true" name="MISRAC2004-1.2_h" />
-                                <check enabled="true" name="MISRAC2004-1.2_i" />
-                                <check enabled="true" name="MISRAC2004-1.2_j" />
-                            </group>
-                            <group enabled="true" name="MISRAC2004-2">
-                                <check enabled="true" name="MISRAC2004-2.1" />
-                                <check enabled="true" name="MISRAC2004-2.2" />
-                                <check enabled="true" name="MISRAC2004-2.3" />
-                                <check enabled="false" name="MISRAC2004-2.4" />
-                            </group>
-                            <group enabled="true" name="MISRAC2004-5">
-                                <check enabled="true" name="MISRAC2004-5.1" />
-                                <check enabled="true" name="MISRAC2004-5.2" />
-                                <check enabled="true" name="MISRAC2004-5.3" />
-                                <check enabled="true" name="MISRAC2004-5.4" />
-                                <check enabled="false" name="MISRAC2004-5.5" />
-                                <check enabled="false" name="MISRAC2004-5.6" />
-                                <check enabled="false" name="MISRAC2004-5.7" />
-                            </group>
-                            <group enabled="true" name="MISRAC2004-6">
-                                <check enabled="true" name="MISRAC2004-6.1" />
-                                <check enabled="true" name="MISRAC2004-6.2" />
-                                <check enabled="false" name="MISRAC2004-6.3" />
-                                <check enabled="true" name="MISRAC2004-6.4" />
-                                <check enabled="true" name="MISRAC2004-6.5" />
-                            </group>
-                            <group enabled="true" name="MISRAC2004-7">
-                                <check enabled="true" name="MISRAC2004-7.1" />
-                            </group>
-                            <group enabled="true" name="MISRAC2004-8">
-                                <check enabled="true" name="MISRAC2004-8.1" />
-                                <check enabled="true" name="MISRAC2004-8.2" />
-                                <check enabled="true" name="MISRAC2004-8.3" />
-                                <check enabled="true" name="MISRAC2004-8.5_a" />
-                                <check enabled="true" name="MISRAC2004-8.5_b" />
-                                <check enabled="true" name="MISRAC2004-8.6" />
-                                <check enabled="true" name="MISRAC2004-8.7" />
-                                <check enabled="true" name="MISRAC2004-8.8_a" />
-                                <check enabled="true" name="MISRAC2004-8.8_b" />
-                                <check enabled="true" name="MISRAC2004-8.10" />
-                                <check enabled="true" name="MISRAC2004-8.12" />
-                            </group>
-                            <group enabled="true" name="MISRAC2004-9">
-                                <check enabled="true" name="MISRAC2004-9.1_a" />
-                                <check enabled="true" name="MISRAC2004-9.1_b" />
-                                <check enabled="true" name="MISRAC2004-9.1_c" />
-                                <check enabled="true" name="MISRAC2004-9.2" />
-                                <check enabled="true" name="MISRAC2004-9.3" />
-                            </group>
-                            <group enabled="true" name="MISRAC2004-10">
-                                <check enabled="true" name="MISRAC2004-10.1_a" />
-                                <check enabled="true" name="MISRAC2004-10.1_b" />
-                                <check enabled="true" name="MISRAC2004-10.1_c" />
-                                <check enabled="true" name="MISRAC2004-10.1_d" />
-                                <check enabled="true" name="MISRAC2004-10.2_a" />
-                                <check enabled="true" name="MISRAC2004-10.2_b" />
-                                <check enabled="true" name="MISRAC2004-10.2_c" />
-                                <check enabled="true" name="MISRAC2004-10.2_d" />
-                                <check enabled="true" name="MISRAC2004-10.3" />
-                                <check enabled="true" name="MISRAC2004-10.4" />
-                                <check enabled="true" name="MISRAC2004-10.5" />
-                                <check enabled="true" name="MISRAC2004-10.6" />
-                            </group>
-                            <group enabled="true" name="MISRAC2004-11">
-                                <check enabled="true" name="MISRAC2004-11.1" />
-                                <check enabled="false" name="MISRAC2004-11.3" />
-                                <check enabled="false" name="MISRAC2004-11.4" />
-                                <check enabled="true" name="MISRAC2004-11.5" />
-                            </group>
-                            <group enabled="true" name="MISRAC2004-12">
-                                <check enabled="false" name="MISRAC2004-12.1" />
-                                <check enabled="true" name="MISRAC2004-12.2_a" />
-                                <check enabled="true" name="MISRAC2004-12.2_b" />
-                                <check enabled="true" name="MISRAC2004-12.2_c" />
-                                <check enabled="true" name="MISRAC2004-12.3" />
-                                <check enabled="true" name="MISRAC2004-12.4" />
-                                <check enabled="true" name="MISRAC2004-12.5" />
-                                <check enabled="false" name="MISRAC2004-12.6_a" />
-                                <check enabled="false" name="MISRAC2004-12.6_b" />
-                                <check enabled="true" name="MISRAC2004-12.7" />
-                                <check enabled="true" name="MISRAC2004-12.8" />
-                                <check enabled="true" name="MISRAC2004-12.9" />
-                                <check enabled="true" name="MISRAC2004-12.10" />
-                                <check enabled="false" name="MISRAC2004-12.11" />
-                                <check enabled="true" name="MISRAC2004-12.12_a" />
-                                <check enabled="true" name="MISRAC2004-12.12_b" />
-                                <check enabled="false" name="MISRAC2004-12.13" />
-                            </group>
-                            <group enabled="true" name="MISRAC2004-13">
-                                <check enabled="true" name="MISRAC2004-13.1" />
-                                <check enabled="false" name="MISRAC2004-13.2_a" />
-                                <check enabled="false" name="MISRAC2004-13.2_b" />
-                                <check enabled="false" name="MISRAC2004-13.2_c" />
-                                <check enabled="false" name="MISRAC2004-13.2_d" />
-                                <check enabled="false" name="MISRAC2004-13.2_e" />
-                                <check enabled="true" name="MISRAC2004-13.3" />
-                                <check enabled="true" name="MISRAC2004-13.4" />
-                                <check enabled="true" name="MISRAC2004-13.5" />
-                                <check enabled="true" name="MISRAC2004-13.6" />
-                                <check enabled="true" name="MISRAC2004-13.7_a" />
-                                <check enabled="true" name="MISRAC2004-13.7_b" />
-                            </group>
-                            <group enabled="true" name="MISRAC2004-14">
-                                <check enabled="true" name="MISRAC2004-14.1" />
-                                <check enabled="true" name="MISRAC2004-14.2" />
-                                <check enabled="true" name="MISRAC2004-14.3" />
-                                <check enabled="true" name="MISRAC2004-14.4" />
-                                <check enabled="true" name="MISRAC2004-14.5" />
-                                <check enabled="true" name="MISRAC2004-14.6" />
-                                <check enabled="true" name="MISRAC2004-14.7" />
-                                <check enabled="true" name="MISRAC2004-14.8_a" />
-                                <check enabled="true" name="MISRAC2004-14.8_b" />
-                                <check enabled="true" name="MISRAC2004-14.8_c" />
-                                <check enabled="true" name="MISRAC2004-14.8_d" />
-                                <check enabled="true" name="MISRAC2004-14.9" />
-                                <check enabled="true" name="MISRAC2004-14.10" />
-                            </group>
-                            <group enabled="true" name="MISRAC2004-15">
-                                <check enabled="true" name="MISRAC2004-15.0" />
-                                <check enabled="true" name="MISRAC2004-15.1" />
-                                <check enabled="true" name="MISRAC2004-15.2" />
-                                <check enabled="true" name="MISRAC2004-15.3" />
-                                <check enabled="true" name="MISRAC2004-15.4" />
-                                <check enabled="true" name="MISRAC2004-15.5" />
-                            </group>
-                            <group enabled="true" name="MISRAC2004-16">
-                                <check enabled="true" name="MISRAC2004-16.1" />
-                                <check enabled="true" name="MISRAC2004-16.2_a" />
-                                <check enabled="true" name="MISRAC2004-16.2_b" />
-                                <check enabled="true" name="MISRAC2004-16.3" />
-                                <check enabled="true" name="MISRAC2004-16.4" />
-                                <check enabled="true" name="MISRAC2004-16.5" />
-                                <check enabled="true" name="MISRAC2004-16.7" />
-                                <check enabled="true" name="MISRAC2004-16.8" />
-                                <check enabled="true" name="MISRAC2004-16.9" />
-                                <check enabled="true" name="MISRAC2004-16.10" />
-                            </group>
-                            <group enabled="true" name="MISRAC2004-17">
-                                <check enabled="true" name="MISRAC2004-17.1_a" />
-                                <check enabled="true" name="MISRAC2004-17.1_b" />
-                                <check enabled="true" name="MISRAC2004-17.1_c" />
-                                <check enabled="true" name="MISRAC2004-17.2" />
-                                <check enabled="true" name="MISRAC2004-17.3" />
-                                <check enabled="true" name="MISRAC2004-17.4_a" />
-                                <check enabled="true" name="MISRAC2004-17.4_b" />
-                                <check enabled="true" name="MISRAC2004-17.5" />
-                                <check enabled="true" name="MISRAC2004-17.6_a" />
-                                <check enabled="true" name="MISRAC2004-17.6_b" />
-                                <check enabled="true" name="MISRAC2004-17.6_c" />
-                                <check enabled="true" name="MISRAC2004-17.6_d" />
-                            </group>
-                            <group enabled="true" name="MISRAC2004-18">
-                                <check enabled="true" name="MISRAC2004-18.1" />
-                                <check enabled="true" name="MISRAC2004-18.2" />
-                                <check enabled="true" name="MISRAC2004-18.4" />
-                            </group>
-                            <group enabled="true" name="MISRAC2004-19">
-                                <check enabled="false" name="MISRAC2004-19.1" />
-                                <check enabled="false" name="MISRAC2004-19.2" />
-                                <check enabled="true" name="MISRAC2004-19.4" />
-                                <check enabled="true" name="MISRAC2004-19.5" />
-                                <check enabled="true" name="MISRAC2004-19.6" />
-                                <check enabled="false" name="MISRAC2004-19.7" />
-                                <check enabled="true" name="MISRAC2004-19.10" />
-                                <check enabled="true" name="MISRAC2004-19.12" />
-                                <check enabled="false" name="MISRAC2004-19.13" />
-                                <check enabled="true" name="MISRAC2004-19.15" />
-                            </group>
-                            <group enabled="true" name="MISRAC2004-20">
-                                <check enabled="true" name="MISRAC2004-20.1" />
-                                <check enabled="true" name="MISRAC2004-20.2" />
-                                <check enabled="true" name="MISRAC2004-20.3_a" />
-                                <check enabled="true" name="MISRAC2004-20.3_b" />
-                                <check enabled="true" name="MISRAC2004-20.3_c" />
-                                <check enabled="true" name="MISRAC2004-20.3_d" />
-                                <check enabled="true" name="MISRAC2004-20.3_e" />
-                                <check enabled="true" name="MISRAC2004-20.3_f" />
-                                <check enabled="true" name="MISRAC2004-20.3_g" />
-                                <check enabled="true" name="MISRAC2004-20.3_h" />
-                                <check enabled="true" name="MISRAC2004-20.3_i" />
-                                <check enabled="true" name="MISRAC2004-20.4" />
-                                <check enabled="true" name="MISRAC2004-20.5" />
-                                <check enabled="true" name="MISRAC2004-20.6" />
-                                <check enabled="true" name="MISRAC2004-20.7" />
-                                <check enabled="true" name="MISRAC2004-20.8" />
-                                <check enabled="true" name="MISRAC2004-20.9" />
-                                <check enabled="true" name="MISRAC2004-20.10" />
-                                <check enabled="true" name="MISRAC2004-20.11" />
-                                <check enabled="true" name="MISRAC2004-20.12" />
-                            </group>
-                        </package>
-                        <package enabled="false" name="MISRAC2012">
-                            <group enabled="true" name="MISRAC2012-Dir-4">
-                                <check enabled="true" name="MISRAC2012-Dir-4.3" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.4" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.5" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.6_a" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.6_b" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.7_a" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.7_b" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.7_c" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.8" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.9" />
-                                <check enabled="true" name="MISRAC2012-Dir-4.10" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.11_a" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.11_b" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.11_c" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.11_d" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.11_e" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.11_f" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.11_g" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.11_h" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.11_i" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.12" />
-                                <check enabled="true" name="MISRAC2012-Dir-4.13_b" />
-                                <check enabled="true" name="MISRAC2012-Dir-4.13_c" />
-                                <check enabled="true" name="MISRAC2012-Dir-4.13_d" />
-                                <check enabled="true" name="MISRAC2012-Dir-4.13_e" />
-                                <check enabled="true" name="MISRAC2012-Dir-4.13_f" />
-                                <check enabled="true" name="MISRAC2012-Dir-4.13_g" />
-                                <check enabled="false" name="MISRAC2012-Dir-4.13_h" />
-                                <check enabled="true" name="MISRAC2012-Dir-4.14_a" />
-                                <check enabled="true" name="MISRAC2012-Dir-4.14_b" />
-                                <check enabled="true" name="MISRAC2012-Dir-4.14_c" />
-                                <check enabled="true" name="MISRAC2012-Dir-4.14_d" />
-                                <check enabled="true" name="MISRAC2012-Dir-4.14_e" />
-                                <check enabled="true" name="MISRAC2012-Dir-4.14_f" />
-                                <check enabled="true" name="MISRAC2012-Dir-4.14_g" />
-                                <check enabled="true" name="MISRAC2012-Dir-4.14_h" />
-                                <check enabled="true" name="MISRAC2012-Dir-4.14_i" />
-                                <check enabled="true" name="MISRAC2012-Dir-4.14_j" />
-                                <check enabled="true" name="MISRAC2012-Dir-4.14_l" />
-                                <check enabled="true" name="MISRAC2012-Dir-4.14_m" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-1">
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_c" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_d" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_e" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_f" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_g" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_h" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_i" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_j" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_k" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_m" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_n" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_o" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_p" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_q" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_r" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_s" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_t" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_u" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_v" />
-                                <check enabled="true" name="MISRAC2012-Rule-1.3_w" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-2">
-                                <check enabled="true" name="MISRAC2012-Rule-2.1_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-2.1_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-2.2_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-2.2_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-2.2_c" />
-                                <check enabled="false" name="MISRAC2012-Rule-2.3" />
-                                <check enabled="false" name="MISRAC2012-Rule-2.4" />
-                                <check enabled="false" name="MISRAC2012-Rule-2.5" />
-                                <check enabled="false" name="MISRAC2012-Rule-2.6" />
-                                <check enabled="false" name="MISRAC2012-Rule-2.7" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-3">
-                                <check enabled="true" name="MISRAC2012-Rule-3.1" />
-                                <check enabled="true" name="MISRAC2012-Rule-3.2" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-5">
-                                <check enabled="true" name="MISRAC2012-Rule-5.1" />
-                                <check enabled="true" name="MISRAC2012-Rule-5.2_c89" />
-                                <check enabled="true" name="MISRAC2012-Rule-5.2_c99" />
-                                <check enabled="true" name="MISRAC2012-Rule-5.3_c89" />
-                                <check enabled="true" name="MISRAC2012-Rule-5.3_c99" />
-                                <check enabled="true" name="MISRAC2012-Rule-5.4_c89" />
-                                <check enabled="true" name="MISRAC2012-Rule-5.4_c99" />
-                                <check enabled="true" name="MISRAC2012-Rule-5.5_c89" />
-                                <check enabled="true" name="MISRAC2012-Rule-5.5_c99" />
-                                <check enabled="true" name="MISRAC2012-Rule-5.6" />
-                                <check enabled="true" name="MISRAC2012-Rule-5.7" />
-                                <check enabled="true" name="MISRAC2012-Rule-5.8" />
-                                <check enabled="false" name="MISRAC2012-Rule-5.9" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-6">
-                                <check enabled="true" name="MISRAC2012-Rule-6.1" />
-                                <check enabled="true" name="MISRAC2012-Rule-6.2" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-7">
-                                <check enabled="true" name="MISRAC2012-Rule-7.1" />
-                                <check enabled="true" name="MISRAC2012-Rule-7.2" />
-                                <check enabled="true" name="MISRAC2012-Rule-7.3" />
-                                <check enabled="true" name="MISRAC2012-Rule-7.4_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-7.4_b" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-8">
-                                <check enabled="true" name="MISRAC2012-Rule-8.1" />
-                                <check enabled="true" name="MISRAC2012-Rule-8.2_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-8.2_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-8.3" />
-                                <check enabled="true" name="MISRAC2012-Rule-8.4" />
-                                <check enabled="true" name="MISRAC2012-Rule-8.5_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-8.5_b" />
-                                <check enabled="false" name="MISRAC2012-Rule-8.7" />
-                                <check enabled="false" name="MISRAC2012-Rule-8.9_a" />
-                                <check enabled="false" name="MISRAC2012-Rule-8.9_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-8.10" />
-                                <check enabled="false" name="MISRAC2012-Rule-8.11" />
-                                <check enabled="true" name="MISRAC2012-Rule-8.12" />
-                                <check enabled="false" name="MISRAC2012-Rule-8.13" />
-                                <check enabled="true" name="MISRAC2012-Rule-8.14" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-9">
-                                <check enabled="true" name="MISRAC2012-Rule-9.1_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-9.1_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-9.1_c" />
-                                <check enabled="true" name="MISRAC2012-Rule-9.1_d" />
-                                <check enabled="true" name="MISRAC2012-Rule-9.1_e" />
-                                <check enabled="true" name="MISRAC2012-Rule-9.1_f" />
-                                <check enabled="true" name="MISRAC2012-Rule-9.2" />
-                                <check enabled="true" name="MISRAC2012-Rule-9.3" />
-                                <check enabled="true" name="MISRAC2012-Rule-9.4" />
-                                <check enabled="true" name="MISRAC2012-Rule-9.5_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-9.5_b" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-10">
-                                <check enabled="true" name="MISRAC2012-Rule-10.1_R2" />
-                                <check enabled="true" name="MISRAC2012-Rule-10.1_R3" />
-                                <check enabled="true" name="MISRAC2012-Rule-10.1_R4" />
-                                <check enabled="true" name="MISRAC2012-Rule-10.1_R5" />
-                                <check enabled="true" name="MISRAC2012-Rule-10.1_R6" />
-                                <check enabled="true" name="MISRAC2012-Rule-10.1_R7" />
-                                <check enabled="true" name="MISRAC2012-Rule-10.1_R8" />
-                                <check enabled="true" name="MISRAC2012-Rule-10.2" />
-                                <check enabled="true" name="MISRAC2012-Rule-10.3" />
-                                <check enabled="true" name="MISRAC2012-Rule-10.4_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-10.4_b" />
-                                <check enabled="false" name="MISRAC2012-Rule-10.5" />
-                                <check enabled="true" name="MISRAC2012-Rule-10.6" />
-                                <check enabled="true" name="MISRAC2012-Rule-10.7" />
-                                <check enabled="true" name="MISRAC2012-Rule-10.8" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-11">
-                                <check enabled="true" name="MISRAC2012-Rule-11.1" />
-                                <check enabled="true" name="MISRAC2012-Rule-11.2" />
-                                <check enabled="true" name="MISRAC2012-Rule-11.3" />
-                                <check enabled="false" name="MISRAC2012-Rule-11.4" />
-                                <check enabled="false" name="MISRAC2012-Rule-11.5" />
-                                <check enabled="true" name="MISRAC2012-Rule-11.6" />
-                                <check enabled="true" name="MISRAC2012-Rule-11.7" />
-                                <check enabled="true" name="MISRAC2012-Rule-11.8" />
-                                <check enabled="true" name="MISRAC2012-Rule-11.9" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-12">
-                                <check enabled="false" name="MISRAC2012-Rule-12.1" />
-                                <check enabled="true" name="MISRAC2012-Rule-12.2" />
-                                <check enabled="false" name="MISRAC2012-Rule-12.3" />
-                                <check enabled="true" name="MISRAC2012-Rule-12.5" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-13">
-                                <check enabled="true" name="MISRAC2012-Rule-13.1" />
-                                <check enabled="true" name="MISRAC2012-Rule-13.2_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-13.2_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-13.2_c" />
-                                <check enabled="false" name="MISRAC2012-Rule-13.3" />
-                                <check enabled="false" name="MISRAC2012-Rule-13.4_a" />
-                                <check enabled="false" name="MISRAC2012-Rule-13.4_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-13.5" />
-                                <check enabled="true" name="MISRAC2012-Rule-13.6" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-14">
-                                <check enabled="true" name="MISRAC2012-Rule-14.1_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-14.1_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-14.2" />
-                                <check enabled="true" name="MISRAC2012-Rule-14.3_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-14.3_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-14.4_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-14.4_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-14.4_c" />
-                                <check enabled="true" name="MISRAC2012-Rule-14.4_d" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-15">
-                                <check enabled="false" name="MISRAC2012-Rule-15.1" />
-                                <check enabled="true" name="MISRAC2012-Rule-15.2" />
-                                <check enabled="true" name="MISRAC2012-Rule-15.3" />
-                                <check enabled="false" name="MISRAC2012-Rule-15.4" />
-                                <check enabled="false" name="MISRAC2012-Rule-15.5" />
-                                <check enabled="true" name="MISRAC2012-Rule-15.6_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-15.6_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-15.6_c" />
-                                <check enabled="true" name="MISRAC2012-Rule-15.6_d" />
-                                <check enabled="true" name="MISRAC2012-Rule-15.6_e" />
-                                <check enabled="true" name="MISRAC2012-Rule-15.7" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-16">
-                                <check enabled="true" name="MISRAC2012-Rule-16.1" />
-                                <check enabled="true" name="MISRAC2012-Rule-16.2" />
-                                <check enabled="true" name="MISRAC2012-Rule-16.3" />
-                                <check enabled="true" name="MISRAC2012-Rule-16.4" />
-                                <check enabled="true" name="MISRAC2012-Rule-16.5" />
-                                <check enabled="true" name="MISRAC2012-Rule-16.6" />
-                                <check enabled="true" name="MISRAC2012-Rule-16.7" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-17">
-                                <check enabled="true" name="MISRAC2012-Rule-17.1" />
-                                <check enabled="true" name="MISRAC2012-Rule-17.2_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-17.2_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-17.3" />
-                                <check enabled="true" name="MISRAC2012-Rule-17.4" />
-                                <check enabled="false" name="MISRAC2012-Rule-17.5" />
-                                <check enabled="true" name="MISRAC2012-Rule-17.6" />
-                                <check enabled="true" name="MISRAC2012-Rule-17.7" />
-                                <check enabled="false" name="MISRAC2012-Rule-17.8" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-18">
-                                <check enabled="true" name="MISRAC2012-Rule-18.1_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-18.1_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-18.1_c" />
-                                <check enabled="true" name="MISRAC2012-Rule-18.1_d" />
-                                <check enabled="true" name="MISRAC2012-Rule-18.2" />
-                                <check enabled="true" name="MISRAC2012-Rule-18.3" />
-                                <check enabled="true" name="MISRAC2012-Rule-18.4" />
-                                <check enabled="false" name="MISRAC2012-Rule-18.5" />
-                                <check enabled="true" name="MISRAC2012-Rule-18.6_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-18.6_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-18.6_c" />
-                                <check enabled="true" name="MISRAC2012-Rule-18.6_d" />
-                                <check enabled="true" name="MISRAC2012-Rule-18.7" />
-                                <check enabled="true" name="MISRAC2012-Rule-18.8" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-19">
-                                <check enabled="true" name="MISRAC2012-Rule-19.1" />
-                                <check enabled="false" name="MISRAC2012-Rule-19.2" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-20">
-                                <check enabled="false" name="MISRAC2012-Rule-20.1" />
-                                <check enabled="true" name="MISRAC2012-Rule-20.2" />
-                                <check enabled="true" name="MISRAC2012-Rule-20.4_c89" />
-                                <check enabled="true" name="MISRAC2012-Rule-20.4_c99" />
-                                <check enabled="false" name="MISRAC2012-Rule-20.5" />
-                                <check enabled="true" name="MISRAC2012-Rule-20.6_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-20.6_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-20.7" />
-                                <check enabled="false" name="MISRAC2012-Rule-20.10" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-21">
-                                <check enabled="true" name="MISRAC2012-Rule-21.1" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.2" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.3" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.4" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.5" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.6" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.7" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.8" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.9" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.10" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.11" />
-                                <check enabled="false" name="MISRAC2012-Rule-21.12_a" />
-                                <check enabled="false" name="MISRAC2012-Rule-21.12_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.13" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.14" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.15" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.16" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.17_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.17_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.17_c" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.17_d" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.17_e" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.17_f" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.18_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.18_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.19_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.19_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-21.20" />
-                            </group>
-                            <group enabled="true" name="MISRAC2012-Rule-22">
-                                <check enabled="true" name="MISRAC2012-Rule-22.1_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-22.1_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-22.2_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-22.2_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-22.2_c" />
-                                <check enabled="true" name="MISRAC2012-Rule-22.3" />
-                                <check enabled="true" name="MISRAC2012-Rule-22.4" />
-                                <check enabled="true" name="MISRAC2012-Rule-22.5_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-22.5_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-22.6" />
-                                <check enabled="true" name="MISRAC2012-Rule-22.7_a" />
-                                <check enabled="true" name="MISRAC2012-Rule-22.7_b" />
-                                <check enabled="true" name="MISRAC2012-Rule-22.8" />
-                                <check enabled="true" name="MISRAC2012-Rule-22.9" />
-                                <check enabled="true" name="MISRAC2012-Rule-22.10" />
-                            </group>
-                        </package>
-                        <package enabled="false" name="MISRAC++2008">
-                            <group enabled="true" name="MISRAC++2008-0-1">
-                                <check enabled="true" name="MISRAC++2008-0-1-1" />
-                                <check enabled="true" name="MISRAC++2008-0-1-2_a" />
-                                <check enabled="true" name="MISRAC++2008-0-1-2_b" />
-                                <check enabled="true" name="MISRAC++2008-0-1-2_c" />
-                                <check enabled="true" name="MISRAC++2008-0-1-3" />
-                                <check enabled="true" name="MISRAC++2008-0-1-4_a" />
-                                <check enabled="true" name="MISRAC++2008-0-1-4_b" />
-                                <check enabled="true" name="MISRAC++2008-0-1-6" />
-                                <check enabled="true" name="MISRAC++2008-0-1-7" />
-                                <check enabled="false" name="MISRAC++2008-0-1-8" />
-                                <check enabled="true" name="MISRAC++2008-0-1-9" />
-                                <check enabled="true" name="MISRAC++2008-0-1-11" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-0-2">
-                                <check enabled="true" name="MISRAC++2008-0-2-1" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-0-3">
-                                <check enabled="true" name="MISRAC++2008-0-3-2" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-2-7">
-                                <check enabled="true" name="MISRAC++2008-2-7-1" />
-                                <check enabled="true" name="MISRAC++2008-2-7-2" />
-                                <check enabled="false" name="MISRAC++2008-2-7-3" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-2-10">
-                                <check enabled="true" name="MISRAC++2008-2-10-1" />
-                                <check enabled="true" name="MISRAC++2008-2-10-2" />
-                                <check enabled="true" name="MISRAC++2008-2-10-3" />
-                                <check enabled="true" name="MISRAC++2008-2-10-4" />
-                                <check enabled="false" name="MISRAC++2008-2-10-5" />
-                                <check enabled="true" name="MISRAC++2008-2-10-6" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-2-13">
-                                <check enabled="true" name="MISRAC++2008-2-13-2" />
-                                <check enabled="true" name="MISRAC++2008-2-13-3" />
-                                <check enabled="true" name="MISRAC++2008-2-13-4_a" />
-                                <check enabled="true" name="MISRAC++2008-2-13-4_b" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-3-1">
-                                <check enabled="true" name="MISRAC++2008-3-1-1" />
-                                <check enabled="true" name="MISRAC++2008-3-1-3" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-3-9">
-                                <check enabled="false" name="MISRAC++2008-3-9-2" />
-                                <check enabled="true" name="MISRAC++2008-3-9-3" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-4-5">
-                                <check enabled="true" name="MISRAC++2008-4-5-1" />
-                                <check enabled="true" name="MISRAC++2008-4-5-2" />
-                                <check enabled="true" name="MISRAC++2008-4-5-3" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-5-0">
-                                <check enabled="true" name="MISRAC++2008-5-0-1_a" />
-                                <check enabled="true" name="MISRAC++2008-5-0-1_b" />
-                                <check enabled="true" name="MISRAC++2008-5-0-1_c" />
-                                <check enabled="false" name="MISRAC++2008-5-0-2" />
-                                <check enabled="true" name="MISRAC++2008-5-0-3" />
-                                <check enabled="true" name="MISRAC++2008-5-0-4" />
-                                <check enabled="true" name="MISRAC++2008-5-0-5" />
-                                <check enabled="true" name="MISRAC++2008-5-0-6" />
-                                <check enabled="true" name="MISRAC++2008-5-0-7" />
-                                <check enabled="true" name="MISRAC++2008-5-0-8" />
-                                <check enabled="true" name="MISRAC++2008-5-0-9" />
-                                <check enabled="true" name="MISRAC++2008-5-0-10" />
-                                <check enabled="true" name="MISRAC++2008-5-0-13_a" />
-                                <check enabled="true" name="MISRAC++2008-5-0-13_b" />
-                                <check enabled="true" name="MISRAC++2008-5-0-13_c" />
-                                <check enabled="true" name="MISRAC++2008-5-0-13_d" />
-                                <check enabled="true" name="MISRAC++2008-5-0-14" />
-                                <check enabled="true" name="MISRAC++2008-5-0-15_a" />
-                                <check enabled="true" name="MISRAC++2008-5-0-15_b" />
-                                <check enabled="true" name="MISRAC++2008-5-0-16_a" />
-                                <check enabled="true" name="MISRAC++2008-5-0-16_b" />
-                                <check enabled="true" name="MISRAC++2008-5-0-16_c" />
-                                <check enabled="true" name="MISRAC++2008-5-0-16_d" />
-                                <check enabled="true" name="MISRAC++2008-5-0-16_e" />
-                                <check enabled="true" name="MISRAC++2008-5-0-16_f" />
-                                <check enabled="true" name="MISRAC++2008-5-0-19" />
-                                <check enabled="true" name="MISRAC++2008-5-0-21" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-5-2">
-                                <check enabled="true" name="MISRAC++2008-5-2-4" />
-                                <check enabled="true" name="MISRAC++2008-5-2-5" />
-                                <check enabled="true" name="MISRAC++2008-5-2-6" />
-                                <check enabled="true" name="MISRAC++2008-5-2-7" />
-                                <check enabled="false" name="MISRAC++2008-5-2-9" />
-                                <check enabled="false" name="MISRAC++2008-5-2-10" />
-                                <check enabled="true" name="MISRAC++2008-5-2-11_a" />
-                                <check enabled="true" name="MISRAC++2008-5-2-11_b" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-5-3">
-                                <check enabled="true" name="MISRAC++2008-5-3-1" />
-                                <check enabled="true" name="MISRAC++2008-5-3-2_a" />
-                                <check enabled="true" name="MISRAC++2008-5-3-2_b" />
-                                <check enabled="true" name="MISRAC++2008-5-3-3" />
-                                <check enabled="true" name="MISRAC++2008-5-3-4" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-5-8">
-                                <check enabled="true" name="MISRAC++2008-5-8-1" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-5-14">
-                                <check enabled="true" name="MISRAC++2008-5-14-1" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-5-18">
-                                <check enabled="true" name="MISRAC++2008-5-18-1" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-5-19">
-                                <check enabled="false" name="MISRAC++2008-5-19-1" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-6-2">
-                                <check enabled="true" name="MISRAC++2008-6-2-1" />
-                                <check enabled="true" name="MISRAC++2008-6-2-2" />
-                                <check enabled="false" name="MISRAC++2008-6-2-3" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-6-3">
-                                <check enabled="true" name="MISRAC++2008-6-3-1_a" />
-                                <check enabled="true" name="MISRAC++2008-6-3-1_b" />
-                                <check enabled="true" name="MISRAC++2008-6-3-1_c" />
-                                <check enabled="true" name="MISRAC++2008-6-3-1_d" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-6-4">
-                                <check enabled="true" name="MISRAC++2008-6-4-1" />
-                                <check enabled="true" name="MISRAC++2008-6-4-2" />
-                                <check enabled="true" name="MISRAC++2008-6-4-3" />
-                                <check enabled="true" name="MISRAC++2008-6-4-4" />
-                                <check enabled="true" name="MISRAC++2008-6-4-5" />
-                                <check enabled="true" name="MISRAC++2008-6-4-6" />
-                                <check enabled="true" name="MISRAC++2008-6-4-7" />
-                                <check enabled="true" name="MISRAC++2008-6-4-8" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-6-5">
-                                <check enabled="true" name="MISRAC++2008-6-5-1_a" />
-                                <check enabled="true" name="MISRAC++2008-6-5-1_b" />
-                                <check enabled="true" name="MISRAC++2008-6-5-2" />
-                                <check enabled="true" name="MISRAC++2008-6-5-3" />
-                                <check enabled="true" name="MISRAC++2008-6-5-4" />
-                                <check enabled="true" name="MISRAC++2008-6-5-5" />
-                                <check enabled="true" name="MISRAC++2008-6-5-6" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-6-6">
-                                <check enabled="true" name="MISRAC++2008-6-6-1" />
-                                <check enabled="true" name="MISRAC++2008-6-6-2" />
-                                <check enabled="true" name="MISRAC++2008-6-6-4" />
-                                <check enabled="true" name="MISRAC++2008-6-6-5" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-7-1">
-                                <check enabled="true" name="MISRAC++2008-7-1-1" />
-                                <check enabled="true" name="MISRAC++2008-7-1-2" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-7-2">
-                                <check enabled="true" name="MISRAC++2008-7-2-1" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-7-4">
-                                <check enabled="true" name="MISRAC++2008-7-4-3" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-7-5">
-                                <check enabled="true" name="MISRAC++2008-7-5-1_a" />
-                                <check enabled="true" name="MISRAC++2008-7-5-1_b" />
-                                <check enabled="true" name="MISRAC++2008-7-5-2_a" />
-                                <check enabled="true" name="MISRAC++2008-7-5-2_b" />
-                                <check enabled="true" name="MISRAC++2008-7-5-2_c" />
-                                <check enabled="true" name="MISRAC++2008-7-5-2_d" />
-                                <check enabled="false" name="MISRAC++2008-7-5-4_a" />
-                                <check enabled="false" name="MISRAC++2008-7-5-4_b" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-8-0">
-                                <check enabled="true" name="MISRAC++2008-8-0-1" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-8-4">
-                                <check enabled="true" name="MISRAC++2008-8-4-1" />
-                                <check enabled="true" name="MISRAC++2008-8-4-3" />
-                                <check enabled="true" name="MISRAC++2008-8-4-4" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-8-5">
-                                <check enabled="true" name="MISRAC++2008-8-5-1_a" />
-                                <check enabled="true" name="MISRAC++2008-8-5-1_b" />
-                                <check enabled="true" name="MISRAC++2008-8-5-1_c" />
-                                <check enabled="true" name="MISRAC++2008-8-5-2" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-9-3">
-                                <check enabled="true" name="MISRAC++2008-9-3-1" />
-                                <check enabled="true" name="MISRAC++2008-9-3-2" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-9-5">
-                                <check enabled="true" name="MISRAC++2008-9-5-1" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-9-6">
-                                <check enabled="true" name="MISRAC++2008-9-6-2" />
-                                <check enabled="true" name="MISRAC++2008-9-6-3" />
-                                <check enabled="true" name="MISRAC++2008-9-6-4" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-12-1">
-                                <check enabled="true" name="MISRAC++2008-12-1-1_a" />
-                                <check enabled="true" name="MISRAC++2008-12-1-1_b" />
-                                <check enabled="true" name="MISRAC++2008-12-1-3" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-15-0">
-                                <check enabled="false" name="MISRAC++2008-15-0-2" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-15-1">
-                                <check enabled="true" name="MISRAC++2008-15-1-2" />
-                                <check enabled="true" name="MISRAC++2008-15-1-3" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-15-3">
-                                <check enabled="true" name="MISRAC++2008-15-3-1" />
-                                <check enabled="false" name="MISRAC++2008-15-3-2" />
-                                <check enabled="true" name="MISRAC++2008-15-3-3" />
-                                <check enabled="true" name="MISRAC++2008-15-3-4" />
-                                <check enabled="true" name="MISRAC++2008-15-3-5" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-15-5">
-                                <check enabled="true" name="MISRAC++2008-15-5-1" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-16-0">
-                                <check enabled="true" name="MISRAC++2008-16-0-3" />
-                                <check enabled="true" name="MISRAC++2008-16-0-4" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-16-2">
-                                <check enabled="true" name="MISRAC++2008-16-2-2" />
-                                <check enabled="true" name="MISRAC++2008-16-2-3" />
-                                <check enabled="true" name="MISRAC++2008-16-2-4" />
-                                <check enabled="false" name="MISRAC++2008-16-2-5" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-16-3">
-                                <check enabled="true" name="MISRAC++2008-16-3-1" />
-                                <check enabled="false" name="MISRAC++2008-16-3-2" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-17-0">
-                                <check enabled="true" name="MISRAC++2008-17-0-1" />
-                                <check enabled="true" name="MISRAC++2008-17-0-3" />
-                                <check enabled="true" name="MISRAC++2008-17-0-5" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-18-0">
-                                <check enabled="true" name="MISRAC++2008-18-0-1" />
-                                <check enabled="true" name="MISRAC++2008-18-0-2" />
-                                <check enabled="true" name="MISRAC++2008-18-0-3" />
-                                <check enabled="true" name="MISRAC++2008-18-0-4" />
-                                <check enabled="true" name="MISRAC++2008-18-0-5" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-18-2">
-                                <check enabled="true" name="MISRAC++2008-18-2-1" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-18-4">
-                                <check enabled="true" name="MISRAC++2008-18-4-1" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-18-7">
-                                <check enabled="true" name="MISRAC++2008-18-7-1" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-19-3">
-                                <check enabled="true" name="MISRAC++2008-19-3-1" />
-                            </group>
-                            <group enabled="true" name="MISRAC++2008-27-0">
-                                <check enabled="true" name="MISRAC++2008-27-0-1" />
-                            </group>
-                        </package>
-                    </checks_tree>
-                </cstat_settings>
-            </data>
-        </settings>
-        <settings>
-            <name>RuntimeChecking</name>
-            <archiveVersion>0</archiveVersion>
-            <data>
-                <version>2</version>
-                <wantNonLocal>1</wantNonLocal>
-                <debug>1</debug>
-                <option>
-                    <name>GenRtcDebugHeap</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>GenRtcEnableBoundsChecking</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>GenRtcCheckPtrsNonInstrMem</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>GenRtcTrackPointerBounds</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>GenRtcCheckAccesses</name>
-                    <state>1</state>
-                </option>
-                <option>
-                    <name>GenRtcGenerateEntries</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>GenRtcNrTrackedPointers</name>
-                    <state>1000</state>
-                </option>
-                <option>
-                    <name>GenRtcIntOverflow</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>GenRtcIncUnsigned</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>GenRtcIntConversion</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>GenRtcInclExplicit</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>GenRtcIntShiftOverflow</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>GenRtcInclUnsignedShiftOverflow</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>GenRtcUnhandledCase</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>GenRtcDivByZero</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>GenRtcEnable</name>
-                    <state>0</state>
-                </option>
-                <option>
-                    <name>GenRtcCheckPtrsNonInstrFunc</name>
-                    <state>1</state>
-                </option>
-            </data>
-        </settings>
-    </configuration>
-    <group>
-        <name>boards</name>
-        <group>
-            <name>mcu</name>
-            <group>
-                <name>RE01_256KB</name>
-                <file>
-                    <name>$PROJ_DIR$\boards\mcu\RE01_256KB\pinName-board.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\boards\mcu\RE01_256KB\r_rtc.c</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\boards\mcu\RE01_256KB\r_rtc.h</name>
-                </file>
-            </group>
-            <file>
-                <name>$PROJ_DIR$\boards\mcu\utilities.c</name>
-            </file>
-        </group>
-        <group>
-            <name>rtk70e0118c00000bj</name>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\board-config.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\board.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\delay-board.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\gpio-board.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\i2c-board.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\lpm-board.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\lpm-board.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\pinName-ioe.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\rtc-board.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\rtk70e015dc00001bj-board.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\spi-board.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\boards\rtk70e0118c00000bj\uart-board.c</name>
-            </file>
-        </group>
-        <file>
-            <name>$PROJ_DIR$\boards\adc-board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\board_uart.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\delay-board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\gpio-board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\i2c-board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\rtc-board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\spi-board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\sx126x-board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\uart-board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\uart-usb-board.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\boards\utilities.h</name>
-        </file>
-    </group>
-    <group>
-        <name>CMSIS</name>
-        <group>
-            <name>Core</name>
-            <group>
-                <name>Include</name>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Core\Include\cmsis_armcc.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Core\Include\cmsis_armclang.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Core\Include\cmsis_compiler.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Core\Include\cmsis_gcc.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Core\Include\cmsis_iccarm.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Core\Include\cmsis_version.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Core\Include\core_cm0plus.h</name>
-                </file>
-            </group>
-        </group>
-        <group>
-            <name>Driver</name>
-            <group>
-                <name>Include</name>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_CAN.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_Common.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_ETH.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_ETH_MAC.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_ETH_PHY.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_Flash.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_I2C.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_MCI.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_NAND.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_SAI.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_SPI.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_Storage.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_USART.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_USB.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_USBD.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\Driver\Include\Driver_USBH.h</name>
-                </file>
-            </group>
-        </group>
-        <group>
-            <name>DSP_Lib</name>
-            <group>
-                <name>Include</name>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\DSP_Lib\Include\arm_common_tables.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\DSP_Lib\Include\arm_const_structs.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\CMSIS\DSP_Lib\Include\arm_math.h</name>
-                </file>
-            </group>
-        </group>
-    </group>
-    <group>
-        <name>Device</name>
-        <group>
-            <name>CMSIS_Driver</name>
-            <group>
-                <name>Include</name>
-                <file>
-                    <name>$PROJ_DIR$\Device\CMSIS_Driver\Include\R_Driver_I2C.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\CMSIS_Driver\Include\R_Driver_USART.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\CMSIS_Driver\Include\r_i2c_cmsis_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\CMSIS_Driver\Include\r_spi_cmsis_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\CMSIS_Driver\Include\r_usart_cmsis_api.h</name>
-                </file>
-            </group>
-            <group>
-                <name>Src</name>
-                <file>
-                    <name>$PROJ_DIR$\Device\CMSIS_Driver\Src\r_i2c_cmsis_api.c</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\CMSIS_Driver\Src\r_spi_cmsis_api.c</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\CMSIS_Driver\Src\r_usart_cmsis_api.c</name>
-                </file>
-            </group>
-        </group>
-        <group>
-            <name>Config</name>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_adc_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_core_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_dmac_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_dtc_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_flash_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_gdt_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_i2c_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_lpm_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_pmip_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_smip_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_spi_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_system_cfg.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\Device\Config\r_usart_cfg.h</name>
-            </file>
-        </group>
-        <group>
-            <name>Driver</name>
-            <group>
-                <name>Include</name>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_adc_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_dma_common_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_dmac_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_dtc_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_flash_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_flash_lowlevel.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_flash_re01_256kb.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_gdt_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_lpm_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_pmip_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_smip_api.h</name>
-                </file>
-                <file>
-                    <name>$PROJ_DIR$\Device\Driver\Include\r_system_api.h</name>
-                </file>
-            </group>
-            <group>
-                <name>Src</name>
-                <group>
-                    <name>r_adc</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_adc\r_adc_api.c</name>
-                    </file>
-                </group>
-                <group>
-                    <name>r_dmac</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_dmac\r_dmac_api.c</name>
-                    </file>
-                </group>
-                <group>
-                    <name>r_dtc</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_dtc\r_dtc_api.c</name>
-                    </file>
-                </group>
-                <group>
-                    <name>r_ehc</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_ehc\r_ehc.c</name>
-                    </file>
-                </group>
-                <group>
-                    <name>r_flash</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_flash\r_flash_api.c</name>
-                    </file>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_flash\r_flash_lowlevel.c</name>
-                    </file>
-                </group>
-                <group>
-                    <name>r_gdt</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_gdt\r_gdt_api.c</name>
-                    </file>
-                </group>
-                <group>
-                    <name>r_lpm</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_lpm\r_lpm_api.c</name>
-                    </file>
-                </group>
-                <group>
-                    <name>r_pmip</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_pmip\r_pmip_api.c</name>
-                    </file>
-                </group>
-                <group>
-                    <name>r_smip</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_smip\r_smip_api.c</name>
-                    </file>
-                </group>
-                <group>
-                    <name>r_system</name>
-                    <file>
-                        <name>$PROJ_DIR$\Device\Driver\Src\r_system\r_system_api.c</name>
-                    </file>
-                </group>
-            </group>
-        </group>
-        <file>
-            <name>$PROJ_DIR$\Device\pin.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\pin.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\RE01_256KB.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\startup_RE01_256KB.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\system_RE01_256KB.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Device\system_RE01_256KB.h</name>
-        </file>
-    </group>
-    <group>
-        <name>mac</name>
-        <group>
-            <name>region</name>
-            <file>
-                <name>$PROJ_DIR$\mac\region\Region.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\Region.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionAS923.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionAS923.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionAU915.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionAU915.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionCN470.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionCN470.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionCN779.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionCN779.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionCommon.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionCommon.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionEU433.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionEU433.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionEU868.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionEU868.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionIN865.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionIN865.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionKR920.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionKR920.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionRU864.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionRU864.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionUS915.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\mac\region\RegionUS915.h</name>
-            </file>
-        </group>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMac.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMac.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacAdr.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacAdr.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacClassB.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacClassB.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacClassBConfig.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacCommands.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacCommands.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacConfirmQueue.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacConfirmQueue.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacCrypto.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacCrypto.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacHeaderTypes.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacMessageTypes.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacParser.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacParser.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacSerializer.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacSerializer.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacTest.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\LoRaMacTypes.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\mac\secure-element.h</name>
-        </file>
-    </group>
-    <group>
-        <name>radio</name>
-        <group>
-            <name>sx126x</name>
-            <file>
-                <name>$PROJ_DIR$\radio\sx126x\sx126x.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\radio\sx126x\sx126x.h</name>
-            </file>
-        </group>
-        <file>
-            <name>$PROJ_DIR$\radio\radio.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\radio\radio.h</name>
-        </file>
-    </group>
-    <group>
-        <name>Resource</name>
-        <file>
-            <name>$PROJ_DIR$\Resource\bitmap_charge_data.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Resource\bitmap_opening_data.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Resource\bitmap_shutdown_data.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Resource\resource.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\Resource\sensor_data_screen.h</name>
-        </file>
-    </group>
-    <group>
-        <name>system</name>
-        <group>
-            <name>crypto</name>
-            <file>
-                <name>$PROJ_DIR$\system\crypto\aes.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\system\crypto\aes.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\system\crypto\cmac.c</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\system\crypto\cmac.h</name>
-            </file>
-            <file>
-                <name>$PROJ_DIR$\system\crypto\soft-se.c</name>
-            </file>
-        </group>
-        <file>
-            <name>$PROJ_DIR$\system\adc.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\adc.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\delay.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\delay.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\fifo.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\fifo.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\gpio.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\gpio.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\i2c.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\i2c.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\spi.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\systime.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\systime.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\timer.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\timer.h</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\uart.c</name>
-        </file>
-        <file>
-            <name>$PROJ_DIR$\system\uart.h</name>
-        </file>
-    </group>
-    <file>
-        <name>$PROJ_DIR$\agt0_timer.c</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\agt0_timer.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\agt1.c</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\agt1.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\Commissioning.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\error.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\hs300x.c</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\hs300x.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\lcd.c</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\lcd.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\lvd_lvdbat.c</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\lvd_lvdbat.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\main.c</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\main.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\mip_display.c</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\mip_display.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\sensors.c</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\sensors.h</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\sys_lpm.c</name>
-    </file>
-    <file>
-        <name>$PROJ_DIR$\sys_lpm.h</name>
-    </file>
-</project>
diff --git a/r01an5753_re_lora.eww b/r01an5753_re_lora.eww
deleted file mode 100644
index b362e27..0000000
--- a/r01an5753_re_lora.eww
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<workspace>
-    <project>
-        <path>$WS_DIR$\r01an5753_re_lora.ewp</path>
-    </project>
-    <batchBuild />
-</workspace>
diff --git a/radio/radio.c b/radio/radio.c
deleted file mode 100644
index 73a78c0..0000000
--- a/radio/radio.c
+++ /dev/null
@@ -1,1213 +0,0 @@
-/*!
- * \file      radio.c
- *
- * \brief     Radio driver API definition
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#include <math.h>
-#include <string.h>
-#include "utilities.h"
-#include "timer.h"
-#include "delay.h"
-#include "radio.h"
-#include "sx126x.h"
-#include "sx126x-board.h"
-#include "board.h"
-
-#define RADIO_FUNC_LOCATION __attribute__ ((section(".ramfunc")))
-
-/*!
- * \brief Initializes the radio
- *
- * \param [IN] events Structure containing the driver callback functions
- */
-void RadioInit( RadioEvents_t *events );
-
-/*!
- * Return current radio status
- *
- * \param status Radio status.[RF_IDLE, RF_RX_RUNNING, RF_TX_RUNNING]
- */
-RadioState_t RadioGetStatus( void );
-
-/*!
- * \brief Configures the radio with the given modem
- *
- * \param [IN] modem Modem to be used [0: FSK, 1: LoRa]
- */
-void RadioSetModem( RadioModems_t modem );
-
-/*!
- * \brief Sets the channel frequency
- *
- * \param [IN] freq         Channel RF frequency
- */
-void RadioSetChannel( uint32_t freq );
-
-/*!
- * \brief Checks if the channel is free for the given time
- *
- * \param [IN] modem      Radio modem to be used [0: FSK, 1: LoRa]
- * \param [IN] freq       Channel RF frequency
- * \param [IN] rssiThresh RSSI threshold
- * \param [IN] maxCarrierSenseTime Max time while the RSSI is measured
- *
- * \retval isFree         [true: Channel is free, false: Channel is not free]
- */
-bool RadioIsChannelFree( RadioModems_t modem, uint32_t freq, int16_t rssiThresh, uint32_t maxCarrierSenseTime );
-
-/*!
- * \brief Generates a 32 bits random value based on the RSSI readings
- *
- * \remark This function sets the radio in LoRa modem mode and disables
- *         all interrupts.
- *         After calling this function either Radio.SetRxConfig or
- *         Radio.SetTxConfig functions must be called.
- *
- * \retval randomValue    32 bits random value
- */
-uint32_t RadioRandom( void );
-
-/*!
- * \brief Sets the reception parameters
- *
- * \param [IN] modem        Radio modem to be used [0: FSK, 1: LoRa]
- * \param [IN] bandwidth    Sets the bandwidth
- *                          FSK : >= 2600 and <= 250000 Hz
- *                          LoRa: [0: 125 kHz, 1: 250 kHz,
- *                                 2: 500 kHz, 3: Reserved]
- * \param [IN] datarate     Sets the Datarate
- *                          FSK : 600..300000 bits/s
- *                          LoRa: [6: 64, 7: 128, 8: 256, 9: 512,
- *                                10: 1024, 11: 2048, 12: 4096  chips]
- * \param [IN] coderate     Sets the coding rate (LoRa only)
- *                          FSK : N/A ( set to 0 )
- *                          LoRa: [1: 4/5, 2: 4/6, 3: 4/7, 4: 4/8]
- * \param [IN] bandwidthAfc Sets the AFC Bandwidth (FSK only)
- *                          FSK : >= 2600 and <= 250000 Hz
- *                          LoRa: N/A ( set to 0 )
- * \param [IN] preambleLen  Sets the Preamble length
- *                          FSK : Number of bytes
- *                          LoRa: Length in symbols (the hardware adds 4 more symbols)
- * \param [IN] symbTimeout  Sets the RxSingle timeout value
- *                          FSK : timeout in number of bytes
- *                          LoRa: timeout in symbols
- * \param [IN] fixLen       Fixed length packets [0: variable, 1: fixed]
- * \param [IN] payloadLen   Sets payload length when fixed length is used
- * \param [IN] crcOn        Enables/Disables the CRC [0: OFF, 1: ON]
- * \param [IN] FreqHopOn    Enables disables the intra-packet frequency hopping
- *                          FSK : N/A ( set to 0 )
- *                          LoRa: [0: OFF, 1: ON]
- * \param [IN] HopPeriod    Number of symbols between each hop
- *                          FSK : N/A ( set to 0 )
- *                          LoRa: Number of symbols
- * \param [IN] iqInverted   Inverts IQ signals (LoRa only)
- *                          FSK : N/A ( set to 0 )
- *                          LoRa: [0: not inverted, 1: inverted]
- * \param [IN] rxContinuous Sets the reception in continuous mode
- *                          [false: single mode, true: continuous mode]
- */
-void RadioSetRxConfig( RadioModems_t modem, uint32_t bandwidth,
-                          uint32_t datarate, uint8_t coderate,
-                          uint32_t bandwidthAfc, uint16_t preambleLen,
-                          uint16_t symbTimeout, bool fixLen,
-                          uint8_t payloadLen,
-                          bool crcOn, bool FreqHopOn, uint8_t HopPeriod,
-                          bool iqInverted, bool rxContinuous );
-
-/*!
- * \brief Sets the transmission parameters
- *
- * \param [IN] modem        Radio modem to be used [0: FSK, 1: LoRa]
- * \param [IN] power        Sets the output power [dBm]
- * \param [IN] fdev         Sets the frequency deviation (FSK only)
- *                          FSK : [Hz]
- *                          LoRa: 0
- * \param [IN] bandwidth    Sets the bandwidth (LoRa only)
- *                          FSK : 0
- *                          LoRa: [0: 125 kHz, 1: 250 kHz,
- *                                 2: 500 kHz, 3: Reserved]
- * \param [IN] datarate     Sets the Datarate
- *                          FSK : 600..300000 bits/s
- *                          LoRa: [6: 64, 7: 128, 8: 256, 9: 512,
- *                                10: 1024, 11: 2048, 12: 4096  chips]
- * \param [IN] coderate     Sets the coding rate (LoRa only)
- *                          FSK : N/A ( set to 0 )
- *                          LoRa: [1: 4/5, 2: 4/6, 3: 4/7, 4: 4/8]
- * \param [IN] preambleLen  Sets the preamble length
- *                          FSK : Number of bytes
- *                          LoRa: Length in symbols (the hardware adds 4 more symbols)
- * \param [IN] fixLen       Fixed length packets [0: variable, 1: fixed]
- * \param [IN] crcOn        Enables disables the CRC [0: OFF, 1: ON]
- * \param [IN] FreqHopOn    Enables disables the intra-packet frequency hopping
- *                          FSK : N/A ( set to 0 )
- *                          LoRa: [0: OFF, 1: ON]
- * \param [IN] HopPeriod    Number of symbols between each hop
- *                          FSK : N/A ( set to 0 )
- *                          LoRa: Number of symbols
- * \param [IN] iqInverted   Inverts IQ signals (LoRa only)
- *                          FSK : N/A ( set to 0 )
- *                          LoRa: [0: not inverted, 1: inverted]
- * \param [IN] timeout      Transmission timeout [ms]
- */
-void RadioSetTxConfig( RadioModems_t modem, int8_t power, uint32_t fdev,
-                          uint32_t bandwidth, uint32_t datarate,
-                          uint8_t coderate, uint16_t preambleLen,
-                          bool fixLen, bool crcOn, bool FreqHopOn,
-                          uint8_t HopPeriod, bool iqInverted, uint32_t timeout );
-
-/*!
- * \brief Checks if the given RF frequency is supported by the hardware
- *
- * \param [IN] frequency RF frequency to be checked
- * \retval isSupported [true: supported, false: unsupported]
- */
-bool RadioCheckRfFrequency( uint32_t frequency );
-
-/*!
- * \brief Computes the packet time on air in ms for the given payload
- *
- * \Remark Can only be called once SetRxConfig or SetTxConfig have been called
- *
- * \param [IN] modem      Radio modem to be used [0: FSK, 1: LoRa]
- * \param [IN] pktLen     Packet payload length
- *
- * \retval airTime        Computed airTime (ms) for the given packet payload length
- */
-uint32_t RadioTimeOnAir( RadioModems_t modem, uint8_t pktLen );
-
-/*!
- * \brief Sends the buffer of size. Prepares the packet to be sent and sets
- *        the radio in transmission
- *
- * \param [IN]: buffer     Buffer pointer
- * \param [IN]: size       Buffer size
- */
-void RadioSend( uint8_t *buffer, uint8_t size );
-
-/*!
- * \brief Sets the radio in sleep mode
- */
-void RadioSleep( void );
-
-/*!
- * \brief Sets the radio in standby mode
- */
-void RadioStandby( void ) RADIO_FUNC_LOCATION;
-
-/*!
- * \brief Sets the radio in reception mode for the given time
- * \param [IN] timeout Reception timeout [ms]
- *                     [0: continuous, others timeout]
- */
-void RadioRx( uint32_t timeout ) RADIO_FUNC_LOCATION;
-
-/*!
- * \brief Start a Channel Activity Detection
- */
-void RadioStartCad( void );
-
-/*!
- * \brief Sets the radio in continuous wave transmission mode
- *
- * \param [IN]: freq       Channel RF frequency
- * \param [IN]: power      Sets the output power [dBm]
- * \param [IN]: time       Transmission mode timeout [s]
- */
-void RadioSetTxContinuousWave( uint32_t freq, int8_t power, uint16_t time );
-
-/*!
- * \brief Reads the current RSSI value
- *
- * \retval rssiValue Current RSSI value in [dBm]
- */
-int16_t RadioRssi( RadioModems_t modem );
-
-/*!
- * \brief Writes the radio register at the specified address
- *
- * \param [IN]: addr Register address
- * \param [IN]: data New register value
- */
-void RadioWrite( uint16_t addr, uint8_t data );
-
-/*!
- * \brief Reads the radio register at the specified address
- *
- * \param [IN]: addr Register address
- * \retval data Register value
- */
-uint8_t RadioRead( uint16_t addr );
-
-/*!
- * \brief Writes multiple radio registers starting at address
- *
- * \param [IN] addr   First Radio register address
- * \param [IN] buffer Buffer containing the new register's values
- * \param [IN] size   Number of registers to be written
- */
-void RadioWriteBuffer( uint16_t addr, uint8_t *buffer, uint8_t size );
-
-/*!
- * \brief Reads multiple radio registers starting at address
- *
- * \param [IN] addr First Radio register address
- * \param [OUT] buffer Buffer where to copy the registers data
- * \param [IN] size Number of registers to be read
- */
-void RadioReadBuffer( uint16_t addr, uint8_t *buffer, uint8_t size );
-
-/*!
- * \brief Sets the maximum payload length.
- *
- * \param [IN] modem      Radio modem to be used [0: FSK, 1: LoRa]
- * \param [IN] max        Maximum payload length in bytes
- */
-void RadioSetMaxPayloadLength( RadioModems_t modem, uint8_t max );
-
-/*!
- * \brief Sets the network to public or private. Updates the sync byte.
- *
- * \remark Applies to LoRa modem only
- *
- * \param [IN] enable if true, it enables a public network
- */
-void RadioSetPublicNetwork( bool enable );
-
-/*!
- * \brief Gets the time required for the board plus radio to get out of sleep.[ms]
- *
- * \retval time Radio plus board wakeup time in ms.
- */
-uint32_t RadioGetWakeupTime( void );
-
-/*!
- * \brief Process radio irq
- */
-void RadioIrqProcess( void );
-
-/*!
- * \brief Sets the radio in reception mode with Max LNA gain for the given time
- * \param [IN] timeout Reception timeout [ms]
- *                     [0: continuous, others timeout]
- */
-void RadioRxBoosted( uint32_t timeout );
-
-/*!
- * \brief Sets the Rx duty cycle management parameters
- *
- * \param [in]  rxTime        Structure describing reception timeout value
- * \param [in]  sleepTime     Structure describing sleep timeout value
- */
-void RadioSetRxDutyCycle( uint32_t rxTime, uint32_t sleepTime );
-
-/*!
- * Radio driver structure initialization
- */
-const struct Radio_s Radio =
-{
-    RadioInit,
-    RadioGetStatus,
-    RadioSetModem,
-    RadioSetChannel,
-    RadioIsChannelFree,
-    RadioRandom,
-    RadioSetRxConfig,
-    RadioSetTxConfig,
-    RadioCheckRfFrequency,
-    RadioTimeOnAir,
-    RadioSend,
-    RadioSleep,
-    RadioStandby,
-    RadioRx,
-    RadioStartCad,
-    RadioSetTxContinuousWave,
-    RadioRssi,
-    RadioWrite,
-    RadioRead,
-    RadioWriteBuffer,
-    RadioReadBuffer,
-    RadioSetMaxPayloadLength,
-    RadioSetPublicNetwork,
-    RadioGetWakeupTime,
-    RadioIrqProcess,
-    // Available on SX126x only
-    RadioRxBoosted,
-    RadioSetRxDutyCycle
-};
-
-/*
- * Local types definition
- */
-
-
- /*!
- * FSK bandwidth definition
- */
-typedef struct
-{
-    uint32_t bandwidth;
-    uint8_t  RegValue;
-}FskBandwidth_t;
-
-/*!
- * Precomputed FSK bandwidth registers values
- */
-const FskBandwidth_t FskBandwidths[] =
-{
-    { 4800  , 0x1F },
-    { 5800  , 0x17 },
-    { 7300  , 0x0F },
-    { 9700  , 0x1E },
-    { 11700 , 0x16 },
-    { 14600 , 0x0E },
-    { 19500 , 0x1D },
-    { 23400 , 0x15 },
-    { 29300 , 0x0D },
-    { 39000 , 0x1C },
-    { 46900 , 0x14 },
-    { 58600 , 0x0C },
-    { 78200 , 0x1B },
-    { 93800 , 0x13 },
-    { 117300, 0x0B },
-    { 156200, 0x1A },
-    { 187200, 0x12 },
-    { 234300, 0x0A },
-    { 312000, 0x19 },
-    { 373600, 0x11 },
-    { 467000, 0x09 },
-    { 500000, 0x00 }, // Invalid Bandwidth
-};
-
-const RadioLoRaBandwidths_t Bandwidths[] = { LORA_BW_125, LORA_BW_250, LORA_BW_500 };
-
-//                                          SF12    SF11    SF10    SF9    SF8    SF7
-static double RadioLoRaSymbTime[3][6] = {{ 32.768, 16.384, 8.192, 4.096, 2.048, 1.024 },  // 125 KHz
-                                         { 16.384, 8.192,  4.096, 2.048, 1.024, 0.512 },  // 250 KHz
-                                         { 8.192,  4.096,  2.048, 1.024, 0.512, 0.256 }}; // 500 KHz
-
-uint8_t MaxPayloadLength = 0xFF;
-
-uint32_t TxTimeout = 0;
-uint32_t RxTimeout = 0;
-
-bool RxContinuous = false;
-
-
-PacketStatus_t RadioPktStatus;
-uint8_t RadioRxPayload[255];
-
-bool IrqFired = false;
-
-/*
- * SX126x DIO IRQ callback functions prototype
- */
-
-/*!
- * \brief DIO 0 IRQ callback
- */
-void RadioOnDioIrq( void* context ) __attribute__ ((section(".ramfunc")));
-
-/*!
- * \brief Tx timeout timer callback
- */
-void RadioOnTxTimeoutIrq( void* context ) __attribute__ ((section(".ramfunc")));
-
-/*!
- * \brief Rx timeout timer callback
- */
-void RadioOnRxTimeoutIrq( void* context ) __attribute__ ((section(".ramfunc")));
-
-/*
- * Private global variables
- */
-
-
-/*!
- * Holds the current network type for the radio
- */
-typedef struct
-{
-    bool Previous;
-    bool Current;
-}RadioPublicNetwork_t;
-
-static RadioPublicNetwork_t RadioPublicNetwork = { false };
-
-/*!
- * Radio callbacks variable
- */
-static RadioEvents_t* RadioEvents;
-
-/*
- * Public global variables
- */
-
-/*!
- * Radio hardware and global parameters
- */
-SX126x_t SX126x;
-
-/*!
- * Tx and Rx timers
- */
-TimerEvent_t TxTimeoutTimer;
-TimerEvent_t RxTimeoutTimer;
-
-/*!
- * Returns the known FSK bandwidth registers value
- *
- * \param [IN] bandwidth Bandwidth value in Hz
- * \retval regValue Bandwidth register value.
- */
-static uint8_t RadioGetFskBandwidthRegValue( uint32_t bandwidth )
-{
-    uint8_t i;
-
-    if( bandwidth == 0 )
-    {
-        return( 0x1F );
-    }
-
-    for( i = 0; i < ( sizeof( FskBandwidths ) / sizeof( FskBandwidth_t ) ) - 1; i++ )
-    {
-        if( ( bandwidth >= FskBandwidths[i].bandwidth ) && ( bandwidth < FskBandwidths[i + 1].bandwidth ) )
-        {
-            return FskBandwidths[i+1].RegValue;
-        }
-    }
-    // ERROR: Value not found
-    while( 1 );
-}
-
-void RadioInit( RadioEvents_t *events )
-{
-    // Modified not to update events if NULL
-    if ( events != NULL )
-    {
-        RadioEvents = events;
-    }
-
-    SX126xInit( RadioOnDioIrq );
-    SX126xSetStandby( STDBY_RC );
-    SX126xSetRegulatorMode( USE_DCDC );
-
-    SX126xSetBufferBaseAddress( 0x00, 0x00 );
-    SX126xSetTxParams( 0, RADIO_RAMP_200_US );
-    SX126xSetDioIrqParams( IRQ_RADIO_ALL, IRQ_RADIO_ALL, IRQ_RADIO_NONE, IRQ_RADIO_NONE );
-
-    // Initialize driver timeout timers
-    TimerInit( &TxTimeoutTimer, RadioOnTxTimeoutIrq );
-    TimerInit( &RxTimeoutTimer, RadioOnRxTimeoutIrq );
-
-    IrqFired = false;
-}
-
-RadioState_t RadioGetStatus( void )
-{
-    switch( SX126xGetOperatingMode( ) )
-    {
-        case MODE_TX:
-            return RF_TX_RUNNING;
-        case MODE_RX:
-            return RF_RX_RUNNING;
-        case MODE_CAD:
-            return RF_CAD;
-        default:
-            return RF_IDLE;
-    }
-}
-
-void RadioSetModem( RadioModems_t modem )
-{
-    switch( modem )
-    {
-    default:
-    case MODEM_FSK:
-        SX126xSetPacketType( PACKET_TYPE_GFSK );
-        // When switching to GFSK mode the LoRa SyncWord register value is reset
-        // Thus, we also reset the RadioPublicNetwork variable
-        RadioPublicNetwork.Current = false;
-        break;
-    case MODEM_LORA:
-        SX126xSetPacketType( PACKET_TYPE_LORA );
-        // Public/Private network register is reset when switching modems
-        if( RadioPublicNetwork.Current != RadioPublicNetwork.Previous )
-        {
-            RadioPublicNetwork.Current = RadioPublicNetwork.Previous;
-            RadioSetPublicNetwork( RadioPublicNetwork.Current );
-        }
-        break;
-    }
-}
-
-void RadioSetChannel( uint32_t freq )
-{
-    SX126xSetRfFrequency( freq );
-}
-
-bool RadioIsChannelFree( RadioModems_t modem, uint32_t freq, int16_t rssiThresh, uint32_t maxCarrierSenseTime )
-{
-    bool status = true;
-    int16_t rssi = 0;
-    uint32_t carrierSenseTime = 0;
-
-    RadioSleep( );
-
-    RadioSetModem( modem );
-
-    RadioSetChannel( freq );
-
-    RadioRx( 0 );
-
-    /* Optimized delay time to adjust the carrier sense timing. DO NOT change this delay time. */
-    DelayMs( 7 );
-
-    carrierSenseTime = TimerGetCurrentTime( );
-
-    // Perform carrier sense for maxCarrierSenseTime
-    while( TimerGetElapsedTime( carrierSenseTime ) < maxCarrierSenseTime )
-    {
-        rssi = RadioRssi( modem );
-
-        if( rssi > rssiThresh )
-        {
-            status = false;
-            break;
-        }
-    }
-    RadioSleep( );
-    return status;
-}
-
-uint32_t RadioRandom( void )
-{
-    uint32_t rnd = 0;
-
-    /*
-     * Radio setup for random number generation
-     */
-    // Set LoRa modem ON
-    RadioSetModem( MODEM_LORA );
-
-    // Disable LoRa modem interrupts
-    SX126xSetDioIrqParams( IRQ_RADIO_NONE, IRQ_RADIO_NONE, IRQ_RADIO_NONE, IRQ_RADIO_NONE );
-
-    rnd = SX126xGetRandom( );
-
-    return rnd;
-}
-
-void RadioSetRxConfig( RadioModems_t modem, uint32_t bandwidth,
-                         uint32_t datarate, uint8_t coderate,
-                         uint32_t bandwidthAfc, uint16_t preambleLen,
-                         uint16_t symbTimeout, bool fixLen,
-                         uint8_t payloadLen,
-                         bool crcOn, bool freqHopOn, uint8_t hopPeriod,
-                         bool iqInverted, bool rxContinuous )
-{
-
-    RxContinuous = rxContinuous;
-    if( rxContinuous == true )
-    {
-        symbTimeout = 0;
-    }
-    if( fixLen == true )
-    {
-        MaxPayloadLength = payloadLen;
-    }
-    else
-    {
-        MaxPayloadLength = 0xFF;
-    }
-
-    switch( modem )
-    {
-        case MODEM_FSK:
-            SX126xSetStopRxTimerOnPreambleDetect( false );
-            SX126x.ModulationParams.PacketType = PACKET_TYPE_GFSK;
-
-            SX126x.ModulationParams.Params.Gfsk.BitRate = datarate;
-            SX126x.ModulationParams.Params.Gfsk.ModulationShaping = MOD_SHAPING_G_BT_1;
-            SX126x.ModulationParams.Params.Gfsk.Bandwidth = RadioGetFskBandwidthRegValue( bandwidth );
-
-            SX126x.PacketParams.PacketType = PACKET_TYPE_GFSK;
-            SX126x.PacketParams.Params.Gfsk.PreambleLength = ( preambleLen << 3 ); // convert byte into bit
-            SX126x.PacketParams.Params.Gfsk.PreambleMinDetect = RADIO_PREAMBLE_DETECTOR_08_BITS;
-            SX126x.PacketParams.Params.Gfsk.SyncWordLength = 3 << 3; // convert byte into bit
-            SX126x.PacketParams.Params.Gfsk.AddrComp = RADIO_ADDRESSCOMP_FILT_OFF;
-            SX126x.PacketParams.Params.Gfsk.HeaderType = ( fixLen == true ) ? RADIO_PACKET_FIXED_LENGTH : RADIO_PACKET_VARIABLE_LENGTH;
-            SX126x.PacketParams.Params.Gfsk.PayloadLength = MaxPayloadLength;
-            if( crcOn == true )
-            {
-                SX126x.PacketParams.Params.Gfsk.CrcLength = RADIO_CRC_2_BYTES_CCIT;
-            }
-            else
-            {
-                SX126x.PacketParams.Params.Gfsk.CrcLength = RADIO_CRC_OFF;
-            }
-            SX126x.PacketParams.Params.Gfsk.DcFree = RADIO_DC_FREEWHITENING;
-
-            RadioStandby( );
-            RadioSetModem( ( SX126x.ModulationParams.PacketType == PACKET_TYPE_GFSK ) ? MODEM_FSK : MODEM_LORA );
-            SX126xSetModulationParams( &SX126x.ModulationParams );
-            SX126xSetPacketParams( &SX126x.PacketParams );
-            SX126xSetSyncWord( ( uint8_t[] ){ 0xC1, 0x94, 0xC1, 0x00, 0x00, 0x00, 0x00, 0x00 } );
-            SX126xSetWhiteningSeed( 0x01FF );
-
-            RxTimeout = ( uint32_t )( symbTimeout * ( ( 1.0 / ( double )datarate ) * 8.0 ) * 1000 );
-            break;
-
-        case MODEM_LORA:
-            SX126xSetStopRxTimerOnPreambleDetect( false );
-            SX126xSetLoRaSymbNumTimeout( symbTimeout );
-            SX126x.ModulationParams.PacketType = PACKET_TYPE_LORA;
-            SX126x.ModulationParams.Params.LoRa.SpreadingFactor = ( RadioLoRaSpreadingFactors_t )datarate;
-            SX126x.ModulationParams.Params.LoRa.Bandwidth = Bandwidths[bandwidth];
-            SX126x.ModulationParams.Params.LoRa.CodingRate = ( RadioLoRaCodingRates_t )coderate;
-
-            if( ( ( bandwidth == 0 ) && ( ( datarate == 11 ) || ( datarate == 12 ) ) ) ||
-            ( ( bandwidth == 1 ) && ( datarate == 12 ) ) )
-            {
-                SX126x.ModulationParams.Params.LoRa.LowDatarateOptimize = 0x01;
-            }
-            else
-            {
-                SX126x.ModulationParams.Params.LoRa.LowDatarateOptimize = 0x00;
-            }
-
-            SX126x.PacketParams.PacketType = PACKET_TYPE_LORA;
-
-            if( ( SX126x.ModulationParams.Params.LoRa.SpreadingFactor == LORA_SF5 ) ||
-                ( SX126x.ModulationParams.Params.LoRa.SpreadingFactor == LORA_SF6 ) )
-            {
-                if( preambleLen < 12 )
-                {
-                    SX126x.PacketParams.Params.LoRa.PreambleLength = 12;
-                }
-                else
-                {
-                    SX126x.PacketParams.Params.LoRa.PreambleLength = preambleLen;
-                }
-            }
-            else
-            {
-                SX126x.PacketParams.Params.LoRa.PreambleLength = preambleLen;
-            }
-
-            SX126x.PacketParams.Params.LoRa.HeaderType = ( RadioLoRaPacketLengthsMode_t )fixLen;
-
-            SX126x.PacketParams.Params.LoRa.PayloadLength = MaxPayloadLength;
-            SX126x.PacketParams.Params.LoRa.CrcMode = ( RadioLoRaCrcModes_t )crcOn;
-            SX126x.PacketParams.Params.LoRa.InvertIQ = ( RadioLoRaIQModes_t )iqInverted;
-
-            RadioStandby( );
-            RadioSetModem( ( SX126x.ModulationParams.PacketType == PACKET_TYPE_GFSK ) ? MODEM_FSK : MODEM_LORA );
-            SX126xSetModulationParams( &SX126x.ModulationParams );
-            SX126xSetPacketParams( &SX126x.PacketParams );
-
-            // WORKAROUND - Optimizing the Inverted IQ Operation, see DS_SX1261-2_V1.2 datasheet chapter 15.4
-            if( SX126x.PacketParams.Params.LoRa.InvertIQ == LORA_IQ_INVERTED )
-            {
-                // RegIqPolaritySetup = @address 0x0736
-                SX126xWriteRegister( 0x0736, SX126xReadRegister( 0x0736 ) & ~( 1 << 2 ) );
-            }
-            else
-            {
-                // RegIqPolaritySetup @address 0x0736
-                SX126xWriteRegister( 0x0736, SX126xReadRegister( 0x0736 ) | ( 1 << 2 ) );
-            }
-            // WORKAROUND END
-
-            // Timeout Max, Timeout handled directly in SetRx function
-            RxTimeout = 0xFFFF;
-
-            break;
-    }
-}
-
-void RadioSetTxConfig( RadioModems_t modem, int8_t power, uint32_t fdev,
-                        uint32_t bandwidth, uint32_t datarate,
-                        uint8_t coderate, uint16_t preambleLen,
-                        bool fixLen, bool crcOn, bool freqHopOn,
-                        uint8_t hopPeriod, bool iqInverted, uint32_t timeout )
-{
-
-    switch( modem )
-    {
-        case MODEM_FSK:
-            SX126x.ModulationParams.PacketType = PACKET_TYPE_GFSK;
-            SX126x.ModulationParams.Params.Gfsk.BitRate = datarate;
-
-            SX126x.ModulationParams.Params.Gfsk.ModulationShaping = MOD_SHAPING_G_BT_1;
-            SX126x.ModulationParams.Params.Gfsk.Bandwidth = RadioGetFskBandwidthRegValue( bandwidth );
-            SX126x.ModulationParams.Params.Gfsk.Fdev = fdev;
-
-            SX126x.PacketParams.PacketType = PACKET_TYPE_GFSK;
-            SX126x.PacketParams.Params.Gfsk.PreambleLength = ( preambleLen << 3 ); // convert byte into bit
-            SX126x.PacketParams.Params.Gfsk.PreambleMinDetect = RADIO_PREAMBLE_DETECTOR_08_BITS;
-            SX126x.PacketParams.Params.Gfsk.SyncWordLength = 3 << 3 ; // convert byte into bit
-            SX126x.PacketParams.Params.Gfsk.AddrComp = RADIO_ADDRESSCOMP_FILT_OFF;
-            SX126x.PacketParams.Params.Gfsk.HeaderType = ( fixLen == true ) ? RADIO_PACKET_FIXED_LENGTH : RADIO_PACKET_VARIABLE_LENGTH;
-
-            if( crcOn == true )
-            {
-                SX126x.PacketParams.Params.Gfsk.CrcLength = RADIO_CRC_2_BYTES_CCIT;
-            }
-            else
-            {
-                SX126x.PacketParams.Params.Gfsk.CrcLength = RADIO_CRC_OFF;
-            }
-            SX126x.PacketParams.Params.Gfsk.DcFree = RADIO_DC_FREEWHITENING;
-
-            RadioStandby( );
-            RadioSetModem( ( SX126x.ModulationParams.PacketType == PACKET_TYPE_GFSK ) ? MODEM_FSK : MODEM_LORA );
-            SX126xSetModulationParams( &SX126x.ModulationParams );
-            SX126xSetPacketParams( &SX126x.PacketParams );
-            SX126xSetSyncWord( ( uint8_t[] ){ 0xC1, 0x94, 0xC1, 0x00, 0x00, 0x00, 0x00, 0x00 } );
-            SX126xSetWhiteningSeed( 0x01FF );
-            break;
-
-        case MODEM_LORA:
-            SX126x.ModulationParams.PacketType = PACKET_TYPE_LORA;
-            SX126x.ModulationParams.Params.LoRa.SpreadingFactor = ( RadioLoRaSpreadingFactors_t ) datarate;
-            SX126x.ModulationParams.Params.LoRa.Bandwidth =  Bandwidths[bandwidth];
-            SX126x.ModulationParams.Params.LoRa.CodingRate= ( RadioLoRaCodingRates_t )coderate;
-
-            if( ( ( bandwidth == 0 ) && ( ( datarate == 11 ) || ( datarate == 12 ) ) ) ||
-            ( ( bandwidth == 1 ) && ( datarate == 12 ) ) )
-            {
-                SX126x.ModulationParams.Params.LoRa.LowDatarateOptimize = 0x01;
-            }
-            else
-            {
-                SX126x.ModulationParams.Params.LoRa.LowDatarateOptimize = 0x00;
-            }
-
-            SX126x.PacketParams.PacketType = PACKET_TYPE_LORA;
-
-            if( ( SX126x.ModulationParams.Params.LoRa.SpreadingFactor == LORA_SF5 ) ||
-                ( SX126x.ModulationParams.Params.LoRa.SpreadingFactor == LORA_SF6 ) )
-            {
-                if( preambleLen < 12 )
-                {
-                    SX126x.PacketParams.Params.LoRa.PreambleLength = 12;
-                }
-                else
-                {
-                    SX126x.PacketParams.Params.LoRa.PreambleLength = preambleLen;
-                }
-            }
-            else
-            {
-                SX126x.PacketParams.Params.LoRa.PreambleLength = preambleLen;
-            }
-
-            SX126x.PacketParams.Params.LoRa.HeaderType = ( RadioLoRaPacketLengthsMode_t )fixLen;
-            SX126x.PacketParams.Params.LoRa.PayloadLength = MaxPayloadLength;
-            SX126x.PacketParams.Params.LoRa.CrcMode = ( RadioLoRaCrcModes_t )crcOn;
-            SX126x.PacketParams.Params.LoRa.InvertIQ = ( RadioLoRaIQModes_t )iqInverted;
-
-            RadioStandby( );
-            RadioSetModem( ( SX126x.ModulationParams.PacketType == PACKET_TYPE_GFSK ) ? MODEM_FSK : MODEM_LORA );
-            SX126xSetModulationParams( &SX126x.ModulationParams );
-            SX126xSetPacketParams( &SX126x.PacketParams );
-            break;
-    }
-
-    // WORKAROUND - Modulation Quality with 500 kHz LoRa� Bandwidth, see DS_SX1261-2_V1.2 datasheet chapter 15.1
-    if( ( modem == MODEM_LORA ) && ( SX126x.ModulationParams.Params.LoRa.Bandwidth == LORA_BW_500 ) )
-    {
-        // RegTxModulation = @address 0x0889
-        SX126xWriteRegister( 0x0889, SX126xReadRegister( 0x0889 ) & ~( 1 << 2 ) );
-    }
-    else
-    {
-        // RegTxModulation = @address 0x0889
-        SX126xWriteRegister( 0x0889, SX126xReadRegister( 0x0889 ) | ( 1 << 2 ) );
-    }
-    // WORKAROUND END
-
-    SX126xSetRfTxPower( power );
-    TxTimeout = timeout;
-}
-
-bool RadioCheckRfFrequency( uint32_t frequency )
-{
-    return true;
-}
-
-uint32_t RadioTimeOnAir( RadioModems_t modem, uint8_t pktLen )
-{
-    uint32_t airTime = 0;
-
-    switch( modem )
-    {
-    case MODEM_FSK:
-        {
-           airTime = ( uint32_t )rint( ( 8 * ( SX126x.PacketParams.Params.Gfsk.PreambleLength +
-                                     ( SX126x.PacketParams.Params.Gfsk.SyncWordLength >> 3 ) +
-                                     ( ( SX126x.PacketParams.Params.Gfsk.HeaderType == RADIO_PACKET_FIXED_LENGTH ) ? 0.0 : 1.0 ) +
-                                     pktLen +
-                                     ( ( SX126x.PacketParams.Params.Gfsk.CrcLength == RADIO_CRC_2_BYTES ) ? 2.0 : 0 ) ) /
-                                     SX126x.ModulationParams.Params.Gfsk.BitRate ) * 1000 );
-        }
-        break;
-    case MODEM_LORA:
-        {
-            double ts = RadioLoRaSymbTime[SX126x.ModulationParams.Params.LoRa.Bandwidth - 4][12 - SX126x.ModulationParams.Params.LoRa.SpreadingFactor];
-            // time of preamble
-            double tPreamble = ( SX126x.PacketParams.Params.LoRa.PreambleLength + 4.25 ) * ts;
-            // Symbol length of payload and time
-            double tmp = ceil( ( 8 * pktLen - 4 * SX126x.ModulationParams.Params.LoRa.SpreadingFactor +
-                                 28 + 16 * SX126x.PacketParams.Params.LoRa.CrcMode -
-                                 ( ( SX126x.PacketParams.Params.LoRa.HeaderType == LORA_PACKET_FIXED_LENGTH ) ? 20 : 0 ) ) /
-                                 ( double )( 4 * ( SX126x.ModulationParams.Params.LoRa.SpreadingFactor -
-                                 ( ( SX126x.ModulationParams.Params.LoRa.LowDatarateOptimize > 0 ) ? 2 : 0 ) ) ) ) *
-                                 ( ( SX126x.ModulationParams.Params.LoRa.CodingRate % 4 ) + 4 );
-            double nPayload = 8 + ( ( tmp > 0 ) ? tmp : 0 );
-            double tPayload = nPayload * ts;
-            // Time on air
-            double tOnAir = tPreamble + tPayload;
-            // return milli seconds
-            airTime = ( uint32_t )floor( tOnAir + 0.999 );
-        }
-        break;
-    }
-    return airTime;
-}
-
-void RadioSend( uint8_t *buffer, uint8_t size )
-{
-    SX126xSetDioIrqParams( IRQ_TX_DONE | IRQ_RX_TX_TIMEOUT,
-                           IRQ_TX_DONE | IRQ_RX_TX_TIMEOUT,
-                           IRQ_RADIO_NONE,
-                           IRQ_RADIO_NONE );
-
-    if( SX126xGetPacketType( ) == PACKET_TYPE_LORA )
-    {
-        SX126x.PacketParams.Params.LoRa.PayloadLength = size;
-    }
-    else
-    {
-        SX126x.PacketParams.Params.Gfsk.PayloadLength = size;
-    }
-    SX126xSetPacketParams( &SX126x.PacketParams );
-
-    SX126xSendPayload( buffer, size, 0 );
-    TimerSetValue( &TxTimeoutTimer, TxTimeout );
-    TimerStart( &TxTimeoutTimer );
-}
-
-void RadioSleep( void )
-{
-    SleepParams_t params = { 0 };
-
-    params.Fields.WarmStart = 1;
-    SX126xSetSleep( params );
-
-    DelayMs( 2 );
-}
-
-void RadioStandby( void )
-{
-    SX126xSetStandby( STDBY_RC );
-}
-
-void RadioRx( uint32_t timeout )
-{
-    SX126xSetDioIrqParams( IRQ_RADIO_ALL, //IRQ_RX_DONE | IRQ_RX_TX_TIMEOUT,
-                           IRQ_RADIO_ALL, //IRQ_RX_DONE | IRQ_RX_TX_TIMEOUT,
-                           IRQ_RADIO_NONE,
-                           IRQ_RADIO_NONE );
-
-    if( timeout != 0 )
-    {
-        TimerSetValue( &RxTimeoutTimer, timeout );
-        TimerStart( &RxTimeoutTimer );
-    }
-
-    if( RxContinuous == true )
-    {
-        SX126xSetRx( 0xFFFFFF ); // Rx Continuous
-    }
-    else
-    {
-        SX126xSetRx( RxTimeout << 6 );
-    }
-}
-
-void RadioRxBoosted( uint32_t timeout )
-{
-    SX126xSetDioIrqParams( IRQ_RADIO_ALL, //IRQ_RX_DONE | IRQ_RX_TX_TIMEOUT,
-                           IRQ_RADIO_ALL, //IRQ_RX_DONE | IRQ_RX_TX_TIMEOUT,
-                           IRQ_RADIO_NONE,
-                           IRQ_RADIO_NONE );
-
-    if( timeout != 0 )
-    {
-        TimerSetValue( &RxTimeoutTimer, timeout );
-        TimerStart( &RxTimeoutTimer );
-    }
-
-    if( RxContinuous == true )
-    {
-        SX126xSetRxBoosted( 0xFFFFFF ); // Rx Continuous
-    }
-    else
-    {
-        SX126xSetRxBoosted( RxTimeout << 6 );
-    }
-}
-
-void RadioSetRxDutyCycle( uint32_t rxTime, uint32_t sleepTime )
-{
-    SX126xSetRxDutyCycle( rxTime, sleepTime );
-}
-
-void RadioStartCad( void )
-{
-    SX126xSetDioIrqParams( IRQ_CAD_DONE | IRQ_CAD_ACTIVITY_DETECTED, IRQ_CAD_DONE | IRQ_CAD_ACTIVITY_DETECTED, IRQ_RADIO_NONE, IRQ_RADIO_NONE );
-    SX126xSetCad( );
-}
-
-void RadioSetTxContinuousWave( uint32_t freq, int8_t power, uint16_t time )
-{
-    SX126xSetRfFrequency( freq );
-    SX126xSetRfTxPower( power );
-    SX126xSetTxContinuousWave( );
-
-    TimerSetValue( &TxTimeoutTimer, time  * 1000 );
-    TimerStart( &TxTimeoutTimer );
-}
-
-int16_t RadioRssi( RadioModems_t modem )
-{
-    return SX126xGetRssiInst( );
-}
-
-void RadioWrite( uint16_t addr, uint8_t data )
-{
-    SX126xWriteRegister( addr, data );
-}
-
-uint8_t RadioRead( uint16_t addr )
-{
-    return SX126xReadRegister( addr );
-}
-
-void RadioWriteBuffer( uint16_t addr, uint8_t *buffer, uint8_t size )
-{
-    SX126xWriteRegisters( addr, buffer, size );
-}
-
-void RadioReadBuffer( uint16_t addr, uint8_t *buffer, uint8_t size )
-{
-    SX126xReadRegisters( addr, buffer, size );
-}
-
-void RadioSetMaxPayloadLength( RadioModems_t modem, uint8_t max )
-{
-    if( modem == MODEM_LORA )
-    {
-        SX126x.PacketParams.Params.LoRa.PayloadLength = MaxPayloadLength = max;
-        SX126xSetPacketParams( &SX126x.PacketParams );
-    }
-    else
-    {
-        if( SX126x.PacketParams.Params.Gfsk.HeaderType == RADIO_PACKET_VARIABLE_LENGTH )
-        {
-            SX126x.PacketParams.Params.Gfsk.PayloadLength = MaxPayloadLength = max;
-            SX126xSetPacketParams( &SX126x.PacketParams );
-        }
-    }
-}
-
-void RadioSetPublicNetwork( bool enable )
-{
-    RadioPublicNetwork.Current = RadioPublicNetwork.Previous = enable;
-
-    RadioSetModem( MODEM_LORA );
-    if( enable == true )
-    {
-        // Change LoRa modem SyncWord
-        SX126xWriteRegister( REG_LR_SYNCWORD, ( LORA_MAC_PUBLIC_SYNCWORD >> 8 ) & 0xFF );
-        SX126xWriteRegister( REG_LR_SYNCWORD + 1, LORA_MAC_PUBLIC_SYNCWORD & 0xFF );
-    }
-    else
-    {
-        // Change LoRa modem SyncWord
-        SX126xWriteRegister( REG_LR_SYNCWORD, ( LORA_MAC_PRIVATE_SYNCWORD >> 8 ) & 0xFF );
-        SX126xWriteRegister( REG_LR_SYNCWORD + 1, LORA_MAC_PRIVATE_SYNCWORD & 0xFF );
-    }
-}
-
-uint32_t RadioGetWakeupTime( void )
-{
-    return SX126xGetBoardTcxoWakeupTime( ) + RADIO_WAKEUP_TIME;
-}
-
-void RadioOnTxTimeoutIrq( void* context )
-{
-    if( ( RadioEvents != NULL ) && ( RadioEvents->TxTimeout != NULL ) )
-    {
-        RadioEvents->TxTimeout( );
-    }
-}
-
-void RadioOnRxTimeoutIrq( void* context )
-{
-    if( ( RadioEvents != NULL ) && ( RadioEvents->RxTimeout != NULL ) )
-    {
-        RadioEvents->RxTimeout( );
-    }
-}
-
-void RadioOnDioIrq( void* context )
-{
-    IrqFired = true;
-}
-
-void RadioIrqProcess( void )
-{
-    if( IrqFired == true )
-    {
-        CRITICAL_SECTION_BEGIN( );
-        // Clear IRQ flag
-        IrqFired = false;
-        CRITICAL_SECTION_END( );
-
-        uint16_t irqRegs = SX126xGetIrqStatus( );
-        SX126xClearIrqStatus( IRQ_RADIO_ALL );
-
-        if( ( irqRegs & IRQ_TX_DONE ) == IRQ_TX_DONE )
-        {
-            TimerStop( &TxTimeoutTimer );
-            //!< Update operating mode state to a value lower than \ref MODE_STDBY_XOSC
-            SX126xSetOperatingMode( MODE_STDBY_RC );
-            if( ( RadioEvents != NULL ) && ( RadioEvents->TxDone != NULL ) )
-            {
-                RadioEvents->TxDone( );
-            }
-        }
-
-        if( ( irqRegs & IRQ_RX_DONE ) == IRQ_RX_DONE )
-        {
-            if( ( irqRegs & IRQ_CRC_ERROR ) == IRQ_CRC_ERROR )
-            {
-                if( RxContinuous == false )
-                {
-                    //!< Update operating mode state to a value lower than \ref MODE_STDBY_XOSC
-                    SX126xSetOperatingMode( MODE_STDBY_RC );
-                }
-                if( ( RadioEvents != NULL ) && ( RadioEvents->RxError ) )
-                {
-                    RadioEvents->RxError( );
-                }
-            }
-            else
-            {
-                uint8_t size;
-
-                TimerStop( &RxTimeoutTimer );
-                if( RxContinuous == false )
-                {
-                    //!< Update operating mode state to a value lower than \ref MODE_STDBY_XOSC
-                    SX126xSetOperatingMode( MODE_STDBY_RC );
-
-                    // WORKAROUND - Implicit Header Mode Timeout Behavior, see DS_SX1261-2_V1.2 datasheet chapter 15.3
-                    // RegRtcControl = @address 0x0902
-                    SX126xWriteRegister( 0x0902, 0x00 );
-                    // RegEventMask = @address 0x0944
-                    SX126xWriteRegister( 0x0944, SX126xReadRegister( 0x0944 ) | ( 1 << 1 ) );
-                    // WORKAROUND END
-                }
-                SX126xGetPayload( RadioRxPayload, &size , 255 );
-                SX126xGetPacketStatus( &RadioPktStatus );
-                if( ( RadioEvents != NULL ) && ( RadioEvents->RxDone != NULL ) )
-                {
-                    RadioEvents->RxDone( RadioRxPayload, size, RadioPktStatus.Params.LoRa.RssiPkt, RadioPktStatus.Params.LoRa.SnrPkt );
-                }
-            }
-        }
-
-        if( ( irqRegs & IRQ_CAD_DONE ) == IRQ_CAD_DONE )
-        {
-            //!< Update operating mode state to a value lower than \ref MODE_STDBY_XOSC
-            SX126xSetOperatingMode( MODE_STDBY_RC );
-            if( ( RadioEvents != NULL ) && ( RadioEvents->CadDone != NULL ) )
-            {
-                RadioEvents->CadDone( ( ( irqRegs & IRQ_CAD_ACTIVITY_DETECTED ) == IRQ_CAD_ACTIVITY_DETECTED ) );
-            }
-        }
-
-        if( ( irqRegs & IRQ_RX_TX_TIMEOUT ) == IRQ_RX_TX_TIMEOUT )
-        {
-            if( SX126xGetOperatingMode( ) == MODE_TX )
-            {
-                TimerStop( &TxTimeoutTimer );
-                //!< Update operating mode state to a value lower than \ref MODE_STDBY_XOSC
-                SX126xSetOperatingMode( MODE_STDBY_RC );
-                if( ( RadioEvents != NULL ) && ( RadioEvents->TxTimeout != NULL ) )
-                {
-                    RadioEvents->TxTimeout( );
-                }
-            }
-            else if( SX126xGetOperatingMode( ) == MODE_RX )
-            {
-                TimerStop( &RxTimeoutTimer );
-                //!< Update operating mode state to a value lower than \ref MODE_STDBY_XOSC
-                SX126xSetOperatingMode( MODE_STDBY_RC );
-                if( ( RadioEvents != NULL ) && ( RadioEvents->RxTimeout != NULL ) )
-                {
-                    RadioEvents->RxTimeout( );
-                }
-            }
-        }
-
-        if( ( irqRegs & IRQ_PREAMBLE_DETECTED ) == IRQ_PREAMBLE_DETECTED )
-        {
-            //__NOP( );
-        }
-
-        if( ( irqRegs & IRQ_SYNCWORD_VALID ) == IRQ_SYNCWORD_VALID )
-        {
-            //__NOP( );
-        }
-
-        if( ( irqRegs & IRQ_HEADER_VALID ) == IRQ_HEADER_VALID )
-        {
-            //__NOP( );
-        }
-
-        if( ( irqRegs & IRQ_HEADER_ERROR ) == IRQ_HEADER_ERROR )
-        {
-            TimerStop( &RxTimeoutTimer );
-            if( RxContinuous == false )
-            {
-                //!< Update operating mode state to a value lower than \ref MODE_STDBY_XOSC
-                SX126xSetOperatingMode( MODE_STDBY_RC );
-            }
-            if( ( RadioEvents != NULL ) && ( RadioEvents->RxTimeout != NULL ) )
-            {
-                RadioEvents->RxTimeout( );
-            }
-        }
-    }
-}
diff --git a/radio/radio.h b/radio/radio.h
deleted file mode 100644
index 709e534..0000000
--- a/radio/radio.h
+++ /dev/null
@@ -1,386 +0,0 @@
-/*!
- * \file      radio.h
- *
- * \brief     Radio driver API definition
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __RADIO_H__
-#define __RADIO_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-#include <stdbool.h>
-
-/*!
- * Radio driver supported modems
- */
-typedef enum
-{
-    MODEM_FSK = 0,
-    MODEM_LORA,
-}RadioModems_t;
-
-/*!
- * Radio driver internal state machine states definition
- */
-typedef enum
-{
-    RF_IDLE = 0,   //!< The radio is idle
-    RF_RX_RUNNING, //!< The radio is in reception state
-    RF_TX_RUNNING, //!< The radio is in transmission state
-    RF_CAD,        //!< The radio is doing channel activity detection
-}RadioState_t;
-
-/*!
- * \brief Radio driver callback functions
- */
-typedef struct
-{
-    /*!
-     * \brief  Tx Done callback prototype.
-     */
-    void    ( *TxDone )( void );
-    /*!
-     * \brief  Tx Timeout callback prototype.
-     */
-    void    ( *TxTimeout )( void );
-    /*!
-     * \brief Rx Done callback prototype.
-     *
-     * \param [IN] payload Received buffer pointer
-     * \param [IN] size    Received buffer size
-     * \param [IN] rssi    RSSI value computed while receiving the frame [dBm]
-     * \param [IN] snr     SNR value computed while receiving the frame [dB]
-     *                     FSK : N/A ( set to 0 )
-     *                     LoRa: SNR value in dB
-     */
-    void    ( *RxDone )( uint8_t *payload, uint16_t size, int16_t rssi, int8_t snr );
-    /*!
-     * \brief  Rx Timeout callback prototype.
-     */
-    void    ( *RxTimeout )( void );
-    /*!
-     * \brief Rx Error callback prototype.
-     */
-    void    ( *RxError )( void );
-    /*!
-     * \brief  FHSS Change Channel callback prototype.
-     *
-     * \param [IN] currentChannel   Index number of the current channel
-     */
-    void ( *FhssChangeChannel )( uint8_t currentChannel );
-
-    /*!
-     * \brief CAD Done callback prototype.
-     *
-     * \param [IN] channelDetected    Channel Activity detected during the CAD
-     */
-    void ( *CadDone ) ( bool channelActivityDetected );
-}RadioEvents_t;
-
-/*!
- * \brief Radio driver definition
- */
-struct Radio_s
-{
-    /*!
-     * \brief Initializes the radio
-     *
-     * \param [IN] events Structure containing the driver callback functions
-     */
-    void    ( *Init )( RadioEvents_t *events );
-    /*!
-     * Return current radio status
-     *
-     * \param status Radio status.[RF_IDLE, RF_RX_RUNNING, RF_TX_RUNNING]
-     */
-    RadioState_t ( *GetStatus )( void );
-    /*!
-     * \brief Configures the radio with the given modem
-     *
-     * \param [IN] modem Modem to be used [0: FSK, 1: LoRa]
-     */
-    void    ( *SetModem )( RadioModems_t modem );
-    /*!
-     * \brief Sets the channel frequency
-     *
-     * \param [IN] freq         Channel RF frequency
-     */
-    void    ( *SetChannel )( uint32_t freq );
-    /*!
-     * \brief Checks if the channel is free for the given time
-     *
-     * \param [IN] modem      Radio modem to be used [0: FSK, 1: LoRa]
-     * \param [IN] freq       Channel RF frequency
-     * \param [IN] rssiThresh RSSI threshold
-     * \param [IN] maxCarrierSenseTime Max time while the RSSI is measured
-     *
-     * \retval isFree         [true: Channel is free, false: Channel is not free]
-     */
-    bool    ( *IsChannelFree )( RadioModems_t modem, uint32_t freq, int16_t rssiThresh, uint32_t maxCarrierSenseTime );
-    /*!
-     * \brief Generates a 32 bits random value based on the RSSI readings
-     *
-     * \remark This function sets the radio in LoRa modem mode and disables
-     *         all interrupts.
-     *         After calling this function either Radio.SetRxConfig or
-     *         Radio.SetTxConfig functions must be called.
-     *
-     * \retval randomValue    32 bits random value
-     */
-    uint32_t ( *Random )( void );
-    /*!
-     * \brief Sets the reception parameters
-     *
-     * \param [IN] modem        Radio modem to be used [0: FSK, 1: LoRa]
-     * \param [IN] bandwidth    Sets the bandwidth
-     *                          FSK : >= 2600 and <= 250000 Hz
-     *                          LoRa: [0: 125 kHz, 1: 250 kHz,
-     *                                 2: 500 kHz, 3: Reserved]
-     * \param [IN] datarate     Sets the Datarate
-     *                          FSK : 600..300000 bits/s
-     *                          LoRa: [6: 64, 7: 128, 8: 256, 9: 512,
-     *                                10: 1024, 11: 2048, 12: 4096  chips]
-     * \param [IN] coderate     Sets the coding rate (LoRa only)
-     *                          FSK : N/A ( set to 0 )
-     *                          LoRa: [1: 4/5, 2: 4/6, 3: 4/7, 4: 4/8]
-     * \param [IN] bandwidthAfc Sets the AFC Bandwidth (FSK only)
-     *                          FSK : >= 2600 and <= 250000 Hz
-     *                          LoRa: N/A ( set to 0 )
-     * \param [IN] preambleLen  Sets the Preamble length
-     *                          FSK : Number of bytes
-     *                          LoRa: Length in symbols (the hardware adds 4 more symbols)
-     * \param [IN] symbTimeout  Sets the RxSingle timeout value
-     *                          FSK : timeout in number of bytes
-     *                          LoRa: timeout in symbols
-     * \param [IN] fixLen       Fixed length packets [0: variable, 1: fixed]
-     * \param [IN] payloadLen   Sets payload length when fixed length is used
-     * \param [IN] crcOn        Enables/Disables the CRC [0: OFF, 1: ON]
-     * \param [IN] freqHopOn    Enables disables the intra-packet frequency hopping
-     *                          FSK : N/A ( set to 0 )
-     *                          LoRa: [0: OFF, 1: ON]
-     * \param [IN] hopPeriod    Number of symbols between each hop
-     *                          FSK : N/A ( set to 0 )
-     *                          LoRa: Number of symbols
-     * \param [IN] iqInverted   Inverts IQ signals (LoRa only)
-     *                          FSK : N/A ( set to 0 )
-     *                          LoRa: [0: not inverted, 1: inverted]
-     * \param [IN] rxContinuous Sets the reception in continuous mode
-     *                          [false: single mode, true: continuous mode]
-     */
-    void    ( *SetRxConfig )( RadioModems_t modem, uint32_t bandwidth,
-                              uint32_t datarate, uint8_t coderate,
-                              uint32_t bandwidthAfc, uint16_t preambleLen,
-                              uint16_t symbTimeout, bool fixLen,
-                              uint8_t payloadLen,
-                              bool crcOn, bool freqHopOn, uint8_t hopPeriod,
-                              bool iqInverted, bool rxContinuous );
-    /*!
-     * \brief Sets the transmission parameters
-     *
-     * \param [IN] modem        Radio modem to be used [0: FSK, 1: LoRa]
-     * \param [IN] power        Sets the output power [dBm]
-     * \param [IN] fdev         Sets the frequency deviation (FSK only)
-     *                          FSK : [Hz]
-     *                          LoRa: 0
-     * \param [IN] bandwidth    Sets the bandwidth (LoRa only)
-     *                          FSK : 0
-     *                          LoRa: [0: 125 kHz, 1: 250 kHz,
-     *                                 2: 500 kHz, 3: Reserved]
-     * \param [IN] datarate     Sets the Datarate
-     *                          FSK : 600..300000 bits/s
-     *                          LoRa: [6: 64, 7: 128, 8: 256, 9: 512,
-     *                                10: 1024, 11: 2048, 12: 4096  chips]
-     * \param [IN] coderate     Sets the coding rate (LoRa only)
-     *                          FSK : N/A ( set to 0 )
-     *                          LoRa: [1: 4/5, 2: 4/6, 3: 4/7, 4: 4/8]
-     * \param [IN] preambleLen  Sets the preamble length
-     *                          FSK : Number of bytes
-     *                          LoRa: Length in symbols (the hardware adds 4 more symbols)
-     * \param [IN] fixLen       Fixed length packets [0: variable, 1: fixed]
-     * \param [IN] crcOn        Enables disables the CRC [0: OFF, 1: ON]
-     * \param [IN] freqHopOn    Enables disables the intra-packet frequency hopping
-     *                          FSK : N/A ( set to 0 )
-     *                          LoRa: [0: OFF, 1: ON]
-     * \param [IN] hopPeriod    Number of symbols between each hop
-     *                          FSK : N/A ( set to 0 )
-     *                          LoRa: Number of symbols
-     * \param [IN] iqInverted   Inverts IQ signals (LoRa only)
-     *                          FSK : N/A ( set to 0 )
-     *                          LoRa: [0: not inverted, 1: inverted]
-     * \param [IN] timeout      Transmission timeout [ms]
-     */
-    void    ( *SetTxConfig )( RadioModems_t modem, int8_t power, uint32_t fdev,
-                              uint32_t bandwidth, uint32_t datarate,
-                              uint8_t coderate, uint16_t preambleLen,
-                              bool fixLen, bool crcOn, bool freqHopOn,
-                              uint8_t hopPeriod, bool iqInverted, uint32_t timeout );
-    /*!
-     * \brief Checks if the given RF frequency is supported by the hardware
-     *
-     * \param [IN] frequency RF frequency to be checked
-     * \retval isSupported [true: supported, false: unsupported]
-     */
-    bool    ( *CheckRfFrequency )( uint32_t frequency );
-    /*!
-     * \brief Computes the packet time on air in ms for the given payload
-     *
-     * \Remark Can only be called once SetRxConfig or SetTxConfig have been called
-     *
-     * \param [IN] modem      Radio modem to be used [0: FSK, 1: LoRa]
-     * \param [IN] pktLen     Packet payload length
-     *
-     * \retval airTime        Computed airTime (ms) for the given packet payload length
-     */
-    uint32_t  ( *TimeOnAir )( RadioModems_t modem, uint8_t pktLen );
-    /*!
-     * \brief Sends the buffer of size. Prepares the packet to be sent and sets
-     *        the radio in transmission
-     *
-     * \param [IN]: buffer     Buffer pointer
-     * \param [IN]: size       Buffer size
-     */
-    void    ( *Send )( uint8_t *buffer, uint8_t size );
-    /*!
-     * \brief Sets the radio in sleep mode
-     */
-    void    ( *Sleep )( void );
-    /*!
-     * \brief Sets the radio in standby mode
-     */
-    void    ( *Standby )( void );
-    /*!
-     * \brief Sets the radio in reception mode for the given time
-     * \param [IN] timeout Reception timeout [ms]
-     *                     [0: continuous, others timeout]
-     */
-    void    ( *Rx )( uint32_t timeout );
-    /*!
-     * \brief Start a Channel Activity Detection
-     */
-    void    ( *StartCad )( void );
-    /*!
-     * \brief Sets the radio in continuous wave transmission mode
-     *
-     * \param [IN]: freq       Channel RF frequency
-     * \param [IN]: power      Sets the output power [dBm]
-     * \param [IN]: time       Transmission mode timeout [s]
-     */
-    void    ( *SetTxContinuousWave )( uint32_t freq, int8_t power, uint16_t time );
-    /*!
-     * \brief Reads the current RSSI value
-     *
-     * \retval rssiValue Current RSSI value in [dBm]
-     */
-    int16_t ( *Rssi )( RadioModems_t modem );
-    /*!
-     * \brief Writes the radio register at the specified address
-     *
-     * \param [IN]: addr Register address
-     * \param [IN]: data New register value
-     */
-    void    ( *Write )( uint16_t addr, uint8_t data );
-    /*!
-     * \brief Reads the radio register at the specified address
-     *
-     * \param [IN]: addr Register address
-     * \retval data Register value
-     */
-    uint8_t ( *Read )( uint16_t addr );
-    /*!
-     * \brief Writes multiple radio registers starting at address
-     *
-     * \param [IN] addr   First Radio register address
-     * \param [IN] buffer Buffer containing the new register's values
-     * \param [IN] size   Number of registers to be written
-     */
-    void    ( *WriteBuffer )( uint16_t addr, uint8_t *buffer, uint8_t size );
-    /*!
-     * \brief Reads multiple radio registers starting at address
-     *
-     * \param [IN] addr First Radio register address
-     * \param [OUT] buffer Buffer where to copy the registers data
-     * \param [IN] size Number of registers to be read
-     */
-    void    ( *ReadBuffer )( uint16_t addr, uint8_t *buffer, uint8_t size );
-    /*!
-     * \brief Sets the maximum payload length.
-     *
-     * \param [IN] modem      Radio modem to be used [0: FSK, 1: LoRa]
-     * \param [IN] max        Maximum payload length in bytes
-     */
-    void    ( *SetMaxPayloadLength )( RadioModems_t modem, uint8_t max );
-    /*!
-     * \brief Sets the network to public or private. Updates the sync byte.
-     *
-     * \remark Applies to LoRa modem only
-     *
-     * \param [IN] enable if true, it enables a public network
-     */
-    void    ( *SetPublicNetwork )( bool enable );
-    /*!
-     * \brief Gets the time required for the board plus radio to get out of sleep.[ms]
-     *
-     * \retval time Radio plus board wakeup time in ms.
-     */
-    uint32_t  ( *GetWakeupTime )( void );
-    /*!
-     * \brief Process radio irq
-     */
-    void ( *IrqProcess )( void );
-    /*
-     * The next functions are available only on SX126x radios.
-     */
-    /*!
-     * \brief Sets the radio in reception mode with Max LNA gain for the given time
-     *
-     * \remark Available on SX126x radios only.
-     *
-     * \param [IN] timeout Reception timeout [ms]
-     *                     [0: continuous, others timeout]
-     */
-    void    ( *RxBoosted )( uint32_t timeout );
-    /*!
-     * \brief Sets the Rx duty cycle management parameters
-     *
-     * \remark Available on SX126x radios only.
-     *
-     * \param [in]  rxTime        Structure describing reception timeout value
-     * \param [in]  sleepTime     Structure describing sleep timeout value
-     */
-    void ( *SetRxDutyCycle ) ( uint32_t rxTime, uint32_t sleepTime );
-};
-
-/*!
- * \brief Radio driver
- *
- * \remark This variable is defined and initialized in the specific radio
- *         board implementation
- */
-extern const struct Radio_s Radio;
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __RADIO_H__
diff --git a/radio/sx126x/sx126x.c b/radio/sx126x/sx126x.c
deleted file mode 100644
index 3e61b3a..0000000
--- a/radio/sx126x/sx126x.c
+++ /dev/null
@@ -1,843 +0,0 @@
-/*!
- * \file      sx126x.c
- *
- * \brief     SX126x driver implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#include <string.h>
-#include "utilities.h"
-#include "timer.h"
-#include "radio.h"
-#include "delay.h"
-#include "sx126x.h"
-#include "sx126x-board.h"
-
-/*!
- * \brief Radio registers definition
- */
-typedef struct
-{
-    uint16_t      Addr;                             //!< The address of the register
-    uint8_t       Value;                            //!< The value of the register
-}RadioRegisters_t;
-
-/*!
- * \brief Holds the internal operating mode of the radio
- */
-static RadioOperatingModes_t OperatingMode;
-
-/*!
- * \brief Stores the current packet type set in the radio
- */
-static RadioPacketTypes_t PacketType;
-
-/*!
- * \brief Stores the current packet header type set in the radio
- */
-static volatile RadioLoRaPacketLengthsMode_t LoRaHeaderType;
-
-/*!
- * \brief Stores the last frequency error measured on LoRa received packet
- */
-volatile uint32_t FrequencyError = 0;
-
-/*!
- * \brief Hold the status of the Image calibration
- */
-static bool ImageCalibrated = false;
-
-/*
- * SX126x DIO IRQ callback functions prototype
- */
-
-/*!
- * \brief DIO 0 IRQ callback
- */
-void SX126xOnDioIrq( void );
-
-/*!
- * \brief DIO 0 IRQ callback
- */
-void SX126xSetPollingMode( void );
-
-/*!
- * \brief DIO 0 IRQ callback
- */
-void SX126xSetInterruptMode( void );
-
-/*
- * \brief Process the IRQ if handled by the driver
- */
-void SX126xProcessIrqs( void );
-
-void SX126xInit( DioIrqHandler dioIrq )
-{
-    SX126xReset( );
-
-    SX126xIoIrqInit( dioIrq );
-
-    SX126xWakeup( );
-    SX126xSetStandby( STDBY_RC );
-#if 0
-    /* NOTE: This setting is for adjusting the RF frequency error within 9kHz(10ppm) when using
-     * RENESAS RTK70E017DC01000BJ board.
-     * ATTENTION : Apply the same setting to the LoRa receiver when applying this setting.
-     * Otherwise LoRa communication will fail.
-     */
-#ifdef SX126X_TRIM_ENABLE
-    SX126xWriteRegister( REG_XTA_TRIM, 0x11 );
-    SX126xWriteRegister( REG_XTB_TRIM, 0x16 );
-#endif
-#endif
-    // Initialize TCXO control
-    SX126xIoTcxoInit( );
-
-    SX126xSetDio2AsRfSwitchCtrl( true );
-    SX126xSetOperatingMode( MODE_STDBY_RC );
-}
-
-RadioOperatingModes_t SX126xGetOperatingMode( void )
-{
-    return OperatingMode;
-}
-
-void SX126xSetOperatingMode( RadioOperatingModes_t mode )
-{
-    OperatingMode = mode;
-#if defined( USE_RADIO_DEBUG )
-    switch( mode )
-    {
-        case MODE_TX:
-            SX126xDbgPinTxWrite( 1 );
-            SX126xDbgPinRxWrite( 0 );
-            break;
-        case MODE_RX:
-        case MODE_RX_DC:
-            SX126xDbgPinTxWrite( 0 );
-            SX126xDbgPinRxWrite( 1 );
-            break;
-        default:
-            SX126xDbgPinTxWrite( 0 );
-            SX126xDbgPinRxWrite( 0 );
-            break;
-    }
-#endif
-}
-
-void SX126xCheckDeviceReady( void )
-{
-    if( ( SX126xGetOperatingMode( ) == MODE_SLEEP ) || ( SX126xGetOperatingMode( ) == MODE_RX_DC ) )
-    {
-        SX126xWakeup( );
-        // Switch is turned off when device is in sleep mode and turned on is all other modes
-        SX126xAntSwOn( );
-    }
-    SX126xWaitOnBusy( );
-}
-
-void SX126xSetPayload( uint8_t *payload, uint8_t size )
-{
-    SX126xWriteBuffer( 0x00, payload, size );
-}
-
-uint8_t SX126xGetPayload( uint8_t *buffer, uint8_t *size,  uint8_t maxSize )
-{
-    uint8_t offset = 0;
-
-    SX126xGetRxBufferStatus( size, &offset );
-    if( *size > maxSize )
-    {
-        return 1;
-    }
-    SX126xReadBuffer( offset, buffer, *size );
-    return 0;
-}
-
-void SX126xSendPayload( uint8_t *payload, uint8_t size, uint32_t timeout )
-{
-    SX126xSetPayload( payload, size );
-    SX126xSetTx( timeout );
-}
-
-uint8_t SX126xSetSyncWord( uint8_t *syncWord )
-{
-    SX126xWriteRegisters( REG_LR_SYNCWORDBASEADDRESS, syncWord, 8 );
-    return 0;
-}
-
-void SX126xSetCrcSeed( uint16_t seed )
-{
-    uint8_t buf[2];
-
-    buf[0] = ( uint8_t )( ( seed >> 8 ) & 0xFF );
-    buf[1] = ( uint8_t )( seed & 0xFF );
-
-    switch( SX126xGetPacketType( ) )
-    {
-        case PACKET_TYPE_GFSK:
-            SX126xWriteRegisters( REG_LR_CRCSEEDBASEADDR, buf, 2 );
-            break;
-
-        default:
-            break;
-    }
-}
-
-void SX126xSetCrcPolynomial( uint16_t polynomial )
-{
-    uint8_t buf[2];
-
-    buf[0] = ( uint8_t )( ( polynomial >> 8 ) & 0xFF );
-    buf[1] = ( uint8_t )( polynomial & 0xFF );
-
-    switch( SX126xGetPacketType( ) )
-    {
-        case PACKET_TYPE_GFSK:
-            SX126xWriteRegisters( REG_LR_CRCPOLYBASEADDR, buf, 2 );
-            break;
-
-        default:
-            break;
-    }
-}
-
-void SX126xSetWhiteningSeed( uint16_t seed )
-{
-    uint8_t regValue = 0;
-    
-    switch( SX126xGetPacketType( ) )
-    {
-        case PACKET_TYPE_GFSK:
-            regValue = SX126xReadRegister( REG_LR_WHITSEEDBASEADDR_MSB ) & 0xFE;
-            regValue = ( ( seed >> 8 ) & 0x01 ) | regValue;
-            SX126xWriteRegister( REG_LR_WHITSEEDBASEADDR_MSB, regValue ); // only 1 bit.
-            SX126xWriteRegister( REG_LR_WHITSEEDBASEADDR_LSB, ( uint8_t )seed );
-            break;
-
-        default:
-            break;
-    }
-}
-
-uint32_t SX126xGetRandom( void )
-{
-    uint32_t number = 0;
-    uint8_t regAnaLna = 0;
-    uint8_t regAnaMixer = 0;
-
-    regAnaLna = SX126xReadRegister( REG_ANA_LNA );
-    SX126xWriteRegister( REG_ANA_LNA, regAnaLna & ~( 1 << 0 ) );
-
-    regAnaMixer = SX126xReadRegister( REG_ANA_MIXER );
-    SX126xWriteRegister( REG_ANA_MIXER, regAnaMixer & ~( 1 << 7 ) );
-
-    // Set radio in continuous reception
-    SX126xSetRx( 0xFFFFFF ); // Rx Continuous
-
-    SX126xReadRegisters( RANDOM_NUMBER_GENERATORBASEADDR, ( uint8_t* )&number, 4 );
-
-    SX126xSetStandby( STDBY_RC );
-
-    SX126xWriteRegister( REG_ANA_LNA, regAnaLna );
-    SX126xWriteRegister( REG_ANA_MIXER, regAnaMixer );
-
-    return number;
-}
-
-void SX126xSetSleep( SleepParams_t sleepConfig )
-{
-    SX126xAntSwOff( );
-
-    uint8_t value = ( ( ( uint8_t )sleepConfig.Fields.WarmStart << 2 ) |
-                      ( ( uint8_t )sleepConfig.Fields.Reset << 1 ) |
-                      ( ( uint8_t )sleepConfig.Fields.WakeUpRTC ) );
-    SX126xWriteCommand( RADIO_SET_SLEEP, &value, 1 );
-    SX126xSetOperatingMode( MODE_SLEEP );
-}
-
-void SX126xSetStandby( RadioStandbyModes_t standbyConfig )
-{
-    SX126xWriteCommand( RADIO_SET_STANDBY, ( uint8_t* )&standbyConfig, 1 );
-    if( standbyConfig == STDBY_RC )
-    {
-        SX126xSetOperatingMode( MODE_STDBY_RC );
-    }
-    else
-    {
-        SX126xSetOperatingMode( MODE_STDBY_XOSC );
-    }
-}
-
-void SX126xSetFs( void )
-{
-    SX126xWriteCommand( RADIO_SET_FS, 0, 0 );
-    SX126xSetOperatingMode( MODE_FS );
-}
-
-void SX126xSetXtalTrim( void )
-{
-#ifdef SX126X_TRIM_ENABLE
-    SX126xSetStandby( STDBY_RC );
-    /* NOTE: This setting is for adjusting the RF frequency error within 9kHz(10ppm) when using
-     * RENESAS RTK70E017DC01000BJ board. Once the SX126x entered standby mode, the trimming register
-     * setting will be initialized to 0x05.
-     * ATTENTION : Apply the same setting to the LoRa receiver when applying this setting.
-     * Otherwise LoRa communication will fail.
-     */
-    SX126xWriteRegister( REG_XTA_TRIM, 0x11 );
-    SX126xWriteRegister( REG_XTB_TRIM, 0x16 );
-#endif
-}
-
-void SX126xSetTx( uint32_t timeout )
-{
-    uint8_t buf[3];
-
-    SX126xSetOperatingMode( MODE_TX );
-
-    buf[0] = ( uint8_t )( ( timeout >> 16 ) & 0xFF );
-    buf[1] = ( uint8_t )( ( timeout >> 8 ) & 0xFF );
-    buf[2] = ( uint8_t )( timeout & 0xFF );
-    SX126xWriteCommand( RADIO_SET_TX, buf, 3 );
-}
-
-void SX126xSetRx( uint32_t timeout )
-{
-    uint8_t buf[3];
-
-    SX126xSetXtalTrim( );
-
-    SX126xSetOperatingMode( MODE_RX );
-
-    buf[0] = ( uint8_t )( ( timeout >> 16 ) & 0xFF );
-    buf[1] = ( uint8_t )( ( timeout >> 8 ) & 0xFF );
-    buf[2] = ( uint8_t )( timeout & 0xFF );
-    SX126xWriteCommand( RADIO_SET_RX, buf, 3 );
-}
-
-void SX126xSetRxBoosted( uint32_t timeout )
-{
-    uint8_t buf[3];
-
-    SX126xSetXtalTrim( );
-
-    SX126xSetOperatingMode( MODE_RX );
-
-    SX126xWriteRegister( REG_RX_GAIN, 0x96 ); // max LNA gain, increase current by ~2mA for around ~3dB in sensivity
-
-    buf[0] = ( uint8_t )( ( timeout >> 16 ) & 0xFF );
-    buf[1] = ( uint8_t )( ( timeout >> 8 ) & 0xFF );
-    buf[2] = ( uint8_t )( timeout & 0xFF );
-    SX126xWriteCommand( RADIO_SET_RX, buf, 3 );
-}
-
-void SX126xSetRxDutyCycle( uint32_t rxTime, uint32_t sleepTime )
-{
-    uint8_t buf[6];
-
-    SX126xSetXtalTrim( );
-    buf[0] = ( uint8_t )( ( rxTime >> 16 ) & 0xFF );
-    buf[1] = ( uint8_t )( ( rxTime >> 8 ) & 0xFF );
-    buf[2] = ( uint8_t )( rxTime & 0xFF );
-    buf[3] = ( uint8_t )( ( sleepTime >> 16 ) & 0xFF );
-    buf[4] = ( uint8_t )( ( sleepTime >> 8 ) & 0xFF );
-    buf[5] = ( uint8_t )( sleepTime & 0xFF );
-    SX126xWriteCommand( RADIO_SET_RXDUTYCYCLE, buf, 6 );
-    SX126xSetOperatingMode( MODE_RX_DC );
-}
-
-void SX126xSetCad( void )
-{
-    SX126xSetXtalTrim( );
-    SX126xWriteCommand( RADIO_SET_CAD, 0, 0 );
-    SX126xSetOperatingMode( MODE_CAD );
-}
-
-void SX126xSetTxContinuousWave( void )
-{
-    SX126xSetXtalTrim( );
-    SX126xWriteCommand( RADIO_SET_TXCONTINUOUSWAVE, 0, 0 );
-}
-
-void SX126xSetTxInfinitePreamble( void )
-{
-    SX126xSetXtalTrim( );
-    SX126xWriteCommand( RADIO_SET_TXCONTINUOUSPREAMBLE, 0, 0 );
-}
-
-void SX126xSetStopRxTimerOnPreambleDetect( bool enable )
-{
-    SX126xWriteCommand( RADIO_SET_STOPRXTIMERONPREAMBLE, ( uint8_t* )&enable, 1 );
-}
-
-void SX126xSetLoRaSymbNumTimeout( uint8_t SymbNum )
-{
-    SX126xWriteCommand( RADIO_SET_LORASYMBTIMEOUT, &SymbNum, 1 );
-}
-
-void SX126xSetRegulatorMode( RadioRegulatorMode_t mode )
-{
-    SX126xWriteCommand( RADIO_SET_REGULATORMODE, ( uint8_t* )&mode, 1 );
-}
-
-void SX126xCalibrate( CalibrationParams_t calibParam )
-{
-    uint8_t value = ( ( ( uint8_t )calibParam.Fields.ImgEnable << 6 ) |
-                      ( ( uint8_t )calibParam.Fields.ADCBulkPEnable << 5 ) |
-                      ( ( uint8_t )calibParam.Fields.ADCBulkNEnable << 4 ) |
-                      ( ( uint8_t )calibParam.Fields.ADCPulseEnable << 3 ) |
-                      ( ( uint8_t )calibParam.Fields.PLLEnable << 2 ) |
-                      ( ( uint8_t )calibParam.Fields.RC13MEnable << 1 ) |
-                      ( ( uint8_t )calibParam.Fields.RC64KEnable ) );
-
-    SX126xWriteCommand( RADIO_CALIBRATE, &value, 1 );
-}
-
-void SX126xCalibrateImage( uint32_t freq )
-{
-    uint8_t calFreq[2];
-
-    if( freq > 900000000 )
-    {
-        calFreq[0] = 0xE1;
-        calFreq[1] = 0xE9;
-    }
-    else if( freq > 850000000 )
-    {
-        calFreq[0] = 0xD7;
-        calFreq[1] = 0xDB;
-    }
-    else if( freq > 770000000 )
-    {
-        calFreq[0] = 0xC1;
-        calFreq[1] = 0xC5;
-    }
-    else if( freq > 460000000 )
-    {
-        calFreq[0] = 0x75;
-        calFreq[1] = 0x81;
-    }
-    else if( freq > 425000000 )
-    {
-        calFreq[0] = 0x6B;
-        calFreq[1] = 0x6F;
-    }
-    SX126xWriteCommand( RADIO_CALIBRATEIMAGE, calFreq, 2 );
-}
-
-void SX126xSetPaConfig( uint8_t paDutyCycle, uint8_t hpMax, uint8_t deviceSel, uint8_t paLut )
-{
-    uint8_t buf[4];
-
-    buf[0] = paDutyCycle;
-    buf[1] = hpMax;
-    buf[2] = deviceSel;
-    buf[3] = paLut;
-    SX126xWriteCommand( RADIO_SET_PACONFIG, buf, 4 );
-}
-
-void SX126xSetRxTxFallbackMode( uint8_t fallbackMode )
-{
-    SX126xWriteCommand( RADIO_SET_TXFALLBACKMODE, &fallbackMode, 1 );
-}
-
-void SX126xSetDioIrqParams( uint16_t irqMask, uint16_t dio1Mask, uint16_t dio2Mask, uint16_t dio3Mask )
-{
-    uint8_t buf[8];
-
-    buf[0] = ( uint8_t )( ( irqMask >> 8 ) & 0x00FF );
-    buf[1] = ( uint8_t )( irqMask & 0x00FF );
-    buf[2] = ( uint8_t )( ( dio1Mask >> 8 ) & 0x00FF );
-    buf[3] = ( uint8_t )( dio1Mask & 0x00FF );
-    buf[4] = ( uint8_t )( ( dio2Mask >> 8 ) & 0x00FF );
-    buf[5] = ( uint8_t )( dio2Mask & 0x00FF );
-    buf[6] = ( uint8_t )( ( dio3Mask >> 8 ) & 0x00FF );
-    buf[7] = ( uint8_t )( dio3Mask & 0x00FF );
-    SX126xWriteCommand( RADIO_CFG_DIOIRQ, buf, 8 );
-}
-
-uint16_t SX126xGetIrqStatus( void )
-{
-    uint8_t irqStatus[2];
-
-    SX126xReadCommand( RADIO_GET_IRQSTATUS, irqStatus, 2 );
-    return ( irqStatus[0] << 8 ) | irqStatus[1];
-}
-
-void SX126xSetDio2AsRfSwitchCtrl( uint8_t enable )
-{
-    SX126xWriteCommand( RADIO_SET_RFSWITCHMODE, &enable, 1 );
-}
-
-void SX126xSetDio3AsTcxoCtrl( RadioTcxoCtrlVoltage_t tcxoVoltage, uint32_t timeout )
-{
-    uint8_t buf[4];
-
-    buf[0] = tcxoVoltage & 0x07;
-    buf[1] = ( uint8_t )( ( timeout >> 16 ) & 0xFF );
-    buf[2] = ( uint8_t )( ( timeout >> 8 ) & 0xFF );
-    buf[3] = ( uint8_t )( timeout & 0xFF );
-
-    SX126xWriteCommand( RADIO_SET_TCXOMODE, buf, 4 );
-}
-
-void SX126xSetRfFrequency( uint32_t frequency )
-{
-    uint8_t buf[4];
-    uint32_t freq = 0;
-
-    if( ImageCalibrated == false )
-    {
-        SX126xCalibrateImage( frequency );
-        ImageCalibrated = true;
-    }
-
-    freq = ( uint32_t )( ( double )frequency / ( double )FREQ_STEP );
-    buf[0] = ( uint8_t )( ( freq >> 24 ) & 0xFF );
-    buf[1] = ( uint8_t )( ( freq >> 16 ) & 0xFF );
-    buf[2] = ( uint8_t )( ( freq >> 8 ) & 0xFF );
-    buf[3] = ( uint8_t )( freq & 0xFF );
-    SX126xWriteCommand( RADIO_SET_RFFREQUENCY, buf, 4 );
-}
-
-void SX126xSetPacketType( RadioPacketTypes_t packetType )
-{
-    // Save packet type internally to avoid questioning the radio
-    PacketType = packetType;
-    SX126xWriteCommand( RADIO_SET_PACKETTYPE, ( uint8_t* )&packetType, 1 );
-}
-
-RadioPacketTypes_t SX126xGetPacketType( void )
-{
-    return PacketType;
-}
-
-void SX126xSetTxParams( int8_t power, RadioRampTimes_t rampTime )
-{
-    uint8_t buf[2];
-
-    if( SX126xGetDeviceId( ) == SX1261 )
-    {
-        if( power == 15 )
-        {
-            SX126xSetPaConfig( 0x06, 0x00, 0x01, 0x01 );
-        }
-        else
-        {
-            SX126xSetPaConfig( 0x04, 0x00, 0x01, 0x01 );
-        }
-        if( power >= 14 )
-        {
-            power = 14;
-        }
-        else if( power < -17 )
-        {
-            power = -17;
-        }
-        SX126xWriteRegister( REG_OCP, 0x18 ); // current max is 80 mA for the whole device
-    }
-    else // sx1262
-    {
-        // WORKAROUND - Better Resistance of the SX1262 Tx to Antenna Mismatch, see DS_SX1261-2_V1.2 datasheet chapter 15.2
-        // RegTxClampConfig = @address 0x08D8
-        SX126xWriteRegister( 0x08D8, SX126xReadRegister( 0x08D8 ) | ( 0x0F << 1 ) );
-        // WORKAROUND END
-
-        if( power == 22 )
-        {
-            SX126xSetPaConfig( 0x04, 0x07, 0x00, 0x01 );
-        }
-        else if( power == 20 )
-        {
-            SX126xSetPaConfig( 0x03, 0x05, 0x00, 0x01 );
-        }
-        else if( power == 17 )
-        {
-            SX126xSetPaConfig( 0x02, 0x02, 0x00, 0x01 );
-        }
-        else if( power == 14 )
-        {
-            SX126xSetPaConfig( 0x02, 0x02, 0x00, 0x01 );
-        }
-        else if( power == 13 )
-        {
-            SX126xSetPaConfig( 0x02, 0x01, 0x00, 0x01 ); /* This is experimental */
-        }
-        else if( power == 10 )
-        {
-            SX126xSetPaConfig( 0x02, 0x01, 0x00, 0x01 ); /* This is experimental */
-        }
-        else
-        {
-            SX126xSetPaConfig( 0x02, 0x02, 0x00, 0x01 ); /* +14dBm */
-//            SX126xSetPaConfig( 0x04, 0x07, 0x00, 0x01 ); /* +22dBm */
-        }
-        if( power > 22 )
-        {
-            power = 14;
-//            power = 22;
-        }
-        else if( power < -9 )
-        {
-            power = -9;
-        }
-#if 1 // Reduce the maximum current intentionally for Energy Harvesting applications
-        SX126xWriteRegister( REG_OCP, 0x38 ); // current max 160mA for the whole device
-#else
-        SX126xWriteRegister( REG_OCP, 0x18 ); // current max 60mA for the whole device
-#endif
-    }
-    buf[0] = power;
-    buf[1] = ( uint8_t )rampTime;
-    SX126xWriteCommand( RADIO_SET_TXPARAMS, buf, 2 );
-}
-
-void SX126xSetModulationParams( ModulationParams_t *modulationParams )
-{
-    uint8_t n;
-    uint32_t tempVal = 0;
-    uint8_t buf[8] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
-
-    // Check if required configuration corresponds to the stored packet type
-    // If not, silently update radio packet type
-    if( PacketType != modulationParams->PacketType )
-    {
-        SX126xSetPacketType( modulationParams->PacketType );
-    }
-
-    switch( modulationParams->PacketType )
-    {
-    case PACKET_TYPE_GFSK:
-        n = 8;
-        tempVal = ( uint32_t )( 32 * ( ( double )XTAL_FREQ / ( double )modulationParams->Params.Gfsk.BitRate ) );
-        buf[0] = ( tempVal >> 16 ) & 0xFF;
-        buf[1] = ( tempVal >> 8 ) & 0xFF;
-        buf[2] = tempVal & 0xFF;
-        buf[3] = modulationParams->Params.Gfsk.ModulationShaping;
-        buf[4] = modulationParams->Params.Gfsk.Bandwidth;
-        tempVal = ( uint32_t )( ( double )modulationParams->Params.Gfsk.Fdev / ( double )FREQ_STEP );
-        buf[5] = ( tempVal >> 16 ) & 0xFF;
-        buf[6] = ( tempVal >> 8 ) & 0xFF;
-        buf[7] = ( tempVal& 0xFF );
-        SX126xWriteCommand( RADIO_SET_MODULATIONPARAMS, buf, n );
-        break;
-    case PACKET_TYPE_LORA:
-        n = 4;
-        buf[0] = modulationParams->Params.LoRa.SpreadingFactor;
-        buf[1] = modulationParams->Params.LoRa.Bandwidth;
-        buf[2] = modulationParams->Params.LoRa.CodingRate;
-        buf[3] = modulationParams->Params.LoRa.LowDatarateOptimize;
-
-        SX126xWriteCommand( RADIO_SET_MODULATIONPARAMS, buf, n );
-
-        break;
-    default:
-    case PACKET_TYPE_NONE:
-        return;
-    }
-}
-
-void SX126xSetPacketParams( PacketParams_t *packetParams )
-{
-    uint8_t n;
-    uint8_t crcVal = 0;
-    uint8_t buf[9] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
-
-    // Check if required configuration corresponds to the stored packet type
-    // If not, silently update radio packet type
-    if( PacketType != packetParams->PacketType )
-    {
-        SX126xSetPacketType( packetParams->PacketType );
-    }
-
-    switch( packetParams->PacketType )
-    {
-    case PACKET_TYPE_GFSK:
-        if( packetParams->Params.Gfsk.CrcLength == RADIO_CRC_2_BYTES_IBM )
-        {
-            SX126xSetCrcSeed( CRC_IBM_SEED );
-            SX126xSetCrcPolynomial( CRC_POLYNOMIAL_IBM );
-            crcVal = RADIO_CRC_2_BYTES;
-        }
-        else if( packetParams->Params.Gfsk.CrcLength == RADIO_CRC_2_BYTES_CCIT )
-        {
-            SX126xSetCrcSeed( CRC_CCITT_SEED );
-            SX126xSetCrcPolynomial( CRC_POLYNOMIAL_CCITT );
-            crcVal = RADIO_CRC_2_BYTES_INV;
-        }
-        else
-        {
-            crcVal = packetParams->Params.Gfsk.CrcLength;
-        }
-        n = 9;
-        buf[0] = ( packetParams->Params.Gfsk.PreambleLength >> 8 ) & 0xFF;
-        buf[1] = packetParams->Params.Gfsk.PreambleLength;
-        buf[2] = packetParams->Params.Gfsk.PreambleMinDetect;
-        buf[3] = ( packetParams->Params.Gfsk.SyncWordLength /*<< 3*/ ); // convert from byte to bit
-        buf[4] = packetParams->Params.Gfsk.AddrComp;
-        buf[5] = packetParams->Params.Gfsk.HeaderType;
-        buf[6] = packetParams->Params.Gfsk.PayloadLength;
-        buf[7] = crcVal;
-        buf[8] = packetParams->Params.Gfsk.DcFree;
-        break;
-    case PACKET_TYPE_LORA:
-        n = 6;
-        buf[0] = ( packetParams->Params.LoRa.PreambleLength >> 8 ) & 0xFF;
-        buf[1] = packetParams->Params.LoRa.PreambleLength;
-        buf[2] = LoRaHeaderType = packetParams->Params.LoRa.HeaderType;
-        buf[3] = packetParams->Params.LoRa.PayloadLength;
-        buf[4] = packetParams->Params.LoRa.CrcMode;
-        buf[5] = packetParams->Params.LoRa.InvertIQ;
-        break;
-    default:
-    case PACKET_TYPE_NONE:
-        return;
-    }
-    SX126xWriteCommand( RADIO_SET_PACKETPARAMS, buf, n );
-}
-
-void SX126xSetCadParams( RadioLoRaCadSymbols_t cadSymbolNum, uint8_t cadDetPeak, uint8_t cadDetMin, RadioCadExitModes_t cadExitMode, uint32_t cadTimeout )
-{
-    uint8_t buf[7];
-
-    buf[0] = ( uint8_t )cadSymbolNum;
-    buf[1] = cadDetPeak;
-    buf[2] = cadDetMin;
-    buf[3] = ( uint8_t )cadExitMode;
-    buf[4] = ( uint8_t )( ( cadTimeout >> 16 ) & 0xFF );
-    buf[5] = ( uint8_t )( ( cadTimeout >> 8 ) & 0xFF );
-    buf[6] = ( uint8_t )( cadTimeout & 0xFF );
-    SX126xWriteCommand( RADIO_SET_CADPARAMS, buf, 7 );
-    SX126xSetOperatingMode( MODE_CAD );
-}
-
-void SX126xSetBufferBaseAddress( uint8_t txBaseAddress, uint8_t rxBaseAddress )
-{
-    uint8_t buf[2];
-
-    buf[0] = txBaseAddress;
-    buf[1] = rxBaseAddress;
-    SX126xWriteCommand( RADIO_SET_BUFFERBASEADDRESS, buf, 2 );
-}
-
-RadioStatus_t SX126xGetStatus( void )
-{
-    uint8_t stat = 0;
-    RadioStatus_t status = { .Value = 0 };
-
-    stat = SX126xReadCommand( RADIO_GET_STATUS, NULL, 0 );
-    status.Fields.CmdStatus = ( stat & ( 0x07 << 1 ) ) >> 1;
-    status.Fields.ChipMode = ( stat & ( 0x07 << 4 ) ) >> 4;
-    return status;
-}
-
-int8_t SX126xGetRssiInst( void )
-{
-    uint8_t buf[1];
-    int8_t rssi = 0;
-
-    SX126xReadCommand( RADIO_GET_RSSIINST, buf, 1 );
-    rssi = -buf[0] >> 1;
-    return rssi;
-}
-
-void SX126xGetRxBufferStatus( uint8_t *payloadLength, uint8_t *rxStartBufferPointer )
-{
-    uint8_t status[2];
-
-    SX126xReadCommand( RADIO_GET_RXBUFFERSTATUS, status, 2 );
-
-    // In case of LORA fixed header, the payloadLength is obtained by reading
-    // the register REG_LR_PAYLOADLENGTH
-    if( ( SX126xGetPacketType( ) == PACKET_TYPE_LORA ) && ( LoRaHeaderType == LORA_PACKET_FIXED_LENGTH ) )
-    {
-        *payloadLength = SX126xReadRegister( REG_LR_PAYLOADLENGTH );
-    }
-    else
-    {
-        *payloadLength = status[0];
-    }
-    *rxStartBufferPointer = status[1];
-}
-
-void SX126xGetPacketStatus( PacketStatus_t *pktStatus )
-{
-    uint8_t status[3];
-
-    SX126xReadCommand( RADIO_GET_PACKETSTATUS, status, 3 );
-
-    pktStatus->packetType = SX126xGetPacketType( );
-    switch( pktStatus->packetType )
-    {
-        case PACKET_TYPE_GFSK:
-            pktStatus->Params.Gfsk.RxStatus = status[0];
-            pktStatus->Params.Gfsk.RssiSync = -status[1] >> 1;
-            pktStatus->Params.Gfsk.RssiAvg = -status[2] >> 1;
-            pktStatus->Params.Gfsk.FreqError = 0;
-            break;
-
-        case PACKET_TYPE_LORA:
-            pktStatus->Params.LoRa.RssiPkt = -status[0] >> 1;
-            // Returns SNR value [dB] rounded to the nearest integer value
-            pktStatus->Params.LoRa.SnrPkt = ( ( ( int8_t )status[1] ) + 2 ) >> 2;
-            pktStatus->Params.LoRa.SignalRssiPkt = -status[2] >> 1;
-            pktStatus->Params.LoRa.FreqError = FrequencyError;
-            break;
-
-        default:
-        case PACKET_TYPE_NONE:
-            // In that specific case, we set everything in the pktStatus to zeros
-            // and reset the packet type accordingly
-            memset( pktStatus, 0, sizeof( PacketStatus_t ) );
-            pktStatus->packetType = PACKET_TYPE_NONE;
-            break;
-    }
-}
-
-RadioError_t SX126xGetDeviceErrors( void )
-{
-    uint8_t err[] = { 0, 0 };
-    RadioError_t error = { .Value = 0 };
-
-    SX126xReadCommand( RADIO_GET_ERROR, ( uint8_t* )err, 2 );
-    error.Fields.PaRamp     = ( err[0] & ( 1 << 0 ) ) >> 0;
-    error.Fields.PllLock    = ( err[1] & ( 1 << 6 ) ) >> 6;
-    error.Fields.XoscStart  = ( err[1] & ( 1 << 5 ) ) >> 5;
-    error.Fields.ImgCalib   = ( err[1] & ( 1 << 4 ) ) >> 4;
-    error.Fields.AdcCalib   = ( err[1] & ( 1 << 3 ) ) >> 3;
-    error.Fields.PllCalib   = ( err[1] & ( 1 << 2 ) ) >> 2;
-    error.Fields.Rc13mCalib = ( err[1] & ( 1 << 1 ) ) >> 1;
-    error.Fields.Rc64kCalib = ( err[1] & ( 1 << 0 ) ) >> 0;
-    return error;
-}
-
-void SX126xClearDeviceErrors( void )
-{
-    uint8_t buf[2] = { 0x00, 0x00 };
-    SX126xWriteCommand( RADIO_CLR_ERROR, buf, 2 );
-}
-
-void SX126xClearIrqStatus( uint16_t irq )
-{
-    uint8_t buf[2];
-
-    buf[0] = ( uint8_t )( ( ( uint16_t )irq >> 8 ) & 0x00FF );
-    buf[1] = ( uint8_t )( ( uint16_t )irq & 0x00FF );
-    SX126xWriteCommand( RADIO_CLR_IRQSTATUS, buf, 2 );
-}
diff --git a/radio/sx126x/sx126x.h b/radio/sx126x/sx126x.h
deleted file mode 100644
index 31ee7cf..0000000
--- a/radio/sx126x/sx126x.h
+++ /dev/null
@@ -1,1154 +0,0 @@
-/*!
- * \file      sx126x.h
- *
- * \brief     SX126x driver implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __SX126x_H__
-#define __SX126x_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-#include <stdbool.h>
-#include <math.h>
-#include "gpio.h"
-#include "spi.h"
-#include "radio.h"
-
-#define SX126x_FUNC_LOCATION __attribute__ ((section(".ramfunc")))
-
-#define SX1261                                      1
-#define SX1262                                      2
-
-/*!
- * Radio complete Wake-up Time with margin for temperature compensation
- */
-#define RADIO_WAKEUP_TIME                           3 // [ms]
-
-/*!
- * \brief Compensation delay for SetAutoTx/Rx functions in 15.625 microseconds
- */
-#define AUTO_RX_TX_OFFSET                           2
-
-/*!
- * \brief LFSR initial value to compute IBM type CRC
- */
-#define CRC_IBM_SEED                                0xFFFF
-
-/*!
- * \brief LFSR initial value to compute CCIT type CRC
- */
-#define CRC_CCITT_SEED                              0x1D0F
-
-/*!
- * \brief Polynomial used to compute IBM CRC
- */
-#define CRC_POLYNOMIAL_IBM                          0x8005
-
-/*!
- * \brief Polynomial used to compute CCIT CRC
- */
-#define CRC_POLYNOMIAL_CCITT                        0x1021
-
-/*!
- * \brief The address of the register holding the first byte defining the CRC seed
- *
- */
-#define REG_LR_CRCSEEDBASEADDR                      0x06BC
-
-/*!
- * \brief The address of the register holding the first byte defining the CRC polynomial
- */
-#define REG_LR_CRCPOLYBASEADDR                      0x06BE
-
-/*!
- * \brief The address of the register holding the first byte defining the whitening seed
- */
-#define REG_LR_WHITSEEDBASEADDR_MSB                 0x06B8
-#define REG_LR_WHITSEEDBASEADDR_LSB                 0x06B9
-
-/*!
- * \brief The address of the register holding the packet configuration
- */
-#define REG_LR_PACKETPARAMS                         0x0704
-
-/*!
- * \brief The address of the register holding the payload size
- */
-#define REG_LR_PAYLOADLENGTH                        0x0702
-
-/*!
- * \brief The addresses of the registers holding SyncWords values
- */
-#define REG_LR_SYNCWORDBASEADDRESS                  0x06C0
-
-/*!
- * \brief The addresses of the register holding LoRa Modem SyncWord value
- */
-#define REG_LR_SYNCWORD                             0x0740
-
-/*!
- * Syncword for Private LoRa networks
- */
-#define LORA_MAC_PRIVATE_SYNCWORD                   0x1424
-
-/*!
- * Syncword for Public LoRa networks
- */
-#define LORA_MAC_PUBLIC_SYNCWORD                    0x3444
-
-
-/*!
- * The address of the register giving a 32-bit random number
- */
-#define RANDOM_NUMBER_GENERATORBASEADDR             0x0819
-
-/*!
- * The address of the register used to disable the LNA
- */
-#define REG_ANA_LNA                                 0x08E2
-
-/*!
- * The address of the register used to disable the mixer
- */
-#define REG_ANA_MIXER                               0x08E5
-
-/*!
- * The address of the register holding RX Gain value (0x94: power saving, 0x96: rx boosted)
- */
-#define REG_RX_GAIN                                 0x08AC
-
-/*!
- * Change the value on the device internal trimming capacitor
- */
-#define REG_XTA_TRIM                                0x0911
-#define REG_XTB_TRIM                                0x0912
-
-/*!
- * Set the current max value in the over current protection
- */
-#define REG_OCP                                     0x08E7
-
-/*!
- * \brief Structure describing the radio status
- */
-typedef union RadioStatus_u
-{
-    uint8_t Value;
-    struct
-    {   //bit order is lsb -> msb
-        uint8_t           : 1;  //!< Reserved
-        uint8_t CmdStatus : 3;  //!< Command status
-        uint8_t ChipMode  : 3;  //!< Chip mode
-        uint8_t           : 1;  //!< Reserved
-    }Fields;
-}RadioStatus_t;
-
-/*!
- * \brief Structure describing the error codes for callback functions
- */
-typedef enum
-{
-    IRQ_HEADER_ERROR_CODE                   = 0x01,
-    IRQ_SYNCWORD_ERROR_CODE                 = 0x02,
-    IRQ_CRC_ERROR_CODE                      = 0x04,
-}IrqErrorCode_t;
-
-enum IrqPblSyncHeaderCode_t
-{
-    IRQ_PBL_DETECT_CODE                     = 0x01,
-    IRQ_SYNCWORD_VALID_CODE                 = 0x02,
-    IRQ_HEADER_VALID_CODE                   = 0x04,
-};
-
-/*!
- * \brief Represents the operating mode the radio is actually running
- */
-typedef enum
-{
-    MODE_SLEEP                              = 0x00,         //! The radio is in sleep mode
-    MODE_STDBY_RC,                                          //! The radio is in standby mode with RC oscillator
-    MODE_STDBY_XOSC,                                        //! The radio is in standby mode with XOSC oscillator
-    MODE_FS,                                                //! The radio is in frequency synthesis mode
-    MODE_TX,                                                //! The radio is in transmit mode
-    MODE_RX,                                                //! The radio is in receive mode
-    MODE_RX_DC,                                             //! The radio is in receive duty cycle mode
-    MODE_CAD                                                //! The radio is in channel activity detection mode
-}RadioOperatingModes_t;
-
-/*!
- * \brief Declares the oscillator in use while in standby mode
- *
- * Using the STDBY_RC standby mode allow to reduce the energy consumption
- * STDBY_XOSC should be used for time critical applications
- */
-typedef enum
-{
-    STDBY_RC                                = 0x00,
-    STDBY_XOSC                              = 0x01,
-}RadioStandbyModes_t;
-
-/*!
- * \brief Declares the power regulation used to power the device
- *
- * This command allows the user to specify if DC-DC or LDO is used for power regulation.
- * Using only LDO implies that the Rx or Tx current is doubled
- */
-typedef enum
-{
-    USE_LDO                                 = 0x00, // default
-    USE_DCDC                                = 0x01,
-}RadioRegulatorMode_t;
-
-/*!
- * \brief Represents the possible packet type (i.e. modem) used
- */
-typedef enum
-{
-    PACKET_TYPE_GFSK                        = 0x00,
-    PACKET_TYPE_LORA                        = 0x01,
-    PACKET_TYPE_NONE                        = 0x0F,
-}RadioPacketTypes_t;
-
-/*!
- * \brief Represents the ramping time for power amplifier
- */
-typedef enum
-{
-    RADIO_RAMP_10_US                        = 0x00,
-    RADIO_RAMP_20_US                        = 0x01,
-    RADIO_RAMP_40_US                        = 0x02,
-    RADIO_RAMP_80_US                        = 0x03,
-    RADIO_RAMP_200_US                       = 0x04,
-    RADIO_RAMP_800_US                       = 0x05,
-    RADIO_RAMP_1700_US                      = 0x06,
-    RADIO_RAMP_3400_US                      = 0x07,
-}RadioRampTimes_t;
-
-/*!
- * \brief Represents the number of symbols to be used for channel activity detection operation
- */
-typedef enum
-{
-    LORA_CAD_01_SYMBOL                      = 0x00,
-    LORA_CAD_02_SYMBOL                      = 0x01,
-    LORA_CAD_04_SYMBOL                      = 0x02,
-    LORA_CAD_08_SYMBOL                      = 0x03,
-    LORA_CAD_16_SYMBOL                      = 0x04,
-}RadioLoRaCadSymbols_t;
-
-/*!
- * \brief Represents the Channel Activity Detection actions after the CAD operation is finished
- */
-typedef enum
-{
-    LORA_CAD_ONLY                           = 0x00,
-    LORA_CAD_RX                             = 0x01,
-    LORA_CAD_LBT                            = 0x10,
-}RadioCadExitModes_t;
-
-/*!
- * \brief Represents the modulation shaping parameter
- */
-typedef enum
-{
-    MOD_SHAPING_OFF                         = 0x00,
-    MOD_SHAPING_G_BT_03                     = 0x08,
-    MOD_SHAPING_G_BT_05                     = 0x09,
-    MOD_SHAPING_G_BT_07                     = 0x0A,
-    MOD_SHAPING_G_BT_1                      = 0x0B,
-}RadioModShapings_t;
-
-/*!
- * \brief Represents the modulation shaping parameter
- */
-typedef enum
-{
-    RX_BW_4800                              = 0x1F,
-    RX_BW_5800                              = 0x17,
-    RX_BW_7300                              = 0x0F,
-    RX_BW_9700                              = 0x1E,
-    RX_BW_11700                             = 0x16,
-    RX_BW_14600                             = 0x0E,
-    RX_BW_19500                             = 0x1D,
-    RX_BW_23400                             = 0x15,
-    RX_BW_29300                             = 0x0D,
-    RX_BW_39000                             = 0x1C,
-    RX_BW_46900                             = 0x14,
-    RX_BW_58600                             = 0x0C,
-    RX_BW_78200                             = 0x1B,
-    RX_BW_93800                             = 0x13,
-    RX_BW_117300                            = 0x0B,
-    RX_BW_156200                            = 0x1A,
-    RX_BW_187200                            = 0x12,
-    RX_BW_234300                            = 0x0A,
-    RX_BW_312000                            = 0x19,
-    RX_BW_373600                            = 0x11,
-    RX_BW_467000                            = 0x09,
-}RadioRxBandwidth_t;
-
-/*!
- * \brief Represents the possible spreading factor values in LoRa packet types
- */
-typedef enum
-{
-    LORA_SF5                                = 0x05,
-    LORA_SF6                                = 0x06,
-    LORA_SF7                                = 0x07,
-    LORA_SF8                                = 0x08,
-    LORA_SF9                                = 0x09,
-    LORA_SF10                               = 0x0A,
-    LORA_SF11                               = 0x0B,
-    LORA_SF12                               = 0x0C,
-}RadioLoRaSpreadingFactors_t;
-
-/*!
- * \brief Represents the bandwidth values for LoRa packet type
- */
-typedef enum
-{
-    LORA_BW_500                             = 6,
-    LORA_BW_250                             = 5,
-    LORA_BW_125                             = 4,
-    LORA_BW_062                             = 3,
-    LORA_BW_041                             = 10,
-    LORA_BW_031                             = 2,
-    LORA_BW_020                             = 9,
-    LORA_BW_015                             = 1,
-    LORA_BW_010                             = 8,
-    LORA_BW_007                             = 0,
-}RadioLoRaBandwidths_t;
-
-/*!
- * \brief Represents the coding rate values for LoRa packet type
- */
-typedef enum
-{
-    LORA_CR_4_5                             = 0x01,
-    LORA_CR_4_6                             = 0x02,
-    LORA_CR_4_7                             = 0x03,
-    LORA_CR_4_8                             = 0x04,
-}RadioLoRaCodingRates_t;
-
-/*!
- * \brief Represents the preamble length used to detect the packet on Rx side
- */
-typedef enum
-{
-    RADIO_PREAMBLE_DETECTOR_OFF             = 0x00,         //!< Preamble detection length off
-    RADIO_PREAMBLE_DETECTOR_08_BITS         = 0x04,         //!< Preamble detection length 8 bits
-    RADIO_PREAMBLE_DETECTOR_16_BITS         = 0x05,         //!< Preamble detection length 16 bits
-    RADIO_PREAMBLE_DETECTOR_24_BITS         = 0x06,         //!< Preamble detection length 24 bits
-    RADIO_PREAMBLE_DETECTOR_32_BITS         = 0x07,         //!< Preamble detection length 32 bit
-}RadioPreambleDetection_t;
-
-/*!
- * \brief Represents the possible combinations of SyncWord correlators activated
- */
-typedef enum
-{
-    RADIO_ADDRESSCOMP_FILT_OFF              = 0x00,         //!< No correlator turned on, i.e. do not search for SyncWord
-    RADIO_ADDRESSCOMP_FILT_NODE             = 0x01,
-    RADIO_ADDRESSCOMP_FILT_NODE_BROAD       = 0x02,
-}RadioAddressComp_t;
-
-/*!
- *  \brief Radio GFSK packet length mode
- */
-typedef enum
-{
-    RADIO_PACKET_FIXED_LENGTH               = 0x00,         //!< The packet is known on both sides, no header included in the packet
-    RADIO_PACKET_VARIABLE_LENGTH            = 0x01,         //!< The packet is on variable size, header included
-}RadioPacketLengthModes_t;
-
-/*!
- * \brief Represents the CRC length
- */
-typedef enum
-{
-    RADIO_CRC_OFF                           = 0x01,         //!< No CRC in use
-    RADIO_CRC_1_BYTES                       = 0x00,
-    RADIO_CRC_2_BYTES                       = 0x02,
-    RADIO_CRC_1_BYTES_INV                   = 0x04,
-    RADIO_CRC_2_BYTES_INV                   = 0x06,
-    RADIO_CRC_2_BYTES_IBM                   = 0xF1,
-    RADIO_CRC_2_BYTES_CCIT                  = 0xF2,
-}RadioCrcTypes_t;
-
-/*!
- * \brief Radio whitening mode activated or deactivated
- */
-typedef enum
-{
-    RADIO_DC_FREE_OFF                       = 0x00,
-    RADIO_DC_FREEWHITENING                  = 0x01,
-}RadioDcFree_t;
-
-/*!
- * \brief Holds the Radio lengths mode for the LoRa packet type
- */
-typedef enum
-{
-    LORA_PACKET_VARIABLE_LENGTH             = 0x00,         //!< The packet is on variable size, header included
-    LORA_PACKET_FIXED_LENGTH                = 0x01,         //!< The packet is known on both sides, no header included in the packet
-    LORA_PACKET_EXPLICIT                    = LORA_PACKET_VARIABLE_LENGTH,
-    LORA_PACKET_IMPLICIT                    = LORA_PACKET_FIXED_LENGTH,
-}RadioLoRaPacketLengthsMode_t;
-
-/*!
- * \brief Represents the CRC mode for LoRa packet type
- */
-typedef enum
-{
-    LORA_CRC_ON                             = 0x01,         //!< CRC activated
-    LORA_CRC_OFF                            = 0x00,         //!< CRC not used
-}RadioLoRaCrcModes_t;
-
-/*!
- * \brief Represents the IQ mode for LoRa packet type
- */
-typedef enum
-{
-    LORA_IQ_NORMAL                          = 0x00,
-    LORA_IQ_INVERTED                        = 0x01,
-}RadioLoRaIQModes_t;
-
-/*!
- * \brief Represents the voltage used to control the TCXO on/off from DIO3
- */
-typedef enum
-{
-    TCXO_CTRL_1_6V                          = 0x00,
-    TCXO_CTRL_1_7V                          = 0x01,
-    TCXO_CTRL_1_8V                          = 0x02,
-    TCXO_CTRL_2_2V                          = 0x03,
-    TCXO_CTRL_2_4V                          = 0x04,
-    TCXO_CTRL_2_7V                          = 0x05,
-    TCXO_CTRL_3_0V                          = 0x06,
-    TCXO_CTRL_3_3V                          = 0x07,
-}RadioTcxoCtrlVoltage_t;
-
-/*!
- * \brief Represents the interruption masks available for the radio
- *
- * \remark Note that not all these interruptions are available for all packet types
- */
-typedef enum
-{
-    IRQ_RADIO_NONE                          = 0x0000,
-    IRQ_TX_DONE                             = 0x0001,
-    IRQ_RX_DONE                             = 0x0002,
-    IRQ_PREAMBLE_DETECTED                   = 0x0004,
-    IRQ_SYNCWORD_VALID                      = 0x0008,
-    IRQ_HEADER_VALID                        = 0x0010,
-    IRQ_HEADER_ERROR                        = 0x0020,
-    IRQ_CRC_ERROR                           = 0x0040,
-    IRQ_CAD_DONE                            = 0x0080,
-    IRQ_CAD_ACTIVITY_DETECTED               = 0x0100,
-    IRQ_RX_TX_TIMEOUT                       = 0x0200,
-    IRQ_RADIO_ALL                           = 0xFFFF,
-}RadioIrqMasks_t;
-
-/*!
- * \brief Represents all possible opcode understood by the radio
- */
-typedef enum RadioCommands_e
-{
-    RADIO_GET_STATUS                        = 0xC0,
-    RADIO_WRITE_REGISTER                    = 0x0D,
-    RADIO_READ_REGISTER                     = 0x1D,
-    RADIO_WRITE_BUFFER                      = 0x0E,
-    RADIO_READ_BUFFER                       = 0x1E,
-    RADIO_SET_SLEEP                         = 0x84,
-    RADIO_SET_STANDBY                       = 0x80,
-    RADIO_SET_FS                            = 0xC1,
-    RADIO_SET_TX                            = 0x83,
-    RADIO_SET_RX                            = 0x82,
-    RADIO_SET_RXDUTYCYCLE                   = 0x94,
-    RADIO_SET_CAD                           = 0xC5,
-    RADIO_SET_TXCONTINUOUSWAVE              = 0xD1,
-    RADIO_SET_TXCONTINUOUSPREAMBLE          = 0xD2,
-    RADIO_SET_PACKETTYPE                    = 0x8A,
-    RADIO_GET_PACKETTYPE                    = 0x11,
-    RADIO_SET_RFFREQUENCY                   = 0x86,
-    RADIO_SET_TXPARAMS                      = 0x8E,
-    RADIO_SET_PACONFIG                      = 0x95,
-    RADIO_SET_CADPARAMS                     = 0x88,
-    RADIO_SET_BUFFERBASEADDRESS             = 0x8F,
-    RADIO_SET_MODULATIONPARAMS              = 0x8B,
-    RADIO_SET_PACKETPARAMS                  = 0x8C,
-    RADIO_GET_RXBUFFERSTATUS                = 0x13,
-    RADIO_GET_PACKETSTATUS                  = 0x14,
-    RADIO_GET_RSSIINST                      = 0x15,
-    RADIO_GET_STATS                         = 0x10,
-    RADIO_RESET_STATS                       = 0x00,
-    RADIO_CFG_DIOIRQ                        = 0x08,
-    RADIO_GET_IRQSTATUS                     = 0x12,
-    RADIO_CLR_IRQSTATUS                     = 0x02,
-    RADIO_CALIBRATE                         = 0x89,
-    RADIO_CALIBRATEIMAGE                    = 0x98,
-    RADIO_SET_REGULATORMODE                 = 0x96,
-    RADIO_GET_ERROR                         = 0x17,
-    RADIO_CLR_ERROR                         = 0x07,
-    RADIO_SET_TCXOMODE                      = 0x97,
-    RADIO_SET_TXFALLBACKMODE                = 0x93,
-    RADIO_SET_RFSWITCHMODE                  = 0x9D,
-    RADIO_SET_STOPRXTIMERONPREAMBLE         = 0x9F,
-    RADIO_SET_LORASYMBTIMEOUT               = 0xA0,
-}RadioCommands_t;
-
-/*!
- * \brief The type describing the modulation parameters for every packet types
- */
-typedef struct
-{
-    RadioPacketTypes_t                   PacketType;        //!< Packet to which the modulation parameters are referring to.
-    struct
-    {
-        struct
-        {
-            uint32_t                     BitRate;
-            uint32_t                     Fdev;
-            RadioModShapings_t           ModulationShaping;
-            uint8_t                      Bandwidth;
-        }Gfsk;
-        struct
-        {
-            RadioLoRaSpreadingFactors_t  SpreadingFactor;   //!< Spreading Factor for the LoRa modulation
-            RadioLoRaBandwidths_t        Bandwidth;         //!< Bandwidth for the LoRa modulation
-            RadioLoRaCodingRates_t       CodingRate;        //!< Coding rate for the LoRa modulation
-            uint8_t                      LowDatarateOptimize; //!< Indicates if the modem uses the low datarate optimization
-        }LoRa;
-    }Params;                                                //!< Holds the modulation parameters structure
-}ModulationParams_t;
-
-/*!
- * \brief The type describing the packet parameters for every packet types
- */
-typedef struct
-{
-    RadioPacketTypes_t                    PacketType;        //!< Packet to which the packet parameters are referring to.
-    struct
-    {
-        /*!
-         * \brief Holds the GFSK packet parameters
-         */
-        struct
-        {
-            uint16_t                     PreambleLength;    //!< The preamble Tx length for GFSK packet type in bit
-            RadioPreambleDetection_t     PreambleMinDetect; //!< The preamble Rx length minimal for GFSK packet type
-            uint8_t                      SyncWordLength;    //!< The synchronization word length for GFSK packet type
-            RadioAddressComp_t           AddrComp;          //!< Activated SyncWord correlators
-            RadioPacketLengthModes_t     HeaderType;        //!< If the header is explicit, it will be transmitted in the GFSK packet. If the header is implicit, it will not be transmitted
-            uint8_t                      PayloadLength;     //!< Size of the payload in the GFSK packet
-            RadioCrcTypes_t              CrcLength;         //!< Size of the CRC block in the GFSK packet
-            RadioDcFree_t                DcFree;
-        }Gfsk;
-        /*!
-         * \brief Holds the LoRa packet parameters
-         */
-        struct
-        {
-            uint16_t                     PreambleLength;    //!< The preamble length is the number of LoRa symbols in the preamble
-            RadioLoRaPacketLengthsMode_t HeaderType;        //!< If the header is explicit, it will be transmitted in the LoRa packet. If the header is implicit, it will not be transmitted
-            uint8_t                      PayloadLength;     //!< Size of the payload in the LoRa packet
-            RadioLoRaCrcModes_t          CrcMode;           //!< Size of CRC block in LoRa packet
-            RadioLoRaIQModes_t           InvertIQ;          //!< Allows to swap IQ for LoRa packet
-        }LoRa;
-    }Params;                                                //!< Holds the packet parameters structure
-}PacketParams_t;
-
-/*!
- * \brief Represents the packet status for every packet type
- */
-typedef struct
-{
-    RadioPacketTypes_t                    packetType;      //!< Packet to which the packet status are referring to.
-    struct
-    {
-        struct
-        {
-            uint8_t RxStatus;
-            int8_t RssiAvg;                                //!< The averaged RSSI
-            int8_t RssiSync;                               //!< The RSSI measured on last packet
-            uint32_t FreqError;
-        }Gfsk;
-        struct
-        {
-            int8_t RssiPkt;                                //!< The RSSI of the last packet
-            int8_t SnrPkt;                                 //!< The SNR of the last packet
-            int8_t SignalRssiPkt;
-            uint32_t FreqError;
-        }LoRa;
-    }Params;
-}PacketStatus_t;
-
-/*!
- * \brief Represents the Rx internal counters values when GFSK or LoRa packet type is used
- */
-typedef struct
-{
-    RadioPacketTypes_t                    packetType;       //!< Packet to which the packet status are referring to.
-    uint16_t PacketReceived;
-    uint16_t CrcOk;
-    uint16_t LengthError;
-}RxCounter_t;
-
-/*!
- * \brief Represents a calibration configuration
- */
-typedef union
-{
-    struct
-    {
-        uint8_t RC64KEnable    : 1;                             //!< Calibrate RC64K clock
-        uint8_t RC13MEnable    : 1;                             //!< Calibrate RC13M clock
-        uint8_t PLLEnable      : 1;                             //!< Calibrate PLL
-        uint8_t ADCPulseEnable : 1;                             //!< Calibrate ADC Pulse
-        uint8_t ADCBulkNEnable : 1;                             //!< Calibrate ADC bulkN
-        uint8_t ADCBulkPEnable : 1;                             //!< Calibrate ADC bulkP
-        uint8_t ImgEnable      : 1;
-        uint8_t                : 1;
-    }Fields;
-    uint8_t Value;
-}CalibrationParams_t;
-
-/*!
- * \brief Represents a sleep mode configuration
- */
-typedef union
-{
-    struct
-    {
-        uint8_t WakeUpRTC               : 1;                    //!< Get out of sleep mode if wakeup signal received from RTC
-        uint8_t Reset                   : 1;
-        uint8_t WarmStart               : 1;
-        uint8_t Reserved                : 5;
-    }Fields;
-    uint8_t Value;
-}SleepParams_t;
-
-/*!
- * \brief Represents the possible radio system error states
- */
-typedef union
-{
-    struct
-    {
-        uint8_t Rc64kCalib              : 1;                    //!< RC 64kHz oscillator calibration failed
-        uint8_t Rc13mCalib              : 1;                    //!< RC 13MHz oscillator calibration failed
-        uint8_t PllCalib                : 1;                    //!< PLL calibration failed
-        uint8_t AdcCalib                : 1;                    //!< ADC calibration failed
-        uint8_t ImgCalib                : 1;                    //!< Image calibration failed
-        uint8_t XoscStart               : 1;                    //!< XOSC oscillator failed to start
-        uint8_t PllLock                 : 1;                    //!< PLL lock failed
-        uint8_t                         : 1;                    //!< Buck converter failed to start
-        uint8_t PaRamp                  : 1;                    //!< PA ramp failed
-        uint8_t                         : 7;                    //!< Reserved
-    }Fields;
-    uint16_t Value;
-}RadioError_t;
-
-/*!
- * Radio hardware and global parameters
- */
-typedef struct SX126x_s
-{
-    Gpio_t        Reset;
-    Gpio_t        BUSY;
-    Gpio_t        DIO1;
-    Gpio_t        DIO2;
-    Gpio_t        DIO3;
-    Spi_t         Spi;
-    PacketParams_t PacketParams;
-    PacketStatus_t PacketStatus;
-    ModulationParams_t ModulationParams;
-}SX126x_t;
-
-/*!
- * Hardware IO IRQ callback function definition
- */
-typedef void ( DioIrqHandler )( void* context );
-
-/*!
- * SX126x definitions
- */
-
-/*!
- * \brief Provides the frequency of the chip running on the radio and the frequency step
- *
- * \remark These defines are used for computing the frequency divider to set the RF frequency
- */
-#define XTAL_FREQ                                   ( double )32000000
-#define FREQ_DIV                                    ( double )pow( 2.0, 25.0 )
-#define FREQ_STEP                                   ( double )( XTAL_FREQ / FREQ_DIV )
-
-#define RX_BUFFER_SIZE                              256
-
-/*!
- * \brief The radio callbacks structure
- * Holds function pointers to be called on radio interrupts
- */
-typedef struct
-{
-    void ( *txDone )( void );                       //!< Pointer to a function run on successful transmission
-    void ( *rxDone )( void );                       //!< Pointer to a function run on successful reception
-    void ( *rxPreambleDetect )( void );             //!< Pointer to a function run on successful Preamble detection
-    void ( *rxSyncWordDone )( void );               //!< Pointer to a function run on successful SyncWord reception
-    void ( *rxHeaderDone )( bool isOk );            //!< Pointer to a function run on successful Header reception
-    void ( *txTimeout )( void );                    //!< Pointer to a function run on transmission timeout
-    void ( *rxTimeout )( void );                    //!< Pointer to a function run on reception timeout
-    void ( *rxError )( IrqErrorCode_t errCode );    //!< Pointer to a function run on reception error
-    void ( *cadDone )( bool cadFlag );              //!< Pointer to a function run on channel activity detected
-}SX126xCallbacks_t;
-
-/*!
- * ============================================================================
- * Public functions prototypes
- * ============================================================================
- */
- 
-/*!
- * \brief Initializes the radio driver
- */
-void SX126xInit( DioIrqHandler dioIrq );
-
-/*!
- * \brief Gets the current Radio OperationMode variable
- *
- * \retval      RadioOperatingModes_t last operating mode
- */
-RadioOperatingModes_t SX126xGetOperatingMode( void ) SX126x_FUNC_LOCATION;
-
-/*!
- * \brief Sets/Updates the current Radio OperationMode variable.
- *
- * \remark WARNING: This function is only required to reflect the current radio
- *                  operating mode when processing interrupts.
- *
- * \param [in] mode           New operating mode
- */
-void SX126xSetOperatingMode( RadioOperatingModes_t mode );
-
-/*!
- * \brief Wakeup the radio if it is in Sleep mode and check that Busy is low
- */
-void SX126xCheckDeviceReady( void ) SX126x_FUNC_LOCATION;
-
-/*!
- * \brief Saves the payload to be send in the radio buffer
- *
- * \param [in]  payload       A pointer to the payload
- * \param [in]  size          The size of the payload
- */
-void SX126xSetPayload( uint8_t *payload, uint8_t size );
-
-/*!
- * \brief Reads the payload received. If the received payload is longer
- * than maxSize, then the method returns 1 and do not set size and payload.
- *
- * \param [out] payload       A pointer to a buffer into which the payload will be copied
- * \param [out] size          A pointer to the size of the payload received
- * \param [in]  maxSize       The maximal size allowed to copy into the buffer
- */
-uint8_t SX126xGetPayload( uint8_t *payload, uint8_t *size, uint8_t maxSize );
-
-/*!
- * \brief Sends a payload
- *
- * \param [in]  payload       A pointer to the payload to send
- * \param [in]  size          The size of the payload to send
- * \param [in]  timeout       The timeout for Tx operation
- */
-void SX126xSendPayload( uint8_t *payload, uint8_t size, uint32_t timeout );
-
-/*!
- * \brief Sets the Sync Word given by index used in GFSK
- *
- * \param [in]  syncWord      SyncWord bytes ( 8 bytes )
- *
- * \retval      status        [0: OK, 1: NOK]
- */
-uint8_t SX126xSetSyncWord( uint8_t *syncWord );
-
-/*!
- * \brief Sets the Initial value for the LFSR used for the CRC calculation
- *
- * \param [in]  seed          Initial LFSR value ( 2 bytes )
- *
- */
-void SX126xSetCrcSeed( uint16_t seed );
-
-/*!
- * \brief Sets the seed used for the CRC calculation
- *
- * \param [in]  seed          The seed value
- *
- */
-void SX126xSetCrcPolynomial( uint16_t polynomial );
-
-/*!
- * \brief Sets the Initial value of the LFSR used for the whitening in GFSK protocols
- *
- * \param [in]  seed          Initial LFSR value
- */
-void SX126xSetWhiteningSeed( uint16_t seed );
-
-/*!
- * \brief Gets a 32-bit random value generated by the radio
- *
- * \remark A valid packet type must have been configured with \ref SX126xSetPacketType
- *         before using this command.
- *
- * \remark The radio must be in reception mode before executing this function
- *         This code can potentially result in interrupt generation. It is the responsibility of
- *         the calling code to disable radio interrupts before calling this function,
- *         and re-enable them afterwards if necessary, or be certain that any interrupts
- *         generated during this process will not cause undesired side-effects in the software.
- *
- *         Please note that the random numbers produced by the generator do not have a uniform or Gaussian distribution. If
- *         uniformity is needed, perform appropriate software post-processing.
- *
- * \retval randomValue    32 bits random value
- */
-uint32_t SX126xGetRandom( void );
-
-/*!
- * \brief Sets the radio in sleep mode
- *
- * \param [in]  sleepConfig   The sleep configuration describing data
- *                            retention and RTC wake-up
- */
-void SX126xSetSleep( SleepParams_t sleepConfig );
-
-/*!
- * \brief Sets the radio in configuration mode
- *
- * \param [in]  mode          The standby mode to put the radio into
- */
-void SX126xSetStandby( RadioStandbyModes_t mode );
-
-/*!
- * \brief Sets the radio in FS mode
- */
-void SX126xSetFs( void );
-
-/*!
- * \brief Sets the xtal trimming capacitance
- */
-void SX126xSetXtalTrim( void );
-
-/*!
- * \brief Sets the radio in transmission mode
- *
- * \param [in]  timeout       Structure describing the transmission timeout value
- */
-void SX126xSetTx( uint32_t timeout );
-
-/*!
- * \brief Sets the radio in reception mode
- *
- * \param [in]  timeout       Structure describing the reception timeout value
- */
-void SX126xSetRx( uint32_t timeout ) SX126x_FUNC_LOCATION;
-
-/*!
- * \brief Sets the radio in reception mode with Boosted LNA gain
- *
- * \param [in]  timeout       Structure describing the reception timeout value
- */
-void SX126xSetRxBoosted( uint32_t timeout );
-
-/*!
- * \brief Sets the Rx duty cycle management parameters
- *
- * \param [in]  rxTime        Structure describing reception timeout value
- * \param [in]  sleepTime     Structure describing sleep timeout value
- */
-void SX126xSetRxDutyCycle( uint32_t rxTime, uint32_t sleepTime );
-
-/*!
- * \brief Sets the radio in CAD mode
- */
-void SX126xSetCad( void );
-
-/*!
- * \brief Sets the radio in continuous wave transmission mode
- */
-void SX126xSetTxContinuousWave( void );
-
-/*!
- * \brief Sets the radio in continuous preamble transmission mode
- */
-void SX126xSetTxInfinitePreamble( void );
-
-/*!
- * \brief Decide which interrupt will stop the internal radio rx timer.
- *
- * \param [in]  enable          [0: Timer stop after header/syncword detection
- *                               1: Timer stop after preamble detection]
- */
-void SX126xSetStopRxTimerOnPreambleDetect( bool enable );
-
-/*!
- * \brief Set the number of symbol the radio will wait to validate a reception
- *
- * \param [in]  SymbNum          number of LoRa symbols
- */
-void SX126xSetLoRaSymbNumTimeout( uint8_t SymbNum );
-
-/*!
- * \brief Sets the power regulators operating mode
- *
- * \param [in]  mode          [0: LDO, 1:DC_DC]
- */
-void SX126xSetRegulatorMode( RadioRegulatorMode_t mode );
-
-/*!
- * \brief Calibrates the given radio block
- *
- * \param [in]  calibParam    The description of blocks to be calibrated
- */
-void SX126xCalibrate( CalibrationParams_t calibParam );
-
-/*!
- * \brief Calibrates the Image rejection depending of the frequency
- *
- * \param [in]  freq    The operating frequency
- */
-void SX126xCalibrateImage( uint32_t freq );
-
-/*!
- * \brief Activate the extention of the timeout when long preamble is used
- *
- * \param [in]  enable      The radio will extend the timeout to cope with long preamble
- */
-void SX126xSetLongPreamble( uint8_t enable );
-
-/*!
- * \brief Sets the transmission parameters
- *
- * \param [in]  paDutyCycle     Duty Cycle for the PA
- * \param [in]  hpMax          0 for sx1261, 7 for sx1262
- * \param [in]  deviceSel       1 for sx1261, 0 for sx1262
- * \param [in]  paLut           0 for 14dBm LUT, 1 for 22dBm LUT
- */
-void SX126xSetPaConfig( uint8_t paDutyCycle, uint8_t hpMax, uint8_t deviceSel, uint8_t paLut );
-
-/*!
- * \brief Defines into which mode the chip goes after a TX / RX done
- *
- * \param [in]  fallbackMode    The mode in which the radio goes
- */
-void SX126xSetRxTxFallbackMode( uint8_t fallbackMode );
-
-/*!
- * \brief Write data to the radio memory
- *
- * \param [in]  address       The address of the first byte to write in the radio
- * \param [in]  buffer        The data to be written in radio's memory
- * \param [in]  size          The number of bytes to write in radio's memory
- */
-void SX126xWriteRegisters( uint16_t address, uint8_t *buffer, uint16_t size );
-
-/*!
- * \brief Read data from the radio memory
- *
- * \param [in]  address       The address of the first byte to read from the radio
- * \param [out] buffer        The buffer that holds data read from radio
- * \param [in]  size          The number of bytes to read from radio's memory
- */
-void SX126xReadRegisters( uint16_t address, uint8_t *buffer, uint16_t size );
-
-/*!
- * \brief Write data to the buffer holding the payload in the radio
- *
- * \param [in]  offset        The offset to start writing the payload
- * \param [in]  buffer        The data to be written (the payload)
- * \param [in]  size          The number of byte to be written
- */
-void SX126xWriteBuffer( uint8_t offset, uint8_t *buffer, uint8_t size );
-
-/*!
- * \brief Read data from the buffer holding the payload in the radio
- *
- * \param [in]  offset        The offset to start reading the payload
- * \param [out] buffer        A pointer to a buffer holding the data from the radio
- * \param [in]  size          The number of byte to be read
- */
-void SX126xReadBuffer( uint8_t offset, uint8_t *buffer, uint8_t size );
-
-/*!
- * \brief   Sets the IRQ mask and DIO masks
- *
- * \param [in]  irqMask       General IRQ mask
- * \param [in]  dio1Mask      DIO1 mask
- * \param [in]  dio2Mask      DIO2 mask
- * \param [in]  dio3Mask      DIO3 mask
- */
-void SX126xSetDioIrqParams( uint16_t irqMask, uint16_t dio1Mask, uint16_t dio2Mask, uint16_t dio3Mask ) SX126x_FUNC_LOCATION;
-
-/*!
- * \brief Returns the current IRQ status
- *
- * \retval      irqStatus     IRQ status
- */
-uint16_t SX126xGetIrqStatus( void );
-
-/*!
- * \brief Indicates if DIO2 is used to control an RF Switch
- *
- * \param [in] enable     true of false
- */
-void SX126xSetDio2AsRfSwitchCtrl( uint8_t enable );
-
-/*!
- * \brief Indicates if the Radio main clock is supplied from a tcxo
- *
- * \param [in] tcxoVoltage     voltage used to control the TCXO
- * \param [in] timeout         time given to the TCXO to go to 32MHz
- */
-void SX126xSetDio3AsTcxoCtrl( RadioTcxoCtrlVoltage_t tcxoVoltage, uint32_t timeout );
-
-/*!
- * \brief Sets the RF frequency
- *
- * \param [in]  frequency     RF frequency [Hz]
- */
-void SX126xSetRfFrequency( uint32_t frequency );
-
-/*!
- * \brief Sets the radio for the given protocol
- *
- * \param [in]  packetType    [PACKET_TYPE_GFSK, PACKET_TYPE_LORA]
- *
- * \remark This method has to be called before SetRfFrequency,
- *         SetModulationParams and SetPacketParams
- */
-void SX126xSetPacketType( RadioPacketTypes_t packetType );
-
-/*!
- * \brief Gets the current radio protocol
- *
- * \retval      packetType    [PACKET_TYPE_GFSK, PACKET_TYPE_LORA]
- */
-RadioPacketTypes_t SX126xGetPacketType( void );
-
-/*!
- * \brief Sets the transmission parameters
- *
- * \param [in]  power         RF output power [-18..13] dBm
- * \param [in]  rampTime      Transmission ramp up time
- */
-void SX126xSetTxParams( int8_t power, RadioRampTimes_t rampTime );
-
-/*!
- * \brief Set the modulation parameters
- *
- * \param [in]  modParams     A structure describing the modulation parameters
- */
-void SX126xSetModulationParams( ModulationParams_t *modParams );
-
-/*!
- * \brief Sets the packet parameters
- *
- * \param [in]  packetParams  A structure describing the packet parameters
- */
-void SX126xSetPacketParams( PacketParams_t *packetParams );
-
-/*!
- * \brief Sets the Channel Activity Detection (CAD) parameters
- *
- * \param [in]  cadSymbolNum   The number of symbol to use for CAD operations
- *                             [LORA_CAD_01_SYMBOL, LORA_CAD_02_SYMBOL,
- *                              LORA_CAD_04_SYMBOL, LORA_CAD_08_SYMBOL,
- *                              LORA_CAD_16_SYMBOL]
- * \param [in]  cadDetPeak     Limit for detection of SNR peak used in the CAD
- * \param [in]  cadDetMin      Set the minimum symbol recognition for CAD
- * \param [in]  cadExitMode    Operation to be done at the end of CAD action
- *                             [LORA_CAD_ONLY, LORA_CAD_RX, LORA_CAD_LBT]
- * \param [in]  cadTimeout     Defines the timeout value to abort the CAD activity
- */
-void SX126xSetCadParams( RadioLoRaCadSymbols_t cadSymbolNum, uint8_t cadDetPeak, uint8_t cadDetMin, RadioCadExitModes_t cadExitMode, uint32_t cadTimeout );
-
-/*!
- * \brief Sets the data buffer base address for transmission and reception
- *
- * \param [in]  txBaseAddress Transmission base address
- * \param [in]  rxBaseAddress Reception base address
- */
-void SX126xSetBufferBaseAddress( uint8_t txBaseAddress, uint8_t rxBaseAddress );
-
-/*!
- * \brief Gets the current radio status
- *
- * \retval      status        Radio status
- */
-RadioStatus_t SX126xGetStatus( void );
-
-/*!
- * \brief Returns the instantaneous RSSI value for the last packet received
- *
- * \retval      rssiInst      Instantaneous RSSI
- */
-int8_t SX126xGetRssiInst( void );
-
-/*!
- * \brief Gets the last received packet buffer status
- *
- * \param [out] payloadLength Last received packet payload length
- * \param [out] rxStartBuffer Last received packet buffer address pointer
- */
-void SX126xGetRxBufferStatus( uint8_t *payloadLength, uint8_t *rxStartBuffer );
-
-/*!
- * \brief Gets the last received packet payload length
- *
- * \param [out] pktStatus     A structure of packet status
- */
-void SX126xGetPacketStatus( PacketStatus_t *pktStatus );
-
-/*!
- * \brief Returns the possible system errors
- *
- * \retval sysErrors Value representing the possible sys failures
- */
-RadioError_t SX126xGetDeviceErrors( void );
-
-/*!
- * \brief Clear all the errors in the device
- */
-void SX126xClearDeviceErrors( void );
-
-/*!
- * \brief Clears the IRQs
- *
- * \param [in]  irq           IRQ(s) to be cleared
- */
-void SX126xClearIrqStatus( uint16_t irq );
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __SX126x_H__
diff --git a/sensors.c b/sensors.c
deleted file mode 100644
index 7256871..0000000
--- a/sensors.c
+++ /dev/null
@@ -1,73 +0,0 @@
-/**********************************************************************************************************************
-* DISCLAIMER
-* This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No 
-* other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all 
-* applicable laws, including copyright laws. 
-* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
-* THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MECHANTABILITY, 
-* FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM 
-* EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES 
-* SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
-* SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
-* Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of 
-* this software. By using this software, you agree to the additional terms and conditions found by accessing the 
-* following link:
-* http://www.renesas.com/disclaimer 
-*
-* Copyright (C) 2018-2019 Renesas Electronics Corporation. All rights reserved.    
-**********************************************************************************************************************/
-/**********************************************************************************************************************
-* File Name    : sensors.c
-* Description  : Sensor APIs
-**********************************************************************************************************************/
-#include <stdint.h>
-#include "error.h"
-#include "sensors.h"
-#include "hs300x.h"
-#include "delay.h"
-
-/**************************************************************************//**
-* @brief Supply power to sensors
-*
-* @retval       
-******************************************************************************/
-void sensors_on(void)
-{
-    /* Do nothing */
-}
-
-/**************************************************************************//**
-* @brief Initialize sensors
-*
-* @retval       
-******************************************************************************/
-int sensors_init(void)
-{
-  return 0;
-}
-
-int sensors_read_group1(sensor_group1_t * sensor)
-{
-    int ret = 0;
-    ret = hs300x_measurement_request();
-    APP_ERR_RETURN(ret);
-
-    DelayMs( 30 ); /* Wait for the measurement ready */
- 
-    /* This function stores the values in the temperature and humidity of the sensor structure. */
-    /* To avoid a build warning, we use "((uint32_t)sensor) +2" instead of "&sensor->temperature". */
-    ret = hs300x_data_fetch( (hs300x_data_t *)( ((uint32_t)sensor) +2 ) );
-    APP_ERR_RETURN(ret);
-
-    return ret;
-}
-
-int sensors_read_group2(sensor_group2_t * sensor)
-{
-    return 0;
-}
-
-int sensors_read_group3(sensor_group3_t * sensor)
-{
-    return 0;
-}
diff --git a/sensors.h b/sensors.h
deleted file mode 100644
index 33ffe9d..0000000
--- a/sensors.h
+++ /dev/null
@@ -1,87 +0,0 @@
-/**********************************************************************************************************************
-* DISCLAIMER
-* This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
-* other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
-* applicable laws, including copyright laws.
-* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
-* THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MECHANTABILITY,
-* FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
-* EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
-* SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
-* SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
-* Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
-* this software. By using this software, you agree to the additional terms and conditions found by accessing the
-* following link:
-* http://www.renesas.com/disclaimer
-*
-* Copyright (C) 2018-2019 Renesas Electronics Corporation. All rights reserved.
-**********************************************************************************************************************/
-/**********************************************************************************************************************
-* File Name    : sensors.h
-* Description  : Sensor API definitions
-**********************************************************************************************************************/
-
-#ifndef SENSORS_H_
-#define SENSORS_H_
-
-#include "hs300x.h"
-
-/* Sensor data updated on 3/7/2020 */
-typedef struct __attribute__ ((packed)) sensor_group1
-{
-    uint16_t    batteryLevel;
-    uint16_t    temperature;
-    uint16_t    humidity;
-    uint16_t    temperature2;
-    uint16_t    humidity2;
-    uint8_t     data_num;
-} sensor_group1_t;
-
-typedef struct __attribute__ ((packed)) sensor_group2
-{
-    uint16_t    co2;
-    uint16_t    voc;
-    uint8_t     pH_lux;
-    uint16_t    ec;
-    uint8_t     data_num;
-} sensor_group2_t;
-
-typedef struct __attribute__ ((packed)) sensor_group3
-{
-    uint16_t    pressure;
-    uint8_t     flow;
-    uint32_t    reserve;
-    uint8_t     reserve2;
-    uint8_t     data_num;
-} sensor_group3_t;
-
-typedef struct __attribute__ ((packed)) sensor_group_all
-{
-    sensor_group1_t grp1;
-    sensor_group2_t grp2;
-    sensor_group3_t grp3;
-} sensor_group_all_t;
-
-typedef struct __attribute__ ((packed)) sensor_val_rx
-{
-  uint16_t    header;
-  uint16_t    batteryLevel;
-  uint16_t    temperature;
-  uint16_t    humidity;
-  uint16_t    temperature2;
-  uint16_t    humidity2;
-  uint16_t    co2;
-  uint16_t    voc;
-  uint8_t     pH_lux;
-  uint16_t    ec;
-  uint16_t    pressure;
-  uint8_t     flow;
-}sensor_val_rx_t;
-
-void sensors_on(void);
-int sensors_init(void);
-int sensors_read_group1(sensor_group1_t * sensor);
-int sensors_read_group2(sensor_group2_t * sensor);
-int sensors_read_group3(sensor_group3_t * sensor);
-
-#endif /* SENSORS_H_ */
diff --git a/sys_lpm.c b/sys_lpm.c
deleted file mode 100644
index 549fd03..0000000
--- a/sys_lpm.c
+++ /dev/null
@@ -1,125 +0,0 @@
-/**********************************************************************************************************************
-* DISCLAIMER
-* This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No 
-* other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all 
-* applicable laws, including copyright laws. 
-* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
-* THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MECHANTABILITY, 
-* FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM 
-* EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES 
-* SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
-* SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
-* Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of 
-* this software. By using this software, you agree to the additional terms and conditions found by accessing the 
-* following link:
-* http://www.renesas.com/disclaimer 
-*
-* Copyright (C) 2018-2019 Renesas Electronics Corporation. All rights reserved.    
-**********************************************************************************************************************/
-/**********************************************************************************************************************
-* File Name    : sys_lpm.c
-* Description  : Low power mode control
-**********************************************************************************************************************/
-#include "r_system_api.h"
-#include "r_lpm_api.h"
-#include "error.h"
-
-/**************************************************************************//**
-* @brief Setup the MCU low power mode
-*
-* @retval       
-******************************************************************************/
-void system_lpm_prepare(void)
-{
-    int err = 0;
-
-    /* Select Sub-osc clock as the system clock source */
-    err = R_SYS_SystemClockSOSCSet();
-    APP_ERR_HANDLER(err);
-    
-    /* Change peripheral clock division to avoid the restriction of RTC module clock */
-    err = R_SYS_SystemClockDividerSet(SYSTEM_CLOCK_DIV_1, SYSTEM_CLOCK_DIV_1);
-    
-    APP_ERR_HANDLER(err);
-    /* Stop MOSC oscillation */
-    err = R_SYS_MainOscSpeedClockStop();
-    APP_ERR_HANDLER(err);
-    while(0x08 == (0x08 & R_SYS_OscStabilizationFlagGet()));
-
-    /* Transit from NORMAL mode to VBB mode */
-    err = R_LPM_BackBiasModeEntry();
-    APP_ERR_HANDLER(err);
-}
-
-/**************************************************************************//**
-* @brief Enter the MCU low power mode
-*
-* @retval       
-******************************************************************************/
-__attribute__ ((section(".ramfunc"))) void system_lpm_enter(void)
-{
-    int err = 0;
-    st_lpm_sstby_cfg_t sstby_cfg;
-
-    /* SSTBY mode set up */
-    sstby_cfg.power_supply = LPM_OPE_TO_SSTBY_MINPWON_VBB;  /* Transit from ALLPWON OPE to MINPWON SSTBY */
-    sstby_cfg.speed = LPM_SSTBY_SPEED_MODE_OFF;
-
-    /* Wakeup interrupt : RTC Alarm, RTC Periodic IRQs, and SX1261 DIO1 (Radio IRQ) */
-    sstby_cfg.wup       = LPM_SSTBY_WUP_RTCALM|LPM_SSTBY_WUP_RTCPRD;
-    err = R_LPM_SSTBYModeSetup(&sstby_cfg);
-    APP_ERR_HANDLER(err);
-
-    /* Entry SSTBY mode */
-    R_LPM_SSTBYModeEntry();
-}
-
-/**************************************************************************//**
-* @brief Exit the MCU low power mode      
-*
-* @retval       
-******************************************************************************/
-__attribute__ ((section(".ramfunc"))) void system_lpm_exit(void)
-{  
-#if !defined( USE_RTC )
-    int err = 0;
-    
-    /* Transit Power supply mode to EXFPWON to power off Flash power domain(ISO3) */
-    err = R_LPM_PowerSupplyModeExfpwonSet();
-    APP_ERR_HANDLER(err);
-
-    /* Transit Power supply mode to ALLPWON before starting code fetch from ROM (Power on Flash power domain(ISO3)) */
-    err = R_LPM_PowerSupplyModeAllpwonSet();
-    APP_ERR_HANDLER(err);
-#endif
-}
-
-/**************************************************************************//**
-* @brief Exit the MCU low power mode
-*
-* @retval
-******************************************************************************/
-__attribute__ ((section(".ramfunc"))) void system_lpm_restore(void)
-{
-    int err = 0;
-
-    /* Transit from VBB mode to NORMAL mode */
-    R_LPM_BackBiasModeExit();
-  
-    /* Set the high-speed mode */
-    err = R_SYS_HighSpeedModeSet();
-    APP_ERR_HANDLER(err);
-
-    /* Start MOSC oscillation */
-    R_SYS_MainOscSpeedClockStart();
-    while(0x00 == (0x08 & R_SYS_OscStabilizationFlagGet()));
-  
-    /* Change the system clock to MOSC */
-    err = R_SYS_SystemClockMOSCSet();
-    APP_ERR_HANDLER(err);
-    
-    /* Change peripheral clock division */
-    err = R_SYS_SystemClockDividerSet(SYSTEM_CLOCK_DIV_1, SYSTEM_CLOCK_DIV_64);
-    APP_ERR_HANDLER(err);
-}
-
diff --git a/sys_lpm.h b/sys_lpm.h
deleted file mode 100644
index c99bfb6..0000000
--- a/sys_lpm.h
+++ /dev/null
@@ -1,31 +0,0 @@
-/**********************************************************************************************************************
-* DISCLAIMER
-* This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
-* other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
-* applicable laws, including copyright laws.
-* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
-* THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MECHANTABILITY,
-* FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
-* EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
-* SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
-* SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
-* Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
-* this software. By using this software, you agree to the additional terms and conditions found by accessing the
-* following link:
-* http://www.renesas.com/disclaimer
-*
-* Copyright (C) 2018-2019 Renesas Electronics Corporation. All rights reserved.
-**********************************************************************************************************************/
-/**********************************************************************************************************************
-* File Name    : sys_lpm.h
-* Description  : Low power mode control function declaration
-**********************************************************************************************************************/
-
-#ifndef SYS_LPM_H_
-#define SYS_LPM_H_
-
-void system_lpm_prepare(void);
-void system_lpm_enter(void);
-void system_lpm_exit(void);
-void system_lpm_restore(void);
-#endif /* SYS_LPM_H_ */
diff --git a/system/adc.c b/system/adc.c
deleted file mode 100644
index 0d3384e..0000000
--- a/system/adc.c
+++ /dev/null
@@ -1,57 +0,0 @@
-/*!
- * \file      adc.c
- *
- * \brief     Generic ADC driver implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#include <stdbool.h>
-#include "adc-board.h"
-
-/*!
- * Flag to indicates if the ADC is initialized
- */
-static bool AdcInitialized = false;
-
-void AdcInit( Adc_t *obj, PinNames adcInput )
-{
-    if( AdcInitialized == false )
-    {
-        AdcInitialized = true;
-
-        AdcMcuInit( obj, adcInput );
-        AdcMcuConfig( );
-    }
-}
-
-void AdcDeInit( Adc_t *obj )
-{
-    AdcInitialized = false;
-}
-
-uint16_t AdcReadChannel( Adc_t *obj, uint32_t channel )
-{
-    if( AdcInitialized == true )
-    {
-        return AdcMcuReadChannel( obj, channel );
-    }
-    else
-    {
-        return 0;
-    }
-}
diff --git a/system/adc.h b/system/adc.h
deleted file mode 100644
index cf1fd4d..0000000
--- a/system/adc.h
+++ /dev/null
@@ -1,70 +0,0 @@
-/*!
- * \file      adc.h
- *
- * \brief     Generic ADC driver implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __ADC_H__
-#define __ADC_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-#include "gpio.h"
-
-/*!
- * ADC object type definition
- */
-typedef struct
-{
-    Gpio_t AdcInput;
-}Adc_t;
-
-/*!
- * \brief Initializes the ADC input
- *
- * \param [IN] obj  ADC object
- * \param [IN] scl  ADC input pin name to be used
- */
-void AdcInit( Adc_t *obj, PinNames adcInput );
-
-/*!
- * \brief DeInitializes the ADC
- *
- * \param [IN] obj  ADC object
- */
-void AdcDeInit( Adc_t *obj );
-
-/*!
- * \brief Read the analogue voltage value
- *
- * \param [IN] obj  ADC object
- * \param [IN] channel ADC channel
- * \retval value    Analogue pin value
- */
-uint16_t AdcReadChannel( Adc_t *obj, uint32_t channel );
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __ADC_H__
diff --git a/system/crypto/aes.c b/system/crypto/aes.c
deleted file mode 100644
index 387478f..0000000
--- a/system/crypto/aes.c
+++ /dev/null
@@ -1,933 +0,0 @@
-/*
- ---------------------------------------------------------------------------
- Copyright (c) 1998-2008, Brian Gladman, Worcester, UK. All rights reserved.
-
- LICENSE TERMS
-
- The redistribution and use of this software (with or without changes)
- is allowed without the payment of fees or royalties provided that:
-
-  1. source code distributions include the above copyright notice, this
-     list of conditions and the following disclaimer;
-
-  2. binary distributions include the above copyright notice, this list
-     of conditions and the following disclaimer in their documentation;
-
-  3. the name of the copyright holder is not used to endorse products
-     built using this software without specific written permission.
-
- DISCLAIMER
-
- This software is provided 'as is' with no explicit or implied warranties
- in respect of its properties, including, but not limited to, correctness
- and/or fitness for purpose.
- ---------------------------------------------------------------------------
- Issue 09/09/2006
-
- This is an AES implementation that uses only 8-bit byte operations on the
- cipher state (there are options to use 32-bit types if available).
-
- The combination of mix columns and byte substitution used here is based on
- that developed by Karl Malbrain. His contribution is acknowledged.
- */
-/*
-    (C) 2017 Renesas Electronics Corporation.
-     This software is released under the terms and conditions described in LICENSE_RENESAS.TXT included in the project.
-*/
-
-/* define if you have a fast memcpy function on your system */
-#if 0
-#  define HAVE_MEMCPY
-#  include <string.h>
-#  if defined( _MSC_VER )
-#    include <intrin.h>
-#    pragma intrinsic( memcpy )
-#  endif
-#endif
-
-#include <stdlib.h>
-#include <string.h>
-
-/* define if you have fast 32-bit types on your system */
-#if 0
-#  define HAVE_UINT_32T
-#endif
-
-/* define if you don't want any tables */
-#if 1
-#  define USE_TABLES
-#endif
-
-/*  On Intel Core 2 duo VERSION_1 is faster */
-
-/* alternative versions (test for performance on your system) */
-#if 1
-#  define VERSION_1
-#endif
-
-#include "aes.h"
-
-#if defined( HAVE_UINT_32T )
-  typedef unsigned long uint_32t;
-#endif
-
-/* functions for finite field multiplication in the AES Galois field    */
-
-#define WPOLY   0x011b
-#define BPOLY     0x1b
-#define DPOLY   0x008d
-
-#define f1(x)   (x)
-#define f2(x)   ((x << 1) ^ (((x >> 7) & 1) * WPOLY))
-#define f4(x)   ((x << 2) ^ (((x >> 6) & 1) * WPOLY) ^ (((x >> 6) & 2) * WPOLY))
-#define f8(x)   ((x << 3) ^ (((x >> 5) & 1) * WPOLY) ^ (((x >> 5) & 2) * WPOLY) \
-                          ^ (((x >> 5) & 4) * WPOLY))
-#define d2(x)   (((x) >> 1) ^ ((x) & 1 ? DPOLY : 0))
-
-#define f3(x)   (f2(x) ^ x)
-#define f9(x)   (f8(x) ^ x)
-#define fb(x)   (f8(x) ^ f2(x) ^ x)
-#define fd(x)   (f8(x) ^ f4(x) ^ x)
-#define fe(x)   (f8(x) ^ f4(x) ^ f2(x))
-
-#if defined( USE_TABLES )
-
-#define sb_data(w) {    /* S Box data values */                            \
-    w(0x63), w(0x7c), w(0x77), w(0x7b), w(0xf2), w(0x6b), w(0x6f), w(0xc5),\
-    w(0x30), w(0x01), w(0x67), w(0x2b), w(0xfe), w(0xd7), w(0xab), w(0x76),\
-    w(0xca), w(0x82), w(0xc9), w(0x7d), w(0xfa), w(0x59), w(0x47), w(0xf0),\
-    w(0xad), w(0xd4), w(0xa2), w(0xaf), w(0x9c), w(0xa4), w(0x72), w(0xc0),\
-    w(0xb7), w(0xfd), w(0x93), w(0x26), w(0x36), w(0x3f), w(0xf7), w(0xcc),\
-    w(0x34), w(0xa5), w(0xe5), w(0xf1), w(0x71), w(0xd8), w(0x31), w(0x15),\
-    w(0x04), w(0xc7), w(0x23), w(0xc3), w(0x18), w(0x96), w(0x05), w(0x9a),\
-    w(0x07), w(0x12), w(0x80), w(0xe2), w(0xeb), w(0x27), w(0xb2), w(0x75),\
-    w(0x09), w(0x83), w(0x2c), w(0x1a), w(0x1b), w(0x6e), w(0x5a), w(0xa0),\
-    w(0x52), w(0x3b), w(0xd6), w(0xb3), w(0x29), w(0xe3), w(0x2f), w(0x84),\
-    w(0x53), w(0xd1), w(0x00), w(0xed), w(0x20), w(0xfc), w(0xb1), w(0x5b),\
-    w(0x6a), w(0xcb), w(0xbe), w(0x39), w(0x4a), w(0x4c), w(0x58), w(0xcf),\
-    w(0xd0), w(0xef), w(0xaa), w(0xfb), w(0x43), w(0x4d), w(0x33), w(0x85),\
-    w(0x45), w(0xf9), w(0x02), w(0x7f), w(0x50), w(0x3c), w(0x9f), w(0xa8),\
-    w(0x51), w(0xa3), w(0x40), w(0x8f), w(0x92), w(0x9d), w(0x38), w(0xf5),\
-    w(0xbc), w(0xb6), w(0xda), w(0x21), w(0x10), w(0xff), w(0xf3), w(0xd2),\
-    w(0xcd), w(0x0c), w(0x13), w(0xec), w(0x5f), w(0x97), w(0x44), w(0x17),\
-    w(0xc4), w(0xa7), w(0x7e), w(0x3d), w(0x64), w(0x5d), w(0x19), w(0x73),\
-    w(0x60), w(0x81), w(0x4f), w(0xdc), w(0x22), w(0x2a), w(0x90), w(0x88),\
-    w(0x46), w(0xee), w(0xb8), w(0x14), w(0xde), w(0x5e), w(0x0b), w(0xdb),\
-    w(0xe0), w(0x32), w(0x3a), w(0x0a), w(0x49), w(0x06), w(0x24), w(0x5c),\
-    w(0xc2), w(0xd3), w(0xac), w(0x62), w(0x91), w(0x95), w(0xe4), w(0x79),\
-    w(0xe7), w(0xc8), w(0x37), w(0x6d), w(0x8d), w(0xd5), w(0x4e), w(0xa9),\
-    w(0x6c), w(0x56), w(0xf4), w(0xea), w(0x65), w(0x7a), w(0xae), w(0x08),\
-    w(0xba), w(0x78), w(0x25), w(0x2e), w(0x1c), w(0xa6), w(0xb4), w(0xc6),\
-    w(0xe8), w(0xdd), w(0x74), w(0x1f), w(0x4b), w(0xbd), w(0x8b), w(0x8a),\
-    w(0x70), w(0x3e), w(0xb5), w(0x66), w(0x48), w(0x03), w(0xf6), w(0x0e),\
-    w(0x61), w(0x35), w(0x57), w(0xb9), w(0x86), w(0xc1), w(0x1d), w(0x9e),\
-    w(0xe1), w(0xf8), w(0x98), w(0x11), w(0x69), w(0xd9), w(0x8e), w(0x94),\
-    w(0x9b), w(0x1e), w(0x87), w(0xe9), w(0xce), w(0x55), w(0x28), w(0xdf),\
-    w(0x8c), w(0xa1), w(0x89), w(0x0d), w(0xbf), w(0xe6), w(0x42), w(0x68),\
-    w(0x41), w(0x99), w(0x2d), w(0x0f), w(0xb0), w(0x54), w(0xbb), w(0x16) }
-
-#define isb_data(w) {   /* inverse S Box data values */                    \
-    w(0x52), w(0x09), w(0x6a), w(0xd5), w(0x30), w(0x36), w(0xa5), w(0x38),\
-    w(0xbf), w(0x40), w(0xa3), w(0x9e), w(0x81), w(0xf3), w(0xd7), w(0xfb),\
-    w(0x7c), w(0xe3), w(0x39), w(0x82), w(0x9b), w(0x2f), w(0xff), w(0x87),\
-    w(0x34), w(0x8e), w(0x43), w(0x44), w(0xc4), w(0xde), w(0xe9), w(0xcb),\
-    w(0x54), w(0x7b), w(0x94), w(0x32), w(0xa6), w(0xc2), w(0x23), w(0x3d),\
-    w(0xee), w(0x4c), w(0x95), w(0x0b), w(0x42), w(0xfa), w(0xc3), w(0x4e),\
-    w(0x08), w(0x2e), w(0xa1), w(0x66), w(0x28), w(0xd9), w(0x24), w(0xb2),\
-    w(0x76), w(0x5b), w(0xa2), w(0x49), w(0x6d), w(0x8b), w(0xd1), w(0x25),\
-    w(0x72), w(0xf8), w(0xf6), w(0x64), w(0x86), w(0x68), w(0x98), w(0x16),\
-    w(0xd4), w(0xa4), w(0x5c), w(0xcc), w(0x5d), w(0x65), w(0xb6), w(0x92),\
-    w(0x6c), w(0x70), w(0x48), w(0x50), w(0xfd), w(0xed), w(0xb9), w(0xda),\
-    w(0x5e), w(0x15), w(0x46), w(0x57), w(0xa7), w(0x8d), w(0x9d), w(0x84),\
-    w(0x90), w(0xd8), w(0xab), w(0x00), w(0x8c), w(0xbc), w(0xd3), w(0x0a),\
-    w(0xf7), w(0xe4), w(0x58), w(0x05), w(0xb8), w(0xb3), w(0x45), w(0x06),\
-    w(0xd0), w(0x2c), w(0x1e), w(0x8f), w(0xca), w(0x3f), w(0x0f), w(0x02),\
-    w(0xc1), w(0xaf), w(0xbd), w(0x03), w(0x01), w(0x13), w(0x8a), w(0x6b),\
-    w(0x3a), w(0x91), w(0x11), w(0x41), w(0x4f), w(0x67), w(0xdc), w(0xea),\
-    w(0x97), w(0xf2), w(0xcf), w(0xce), w(0xf0), w(0xb4), w(0xe6), w(0x73),\
-    w(0x96), w(0xac), w(0x74), w(0x22), w(0xe7), w(0xad), w(0x35), w(0x85),\
-    w(0xe2), w(0xf9), w(0x37), w(0xe8), w(0x1c), w(0x75), w(0xdf), w(0x6e),\
-    w(0x47), w(0xf1), w(0x1a), w(0x71), w(0x1d), w(0x29), w(0xc5), w(0x89),\
-    w(0x6f), w(0xb7), w(0x62), w(0x0e), w(0xaa), w(0x18), w(0xbe), w(0x1b),\
-    w(0xfc), w(0x56), w(0x3e), w(0x4b), w(0xc6), w(0xd2), w(0x79), w(0x20),\
-    w(0x9a), w(0xdb), w(0xc0), w(0xfe), w(0x78), w(0xcd), w(0x5a), w(0xf4),\
-    w(0x1f), w(0xdd), w(0xa8), w(0x33), w(0x88), w(0x07), w(0xc7), w(0x31),\
-    w(0xb1), w(0x12), w(0x10), w(0x59), w(0x27), w(0x80), w(0xec), w(0x5f),\
-    w(0x60), w(0x51), w(0x7f), w(0xa9), w(0x19), w(0xb5), w(0x4a), w(0x0d),\
-    w(0x2d), w(0xe5), w(0x7a), w(0x9f), w(0x93), w(0xc9), w(0x9c), w(0xef),\
-    w(0xa0), w(0xe0), w(0x3b), w(0x4d), w(0xae), w(0x2a), w(0xf5), w(0xb0),\
-    w(0xc8), w(0xeb), w(0xbb), w(0x3c), w(0x83), w(0x53), w(0x99), w(0x61),\
-    w(0x17), w(0x2b), w(0x04), w(0x7e), w(0xba), w(0x77), w(0xd6), w(0x26),\
-    w(0xe1), w(0x69), w(0x14), w(0x63), w(0x55), w(0x21), w(0x0c), w(0x7d) }
-
-#define mm_data(w) {    /* basic data for forming finite field tables */   \
-    w(0x00), w(0x01), w(0x02), w(0x03), w(0x04), w(0x05), w(0x06), w(0x07),\
-    w(0x08), w(0x09), w(0x0a), w(0x0b), w(0x0c), w(0x0d), w(0x0e), w(0x0f),\
-    w(0x10), w(0x11), w(0x12), w(0x13), w(0x14), w(0x15), w(0x16), w(0x17),\
-    w(0x18), w(0x19), w(0x1a), w(0x1b), w(0x1c), w(0x1d), w(0x1e), w(0x1f),\
-    w(0x20), w(0x21), w(0x22), w(0x23), w(0x24), w(0x25), w(0x26), w(0x27),\
-    w(0x28), w(0x29), w(0x2a), w(0x2b), w(0x2c), w(0x2d), w(0x2e), w(0x2f),\
-    w(0x30), w(0x31), w(0x32), w(0x33), w(0x34), w(0x35), w(0x36), w(0x37),\
-    w(0x38), w(0x39), w(0x3a), w(0x3b), w(0x3c), w(0x3d), w(0x3e), w(0x3f),\
-    w(0x40), w(0x41), w(0x42), w(0x43), w(0x44), w(0x45), w(0x46), w(0x47),\
-    w(0x48), w(0x49), w(0x4a), w(0x4b), w(0x4c), w(0x4d), w(0x4e), w(0x4f),\
-    w(0x50), w(0x51), w(0x52), w(0x53), w(0x54), w(0x55), w(0x56), w(0x57),\
-    w(0x58), w(0x59), w(0x5a), w(0x5b), w(0x5c), w(0x5d), w(0x5e), w(0x5f),\
-    w(0x60), w(0x61), w(0x62), w(0x63), w(0x64), w(0x65), w(0x66), w(0x67),\
-    w(0x68), w(0x69), w(0x6a), w(0x6b), w(0x6c), w(0x6d), w(0x6e), w(0x6f),\
-    w(0x70), w(0x71), w(0x72), w(0x73), w(0x74), w(0x75), w(0x76), w(0x77),\
-    w(0x78), w(0x79), w(0x7a), w(0x7b), w(0x7c), w(0x7d), w(0x7e), w(0x7f),\
-    w(0x80), w(0x81), w(0x82), w(0x83), w(0x84), w(0x85), w(0x86), w(0x87),\
-    w(0x88), w(0x89), w(0x8a), w(0x8b), w(0x8c), w(0x8d), w(0x8e), w(0x8f),\
-    w(0x90), w(0x91), w(0x92), w(0x93), w(0x94), w(0x95), w(0x96), w(0x97),\
-    w(0x98), w(0x99), w(0x9a), w(0x9b), w(0x9c), w(0x9d), w(0x9e), w(0x9f),\
-    w(0xa0), w(0xa1), w(0xa2), w(0xa3), w(0xa4), w(0xa5), w(0xa6), w(0xa7),\
-    w(0xa8), w(0xa9), w(0xaa), w(0xab), w(0xac), w(0xad), w(0xae), w(0xaf),\
-    w(0xb0), w(0xb1), w(0xb2), w(0xb3), w(0xb4), w(0xb5), w(0xb6), w(0xb7),\
-    w(0xb8), w(0xb9), w(0xba), w(0xbb), w(0xbc), w(0xbd), w(0xbe), w(0xbf),\
-    w(0xc0), w(0xc1), w(0xc2), w(0xc3), w(0xc4), w(0xc5), w(0xc6), w(0xc7),\
-    w(0xc8), w(0xc9), w(0xca), w(0xcb), w(0xcc), w(0xcd), w(0xce), w(0xcf),\
-    w(0xd0), w(0xd1), w(0xd2), w(0xd3), w(0xd4), w(0xd5), w(0xd6), w(0xd7),\
-    w(0xd8), w(0xd9), w(0xda), w(0xdb), w(0xdc), w(0xdd), w(0xde), w(0xdf),\
-    w(0xe0), w(0xe1), w(0xe2), w(0xe3), w(0xe4), w(0xe5), w(0xe6), w(0xe7),\
-    w(0xe8), w(0xe9), w(0xea), w(0xeb), w(0xec), w(0xed), w(0xee), w(0xef),\
-    w(0xf0), w(0xf1), w(0xf2), w(0xf3), w(0xf4), w(0xf5), w(0xf6), w(0xf7),\
-    w(0xf8), w(0xf9), w(0xfa), w(0xfb), w(0xfc), w(0xfd), w(0xfe), w(0xff) }
-
-static const uint8_t sbox[256]  =  sb_data(f1);
-static const uint8_t isbox[256] = isb_data(f1);
-
-static const uint8_t gfm2_sbox[256] = sb_data(f2);
-static const uint8_t gfm3_sbox[256] = sb_data(f3);
-
-static const uint8_t gfmul_9[256] = mm_data(f9);
-static const uint8_t gfmul_b[256] = mm_data(fb);
-static const uint8_t gfmul_d[256] = mm_data(fd);
-static const uint8_t gfmul_e[256] = mm_data(fe);
-
-#define s_box(x)     sbox[(x)]
-#define is_box(x)    isbox[(x)]
-#define gfm2_sb(x)   gfm2_sbox[(x)]
-#define gfm3_sb(x)   gfm3_sbox[(x)]
-#define gfm_9(x)     gfmul_9[(x)]
-#define gfm_b(x)     gfmul_b[(x)]
-#define gfm_d(x)     gfmul_d[(x)]
-#define gfm_e(x)     gfmul_e[(x)]
-
-#else
-
-/* this is the high bit of x right shifted by 1 */
-/* position. Since the starting polynomial has  */
-/* 9 bits (0x11b), this right shift keeps the   */
-/* values of all top bits within a byte         */
-
-static uint8_t hibit(const uint8_t x)
-{   uint8_t r = (uint8_t)((x >> 1) | (x >> 2));
-
-    r |= (r >> 2);
-    r |= (r >> 4);
-    return (r + 1) >> 1;
-}
-
-/* return the inverse of the finite field element x */
-
-static uint8_t gf_inv(const uint8_t x)
-{   uint8_t p1 = x, p2 = BPOLY, n1 = hibit(x), n2 = 0x80, v1 = 1, v2 = 0;
-
-    if(x < 2) 
-        return x;
-
-    for( ; ; )
-    {
-        if(n1)
-            while(n2 >= n1)             /* divide polynomial p2 by p1    */
-            {
-                n2 /= n1;               /* shift smaller polynomial left */ 
-                p2 ^= (p1 * n2) & 0xff; /* and remove from larger one    */
-                v2 ^= (v1 * n2);        /* shift accumulated value and   */ 
-                n2 = hibit(p2);         /* add into result               */
-            }
-        else
-            return v1;
-
-        if(n2)                          /* repeat with values swapped    */ 
-            while(n1 >= n2)
-            {
-                n1 /= n2; 
-                p1 ^= p2 * n1; 
-                v1 ^= v2 * n1; 
-                n1 = hibit(p1);
-            }
-        else
-            return v2;
-    }
-}
-
-/* The forward and inverse affine transformations used in the S-box */
-uint8_t fwd_affine(const uint8_t x)
-{   
-#if defined( HAVE_UINT_32T )
-    uint_32t w = x;
-    w ^= (w << 1) ^ (w << 2) ^ (w << 3) ^ (w << 4);
-    return 0x63 ^ ((w ^ (w >> 8)) & 0xff);
-#else
-    return 0x63 ^ x ^ (x << 1) ^ (x << 2) ^ (x << 3) ^ (x << 4) 
-                    ^ (x >> 7) ^ (x >> 6) ^ (x >> 5) ^ (x >> 4);
-#endif
-}
-
-uint8_t inv_affine(const uint8_t x)
-{
-#if defined( HAVE_UINT_32T )
-    uint_32t w = x;
-    w = (w << 1) ^ (w << 3) ^ (w << 6);
-    return 0x05 ^ ((w ^ (w >> 8)) & 0xff);
-#else
-    return 0x05 ^ (x << 1) ^ (x << 3) ^ (x << 6) 
-                ^ (x >> 7) ^ (x >> 5) ^ (x >> 2);
-#endif
-}
-
-#define s_box(x)   fwd_affine(gf_inv(x))
-#define is_box(x)  gf_inv(inv_affine(x))
-#define gfm2_sb(x) f2(s_box(x))
-#define gfm3_sb(x) f3(s_box(x))
-#define gfm_9(x)   f9(x)
-#define gfm_b(x)   fb(x)
-#define gfm_d(x)   fd(x)
-#define gfm_e(x)   fe(x)
-
-#endif
-
-#if defined( HAVE_MEMCPY )
-#  define block_copy_nn(d, s, l)    memcpy(d, s, l)
-#  define block_copy(d, s)          memcpy(d, s, N_BLOCK)
-#else
-#  define block_copy_nn(d, s, l)    copy_block_nn(d, s, l)
-#  define block_copy(d, s)          copy_block(d, s)
-#endif
-
-static void copy_block( void *d, const void *s )
-{
-#if defined( HAVE_UINT_32T )
-    ((uint_32t*)d)[ 0] = ((uint_32t*)s)[ 0];
-    ((uint_32t*)d)[ 1] = ((uint_32t*)s)[ 1];
-    ((uint_32t*)d)[ 2] = ((uint_32t*)s)[ 2];
-    ((uint_32t*)d)[ 3] = ((uint_32t*)s)[ 3];
-#else
-    ((uint8_t*)d)[ 0] = ((uint8_t*)s)[ 0];
-    ((uint8_t*)d)[ 1] = ((uint8_t*)s)[ 1];
-    ((uint8_t*)d)[ 2] = ((uint8_t*)s)[ 2];
-    ((uint8_t*)d)[ 3] = ((uint8_t*)s)[ 3];
-    ((uint8_t*)d)[ 4] = ((uint8_t*)s)[ 4];
-    ((uint8_t*)d)[ 5] = ((uint8_t*)s)[ 5];
-    ((uint8_t*)d)[ 6] = ((uint8_t*)s)[ 6];
-    ((uint8_t*)d)[ 7] = ((uint8_t*)s)[ 7];
-    ((uint8_t*)d)[ 8] = ((uint8_t*)s)[ 8];
-    ((uint8_t*)d)[ 9] = ((uint8_t*)s)[ 9];
-    ((uint8_t*)d)[10] = ((uint8_t*)s)[10];
-    ((uint8_t*)d)[11] = ((uint8_t*)s)[11];
-    ((uint8_t*)d)[12] = ((uint8_t*)s)[12];
-    ((uint8_t*)d)[13] = ((uint8_t*)s)[13];
-    ((uint8_t*)d)[14] = ((uint8_t*)s)[14];
-    ((uint8_t*)d)[15] = ((uint8_t*)s)[15];
-#endif
-}
-
-static void copy_block_nn( void * d, const void *s, uint8_t nn )
-{
-    uint8_t *dd = (uint8_t *)d;
-    const uint8_t *ss = (const uint8_t *)s;
-
-	while( nn-- )
-        *dd++ = *ss++;
-}
-
-static void xor_block( void *d, const void *s )
-{
-#if defined( HAVE_UINT_32T )
-    ((uint_32t*)d)[ 0] ^= ((uint_32t*)s)[ 0];
-    ((uint_32t*)d)[ 1] ^= ((uint_32t*)s)[ 1];
-    ((uint_32t*)d)[ 2] ^= ((uint_32t*)s)[ 2];
-    ((uint_32t*)d)[ 3] ^= ((uint_32t*)s)[ 3];
-#else
-    ((uint8_t*)d)[ 0] ^= ((uint8_t*)s)[ 0];
-    ((uint8_t*)d)[ 1] ^= ((uint8_t*)s)[ 1];
-    ((uint8_t*)d)[ 2] ^= ((uint8_t*)s)[ 2];
-    ((uint8_t*)d)[ 3] ^= ((uint8_t*)s)[ 3];
-    ((uint8_t*)d)[ 4] ^= ((uint8_t*)s)[ 4];
-    ((uint8_t*)d)[ 5] ^= ((uint8_t*)s)[ 5];
-    ((uint8_t*)d)[ 6] ^= ((uint8_t*)s)[ 6];
-    ((uint8_t*)d)[ 7] ^= ((uint8_t*)s)[ 7];
-    ((uint8_t*)d)[ 8] ^= ((uint8_t*)s)[ 8];
-    ((uint8_t*)d)[ 9] ^= ((uint8_t*)s)[ 9];
-    ((uint8_t*)d)[10] ^= ((uint8_t*)s)[10];
-    ((uint8_t*)d)[11] ^= ((uint8_t*)s)[11];
-    ((uint8_t*)d)[12] ^= ((uint8_t*)s)[12];
-    ((uint8_t*)d)[13] ^= ((uint8_t*)s)[13];
-    ((uint8_t*)d)[14] ^= ((uint8_t*)s)[14];
-    ((uint8_t*)d)[15] ^= ((uint8_t*)s)[15];
-#endif
-}
-
-static void copy_and_key( void *d, const void *s, const void *k )
-{
-#if defined( HAVE_UINT_32T )
-    ((uint_32t*)d)[ 0] = ((uint_32t*)s)[ 0] ^ ((uint_32t*)k)[ 0];
-    ((uint_32t*)d)[ 1] = ((uint_32t*)s)[ 1] ^ ((uint_32t*)k)[ 1];
-    ((uint_32t*)d)[ 2] = ((uint_32t*)s)[ 2] ^ ((uint_32t*)k)[ 2];
-    ((uint_32t*)d)[ 3] = ((uint_32t*)s)[ 3] ^ ((uint_32t*)k)[ 3];
-#elif 1
-    ((uint8_t*)d)[ 0] = ((uint8_t*)s)[ 0] ^ ((uint8_t*)k)[ 0];
-    ((uint8_t*)d)[ 1] = ((uint8_t*)s)[ 1] ^ ((uint8_t*)k)[ 1];
-    ((uint8_t*)d)[ 2] = ((uint8_t*)s)[ 2] ^ ((uint8_t*)k)[ 2];
-    ((uint8_t*)d)[ 3] = ((uint8_t*)s)[ 3] ^ ((uint8_t*)k)[ 3];
-    ((uint8_t*)d)[ 4] = ((uint8_t*)s)[ 4] ^ ((uint8_t*)k)[ 4];
-    ((uint8_t*)d)[ 5] = ((uint8_t*)s)[ 5] ^ ((uint8_t*)k)[ 5];
-    ((uint8_t*)d)[ 6] = ((uint8_t*)s)[ 6] ^ ((uint8_t*)k)[ 6];
-    ((uint8_t*)d)[ 7] = ((uint8_t*)s)[ 7] ^ ((uint8_t*)k)[ 7];
-    ((uint8_t*)d)[ 8] = ((uint8_t*)s)[ 8] ^ ((uint8_t*)k)[ 8];
-    ((uint8_t*)d)[ 9] = ((uint8_t*)s)[ 9] ^ ((uint8_t*)k)[ 9];
-    ((uint8_t*)d)[10] = ((uint8_t*)s)[10] ^ ((uint8_t*)k)[10];
-    ((uint8_t*)d)[11] = ((uint8_t*)s)[11] ^ ((uint8_t*)k)[11];
-    ((uint8_t*)d)[12] = ((uint8_t*)s)[12] ^ ((uint8_t*)k)[12];
-    ((uint8_t*)d)[13] = ((uint8_t*)s)[13] ^ ((uint8_t*)k)[13];
-    ((uint8_t*)d)[14] = ((uint8_t*)s)[14] ^ ((uint8_t*)k)[14];
-    ((uint8_t*)d)[15] = ((uint8_t*)s)[15] ^ ((uint8_t*)k)[15];
-#else
-    block_copy(d, s);
-    xor_block(d, k);
-#endif
-}
-
-static void add_round_key( uint8_t d[N_BLOCK], const uint8_t k[N_BLOCK] )
-{
-    xor_block(d, k);
-}
-
-static void shift_sub_rows( uint8_t st[N_BLOCK] )
-{   uint8_t tt;
-
-    st[ 0] = s_box(st[ 0]); st[ 4] = s_box(st[ 4]);
-    st[ 8] = s_box(st[ 8]); st[12] = s_box(st[12]);
-
-    tt = st[1]; st[ 1] = s_box(st[ 5]); st[ 5] = s_box(st[ 9]);
-    st[ 9] = s_box(st[13]); st[13] = s_box( tt );
-
-    tt = st[2]; st[ 2] = s_box(st[10]); st[10] = s_box( tt );
-    tt = st[6]; st[ 6] = s_box(st[14]); st[14] = s_box( tt );
-
-    tt = st[15]; st[15] = s_box(st[11]); st[11] = s_box(st[ 7]);
-    st[ 7] = s_box(st[ 3]); st[ 3] = s_box( tt );
-}
-
-static void inv_shift_sub_rows( uint8_t st[N_BLOCK] )
-{   uint8_t tt;
-
-    st[ 0] = is_box(st[ 0]); st[ 4] = is_box(st[ 4]);
-    st[ 8] = is_box(st[ 8]); st[12] = is_box(st[12]);
-
-    tt = st[13]; st[13] = is_box(st[9]); st[ 9] = is_box(st[5]);
-    st[ 5] = is_box(st[1]); st[ 1] = is_box( tt );
-
-    tt = st[2]; st[ 2] = is_box(st[10]); st[10] = is_box( tt );
-    tt = st[6]; st[ 6] = is_box(st[14]); st[14] = is_box( tt );
-
-    tt = st[3]; st[ 3] = is_box(st[ 7]); st[ 7] = is_box(st[11]);
-    st[11] = is_box(st[15]); st[15] = is_box( tt );
-}
-
-#if defined( VERSION_1 )
-  static void mix_sub_columns( uint8_t dt[N_BLOCK] )
-  { uint8_t st[N_BLOCK];
-    block_copy(st, dt);
-#else
-  static void mix_sub_columns( uint8_t dt[N_BLOCK], uint8_t st[N_BLOCK] )
-  {
-#endif
-    dt[ 0] = gfm2_sb(st[0]) ^ gfm3_sb(st[5]) ^ s_box(st[10]) ^ s_box(st[15]);
-    dt[ 1] = s_box(st[0]) ^ gfm2_sb(st[5]) ^ gfm3_sb(st[10]) ^ s_box(st[15]);
-    dt[ 2] = s_box(st[0]) ^ s_box(st[5]) ^ gfm2_sb(st[10]) ^ gfm3_sb(st[15]);
-    dt[ 3] = gfm3_sb(st[0]) ^ s_box(st[5]) ^ s_box(st[10]) ^ gfm2_sb(st[15]);
-
-    dt[ 4] = gfm2_sb(st[4]) ^ gfm3_sb(st[9]) ^ s_box(st[14]) ^ s_box(st[3]);
-    dt[ 5] = s_box(st[4]) ^ gfm2_sb(st[9]) ^ gfm3_sb(st[14]) ^ s_box(st[3]);
-    dt[ 6] = s_box(st[4]) ^ s_box(st[9]) ^ gfm2_sb(st[14]) ^ gfm3_sb(st[3]);
-    dt[ 7] = gfm3_sb(st[4]) ^ s_box(st[9]) ^ s_box(st[14]) ^ gfm2_sb(st[3]);
-
-    dt[ 8] = gfm2_sb(st[8]) ^ gfm3_sb(st[13]) ^ s_box(st[2]) ^ s_box(st[7]);
-    dt[ 9] = s_box(st[8]) ^ gfm2_sb(st[13]) ^ gfm3_sb(st[2]) ^ s_box(st[7]);
-    dt[10] = s_box(st[8]) ^ s_box(st[13]) ^ gfm2_sb(st[2]) ^ gfm3_sb(st[7]);
-    dt[11] = gfm3_sb(st[8]) ^ s_box(st[13]) ^ s_box(st[2]) ^ gfm2_sb(st[7]);
-
-    dt[12] = gfm2_sb(st[12]) ^ gfm3_sb(st[1]) ^ s_box(st[6]) ^ s_box(st[11]);
-    dt[13] = s_box(st[12]) ^ gfm2_sb(st[1]) ^ gfm3_sb(st[6]) ^ s_box(st[11]);
-    dt[14] = s_box(st[12]) ^ s_box(st[1]) ^ gfm2_sb(st[6]) ^ gfm3_sb(st[11]);
-    dt[15] = gfm3_sb(st[12]) ^ s_box(st[1]) ^ s_box(st[6]) ^ gfm2_sb(st[11]);
-  }
-
-#if defined( VERSION_1 )
-  static void inv_mix_sub_columns( uint8_t dt[N_BLOCK] )
-  { uint8_t st[N_BLOCK];
-    block_copy(st, dt);
-#else
-  static void inv_mix_sub_columns( uint8_t dt[N_BLOCK], uint8_t st[N_BLOCK] )
-  {
-#endif
-    dt[ 0] = is_box(gfm_e(st[ 0]) ^ gfm_b(st[ 1]) ^ gfm_d(st[ 2]) ^ gfm_9(st[ 3]));
-    dt[ 5] = is_box(gfm_9(st[ 0]) ^ gfm_e(st[ 1]) ^ gfm_b(st[ 2]) ^ gfm_d(st[ 3]));
-    dt[10] = is_box(gfm_d(st[ 0]) ^ gfm_9(st[ 1]) ^ gfm_e(st[ 2]) ^ gfm_b(st[ 3]));
-    dt[15] = is_box(gfm_b(st[ 0]) ^ gfm_d(st[ 1]) ^ gfm_9(st[ 2]) ^ gfm_e(st[ 3]));
-
-    dt[ 4] = is_box(gfm_e(st[ 4]) ^ gfm_b(st[ 5]) ^ gfm_d(st[ 6]) ^ gfm_9(st[ 7]));
-    dt[ 9] = is_box(gfm_9(st[ 4]) ^ gfm_e(st[ 5]) ^ gfm_b(st[ 6]) ^ gfm_d(st[ 7]));
-    dt[14] = is_box(gfm_d(st[ 4]) ^ gfm_9(st[ 5]) ^ gfm_e(st[ 6]) ^ gfm_b(st[ 7]));
-    dt[ 3] = is_box(gfm_b(st[ 4]) ^ gfm_d(st[ 5]) ^ gfm_9(st[ 6]) ^ gfm_e(st[ 7]));
-
-    dt[ 8] = is_box(gfm_e(st[ 8]) ^ gfm_b(st[ 9]) ^ gfm_d(st[10]) ^ gfm_9(st[11]));
-    dt[13] = is_box(gfm_9(st[ 8]) ^ gfm_e(st[ 9]) ^ gfm_b(st[10]) ^ gfm_d(st[11]));
-    dt[ 2] = is_box(gfm_d(st[ 8]) ^ gfm_9(st[ 9]) ^ gfm_e(st[10]) ^ gfm_b(st[11]));
-    dt[ 7] = is_box(gfm_b(st[ 8]) ^ gfm_d(st[ 9]) ^ gfm_9(st[10]) ^ gfm_e(st[11]));
-
-    dt[12] = is_box(gfm_e(st[12]) ^ gfm_b(st[13]) ^ gfm_d(st[14]) ^ gfm_9(st[15]));
-    dt[ 1] = is_box(gfm_9(st[12]) ^ gfm_e(st[13]) ^ gfm_b(st[14]) ^ gfm_d(st[15]));
-    dt[ 6] = is_box(gfm_d(st[12]) ^ gfm_9(st[13]) ^ gfm_e(st[14]) ^ gfm_b(st[15]));
-    dt[11] = is_box(gfm_b(st[12]) ^ gfm_d(st[13]) ^ gfm_9(st[14]) ^ gfm_e(st[15]));
-  }
-
-#if defined( AES_ENC_PREKEYED ) || defined( AES_DEC_PREKEYED )
-
-/*  Set the cipher key for the pre-keyed version */
-
-return_type aes_set_key( const unsigned char key[], length_type keylen, aes_context ctx[1] )
-{
-    uint8_t cc, rc, hi;
-
-    switch( keylen )
-    {
-    case 16:
-    case 128: 
-        keylen = 16; 
-        break;
-    case 24:
-    case 192: 
-        keylen = 24; 
-        break;
-    case 32:
-    case 256: 
-        keylen = 32; 
-        break;
-    default: 
-        ctx->rnd = 0; 
-/*        return -1;	*/
-          return 0xff;
-	}
-    block_copy_nn(ctx->ksch, key, keylen);
-    hi = (keylen + 28) << 2;
-    ctx->rnd = (hi >> 4) - 1;
-    for( cc = keylen, rc = 1; cc < hi; cc += 4 )
-    {   uint8_t tt, t0, t1, t2, t3;
-
-        t0 = ctx->ksch[cc - 4];
-        t1 = ctx->ksch[cc - 3];
-        t2 = ctx->ksch[cc - 2];
-        t3 = ctx->ksch[cc - 1];
-        if( cc % keylen == 0 )
-        {
-            tt = t0;
-            t0 = s_box(t1) ^ rc;
-            t1 = s_box(t2);
-            t2 = s_box(t3);
-            t3 = s_box(tt);
-            rc = f2(rc);
-        }
-        else if( keylen > 24 && cc % keylen == 16 )
-        {
-            t0 = s_box(t0);
-            t1 = s_box(t1);
-            t2 = s_box(t2);
-            t3 = s_box(t3);
-        }
-        tt = cc - keylen;
-        ctx->ksch[cc + 0] = ctx->ksch[tt + 0] ^ t0;
-        ctx->ksch[cc + 1] = ctx->ksch[tt + 1] ^ t1;
-        ctx->ksch[cc + 2] = ctx->ksch[tt + 2] ^ t2;
-        ctx->ksch[cc + 3] = ctx->ksch[tt + 3] ^ t3;
-    }
-    return 0;
-}
-
-#endif
-
-#if defined( AES_ENC_PREKEYED )
-
-/*  Encrypt a single block of 16 bytes */
-
-return_type aes_encrypt( const unsigned char in[N_BLOCK], unsigned char  out[N_BLOCK], const aes_context ctx[1] )
-{
-    if( ctx->rnd )
-    {
-        uint8_t s1[N_BLOCK], r;
-        copy_and_key( s1, in, ctx->ksch );
-
-        for( r = 1 ; r < ctx->rnd ; ++r )
-#if defined( VERSION_1 )
-        {
-            mix_sub_columns( s1 );
-            add_round_key( s1, ctx->ksch + r * N_BLOCK);
-        }
-#else
-        {   uint8_t s2[N_BLOCK];
-            mix_sub_columns( s2, s1 );
-            copy_and_key( s1, s2, ctx->ksch + r * N_BLOCK);
-        }
-#endif
-        shift_sub_rows( s1 );
-        copy_and_key( out, s1, ctx->ksch + r * N_BLOCK );
-    }
-    else
-/*        return -1;	*/
-    	return 0xff;
-    return 0;
-}
-
-/* CBC encrypt a number of blocks (input and return an IV) */
-
-return_type aes_cbc_encrypt( const unsigned char *in, unsigned char *out,
-                         int n_block, unsigned char iv[N_BLOCK], const aes_context ctx[1] )
-{
-
-    while(n_block--)
-    {
-        xor_block(iv, in);
-        if(aes_encrypt(iv, iv, ctx) != EXIT_SUCCESS)
-			return EXIT_FAILURE;
-        memcpy(out, iv, N_BLOCK);
-        in += N_BLOCK;
-        out += N_BLOCK;
-    }
-    return EXIT_SUCCESS;
-}
-
-#endif
-
-#if defined( AES_DEC_PREKEYED )
-
-/*  Decrypt a single block of 16 bytes */
-
-return_type aes_decrypt( const unsigned char in[N_BLOCK], unsigned char out[N_BLOCK], const aes_context ctx[1] )
-{
-    if( ctx->rnd )
-    {
-        uint8_t s1[N_BLOCK], r;
-        copy_and_key( s1, in, ctx->ksch + ctx->rnd * N_BLOCK );
-        inv_shift_sub_rows( s1 );
-
-        for( r = ctx->rnd ; --r ; )
-#if defined( VERSION_1 )
-        {
-            add_round_key( s1, ctx->ksch + r * N_BLOCK );
-            inv_mix_sub_columns( s1 );
-        }
-#else
-        {   uint8_t s2[N_BLOCK];
-            copy_and_key( s2, s1, ctx->ksch + r * N_BLOCK );
-            inv_mix_sub_columns( s1, s2 );
-        }
-#endif
-        copy_and_key( out, s1, ctx->ksch );
-    }
-    else
-/*        return -1;	*/
-    	return 0xff;
-    return 0;
-}
-
-/* CBC decrypt a number of blocks (input and return an IV) */
-
-return_type aes_cbc_decrypt( const unsigned char *in, unsigned char *out,
-                         int n_block, unsigned char iv[N_BLOCK], const aes_context ctx[1] )
-{   
-    while(n_block--)
-    {   uint8_t tmp[N_BLOCK];
-        
-        memcpy(tmp, in, N_BLOCK);
-        if(aes_decrypt(in, out, ctx) != EXIT_SUCCESS)
-			return EXIT_FAILURE;
-        xor_block(out, iv);
-        memcpy(iv, tmp, N_BLOCK);
-        in += N_BLOCK;
-        out += N_BLOCK;
-    }
-    return EXIT_SUCCESS;
-}
-
-#endif
-
-#if defined( AES_ENC_128_OTFK )
-
-/*  The 'on the fly' encryption key update for for 128 bit keys */
-
-static void update_encrypt_key_128( uint8_t k[N_BLOCK], uint8_t *rc )
-{   uint8_t cc;
-
-    k[0] ^= s_box(k[13]) ^ *rc;
-    k[1] ^= s_box(k[14]);
-    k[2] ^= s_box(k[15]);
-    k[3] ^= s_box(k[12]);
-    *rc = f2( *rc );
-
-    for(cc = 4; cc < 16; cc += 4 )
-    {
-        k[cc + 0] ^= k[cc - 4];
-        k[cc + 1] ^= k[cc - 3];
-        k[cc + 2] ^= k[cc - 2];
-        k[cc + 3] ^= k[cc - 1];
-    }
-}
-
-/*  Encrypt a single block of 16 bytes with 'on the fly' 128 bit keying */
-
-void aes_encrypt_128( const unsigned char in[N_BLOCK], unsigned char out[N_BLOCK],
-                     const unsigned char key[N_BLOCK], unsigned char o_key[N_BLOCK] )
-{   uint8_t s1[N_BLOCK], r, rc = 1;
-
-    if(o_key != key)
-        block_copy( o_key, key );
-    copy_and_key( s1, in, o_key );
-
-    for( r = 1 ; r < 10 ; ++r )
-#if defined( VERSION_1 )
-    {
-        mix_sub_columns( s1 );
-        update_encrypt_key_128( o_key, &rc );
-        add_round_key( s1, o_key );
-    }
-#else
-    {   uint8_t s2[N_BLOCK];
-        mix_sub_columns( s2, s1 );
-        update_encrypt_key_128( o_key, &rc );
-        copy_and_key( s1, s2, o_key );
-    }
-#endif
-
-    shift_sub_rows( s1 );
-    update_encrypt_key_128( o_key, &rc );
-    copy_and_key( out, s1, o_key );
-}
-
-#endif
-
-#if defined( AES_DEC_128_OTFK )
-
-/*  The 'on the fly' decryption key update for for 128 bit keys */
-
-static void update_decrypt_key_128( uint8_t k[N_BLOCK], uint8_t *rc )
-{   uint8_t cc;
-
-    for( cc = 12; cc > 0; cc -= 4 )
-    {
-        k[cc + 0] ^= k[cc - 4];
-        k[cc + 1] ^= k[cc - 3];
-        k[cc + 2] ^= k[cc - 2];
-        k[cc + 3] ^= k[cc - 1];
-    }
-    *rc = d2(*rc);
-    k[0] ^= s_box(k[13]) ^ *rc;
-    k[1] ^= s_box(k[14]);
-    k[2] ^= s_box(k[15]);
-    k[3] ^= s_box(k[12]);
-}
-
-/*  Decrypt a single block of 16 bytes with 'on the fly' 128 bit keying */
-
-void aes_decrypt_128( const unsigned char in[N_BLOCK], unsigned char out[N_BLOCK],
-                      const unsigned char key[N_BLOCK], unsigned char o_key[N_BLOCK] )
-{
-    uint8_t s1[N_BLOCK], r, rc = 0x6c;
-    if(o_key != key)
-        block_copy( o_key, key );
-
-    copy_and_key( s1, in, o_key );
-    inv_shift_sub_rows( s1 );
-
-    for( r = 10 ; --r ; )
-#if defined( VERSION_1 )
-    {
-        update_decrypt_key_128( o_key, &rc );
-        add_round_key( s1, o_key );
-        inv_mix_sub_columns( s1 );
-    }
-#else
-    {   uint8_t s2[N_BLOCK];
-        update_decrypt_key_128( o_key, &rc );
-        copy_and_key( s2, s1, o_key );
-        inv_mix_sub_columns( s1, s2 );
-    }
-#endif
-    update_decrypt_key_128( o_key, &rc );
-    copy_and_key( out, s1, o_key );
-}
-
-#endif
-
-#if defined( AES_ENC_256_OTFK )
-
-/*  The 'on the fly' encryption key update for for 256 bit keys */
-
-static void update_encrypt_key_256( uint8_t k[2 * N_BLOCK], uint8_t *rc )
-{   uint8_t cc;
-
-    k[0] ^= s_box(k[29]) ^ *rc;
-    k[1] ^= s_box(k[30]);
-    k[2] ^= s_box(k[31]);
-    k[3] ^= s_box(k[28]);
-    *rc = f2( *rc );
-
-    for(cc = 4; cc < 16; cc += 4)
-    {
-        k[cc + 0] ^= k[cc - 4];
-        k[cc + 1] ^= k[cc - 3];
-        k[cc + 2] ^= k[cc - 2];
-        k[cc + 3] ^= k[cc - 1];
-    }
-
-    k[16] ^= s_box(k[12]);
-    k[17] ^= s_box(k[13]);
-    k[18] ^= s_box(k[14]);
-    k[19] ^= s_box(k[15]);
-
-    for( cc = 20; cc < 32; cc += 4 )
-    {
-        k[cc + 0] ^= k[cc - 4];
-        k[cc + 1] ^= k[cc - 3];
-        k[cc + 2] ^= k[cc - 2];
-        k[cc + 3] ^= k[cc - 1];
-    }
-}
-
-/*  Encrypt a single block of 16 bytes with 'on the fly' 256 bit keying */
-
-void aes_encrypt_256( const unsigned char in[N_BLOCK], unsigned char out[N_BLOCK],
-                      const unsigned char key[2 * N_BLOCK], unsigned char o_key[2 * N_BLOCK] )
-{
-    uint8_t s1[N_BLOCK], r, rc = 1;
-    if(o_key != key)
-    {
-        block_copy( o_key, key );
-        block_copy( o_key + 16, key + 16 );
-    }
-    copy_and_key( s1, in, o_key );
-
-    for( r = 1 ; r < 14 ; ++r )
-#if defined( VERSION_1 )
-    {
-        mix_sub_columns(s1);
-        if( r & 1 )
-            add_round_key( s1, o_key + 16 );
-        else
-        {
-            update_encrypt_key_256( o_key, &rc );
-            add_round_key( s1, o_key );
-        }
-    }
-#else
-    {   uint8_t s2[N_BLOCK];
-        mix_sub_columns( s2, s1 );
-        if( r & 1 )
-            copy_and_key( s1, s2, o_key + 16 );
-        else
-        {
-            update_encrypt_key_256( o_key, &rc );
-            copy_and_key( s1, s2, o_key );
-        }
-    }
-#endif
-
-    shift_sub_rows( s1 );
-    update_encrypt_key_256( o_key, &rc );
-    copy_and_key( out, s1, o_key );
-}
-
-#endif
-
-#if defined( AES_DEC_256_OTFK )
-
-/*  The 'on the fly' encryption key update for for 256 bit keys */
-
-static void update_decrypt_key_256( uint8_t k[2 * N_BLOCK], uint8_t *rc )
-{   uint8_t cc;
-
-    for(cc = 28; cc > 16; cc -= 4)
-    {
-        k[cc + 0] ^= k[cc - 4];
-        k[cc + 1] ^= k[cc - 3];
-        k[cc + 2] ^= k[cc - 2];
-        k[cc + 3] ^= k[cc - 1];
-    }
-
-    k[16] ^= s_box(k[12]);
-    k[17] ^= s_box(k[13]);
-    k[18] ^= s_box(k[14]);
-    k[19] ^= s_box(k[15]);
-
-    for(cc = 12; cc > 0; cc -= 4)
-    {
-        k[cc + 0] ^= k[cc - 4];
-        k[cc + 1] ^= k[cc - 3];
-        k[cc + 2] ^= k[cc - 2];
-        k[cc + 3] ^= k[cc - 1];
-    }
-
-    *rc = d2(*rc);
-    k[0] ^= s_box(k[29]) ^ *rc;
-    k[1] ^= s_box(k[30]);
-    k[2] ^= s_box(k[31]);
-    k[3] ^= s_box(k[28]);
-}
-
-/*  Decrypt a single block of 16 bytes with 'on the fly'
-    256 bit keying
-*/
-void aes_decrypt_256( const unsigned char in[N_BLOCK], unsigned char out[N_BLOCK],
-                      const unsigned char key[2 * N_BLOCK], unsigned char o_key[2 * N_BLOCK] )
-{
-    uint8_t s1[N_BLOCK], r, rc = 0x80;
-
-    if(o_key != key)
-    {
-        block_copy( o_key, key );
-        block_copy( o_key + 16, key + 16 );
-    }
-
-    copy_and_key( s1, in, o_key );
-    inv_shift_sub_rows( s1 );
-
-    for( r = 14 ; --r ; )
-#if defined( VERSION_1 )
-    {
-        if( ( r & 1 ) )
-        {
-            update_decrypt_key_256( o_key, &rc );
-            add_round_key( s1, o_key + 16 );
-        }
-        else
-            add_round_key( s1, o_key );
-        inv_mix_sub_columns( s1 );
-    }
-#else
-    {   uint8_t s2[N_BLOCK];
-        if( ( r & 1 ) )
-        {
-            update_decrypt_key_256( o_key, &rc );
-            copy_and_key( s2, s1, o_key + 16 );
-        }
-        else
-            copy_and_key( s2, s1, o_key );
-        inv_mix_sub_columns( s1, s2 );
-    }
-#endif
-    copy_and_key( out, s1, o_key );
-}
-
-#endif
diff --git a/system/crypto/aes.h b/system/crypto/aes.h
deleted file mode 100644
index 5f53e51..0000000
--- a/system/crypto/aes.h
+++ /dev/null
@@ -1,168 +0,0 @@
-/*
- ---------------------------------------------------------------------------
- Copyright (c) 1998-2008, Brian Gladman, Worcester, UK. All rights reserved.
-
- LICENSE TERMS
-
- The redistribution and use of this software (with or without changes)
- is allowed without the payment of fees or royalties provided that:
-
-  1. source code distributions include the above copyright notice, this
-     list of conditions and the following disclaimer;
-
-  2. binary distributions include the above copyright notice, this list
-     of conditions and the following disclaimer in their documentation;
-
-  3. the name of the copyright holder is not used to endorse products
-     built using this software without specific written permission.
-
- DISCLAIMER
-
- This software is provided 'as is' with no explicit or implied warranties
- in respect of its properties, including, but not limited to, correctness
- and/or fitness for purpose.
- ---------------------------------------------------------------------------
- Issue 09/09/2006
-
- This is an AES implementation that uses only 8-bit byte operations on the
- cipher state.
- */
-/*
-    (C) 2017 Renesas Electronics Corporation.
-     This software is released under the terms and conditions described in LICENSE_RENESAS.TXT included in the project.
-*/
-#ifndef AES_H
-#define AES_H
-
-#include <stdint.h>
-
-#if 1
-#  define AES_ENC_PREKEYED  /* AES encryption with a precomputed key schedule  */
-#endif
-#if 1
-#  define AES_DEC_PREKEYED  /* AES decryption with a precomputed key schedule  */
-#endif
-#if 1
-#  define AES_ENC_128_OTFK  /* AES encryption with 'on the fly' 128 bit keying */
-#endif
-#if 1
-#  define AES_DEC_128_OTFK  /* AES decryption with 'on the fly' 128 bit keying */
-#endif
-#if 1
-#  define AES_ENC_256_OTFK  /* AES encryption with 'on the fly' 256 bit keying */
-#endif
-#if 1
-#  define AES_DEC_256_OTFK  /* AES decryption with 'on the fly' 256 bit keying */
-#endif
-
-#define N_ROW                   4
-#define N_COL                   4
-#define N_BLOCK   (N_ROW * N_COL)
-#define N_MAX_ROUNDS           14
-
-// typedef unsigned char uint8_t;
-
-typedef uint8_t return_type;
-
-/*  Warning: The key length for 256 bit keys overflows a byte
-    (see comment below)
-*/
-
-//typedef uint8_t length_type;
-typedef uint16_t length_type;
-
-typedef struct
-{   uint8_t ksch[(N_MAX_ROUNDS + 1) * N_BLOCK];
-    uint8_t rnd;
-} aes_context;
-
-/*  The following calls are for a precomputed key schedule
-
-    NOTE: If the length_type used for the key length is an
-    unsigned 8-bit character, a key length of 256 bits must
-    be entered as a length in bytes (valid inputs are hence
-    128, 192, 16, 24 and 32).
-*/
-
-#if defined( AES_ENC_PREKEYED ) || defined( AES_DEC_PREKEYED )
-
-return_type aes_set_key( const unsigned char key[],
-                         length_type keylen,
-                         aes_context ctx[1] );
-#endif
-
-#if defined( AES_ENC_PREKEYED )
-
-return_type aes_encrypt( const unsigned char in[N_BLOCK],
-                         unsigned char out[N_BLOCK],
-                         const aes_context ctx[1] );
-
-return_type aes_cbc_encrypt( const unsigned char *in,
-                         unsigned char *out,
-                         int n_block,
-                         unsigned char iv[N_BLOCK],
-                         const aes_context ctx[1] );
-#endif
-
-#if defined( AES_DEC_PREKEYED )
-
-return_type aes_decrypt( const unsigned char in[N_BLOCK],
-                         unsigned char out[N_BLOCK],
-                         const aes_context ctx[1] );
-
-return_type aes_cbc_decrypt( const unsigned char *in,
-                         unsigned char *out,
-                         int n_block,
-                         unsigned char iv[N_BLOCK],
-                         const aes_context ctx[1] );
-#endif
-
-/*  The following calls are for 'on the fly' keying.  In this case the
-    encryption and decryption keys are different.
-
-    The encryption subroutines take a key in an array of bytes in
-    key[L] where L is 16, 24 or 32 bytes for key lengths of 128,
-    192, and 256 bits respectively.  They then encrypts the input
-    data, in[] with this key and put the reult in the output array
-    out[].  In addition, the second key array, o_key[L], is used
-    to output the key that is needed by the decryption subroutine
-    to reverse the encryption operation.  The two key arrays can
-    be the same array but in this case the original key will be
-    overwritten.
-
-    In the same way, the decryption subroutines output keys that
-    can be used to reverse their effect when used for encryption.
-
-    Only 128 and 256 bit keys are supported in these 'on the fly'
-    modes.
-*/
-
-#if defined( AES_ENC_128_OTFK )
-void aes_encrypt_128( const unsigned char in[N_BLOCK],
-                      unsigned char out[N_BLOCK],
-                      const unsigned char key[N_BLOCK],
-                      uint8_t o_key[N_BLOCK] );
-#endif
-
-#if defined( AES_DEC_128_OTFK )
-void aes_decrypt_128( const unsigned char in[N_BLOCK],
-                      unsigned char out[N_BLOCK],
-                      const unsigned char key[N_BLOCK],
-                      unsigned char o_key[N_BLOCK] );
-#endif
-
-#if defined( AES_ENC_256_OTFK )
-void aes_encrypt_256( const unsigned char in[N_BLOCK],
-                      unsigned char out[N_BLOCK],
-                      const unsigned char key[2 * N_BLOCK],
-                      unsigned char o_key[2 * N_BLOCK] );
-#endif
-
-#if defined( AES_DEC_256_OTFK )
-void aes_decrypt_256( const unsigned char in[N_BLOCK],
-                      unsigned char out[N_BLOCK],
-                      const unsigned char key[2 * N_BLOCK],
-                      unsigned char o_key[2 * N_BLOCK] );
-#endif
-
-#endif
diff --git a/system/crypto/cmac.c b/system/crypto/cmac.c
deleted file mode 100644
index 39dfc33..0000000
--- a/system/crypto/cmac.c
+++ /dev/null
@@ -1,161 +0,0 @@
-/**************************************************************************
-Copyright (C) 2009 Lander Casado, Philippas Tsigas
-
-All rights reserved.
-
-Permission is hereby granted, free of charge, to any person obtaining
-a copy of this software and associated documentation files 
-(the "Software"), to deal with the Software without restriction, including
-without limitation the rights to use, copy, modify, merge, publish, 
-distribute, sublicense, and/or sell copies of the Software, and to
-permit persons to whom the Software is furnished to do so, subject to
-the following conditions: 
-
-Redistributions of source code must retain the above copyright notice, 
-this list of conditions and the following disclaimers. Redistributions in
-binary form must reproduce the above copyright notice, this list of
-conditions and the following disclaimers in the documentation and/or 
-other materials provided with the distribution.
-
-In no event shall the authors or copyright holders be liable for any special,
-incidental, indirect or consequential damages of any kind, or any damages 
-whatsoever resulting from loss of use, data or profits, whether or not 
-advised of the possibility of damage, and on any theory of liability, 
-arising out of or in connection with the use or performance of this software.
- 
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
-OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
-FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
-DEALINGS WITH THE SOFTWARE
-
-*****************************************************************************/
-/*
-    (C) 2017 Renesas Electronics Corporation.
-     This software is released under the terms and conditions described in LICENSE_RENESAS.TXT included in the project.
-*/
-//#include <sys/param.h>
-//#include <sys/systm.h> 
-#include <stdint.h>
-#include "aes.h"
-#include "cmac.h"
-#include "utilities.h"
-
-#define LSHIFT(v, r) do {                                       \
-  int32_t i;                                                  \
-           for (i = 0; i < 15; i++)                                \
-                    (r)[i] = (v)[i] << 1 | (v)[i + 1] >> 7;         \
-            (r)[15] = (v)[15] << 1;                                 \
-    } while (0)
-    
-#define XOR(v, r) do {                                          \
-            int32_t i;                                                  \
-            for (i = 0; i < 16; i++)     \
-        {   \
-                    (r)[i] = (r)[i] ^ (v)[i]; \
-        }                          \
-    } while (0) \
-
-
-void AES_CMAC_Init(AES_CMAC_CTX *ctx)
-{
-            memset1(ctx->X, 0, sizeof ctx->X);
-            ctx->M_n = 0;
-        memset1(ctx->rijndael.ksch, '\0', 240);
-}
-    
-void AES_CMAC_SetKey(AES_CMAC_CTX *ctx, const uint8_t key[AES_CMAC_KEY_LENGTH])
-{
-           //rijndael_set_key_enc_only(&ctx->rijndael, key, 128);
-       aes_set_key( key, AES_CMAC_KEY_LENGTH, &ctx->rijndael);
-}
-    
-void AES_CMAC_Update(AES_CMAC_CTX *ctx, const uint8_t *data, uint32_t len)
-{
-            uint32_t mlen;
-        uint8_t in[16];
-    
-            if (ctx->M_n > 0) {
-                  #ifdef __RL78__
-                  mlen = R_MIN(16 - ctx->M_n, len);
-                  #else
-                  mlen = MIN(16 - ctx->M_n, len);
-                  #endif	// __RL78__
-                    memcpy1(ctx->M_last + ctx->M_n, data, mlen);
-                    ctx->M_n += mlen;
-                    if (ctx->M_n < 16 || len == mlen)
-                            return;
-                   XOR(ctx->M_last, ctx->X);
-                    //rijndael_encrypt(&ctx->rijndael, ctx->X, ctx->X);
-            aes_encrypt( ctx->X, ctx->X, &ctx->rijndael);
-                    data += mlen;
-                    len -= mlen;
-            }
-            while (len > 16) {      /* not last block */
-
-                    XOR(data, ctx->X);
-                    //rijndael_encrypt(&ctx->rijndael, ctx->X, ctx->X);
-
-                    memcpy1(in, &ctx->X[0], 16); //Bestela ez du ondo iten
-            aes_encrypt( in, in, &ctx->rijndael);
-                    memcpy1(&ctx->X[0], in, 16);
-
-                    data += 16;
-                    len -= 16;
-            }
-            /* potential last block, save it */
-            memcpy1(ctx->M_last, data, len);
-            ctx->M_n = len;
-}
-   
-void AES_CMAC_Final(uint8_t digest[AES_CMAC_DIGEST_LENGTH], AES_CMAC_CTX *ctx)
-{
-            uint8_t K[16];
-        uint8_t in[16];
-            /* generate subkey K1 */
-            memset1(K, '\0', 16);
-
-            //rijndael_encrypt(&ctx->rijndael, K, K);
-
-            aes_encrypt( K, K, &ctx->rijndael);
-
-            if (K[0] & 0x80) {
-                    LSHIFT(K, K);
-                   K[15] ^= 0x87;
-            } else
-                    LSHIFT(K, K);
-
-
-            if (ctx->M_n == 16) {
-                    /* last block was a complete block */
-                    XOR(K, ctx->M_last);
-
-           } else {
-                   /* generate subkey K2 */
-                  if (K[0] & 0x80) {
-                          LSHIFT(K, K);
-                          K[15] ^= 0x87;
-                  } else
-                           LSHIFT(K, K);
-
-                   /* padding(M_last) */
-                   ctx->M_last[ctx->M_n] = 0x80;
-                   while (++ctx->M_n < 16)
-                         ctx->M_last[ctx->M_n] = 0;
-   
-                  XOR(K, ctx->M_last);
-
-
-           }
-           XOR(ctx->M_last, ctx->X);
-
-           //rijndael_encrypt(&ctx->rijndael, ctx->X, digest);
-
-       memcpy1(in, &ctx->X[0], 16); //Bestela ez du ondo iten
-       aes_encrypt(in, digest, &ctx->rijndael);
-           memset1(K, 0, sizeof K);
-
-}
-
diff --git a/system/crypto/cmac.h b/system/crypto/cmac.h
deleted file mode 100644
index b66bc45..0000000
--- a/system/crypto/cmac.h
+++ /dev/null
@@ -1,66 +0,0 @@
-/**************************************************************************
-Copyright (C) 2009 Lander Casado, Philippas Tsigas
-
-All rights reserved.
-
-Permission is hereby granted, free of charge, to any person obtaining
-a copy of this software and associated documentation files 
-(the "Software"), to deal with the Software without restriction, including
-without limitation the rights to use, copy, modify, merge, publish, 
-distribute, sublicense, and/or sell copies of the Software, and to
-permit persons to whom the Software is furnished to do so, subject to
-the following conditions: 
-
-Redistributions of source code must retain the above copyright notice, 
-this list of conditions and the following disclaimers. Redistributions in
-binary form must reproduce the above copyright notice, this list of
-conditions and the following disclaimers in the documentation and/or 
-other materials provided with the distribution.
-
-In no event shall the authors or copyright holders be liable for any special,
-incidental, indirect or consequential damages of any kind, or any damages 
-whatsoever resulting from loss of use, data or profits, whether or not 
-advised of the possibility of damage, and on any theory of liability, 
-arising out of or in connection with the use or performance of this software.
- 
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
-OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
-FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
-DEALINGS WITH THE SOFTWARE
-
-*****************************************************************************/
-/*
-    (C) 2017 Renesas Electronics Corporation.
-     This software is released under the terms and conditions described in LICENSE_RENESAS.TXT included in the project.
-*/
-#ifndef _CMAC_H_
-#define _CMAC_H_
-
-#include "aes.h" 
-  
-#define AES_CMAC_KEY_LENGTH     16
-#define AES_CMAC_DIGEST_LENGTH  16
- 
-typedef struct _AES_CMAC_CTX {
-            aes_context    rijndael;
-            uint8_t        X[16];
-            uint8_t        M_last[16];
-            uint32_t       M_n;
-    } AES_CMAC_CTX;
-   
-//#include <sys/cdefs.h>
-    
-//__BEGIN_DECLS
-void     AES_CMAC_Init(AES_CMAC_CTX * ctx);
-void     AES_CMAC_SetKey(AES_CMAC_CTX * ctx, const uint8_t key[AES_CMAC_KEY_LENGTH]);
-void     AES_CMAC_Update(AES_CMAC_CTX * ctx, const uint8_t * data, uint32_t len);
-          //          __attribute__((__bounded__(__string__,2,3)));
-void     AES_CMAC_Final(uint8_t digest[AES_CMAC_DIGEST_LENGTH], AES_CMAC_CTX  * ctx);
-            //     __attribute__((__bounded__(__minbytes__,1,AES_CMAC_DIGEST_LENGTH)));
-//__END_DECLS
-
-#endif /* _CMAC_H_ */
-
diff --git a/system/crypto/soft-se.c b/system/crypto/soft-se.c
deleted file mode 100644
index 8cedd0f..0000000
--- a/system/crypto/soft-se.c
+++ /dev/null
@@ -1,498 +0,0 @@
-/*
- / _____)             _              | |
-( (____  _____ ____ _| |_ _____  ____| |__
- \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- _____) ) ____| | | || |_| ____( (___| | | |
-(______/|_____)_|_|_| \__)_____)\____)_| |_|
-    (C)2013 Semtech
- ___ _____ _   ___ _  _____ ___  ___  ___ ___
-/ __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
-\__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
-|___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
-embedded.connectivity.solutions===============
-
-Description: Secure Element software implementation
-
-License: Revised BSD License, see LICENSE.TXT file include in the project
-
-Maintainer: Miguel Luis ( Semtech ), Gregory Cristian ( Semtech ),
-            Daniel Jaeckle ( STACKFORCE ),  Johannes Bruder ( STACKFORCE )
-*/
-#include <stdlib.h>
-#include <stdint.h>
-
-#include "utilities.h"
-#include "aes.h"
-#include "cmac.h"
-#include "radio.h"
-
-#include "LoRaMacHeaderTypes.h"
-
-#include "secure-element.h"
-
-/*!
- * Number of supported crypto keys
- */
-#define NUM_OF_KEYS 24
-
-/*!
- * Crypto keys size in bytes
- */
-#define KEY_SIZE 16
-
-/*!
- * Size of JoinReqType is field for integrity check
- * \remark required for 1.1.x support
- */
-#define JOIN_REQ_TYPE_SIZE 1
-
-/*!
- * Size of DevNonce is field for integrity check
- * \remark required for 1.1.x support
- */
-#define DEV_NONCE_SIZE 2
-
-/*!
- * MIC computation offset
- * \remark required for 1.1.x support
- */
-#define CRYPTO_MIC_COMPUTATION_OFFSET ( JOIN_REQ_TYPE_SIZE + LORAMAC_JOIN_EUI_FIELD_SIZE + DEV_NONCE_SIZE + LORAMAC_MHDR_FIELD_SIZE )
-
-/*!
- * Identifier value pair type for Keys
- */
-typedef struct sKey
-{
-    /*
-     * Key identifier
-     */
-    KeyIdentifier_t KeyID;
-    /*
-     * Key value
-     */
-    uint8_t KeyValue[KEY_SIZE];
-} Key_t;
-
-/*
- * Secure Element Non Volatile Context structure
- */
-typedef struct sSecureElementNvCtx
-{
-    /*
-     * DevEUI storage
-     */
-    uint8_t DevEui[SE_EUI_SIZE];
-    /*
-     * Join EUI storage
-     */
-    uint8_t JoinEui[SE_EUI_SIZE];
-    /*
-     * AES computation context variable
-     */
-    aes_context AesContext;
-    /*
-     * CMAC computation context variable
-     */
-    AES_CMAC_CTX AesCmacCtx[1];
-    /*
-     * Key List
-     */
-    Key_t KeyList[NUM_OF_KEYS];
-}SecureElementNvCtx_t;
-
-/*
- * Module context
- */
-static SecureElementNvCtx_t SeNvmCtx;
-
-static SecureElementNvmEvent SeNvmCtxChanged;
-
-/*
- * Local functions
- */
-
-/*
- * Gets key item from key list.
- *
- * \param[IN]  keyID          - Key identifier
- * \param[OUT] keyItem        - Key item reference
- * \retval                    - Status of the operation
- */
-static SecureElementStatus_t GetKeyByID( KeyIdentifier_t keyID, Key_t** keyItem )
-{
-    for( uint8_t i = 0; i < NUM_OF_KEYS; i++ )
-    {
-        if( SeNvmCtx.KeyList[i].KeyID == keyID )
-        {
-            *keyItem = &( SeNvmCtx.KeyList[i] );
-            return SECURE_ELEMENT_SUCCESS;
-        }
-    }
-    return SECURE_ELEMENT_ERROR_INVALID_KEY_ID;
-}
-
-/*
- * Dummy callback in case if the user provides NULL function pointer
- */
-static void DummyCB( void )
-{
-    return;
-}
-
-/*
- * Computes a CMAC of a message using provided initial Bx block
- *
- *  cmac = aes128_cmac(keyID, blocks[i].Buffer)
- *
- * \param[IN]  micBxBuffer    - Buffer containing the initial Bx block
- * \param[IN]  buffer         - Data buffer
- * \param[IN]  size           - Data buffer size
- * \param[IN]  keyID          - Key identifier to determine the AES key to be used
- * \param[OUT] cmac           - Computed cmac
- * \retval                    - Status of the operation
- */
-static SecureElementStatus_t ComputeCmac( uint8_t *micBxBuffer, uint8_t *buffer, uint16_t size, KeyIdentifier_t keyID, uint32_t* cmac )
-{
-    if( ( buffer == NULL ) || ( cmac == NULL ) )
-    {
-        return SECURE_ELEMENT_ERROR_NPE;
-    }
-
-    uint8_t Cmac[16];
-
-    AES_CMAC_Init( SeNvmCtx.AesCmacCtx );
-
-    Key_t* keyItem;
-    SecureElementStatus_t retval = GetKeyByID( keyID, &keyItem );
-
-    if( retval == SECURE_ELEMENT_SUCCESS )
-    {
-        AES_CMAC_SetKey( SeNvmCtx.AesCmacCtx, keyItem->KeyValue );
-
-        if( micBxBuffer != NULL )
-        {
-            AES_CMAC_Update( SeNvmCtx.AesCmacCtx, micBxBuffer, 16 );
-        }
-
-        AES_CMAC_Update( SeNvmCtx.AesCmacCtx, buffer, size );
-
-        AES_CMAC_Final( Cmac, SeNvmCtx.AesCmacCtx );
-
-        // Bring into the required format
-        *cmac = ( uint32_t )( ( uint32_t ) Cmac[3] << 24 | ( uint32_t ) Cmac[2] << 16 | ( uint32_t ) Cmac[1] << 8 | ( uint32_t ) Cmac[0] );
-    }
-
-    return retval;
-}
-
-/*
- * API functions
- */
-
-SecureElementStatus_t SecureElementInit( SecureElementNvmEvent seNvmCtxChanged )
-{
-    uint8_t itr = 0;
-    uint8_t zeroKey[16] = { 0 };
-
-    // Initialize with defaults
-    SeNvmCtx.KeyList[itr++].KeyID = APP_KEY;
-    SeNvmCtx.KeyList[itr++].KeyID = GEN_APP_KEY;
-    SeNvmCtx.KeyList[itr++].KeyID = NWK_KEY;
-    SeNvmCtx.KeyList[itr++].KeyID = J_S_INT_KEY;
-    SeNvmCtx.KeyList[itr++].KeyID = J_S_ENC_KEY;
-    SeNvmCtx.KeyList[itr++].KeyID = F_NWK_S_INT_KEY;
-    SeNvmCtx.KeyList[itr++].KeyID = S_NWK_S_INT_KEY;
-    SeNvmCtx.KeyList[itr++].KeyID = NWK_S_ENC_KEY;
-    SeNvmCtx.KeyList[itr++].KeyID = APP_S_KEY;
-    SeNvmCtx.KeyList[itr++].KeyID = MC_ROOT_KEY;
-    SeNvmCtx.KeyList[itr++].KeyID = MC_KE_KEY;
-    SeNvmCtx.KeyList[itr++].KeyID = MC_KEY_0;
-    SeNvmCtx.KeyList[itr++].KeyID = MC_APP_S_KEY_0;
-    SeNvmCtx.KeyList[itr++].KeyID = MC_NWK_S_KEY_0;
-    SeNvmCtx.KeyList[itr++].KeyID = MC_KEY_1;
-    SeNvmCtx.KeyList[itr++].KeyID = MC_APP_S_KEY_1;
-    SeNvmCtx.KeyList[itr++].KeyID = MC_NWK_S_KEY_1;
-    SeNvmCtx.KeyList[itr++].KeyID = MC_KEY_2;
-    SeNvmCtx.KeyList[itr++].KeyID = MC_APP_S_KEY_2;
-    SeNvmCtx.KeyList[itr++].KeyID = MC_NWK_S_KEY_2;
-    SeNvmCtx.KeyList[itr++].KeyID = MC_KEY_3;
-    SeNvmCtx.KeyList[itr++].KeyID = MC_APP_S_KEY_3;
-    SeNvmCtx.KeyList[itr++].KeyID = MC_NWK_S_KEY_3;
-    SeNvmCtx.KeyList[itr].KeyID = SLOT_RAND_ZERO_KEY;
-
-    // Set standard keys
-    memcpy1( SeNvmCtx.KeyList[itr].KeyValue, zeroKey, KEY_SIZE );
-
-    memset1( SeNvmCtx.DevEui, 0, SE_EUI_SIZE );
-    memset1( SeNvmCtx.JoinEui, 0, SE_EUI_SIZE );
-
-    // Assign callback
-    if( seNvmCtxChanged != 0 )
-    {
-        SeNvmCtxChanged = seNvmCtxChanged;
-    }
-    else
-    {
-        SeNvmCtxChanged = DummyCB;
-    }
-
-    return SECURE_ELEMENT_SUCCESS;
-}
-
-SecureElementStatus_t SecureElementRestoreNvmCtx( void* seNvmCtx )
-{
-    // Restore nvm context
-    if( seNvmCtx != 0 )
-    {
-        memcpy1( ( uint8_t* ) &SeNvmCtx, ( uint8_t* ) seNvmCtx, sizeof( SeNvmCtx ) );
-        return SECURE_ELEMENT_SUCCESS;
-    }
-    else
-    {
-        return SECURE_ELEMENT_ERROR_NPE;
-    }
-}
-
-void* SecureElementGetNvmCtx( size_t* seNvmCtxSize )
-{
-    *seNvmCtxSize = sizeof( SeNvmCtx );
-    return &SeNvmCtx;
-}
-
-SecureElementStatus_t SecureElementSetKey( KeyIdentifier_t keyID, uint8_t* key )
-{
-    if( key == NULL )
-    {
-        return SECURE_ELEMENT_ERROR_NPE;
-    }
-
-    for( uint8_t i = 0; i < NUM_OF_KEYS; i++ )
-    {
-        if( SeNvmCtx.KeyList[i].KeyID == keyID )
-        {
-            if( ( keyID == MC_KEY_0 ) || ( keyID == MC_KEY_1 ) || ( keyID == MC_KEY_2 ) || ( keyID == MC_KEY_3 ) )
-            {  // Decrypt the key if its a Mckey
-                SecureElementStatus_t retval = SECURE_ELEMENT_ERROR;
-                uint8_t decryptedKey[16] = { 0 };
-
-                retval = SecureElementAesEncrypt( key, 16, MC_KE_KEY, decryptedKey );
-
-                memcpy1( SeNvmCtx.KeyList[i].KeyValue, decryptedKey, KEY_SIZE );
-                SeNvmCtxChanged( );
-
-                return retval;
-            }
-            else
-            {
-                memcpy1( SeNvmCtx.KeyList[i].KeyValue, key, KEY_SIZE );
-                SeNvmCtxChanged( );
-                return SECURE_ELEMENT_SUCCESS;
-            }
-        }
-    }
-
-    return SECURE_ELEMENT_ERROR_INVALID_KEY_ID;
-}
-
-SecureElementStatus_t SecureElementComputeAesCmac( uint8_t *micBxBuffer, uint8_t *buffer, uint16_t size, KeyIdentifier_t keyID, uint32_t* cmac )
-{
-    if( keyID >= LORAMAC_CRYPTO_MULTICAST_KEYS )
-    {
-        // Never accept multicast key identifier for cmac computation
-        return SECURE_ELEMENT_ERROR_INVALID_KEY_ID;
-    }
-
-    return ComputeCmac( micBxBuffer, buffer, size, keyID, cmac );
-}
-
-SecureElementStatus_t SecureElementVerifyAesCmac( uint8_t* buffer, uint16_t size, uint32_t expectedCmac, KeyIdentifier_t keyID )
-{
-    if( buffer == NULL )
-    {
-        return SECURE_ELEMENT_ERROR_NPE;
-    }
-
-    SecureElementStatus_t retval = SECURE_ELEMENT_ERROR;
-    uint32_t compCmac = 0;
-    retval = ComputeCmac( NULL, buffer, size, keyID, &compCmac );
-    if( retval != SECURE_ELEMENT_SUCCESS )
-    {
-        return retval;
-    }
-
-    if( expectedCmac != compCmac )
-    {
-        retval = SECURE_ELEMENT_FAIL_CMAC;
-    }
-
-    return retval;
-}
-
-SecureElementStatus_t SecureElementAesEncrypt( uint8_t* buffer, uint16_t size, KeyIdentifier_t keyID, uint8_t* encBuffer )
-{
-    if( buffer == NULL || encBuffer == NULL )
-    {
-        return SECURE_ELEMENT_ERROR_NPE;
-    }
-
-    // Check if the size is divisible by 16,
-    if( ( size % 16 ) != 0 )
-    {
-        return SECURE_ELEMENT_ERROR_BUF_SIZE;
-    }
-
-    memset1( SeNvmCtx.AesContext.ksch, '\0', 240 );
-
-    Key_t* pItem;
-    SecureElementStatus_t retval = GetKeyByID( keyID, &pItem );
-
-    if( retval == SECURE_ELEMENT_SUCCESS )
-    {
-        aes_set_key( pItem->KeyValue, 16, &SeNvmCtx.AesContext );
-
-        uint8_t block = 0;
-
-        while( size != 0 )
-        {
-            aes_encrypt( &buffer[block], &encBuffer[block], &SeNvmCtx.AesContext );
-            block = block + 16;
-            size = size - 16;
-        }
-    }
-    return retval;
-}
-
-SecureElementStatus_t SecureElementDeriveAndStoreKey( Version_t version, uint8_t* input, KeyIdentifier_t rootKeyID, KeyIdentifier_t targetKeyID )
-{
-    if( input == NULL )
-    {
-        return SECURE_ELEMENT_ERROR_NPE;
-    }
-
-    SecureElementStatus_t retval = SECURE_ELEMENT_ERROR;
-    uint8_t key[16] = { 0 };
-
-    // In case of MC_KE_KEY, prevent other keys than NwkKey or AppKey for LoRaWAN 1.1 or later
-    if( targetKeyID == MC_KE_KEY )
-    {
-        if( ( ( rootKeyID == APP_KEY ) && ( version.Fields.Minor == 0 ) ) || ( rootKeyID == NWK_KEY ) )
-        {
-            return SECURE_ELEMENT_ERROR_INVALID_KEY_ID;
-        }
-    }
-
-    // Derive key
-    retval = SecureElementAesEncrypt( input, 16, rootKeyID, key );
-    if( retval != SECURE_ELEMENT_SUCCESS )
-    {
-        return retval;
-    }
-
-    // Store key
-    retval = SecureElementSetKey( targetKeyID, key );
-    if( retval != SECURE_ELEMENT_SUCCESS )
-    {
-        return retval;
-    }
-
-    return SECURE_ELEMENT_SUCCESS;
-}
-
-SecureElementStatus_t SecureElementProcessJoinAccept( KeyIdentifier_t encKeyID, KeyIdentifier_t micKeyID,
-                                                      uint8_t versionMinor, uint8_t* micHeader, uint8_t* encJoinAccept,
-                                                      uint8_t encJoinAcceptSize, uint8_t* decJoinAccept )
-{
-    if( ( micHeader == NULL ) || ( encJoinAccept == NULL ) || ( decJoinAccept == NULL ) )
-    {
-        return SECURE_ELEMENT_ERROR_NPE;
-    }
-
-    // Decrypt header, skip MHDR
-    memcpy1( decJoinAccept, encJoinAccept, encJoinAcceptSize );
-
-    if( SecureElementAesEncrypt( encJoinAccept + LORAMAC_MHDR_FIELD_SIZE, encJoinAcceptSize - LORAMAC_MHDR_FIELD_SIZE,
-                                 encKeyID, decJoinAccept + LORAMAC_MHDR_FIELD_SIZE ) != SECURE_ELEMENT_SUCCESS )
-    {
-        return SECURE_ELEMENT_FAIL_ENCRYPT;
-    }
-
-    uint32_t mic = 0;
-
-    mic = ( ( uint32_t ) decJoinAccept[encJoinAcceptSize - LORAMAC_MIC_FIELD_SIZE] << 0 );
-    mic |= ( ( uint32_t ) decJoinAccept[encJoinAcceptSize - LORAMAC_MIC_FIELD_SIZE + 1] << 8 );
-    mic |= ( ( uint32_t ) decJoinAccept[encJoinAcceptSize - LORAMAC_MIC_FIELD_SIZE + 2] << 16 );
-    mic |= ( ( uint32_t ) decJoinAccept[encJoinAcceptSize - LORAMAC_MIC_FIELD_SIZE + 3] << 24 );
-
-    // Verify mic
-    if( versionMinor == 0 )
-    {
-        // For LoRaWAN 1.0.x
-        //   cmac = aes128_cmac(NwkKey, MHDR |  JoinNonce | NetID | DevAddr | DLSettings | RxDelay | CFList | CFListType)
-        if( SecureElementVerifyAesCmac( decJoinAccept, ( encJoinAcceptSize - LORAMAC_MIC_FIELD_SIZE ), mic, micKeyID ) != SECURE_ELEMENT_SUCCESS )
-        {
-            return SECURE_ELEMENT_FAIL_CMAC;
-        }
-    }
-    else if( versionMinor == 1 )
-    {
-        // For LoRaWAN 1.1.x and later:
-        //   cmac = aes128_cmac(JSIntKey, JoinReqType | JoinEUI | DevNonce | MHDR | JoinNonce | NetID | DevAddr | DLSettings | RxDelay | CFList | CFListType)
-        // Prepare the msg for integrity check (adding JoinReqType, JoinEUI and DevNonce)
-        uint8_t localBuffer[32 + CRYPTO_MIC_COMPUTATION_OFFSET] = { 0 };
-        memcpy1( localBuffer, micHeader, CRYPTO_MIC_COMPUTATION_OFFSET );
-        memcpy1( localBuffer + CRYPTO_MIC_COMPUTATION_OFFSET, decJoinAccept, encJoinAcceptSize - LORAMAC_MIC_FIELD_SIZE );
-
-        if( SecureElementVerifyAesCmac( localBuffer, encJoinAcceptSize + CRYPTO_MIC_COMPUTATION_OFFSET - LORAMAC_MIC_FIELD_SIZE, mic, micKeyID ) != SECURE_ELEMENT_SUCCESS )
-        {
-            return SECURE_ELEMENT_FAIL_CMAC;
-        }
-    }
-    else
-    {
-        return SECURE_ELEMENT_ERROR_INVALID_LORAWAM_SPEC_VERSION;
-    }
-
-    return SECURE_ELEMENT_SUCCESS;
-}
-
-SecureElementStatus_t SecureElementRandomNumber( uint32_t* randomNum )
-{
-    if( randomNum == NULL )
-    {
-        return SECURE_ELEMENT_ERROR_NPE;
-    }
-    *randomNum = Radio.Random( );
-    return SECURE_ELEMENT_SUCCESS;
-}
-
-SecureElementStatus_t SecureElementSetDevEui( uint8_t* devEui )
-{
-    if( devEui == NULL )
-    {
-        return SECURE_ELEMENT_ERROR_NPE;
-    }
-    memcpy1( SeNvmCtx.DevEui, devEui, SE_EUI_SIZE );
-    SeNvmCtxChanged( );
-    return SECURE_ELEMENT_SUCCESS;
-}
-
-uint8_t* SecureElementGetDevEui( void )
-{
-    return SeNvmCtx.DevEui;
-}
-
-SecureElementStatus_t SecureElementSetJoinEui( uint8_t* joinEui )
-{
-    if( joinEui == NULL )
-    {
-        return SECURE_ELEMENT_ERROR_NPE;
-    }
-    memcpy1( SeNvmCtx.JoinEui, joinEui, SE_EUI_SIZE );
-    SeNvmCtxChanged( );
-    return SECURE_ELEMENT_SUCCESS;
-}
-
-uint8_t* SecureElementGetJoinEui( void )
-{
-    return SeNvmCtx.JoinEui;
-}
diff --git a/system/delay.c b/system/delay.c
deleted file mode 100644
index 7a0c83c..0000000
--- a/system/delay.c
+++ /dev/null
@@ -1,34 +0,0 @@
-/*!
- * \file      delay.c
- *
- * \brief     Delay implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#include "delay-board.h"
-#include "delay.h"
-
-void Delay( float s )
-{
-    DelayMs( (uint32_t)(s * 1000.0f) );
-}
-
-void DelayMs( uint32_t ms )
-{
-    DelayMsMcu( ms );
-}
diff --git a/system/delay.h b/system/delay.h
deleted file mode 100644
index efc674a..0000000
--- a/system/delay.h
+++ /dev/null
@@ -1,50 +0,0 @@
-/*!
- * \file      delay.h
- *
- * \brief     Delay implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __DELAY_H__
-#define __DELAY_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-
-#define DELAY_FUNC_LOCATION __attribute__ ((section(".ramfunc")))
-
-/*! 
- * Blocking delay of "s" seconds
- */
-void Delay( float s ) DELAY_FUNC_LOCATION;
-
-/*! 
- * Blocking delay of "ms" milliseconds
- */
-void DelayMs( uint32_t ms ) DELAY_FUNC_LOCATION;
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __DELAY_H__
-
diff --git a/system/fifo.c b/system/fifo.c
deleted file mode 100644
index e2b5a84..0000000
--- a/system/fifo.c
+++ /dev/null
@@ -1,66 +0,0 @@
-/*!
- * \file      fifo.h
- *
- * \brief     FIFO buffer implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#include "fifo.h"
-
-static uint16_t FifoNext( Fifo_t *fifo, uint16_t index )
-{
-    return ( index + 1 ) % fifo->Size;
-}
-
-void FifoInit( Fifo_t *fifo, uint8_t *buffer, uint16_t size )
-{
-    fifo->Begin = 0;
-    fifo->End = 0;
-    fifo->Data = buffer;
-    fifo->Size = size;
-}
-
-void FifoPush( Fifo_t *fifo, uint8_t data )
-{
-    fifo->End = FifoNext( fifo, fifo->End );
-    fifo->Data[fifo->End] = data;
-}
-
-uint8_t FifoPop( Fifo_t *fifo )
-{
-    uint8_t data = fifo->Data[FifoNext( fifo, fifo->Begin )];
-
-    fifo->Begin = FifoNext( fifo, fifo->Begin );
-    return data;
-}
-
-void FifoFlush( Fifo_t *fifo )
-{
-    fifo->Begin = 0;
-    fifo->End = 0;
-}
-
-bool IsFifoEmpty( Fifo_t *fifo )
-{
-    return ( fifo->Begin == fifo->End );
-}
-
-bool IsFifoFull( Fifo_t *fifo )
-{
-    return ( FifoNext( fifo, fifo->End ) == fifo->Begin );
-}
diff --git a/system/fifo.h b/system/fifo.h
deleted file mode 100644
index f8ef85c..0000000
--- a/system/fifo.h
+++ /dev/null
@@ -1,97 +0,0 @@
-/*!
- * \file      fifo.h
- *
- * \brief     FIFO buffer implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __FIFO_H__
-#define __FIFO_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdbool.h>
-#include <stdint.h>
-
-/*!
- * FIFO structure
- */
-typedef struct Fifo_s
-{
-    uint16_t Begin;
-    uint16_t End;
-    uint8_t *Data;
-    uint16_t Size;
-}Fifo_t;
-
-/*!
- * Initializes the FIFO structure
- *
- * \param [IN] fifo   Pointer to the FIFO object
- * \param [IN] buffer Buffer to be used as FIFO
- * \param [IN] size   Size of the buffer
- */
-void FifoInit( Fifo_t *fifo, uint8_t *buffer, uint16_t size );
-
-/*!
- * Pushes data to the FIFO
- *
- * \param [IN] fifo Pointer to the FIFO object
- * \param [IN] data Data to be pushed into the FIFO
- */
-void FifoPush( Fifo_t *fifo, uint8_t data );
-
-/*!
- * Pops data from the FIFO
- *
- * \param [IN] fifo Pointer to the FIFO object
- * \retval data     Data popped from the FIFO
- */
-uint8_t FifoPop( Fifo_t *fifo );
-
-/*!
- * Flushes the FIFO
- *
- * \param [IN] fifo   Pointer to the FIFO object
- */
-void FifoFlush( Fifo_t *fifo );
-
-/*!
- * Checks if the FIFO is empty
- *
- * \param [IN] fifo   Pointer to the FIFO object
- * \retval isEmpty    true: FIFO is empty, false FIFO is not empty
- */
-bool IsFifoEmpty( Fifo_t *fifo );
-
-/*!
- * Checks if the FIFO is full
- *
- * \param [IN] fifo   Pointer to the FIFO object
- * \retval isFull     true: FIFO is full, false FIFO is not full
- */
-bool IsFifoFull( Fifo_t *fifo );
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __FIFO_H__
diff --git a/system/gpio.c b/system/gpio.c
deleted file mode 100644
index 16382b7..0000000
--- a/system/gpio.c
+++ /dev/null
@@ -1,62 +0,0 @@
-/*!
- * \file      gpio.c
- *
- * \brief     GPIO driver implementation
- *
- * \remark: Relies on the specific board GPIO implementation as well as on
- *          IO expander driver implementation if one is available on the target
- *          board.
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#include "gpio-board.h"
-
-void GpioInit( Gpio_t *obj, PinNames pin, PinModes mode,  PinConfigs config, PinTypes type, uint32_t value )
-{
-    GpioMcuInit( obj, pin, mode, config, type, value );
-}
-
-void GpioSetContext( Gpio_t *obj, void* context )
-{
-    GpioMcuSetContext( obj, context );
-}
-
-void GpioSetInterrupt( Gpio_t *obj, IrqModes irqMode, IrqPriorities irqPriority, GpioIrqHandler *irqHandler )
-{
-    GpioMcuSetInterrupt( obj, irqMode, irqPriority, irqHandler );
-}
-
-void GpioRemoveInterrupt( Gpio_t *obj )
-{
-    GpioMcuRemoveInterrupt( obj );
-}
-
-void GpioWrite( Gpio_t *obj, uint32_t value )
-{
-    GpioMcuWrite( obj, value );
-}
-
-void GpioToggle( Gpio_t *obj )
-{
-    GpioMcuToggle( obj );
-}
-
-uint32_t GpioRead( Gpio_t *obj )
-{
-    return GpioMcuRead( obj );
-}
diff --git a/system/gpio.h b/system/gpio.h
deleted file mode 100644
index 1c35551..0000000
--- a/system/gpio.h
+++ /dev/null
@@ -1,193 +0,0 @@
-/*!
- * \file      gpio.h
- *
- * \brief     GPIO driver implementation
- *
- * \remark: Relies on the specific board GPIO implementation as well as on
- *          IO expander driver implementation if one is available on the target
- *          board.
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __GPIO_H__
-#define __GPIO_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-#include "pinName-board.h"
-#include "pinName-ioe.h"
-
-#define GPIO_FUNC_LOCATION __attribute__ ((section(".ramfunc")))
-
-/*!
- * Board GPIO pin names
- */
-typedef enum
-{
-    MCU_PINS,
-    IOE_PINS,
-
-    // Not connected
-    NC = (int)0xFFFFFFFF
-}PinNames;
-
-/*!
- * Operation Mode for the GPIO
- */
-typedef enum
-{
-    PIN_INPUT = 0,
-    PIN_OUTPUT,
-    PIN_ALTERNATE_FCT,
-    PIN_ANALOGIC
-}PinModes;
-
-/*!
- * Add a pull-up, a pull-down or nothing on the GPIO line
- */
-typedef enum
-{
-    PIN_NO_PULL = 0,
-    PIN_PULL_UP,
-    PIN_PULL_DOWN
-}PinTypes;
-
-/*!
- * Define the GPIO as Push-pull type or Open Drain
- */
-typedef enum
-{
-    PIN_PUSH_PULL = 0,
-    PIN_OPEN_DRAIN
-}PinConfigs;
-
-/*!
- * Define the GPIO IRQ on a rising, falling or both edges
- */
-typedef enum
-{
-    NO_IRQ = 0,
-    IRQ_RISING_EDGE,
-    IRQ_FALLING_EDGE,
-    IRQ_RISING_FALLING_EDGE
-}IrqModes;
-
-/*!
- * Define the IRQ priority on the GPIO
- */
-typedef enum
-{
-    IRQ_VERY_LOW_PRIORITY = 0,
-    IRQ_LOW_PRIORITY,
-    IRQ_MEDIUM_PRIORITY,
-    IRQ_HIGH_PRIORITY,
-    IRQ_VERY_HIGH_PRIORITY
-}IrqPriorities;
-
-/*!
- * GPIO IRQ handler function prototype
- */
-typedef void( GpioIrqHandler )( void* context );
-
-/*!
- * Structure for the GPIO
- */
-typedef struct
-{
-    PinNames  pin;
-    uint16_t pinIndex;
-    void *port;
-    uint16_t portIndex;
-    PinTypes pull;
-    void* Context;
-    GpioIrqHandler* IrqHandler;
-}Gpio_t;
-
-/*!
- * \brief Initializes the given GPIO object
- *
- * \param [IN] obj    Pointer to the GPIO object
- * \param [IN] pin    Pin name ( please look in pinName-board.h file )
- * \param [IN] mode   Pin mode [PIN_INPUT, PIN_OUTPUT,
- *                              PIN_ALTERNATE_FCT, PIN_ANALOGIC]
- * \param [IN] config Pin config [PIN_PUSH_PULL, PIN_OPEN_DRAIN]
- * \param [IN] type   Pin type [PIN_NO_PULL, PIN_PULL_UP, PIN_PULL_DOWN]
- * \param [IN] value  Default output value at initialization
- */
-void GpioInit( Gpio_t *obj, PinNames pin, PinModes mode, PinConfigs config, PinTypes type, uint32_t value );
-
-/*!
- * \brief Sets a user defined object pointer
- *
- * \param [IN] context User defined data object pointer to pass back
- *                     on IRQ handler callback
- */
-void GpioSetContext( Gpio_t *obj, void* context );
-
-/*!
- * \brief GPIO IRQ Initialization
- *
- * \param [IN] obj         Pointer to the GPIO object
- * \param [IN] irqMode     IRQ mode [NO_IRQ, IRQ_RISING_EDGE,
- *                                   IRQ_FALLING_EDGE, IRQ_RISING_FALLING_EDGE]
- * \param [IN] irqPriority IRQ priority [IRQ_VERY_LOW_PRIORITY, IRQ_LOW_PRIORITY
- *                                       IRQ_MEDIUM_PRIORITY, IRQ_HIGH_PRIORITY
- *                                       IRQ_VERY_HIGH_PRIORITY]
- * \param [IN] irqHandler  Callback function pointer
- */
-void GpioSetInterrupt( Gpio_t *obj, IrqModes irqMode, IrqPriorities irqPriority, GpioIrqHandler *irqHandler );
-
-/*!
- * \brief Removes the interrupt from the object
- *
- * \param [IN] obj Pointer to the GPIO object
- */
-void GpioRemoveInterrupt( Gpio_t *obj );
-
-/*!
- * \brief Writes the given value to the GPIO output
- *
- * \param [IN] obj   Pointer to the GPIO object
- * \param [IN] value New GPIO output value
- */
-void GpioWrite( Gpio_t *obj, uint32_t value ) GPIO_FUNC_LOCATION;
-
-/*!
- * \brief Toggle the value to the GPIO output
- *
- * \param [IN] obj   Pointer to the GPIO object
- */
-void GpioToggle( Gpio_t *obj );
-
-/*!
- * \brief Reads the current GPIO input value
- *
- * \param [IN] obj Pointer to the GPIO object
- * \retval value   Current GPIO input value
- */
-uint32_t GpioRead( Gpio_t *obj );
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __GPIO_H__
diff --git a/system/i2c.c b/system/i2c.c
deleted file mode 100644
index 4f040e1..0000000
--- a/system/i2c.c
+++ /dev/null
@@ -1,153 +0,0 @@
-/*!
- * \file      i2c.c
- *
- * \brief     I2C driver implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#include <stdbool.h>
-#include "utilities.h"
-#include "i2c-board.h"
-
-/*!
- * Flag to indicates if the I2C is initialized
- */
-static bool I2cInitialized = false;
-
-void I2cInit( I2c_t *obj, I2cId_t i2cId, PinNames scl, PinNames sda )
-{
-    if( I2cInitialized == false )
-    {
-        I2cInitialized = true;
-
-        I2cMcuInit( obj, i2cId, scl, sda );
-        I2cMcuFormat( obj, MODE_I2C, I2C_DUTY_CYCLE_2, true, I2C_ACK_ADD_7_BIT, 400000 );
-    }
-}
-
-void I2cDeInit( I2c_t *obj )
-{
-    I2cInitialized = false;
-    I2cMcuDeInit( obj );
-}
-
-void I2cResetBus( I2c_t *obj )
-{
-    I2cMcuResetBus( obj );
-}
-
-uint8_t I2cWrite( I2c_t *obj, uint8_t deviceAddr, uint16_t addr, uint8_t data )
-{
-//    if( I2cInitialized == true )
-//    {
-//        if( I2cMcuWrite( obj, deviceAddr, addr, data ) == FAIL )
-//        {
-//            // if first attempt fails due to an IRQ, try a second time
-//            if( I2cMcuWrite( obj, deviceAddr, addr, data ) == FAIL )
-//            {
-//                return FAIL;
-//            }
-//            else
-//            {
-//                return SUCCESS;
-//            }
-//        }
-//        else
-//        {
-//            return SUCCESS;
-//        }
-//    }
-//    else
-//    {
-//        return FAIL;
-//    }
-    if( I2cInitialized == true )
-        {
-            if( I2cMcuWriteBuffer( obj, deviceAddr, addr, &data, 1 ) == FAIL )
-            {
-                // if first attempt fails due to an IRQ, try a second time
-                if( I2cMcuWriteBuffer( obj, deviceAddr, addr, &data, 1 ) == FAIL )
-                {
-                    return FAIL;
-                }
-                else
-                {
-                    return SUCCESS;
-                }
-            }
-            else
-            {
-                return SUCCESS;
-            }
-        }
-        else
-        {
-            return FAIL;
-        }
-}
-
-uint8_t I2cWriteBuffer( I2c_t *obj, uint8_t deviceAddr, uint16_t addr, uint8_t *buffer, uint16_t size )
-{
-    if( I2cInitialized == true )
-    {
-        if( I2cMcuWriteBuffer( obj, deviceAddr, addr, buffer, size ) == FAIL )
-        {
-            // if first attempt fails due to an IRQ, try a second time
-            if( I2cMcuWriteBuffer( obj, deviceAddr, addr, buffer, size ) == FAIL )
-            {
-                return FAIL;
-            }
-            else
-            {
-                return SUCCESS;
-            }
-        }
-        else
-        {
-            return SUCCESS;
-        }
-    }
-    else
-    {
-        return FAIL;
-    }
-}
-
-uint8_t I2cRead( I2c_t *obj, uint8_t deviceAddr, uint16_t addr, uint8_t *data )
-{
-    if( I2cInitialized == true )
-    {
-        return( I2cMcuReadBuffer( obj, deviceAddr, addr, data, 1 ) );
-    }
-    else
-    {
-        return FAIL;
-    }
-}
-
-uint8_t I2cReadBuffer( I2c_t *obj, uint8_t deviceAddr, uint16_t addr, uint8_t *buffer, uint16_t size )
-{
-    if( I2cInitialized == true )
-    {
-        return( I2cMcuReadBuffer( obj, deviceAddr, addr, buffer, size ) );
-    }
-    else
-    {
-        return FAIL;
-    }
-}
diff --git a/system/i2c.h b/system/i2c.h
deleted file mode 100644
index 18a6a94..0000000
--- a/system/i2c.h
+++ /dev/null
@@ -1,121 +0,0 @@
-/*!
- * \file      i2c.h
- *
- * \brief     I2C driver implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __I2C_H__
-#define __I2C_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include "gpio.h"
-
-/*!
- * I2C peripheral ID
- */
-typedef enum
-{
-    I2C_0,
-    I2C_1,
-}I2cId_t;
-
-/*!
- * I2C object type definition
- */
-typedef struct
-{
-    I2cId_t I2cId;
-    Gpio_t Scl;
-    Gpio_t Sda;
-}I2c_t;
-
-/*!
- * \brief Initializes the I2C object and MCU peripheral
- *
- * \param [IN] obj  I2C object
- * \param [IN] scl  I2C Scl pin name to be used
- * \param [IN] sda  I2C Sda pin name to be used
- */
-void I2cInit( I2c_t *obj, I2cId_t i2cId, PinNames scl, PinNames sda );
-
-/*!
- * \brief DeInitializes the I2C object and MCU peripheral
- *
- * \param [IN] obj  I2C object
- */
-void I2cDeInit( I2c_t *obj );
-
-/*!
- * \brief Reset the I2C object and MCU peripheral
- *
- * \param [IN] obj  I2C object
- */
-void I2cResetBus( I2c_t *obj );
-
-/*!
- * \brief Write data to the I2C device
- *
- * \param [IN] obj              I2C object
- * \param [IN] deviceAddr       device address
- * \param [IN] addr             data address
- * \param [IN] data             data to write
- */
-uint8_t I2cWrite( I2c_t *obj, uint8_t deviceAddr, uint16_t addr, uint8_t data );
-
-/*!
- * \brief Write data buffer to the I2C device
- *
- * \param [IN] obj              I2C object
- * \param [IN] deviceAddr       device address
- * \param [IN] addr             data address
- * \param [IN] buffer           data buffer to write
- * \param [IN] size             number of bytes to write
- */
-uint8_t I2cWriteBuffer( I2c_t *obj, uint8_t deviceAddr, uint16_t addr, uint8_t *buffer, uint16_t size );
-
-/*!
- * \brief Read data from the I2C device
- *
- * \param [IN] obj              I2C object
- * \param [IN] deviceAddr       device address
- * \param [IN] addr             data address
- * \param [OUT] data            data to read
- */
-uint8_t I2cRead( I2c_t *obj, uint8_t deviceAddr, uint16_t addr, uint8_t *data );
-
-/*!
- * \brief Read data buffer from the I2C device
- *
- * \param [IN] obj              I2C object
- * \param [IN] deviceAddr       device address
- * \param [IN] addr             data address
- * \param [OUT] buffer          data buffer to read
- * \param [IN] size             number of data bytes to read
- */
-uint8_t I2cReadBuffer( I2c_t *obj, uint8_t deviceAddr, uint16_t addr, uint8_t *buffer, uint16_t size );
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __I2C_H__
diff --git a/system/spi.h b/system/spi.h
deleted file mode 100644
index 4d3b5e4..0000000
--- a/system/spi.h
+++ /dev/null
@@ -1,109 +0,0 @@
-/*!
- * \file      spi-board.h
- *
- * \brief     SPI driver implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __SPI_H__
-#define __SPI_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include "gpio.h"
-
-/*!
- * SPI peripheral ID
- */
-typedef enum
-{
-    SPI_1,
-    SPI_2,
-}SpiId_t;
-
-/*!
- * SPI object type definition
- */
-typedef struct Spi_s
-{
-    SpiId_t SpiId;
-    Gpio_t Mosi;
-    Gpio_t Miso;
-    Gpio_t Sclk;
-    Gpio_t Nss;
-}Spi_t;
-
-/*!
- * \brief Initializes the SPI object and MCU peripheral
- *
- * \remark When NSS pin is software controlled set the pin name to NC otherwise
- *         set the pin name to be used.
- *
- * \param [IN] obj  SPI object
- * \param [IN] mosi SPI MOSI pin name to be used
- * \param [IN] miso SPI MISO pin name to be used
- * \param [IN] sclk SPI SCLK pin name to be used
- * \param [IN] nss  SPI NSS pin name to be used
- */
-void SpiInit( Spi_t *obj, SpiId_t spiId, PinNames mosi, PinNames miso, PinNames sclk, PinNames nss );
-
-/*!
- * \brief De-initializes the SPI object and MCU peripheral
- *
- * \param [IN] obj SPI object
- */
-void SpiDeInit( Spi_t *obj );
-
-/*!
- * \brief Configures the SPI peripheral
- *
- * \remark Slave mode isn't currently handled
- *
- * \param [IN] obj   SPI object
- * \param [IN] bits  Number of bits to be used. [8 or 16]
- * \param [IN] cpol  Clock polarity
- * \param [IN] cpha  Clock phase
- * \param [IN] slave When set the peripheral acts in slave mode
- */
-void SpiFormat( Spi_t *obj, int8_t bits, int8_t cpol, int8_t cpha, int8_t slave );
-
-/*!
- * \brief Sets the SPI speed
- *
- * \param [IN] obj SPI object
- * \param [IN] hz  SPI clock frequency in hz
- */
-void SpiFrequency( Spi_t *obj, uint32_t hz );
-
-/*!
- * \brief Sends outData and receives inData
- *
- * \param [IN] obj     SPI object
- * \param [IN] outData Byte to be sent
- * \retval inData      Received byte.
- */
-uint16_t SpiInOut( Spi_t *obj, uint16_t outData );
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __SPI_H__
diff --git a/system/systime.c b/system/systime.c
deleted file mode 100644
index caf1740..0000000
--- a/system/systime.c
+++ /dev/null
@@ -1,351 +0,0 @@
-/*!
- * \file      systime.c
- *
- * \brief     System time functions implementation.
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2018 Semtech - STMicroelectronics
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    MCD Application Team ( STMicroelectronics International )
- */
-#include <stdio.h>
-#include "rtc-board.h"
-#include "systime.h"
-
-#define END_OF_FEBRUARY_LEAP                         60 //31+29
-#define END_OF_JULY_LEAP                            213 //31+29+...
-
-#define END_OF_FEBRUARY_NORM                         59 //31+28
-#define END_OF_JULY_NORM                            212 //31+28+...
-
-#define UNIX_YEAR                                    68 //1968 is leap year
-
-//UNIX time 0 = start at 01:00:00, 01/01/1970
-#define UNIX_HOUR_OFFSET                            ( ( TM_DAYS_IN_LEAP_YEAR + TM_DAYS_IN_YEAR ) * TM_SECONDS_IN_1DAY )
-
-/*!
- * \brief Correction factors
- */
-#define  DAYS_IN_MONTH_CORRECTION_NORM              ( (uint32_t )0x99AAA0 )
-#define  DAYS_IN_MONTH_CORRECTION_LEAP              ( (uint32_t )0x445550 )
-
-
-/* 365.25 = (366 + 365 + 365 + 365)/4 */
-#define DIV_365_25( X )                               ( ( ( X ) * 91867 + 22750 ) >> 25 )
-
-#define DIV_APPROX_86400( X )                       ( ( ( X ) >> 18 ) + ( ( X ) >> 17 ) )
-
-#define DIV_APPROX_1000( X )                        ( ( ( X ) >> 10 ) +( ( X ) >> 16 ) + ( ( X ) >> 17 ) )
-
-#define DIV_APPROX_60( X )                          ( ( ( X ) * 17476 ) >> 20 )
-
-#define DIV_APPROX_61( X )                          ( ( ( X ) * 68759 ) >> 22 )
-
-#define MODULO_7( X )                               ( ( X ) -( ( ( ( ( X ) + 1 ) * 299593 ) >> 21 ) * 7 ) )
-
-/*!
- * \brief Calculates ceiling( X / N )
- */
-#define DIVC( X, N )                                ( ( ( X ) + ( N ) -1 ) / ( N ) )
-
-#define DIVC_BY_4( X )                              ( ( ( X ) + 3 ) >>2 )
-
-#define DIVC_BY_2( X )                              ( ( ( X ) + 1 ) >> 1 )
-
-static uint32_t CalendarGetMonth( uint32_t days, uint32_t year );
-static void CalendarDiv86400( uint32_t in, uint32_t* out, uint32_t* remainder );
-static uint32_t CalendarDiv61( uint32_t in );
-static void CalendarDiv60( uint32_t in, uint32_t* out, uint32_t* remainder );
-
-const char *WeekDayString[]={ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" };
-
-SysTime_t SysTimeAdd( SysTime_t a, SysTime_t b )
-{
-    SysTime_t c =  { .Seconds = 0, .SubSeconds = 0 };
-
-    c.Seconds = a.Seconds + b.Seconds;
-    c.SubSeconds = a.SubSeconds + b.SubSeconds;
-    if( c.SubSeconds >= 1000 )
-    {
-        c.Seconds++;
-        c.SubSeconds -= 1000;
-    }
-    return c;
-}
-
-SysTime_t SysTimeSub( SysTime_t a, SysTime_t b )
-{
-    SysTime_t c = { .Seconds = 0, .SubSeconds = 0 };
-
-    c.Seconds = a.Seconds - b.Seconds;
-    c.SubSeconds = a.SubSeconds - b.SubSeconds;
-    if( c.SubSeconds < 0 )
-    {
-        c.Seconds--;
-        c.SubSeconds += 1000;
-    }
-    return c;
-}
-
-void SysTimeSet( SysTime_t sysTime )
-{
-    SysTime_t deltaTime;
-  
-    SysTime_t calendarTime = { .Seconds = 0, .SubSeconds = 0 };
-
-    calendarTime.Seconds = RtcGetCalendarTime( ( uint16_t* )&calendarTime.SubSeconds );
-
-    // sysTime is epoch
-    deltaTime = SysTimeSub( sysTime, calendarTime );
-
-    RtcBkupWrite( deltaTime.Seconds, ( uint32_t )deltaTime.SubSeconds );
-}
-
-SysTime_t SysTimeGet( void )
-{
-    SysTime_t calendarTime = { .Seconds = 0, .SubSeconds = 0 };
-    SysTime_t sysTime = { .Seconds = 0, .SubSeconds = 0 };
-    SysTime_t deltaTime;
-
-    calendarTime.Seconds = RtcGetCalendarTime( ( uint16_t* )&calendarTime.SubSeconds );
-
-    RtcBkupRead( &deltaTime.Seconds, ( uint32_t* )&deltaTime.SubSeconds );
-
-    sysTime = SysTimeAdd( deltaTime, calendarTime );
-
-    return sysTime;
-}
-
-SysTime_t SysTimeGetMcuTime( void )
-{
-    SysTime_t calendarTime = { .Seconds = 0, .SubSeconds = 0 };
-
-    calendarTime.Seconds = RtcGetCalendarTime( ( uint16_t* )&calendarTime.SubSeconds );
-
-    return calendarTime;
-}
-
-uint32_t SysTimeToMs( SysTime_t sysTime )
-{
-    SysTime_t deltaTime;
-    RtcBkupRead( &deltaTime.Seconds, ( uint32_t* )&deltaTime.SubSeconds );
-    SysTime_t calendarTime = SysTimeSub( sysTime, deltaTime );
-    return calendarTime.Seconds * 1000 + calendarTime.SubSeconds;
-}
-
-SysTime_t SysTimeFromMs( uint32_t timeMs )
-{
-    uint32_t seconds = timeMs / 1000;
-    SysTime_t sysTime = { .Seconds = seconds, .SubSeconds =  timeMs - seconds * 1000 };
-    SysTime_t deltaTime = { 0 };
-    RtcBkupRead( &deltaTime.Seconds, ( uint32_t* )&deltaTime.SubSeconds );
-
-    return SysTimeAdd( sysTime, deltaTime );
-}
-
-uint32_t SysTimeMkTime( const struct tm* localtime )
-{
-    uint32_t nbdays;
-    uint32_t nbsecs;
-    uint32_t year = localtime->tm_year - UNIX_YEAR;
-    uint32_t correctionMonth[4] =
-    {
-        DAYS_IN_MONTH_CORRECTION_LEAP,
-        DAYS_IN_MONTH_CORRECTION_NORM,
-        DAYS_IN_MONTH_CORRECTION_NORM,
-        DAYS_IN_MONTH_CORRECTION_NORM
-    };
-
-    nbdays = DIVC( ( TM_DAYS_IN_YEAR * 3 + TM_DAYS_IN_LEAP_YEAR ) * year, 4 );
-
-    nbdays += ( DIVC_BY_2( ( localtime->tm_mon ) * ( 30 + 31 ) ) -
-                ( ( ( correctionMonth[year % 4] >> ( ( localtime->tm_mon ) * 2 ) ) & 0x03 ) ) );
-
-    nbdays += ( localtime->tm_mday - 1 );
-
-    // Convert from days to seconds
-    nbsecs = nbdays * TM_SECONDS_IN_1DAY;
-
-    nbsecs += ( ( uint32_t )localtime->tm_sec + 
-                ( ( uint32_t )localtime->tm_min * TM_SECONDS_IN_1MINUTE ) +
-                ( ( uint32_t )localtime->tm_hour * TM_SECONDS_IN_1HOUR ) );
-    return nbsecs - UNIX_HOUR_OFFSET;
-}
-
-
-
-void SysTimeLocalTime( const uint32_t timestamp, struct tm *localtime )
-{
-    uint32_t correctionMonth[4] =
-    {
-        DAYS_IN_MONTH_CORRECTION_LEAP,
-        DAYS_IN_MONTH_CORRECTION_NORM,
-        DAYS_IN_MONTH_CORRECTION_NORM,
-        DAYS_IN_MONTH_CORRECTION_NORM
-    };
-    uint32_t weekDays = 1; // Monday 1st January 1968
-    uint32_t seconds;
-    uint32_t minutes;
-    uint32_t days;
-    uint32_t divOut;
-    uint32_t divReminder;
-
-    CalendarDiv86400( timestamp + UNIX_HOUR_OFFSET, &days, &seconds );
-
-    // Calculates seconds
-    CalendarDiv60( seconds, &minutes, &divReminder );
-    localtime->tm_sec = ( uint8_t )divReminder;
-
-    // Calculates minutes and hours
-    CalendarDiv60( minutes, &divOut, &divReminder);
-    localtime->tm_min = ( uint8_t )divReminder;
-    localtime->tm_hour = ( uint8_t )divOut;
-
-    // Calculates year
-    localtime->tm_year = DIV_365_25( days );
-    days-= DIVC_BY_4( ( TM_DAYS_IN_YEAR * 3 + TM_DAYS_IN_LEAP_YEAR ) * localtime->tm_year );
-
-    localtime->tm_yday = days;
-
-    // Calculates month
-    localtime->tm_mon = CalendarGetMonth( days, localtime->tm_year );
-
-    // calculates weekdays
-    weekDays += DIVC_BY_4( ( localtime->tm_year * 5 ) );
-    weekDays += days;
-    localtime->tm_wday = MODULO_7( weekDays );
-
-    days -= ( DIVC_BY_2( ( localtime->tm_mon ) * ( 30 + 31 ) ) -
-              ( ( ( correctionMonth[localtime->tm_year % 4] >> ( ( localtime->tm_mon ) * 2 ) ) & 0x03 ) ) );
-
-    // Convert 0 to 1 indexed.
-    localtime->tm_mday = days + 1;
-
-    localtime->tm_year += UNIX_YEAR;
-
-    localtime->tm_isdst = -1;
-}
-
-static uint32_t CalendarGetMonth( uint32_t days, uint32_t year )
-{
-    uint32_t month;
-    if( ( year % 4 ) == 0 )
-    {   /*leap year*/
-        if( days < END_OF_FEBRUARY_LEAP )
-        {   // January or February
-            // month =  days * 2 / ( 30 + 31 );
-            month = CalendarDiv61( days * 2 );
-        }
-        else if( days < END_OF_JULY_LEAP )
-        {
-            month = CalendarDiv61( ( days - END_OF_FEBRUARY_LEAP ) * 2 ) + 2;
-        }
-        else
-        {
-            month = CalendarDiv61( ( days - END_OF_JULY_LEAP ) * 2 ) + 7;
-        }
-    }
-    else
-    {
-        if( days < END_OF_FEBRUARY_NORM )
-        {   // January or February
-            month = CalendarDiv61( days * 2 );
-        }
-        else if( days < END_OF_JULY_NORM )
-        {
-            month = CalendarDiv61( ( days - END_OF_FEBRUARY_NORM ) * 2 ) + 2;
-        }
-        else
-        {
-            month = CalendarDiv61( ( days - END_OF_JULY_NORM ) * 2 ) + 7;
-        }
-    }
-    return month;
-}
-
-static void CalendarDiv86400( uint32_t in, uint32_t* out, uint32_t* remainder )
-{
-#if 0
-    *remainder = in % SECONDS_IN_1DAY;
-    *out       = in / SECONDS_IN_1DAY;
-#else
-    uint32_t outTemp = 0;
-    uint32_t divResult = DIV_APPROX_86400( in );
-
-    while( divResult >=1 )
-    {
-        outTemp += divResult;
-        in -= divResult * 86400;
-        divResult= DIV_APPROX_86400( in );
-    }
-    if( in >= 86400 )
-    {
-        outTemp += 1;
-        in -= 86400;
-    }
-
-    *remainder = in;
-    *out = outTemp;
-#endif
-}
-
-static uint32_t CalendarDiv61( uint32_t in )
-{
-#if 0
-    return( in / 61 );
-#else
-    uint32_t outTemp = 0;
-    uint32_t divResult = DIV_APPROX_61( in );
-    while( divResult >=1 )
-    {
-        outTemp += divResult;
-        in -= divResult * 61;
-        divResult = DIV_APPROX_61( in );
-    }
-    if( in >= 61 )
-    {
-        outTemp += 1;
-        in -= 61;
-    }
-    return outTemp;
-#endif
-}
-
-static void CalendarDiv60( uint32_t in, uint32_t* out, uint32_t* remainder )
-{
-#if 0
-    *remainder = in % 60;
-    *out       = in / 60;
-#else
-    uint32_t outTemp = 0;
-    uint32_t divResult = DIV_APPROX_60( in );
-
-    while( divResult >=1 )
-    {
-        outTemp += divResult;
-        in -= divResult * 60;
-        divResult = DIV_APPROX_60( in );
-    }
-    if( in >= 60 )
-    {
-        outTemp += 1;
-        in -= 60;
-    }
-    *remainder = in;
-    *out = outTemp;
-#endif
-}
diff --git a/system/systime.h b/system/systime.h
deleted file mode 100644
index 06fe5d4..0000000
--- a/system/systime.h
+++ /dev/null
@@ -1,169 +0,0 @@
-/*!
- * \file      systime.h
- *
- * \brief     System time functions implementation.
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2018 Semtech - STMicroelectronics
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- *
- * \author    MCD Application Team ( STMicroelectronics International )
- */
-#ifndef __SYS_TIME_H__
-#define __SYS_TIME_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stdint.h>
-#include "time.h"
-
-/*!
- * \brief Days, Hours, Minutes and seconds of systime.h
- */
-#define TM_DAYS_IN_LEAP_YEAR                        ( ( uint32_t )  366U )
-#define TM_DAYS_IN_YEAR                             ( ( uint32_t )  365U )
-#define TM_SECONDS_IN_1DAY                          ( ( uint32_t )86400U )
-#define TM_SECONDS_IN_1HOUR                         ( ( uint32_t ) 3600U )
-#define TM_SECONDS_IN_1MINUTE                       ( ( uint32_t )   60U )
-#define TM_MINUTES_IN_1HOUR                         ( ( uint32_t )   60U )
-#define TM_HOURS_IN_1DAY                            ( ( uint32_t )   24U )
-
-
-/*!
- * \brief Months of systime.h
- */
-#define TM_MONTH_JANUARY                            ( ( uint8_t ) 0U )
-#define TM_MONTH_FEBRUARY                           ( ( uint8_t ) 1U )
-#define TM_MONTH_MARCH                              ( ( uint8_t ) 2U )
-#define TM_MONTH_APRIL                              ( ( uint8_t ) 3U )
-#define TM_MONTH_MAY                                ( ( uint8_t ) 4U )
-#define TM_MONTH_JUNE                               ( ( uint8_t ) 5U )
-#define TM_MONTH_JULY                               ( ( uint8_t ) 6U )
-#define TM_MONTH_AUGUST                             ( ( uint8_t ) 7U )
-#define TM_MONTH_SEPTEMBER                          ( ( uint8_t ) 8U )
-#define TM_MONTH_OCTOBER                            ( ( uint8_t ) 9U )
-#define TM_MONTH_NOVEMBER                           ( ( uint8_t )10U )
-#define TM_MONTH_DECEMBER                           ( ( uint8_t )11U )
-
-/*!
- * \brief Week days of systime.h
- */
-#define TM_WEEKDAY_SUNDAY                           ( ( uint8_t )0U )
-#define TM_WEEKDAY_MONDAY                           ( ( uint8_t )1U )
-#define TM_WEEKDAY_TUESDAY                          ( ( uint8_t )2U )
-#define TM_WEEKDAY_WEDNESDAY                        ( ( uint8_t )3U )
-#define TM_WEEKDAY_THURSDAY                         ( ( uint8_t )4U )
-#define TM_WEEKDAY_FRIDAY                           ( ( uint8_t )5U )
-#define TM_WEEKDAY_SATURDAY                         ( ( uint8_t )6U )
-
-/*!
- * \brief Number of seconds elapsed between Unix and GPS epoch
- */
-#define UNIX_GPS_EPOCH_OFFSET                       315964800
-
-/*!
- * \brief Structure holding the system time in seconds and milliseconds.
- */
-typedef struct SysTime_s
-{
-    uint32_t Seconds;
-    int16_t  SubSeconds;
-}SysTime_t;
-
-/*!
- * \brief Adds 2 SysTime_t values
- *
- * \param a Value
- * \param b Value to added
- *
- * \retval result Addition result (SysTime_t value)
- */
-SysTime_t SysTimeAdd( SysTime_t a, SysTime_t b );
-
-/*!
- * \brief Subtracts 2 SysTime_t values
- *
- * \param a Value
- * \param b Value to be subtracted
- *
- * \retval result Subtraction result (SysTime_t value)
- */
-SysTime_t SysTimeSub( SysTime_t a, SysTime_t b );
-
-/*!
- * \brief Sets new system time
- *
- * \param  sysTime    New seconds/sub-seconds since UNIX epoch origin
- */
-void SysTimeSet( SysTime_t sysTime );
-
-/*!
- * \brief Gets current system time
- *
- * \retval sysTime    Current seconds/sub-seconds since UNIX epoch origin
- */
-SysTime_t SysTimeGet( void );
-
-/*!
- * \brief Gets current MCU system time
- *
- * \retval sysTime    Current seconds/sub-seconds since Mcu started
- */
-SysTime_t SysTimeGetMcuTime( void );
-
-/*!
- * Converts the given SysTime to the equivalent RTC value in milliseconds
- *
- * \param [IN] sysTime System time to be converted
- * 
- * \retval timeMs The RTC converted time value in ms
- */
-uint32_t SysTimeToMs( SysTime_t sysTime );
-
-/*!
- * Converts the given RTC value in milliseconds to the equivalent SysTime
- *
- * \param [IN] timeMs The RTC time value in ms to be converted
- * 
- * \retval sysTime Converted system time
- */
-SysTime_t SysTimeFromMs( uint32_t timeMs );
-
-/*!
- * \brief Convert a calendar time into time since UNIX epoch as a uint32_t.
- *
- * \param [IN] localtime Pointer to the object containing the calendar time
- * \retval     timestamp The calendar time as seconds since UNIX epoch.
- */
-uint32_t SysTimeMkTime( const struct tm* localtime );
-
-/*!
- * \brief Converts a given time in seconds since UNIX epoch into calendar time.
- *
- * \param [IN]  timestamp The time since UNIX epoch to convert into calendar time.
- * \param [OUT] localtime Pointer to the calendar time object which will contain
-                          the result of the conversion.
- */
-void SysTimeLocalTime( const uint32_t timestamp, struct tm *localtime );
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __SYS_TIME_H__
diff --git a/system/timer.c b/system/timer.c
deleted file mode 100644
index 71f8de4..0000000
--- a/system/timer.c
+++ /dev/null
@@ -1,386 +0,0 @@
-/*!
- * \file      timer.c
- *
- * \brief     Timer objects and scheduling management implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#include "utilities.h"
-#include "board.h"
-#include "rtc-board.h"
-#include "timer.h"
-
-/*!
- * Safely execute call back
- */
-#define ExecuteCallBack( _callback_, context ) \
-    do                                         \
-    {                                          \
-        if( _callback_ == NULL )               \
-        {                                      \
-            while( 1 );                        \
-        }                                      \
-        else                                   \
-        {                                      \
-            _callback_( context );             \
-        }                                      \
-    }while( 0 );
-
-/*!
- * Timers list head pointer
- */
-static TimerEvent_t *TimerListHead = NULL;
-
-/*!
- * \brief Adds or replace the head timer of the list.
- *
- * \remark The list is automatically sorted. The list head always contains the
- *         next timer to expire.
- *
- * \param [IN]  obj Timer object to be become the new head
- * \param [IN]  remainingTime Remaining time of the previous head to be replaced
- */
-static void TimerInsertNewHeadTimer( TimerEvent_t *obj );
-
-/*!
- * \brief Adds a timer to the list.
- *
- * \remark The list is automatically sorted. The list head always contains the
- *         next timer to expire.
- *
- * \param [IN]  obj Timer object to be added to the list
- * \param [IN]  remainingTime Remaining time of the running head after which the object may be added
- */
-static void TimerInsertTimer( TimerEvent_t *obj );
-
-/*!
- * \brief Sets a timeout with the duration "timestamp"
- *
- * \param [IN] timestamp Delay duration
- */
-static void TimerSetTimeout( TimerEvent_t *obj ) __attribute__ ((section(".ramfunc")));
-
-/*!
- * \brief Check if the Object to be added is not already in the list
- *
- * \param [IN] timestamp Delay duration
- * \retval true (the object is already in the list) or false
- */
-static bool TimerExists( TimerEvent_t *obj );
-
-void TimerInit( TimerEvent_t *obj, void ( *callback )( void *context ) )
-{
-    obj->Timestamp = 0;
-    obj->ReloadValue = 0;
-    obj->IsStarted = false;
-    obj->IsNext2Expire = false;
-    obj->Callback = callback;
-    obj->Context = NULL;
-    obj->Next = NULL;
-}
-
-void TimerSetContext( TimerEvent_t *obj, void* context )
-{
-    obj->Context = context;
-}
-
-void TimerStart( TimerEvent_t *obj )
-{
-    uint32_t elapsedTime = 0;
-
-    CRITICAL_SECTION_BEGIN( );
-
-    if( ( obj == NULL ) || ( TimerExists( obj ) == true ) )
-    {
-        CRITICAL_SECTION_END( );
-        return;
-    }
-
-    obj->Timestamp = obj->ReloadValue;
-    obj->IsStarted = true;
-    obj->IsNext2Expire = false;
-
-    if( TimerListHead == NULL )
-    {
-        RtcSetTimerContext( );
-        // Inserts a timer at time now + obj->Timestamp
-        TimerInsertNewHeadTimer( obj );
-    }
-    else
-    {
-        elapsedTime = RtcGetTimerElapsedTime( );
-        obj->Timestamp += elapsedTime;
-
-        if( obj->Timestamp < TimerListHead->Timestamp )
-        {
-            TimerInsertNewHeadTimer( obj );
-        }
-        else
-        {
-            TimerInsertTimer( obj );
-        }
-    }
-    CRITICAL_SECTION_END( );
-}
-
-static void TimerInsertTimer( TimerEvent_t *obj )
-{
-    TimerEvent_t* cur = TimerListHead;
-    TimerEvent_t* next = TimerListHead->Next;
-
-    while( cur->Next != NULL )
-    {
-        if( obj->Timestamp > next->Timestamp )
-        {
-            cur = next;
-            next = next->Next;
-        }
-        else
-        {
-            cur->Next = obj;
-            obj->Next = next;
-            return;
-        }
-    }
-    cur->Next = obj;
-    obj->Next = NULL;
-}
-
-static void TimerInsertNewHeadTimer( TimerEvent_t *obj )
-{
-    TimerEvent_t* cur = TimerListHead;
-
-    if( cur != NULL )
-    {
-        cur->IsNext2Expire = false;
-    }
-
-    obj->Next = cur;
-    TimerListHead = obj;
-    TimerSetTimeout( TimerListHead );
-}
-
-bool TimerIsStarted( TimerEvent_t *obj )
-{
-    return obj->IsStarted;
-}
-
-void TimerIrqHandler( void )
-{
-    TimerEvent_t* cur;
-    TimerEvent_t* next;
-
-    uint32_t old =  RtcGetTimerContext( );
-    uint32_t now =  RtcSetTimerContext( );
-    uint32_t deltaContext = now - old; // intentional wrap around
-
-    // Update timeStamp based upon new Time Reference
-    // because delta context should never exceed 2^32
-    if( TimerListHead != NULL )
-    {
-        for( cur = TimerListHead; cur->Next != NULL; cur = cur->Next )
-        {
-            next = cur->Next;
-            if( next->Timestamp > deltaContext )
-            {
-                next->Timestamp -= deltaContext;
-            }
-            else
-            {
-                next->Timestamp = 0;
-            }
-        }
-    }
-
-    // Execute immediately the alarm callback
-    if ( TimerListHead != NULL )
-    {
-        cur = TimerListHead;
-        TimerListHead = TimerListHead->Next;
-        cur->IsStarted = false;
-        ExecuteCallBack( cur->Callback, cur->Context );
-    }
-
-    // Remove all the expired object from the list
-    while( ( TimerListHead != NULL ) && ( TimerListHead->Timestamp < RtcGetTimerElapsedTime( ) ) )
-    {
-        cur = TimerListHead;
-        TimerListHead = TimerListHead->Next;
-        cur->IsStarted = false;
-        ExecuteCallBack( cur->Callback, cur->Context );
-    }
-
-    // Start the next TimerListHead if it exists AND NOT running
-    if( ( TimerListHead != NULL ) && ( TimerListHead->IsNext2Expire == false ) )
-    {
-        TimerSetTimeout( TimerListHead );
-    }
-}
-
-void TimerStop( TimerEvent_t *obj )
-{
-    CRITICAL_SECTION_BEGIN( );
-
-    TimerEvent_t* prev = TimerListHead;
-    TimerEvent_t* cur = TimerListHead;
-
-    // List is empty or the obj to stop does not exist
-    if( ( TimerListHead == NULL ) || ( obj == NULL ) )
-    {
-        CRITICAL_SECTION_END( );
-        return;
-    }
-
-    obj->IsStarted = false;
-
-    if( TimerListHead == obj ) // Stop the Head
-    {
-        if( TimerListHead->IsNext2Expire == true ) // The head is already running
-        {
-            TimerListHead->IsNext2Expire = false;
-            if( TimerListHead->Next != NULL )
-            {
-                TimerListHead = TimerListHead->Next;
-                TimerSetTimeout( TimerListHead );
-            }
-            else
-            {
-                RtcStopAlarm( );
-                TimerListHead = NULL;
-            }
-        }
-        else // Stop the head before it is started
-        {
-            if( TimerListHead->Next != NULL )
-            {
-                TimerListHead = TimerListHead->Next;
-            }
-            else
-            {
-                TimerListHead = NULL;
-            }
-        }
-    }
-    else // Stop an object within the list
-    {
-        while( cur != NULL )
-        {
-            if( cur == obj )
-            {
-                if( cur->Next != NULL )
-                {
-                    cur = cur->Next;
-                    prev->Next = cur;
-                }
-                else
-                {
-                    cur = NULL;
-                    prev->Next = cur;
-                }
-                break;
-            }
-            else
-            {
-                prev = cur;
-                cur = cur->Next;
-            }
-        }
-    }
-    CRITICAL_SECTION_END( );
-}
-
-static bool TimerExists( TimerEvent_t *obj )
-{
-    TimerEvent_t* cur = TimerListHead;
-
-    while( cur != NULL )
-    {
-        if( cur == obj )
-        {
-            return true;
-        }
-        cur = cur->Next;
-    }
-    return false;
-}
-
-void TimerReset( TimerEvent_t *obj )
-{
-    TimerStop( obj );
-    TimerStart( obj );
-}
-
-void TimerSetValue( TimerEvent_t *obj, uint32_t value )
-{
-    uint32_t minValue = 0;
-    uint32_t ticks = RtcMs2Tick( value );
-
-    TimerStop( obj );
-
-    minValue = RtcGetMinimumTimeout( );
-
-    if( ticks < minValue )
-    {
-        ticks = minValue;
-    }
-
-    obj->Timestamp = ticks;
-    obj->ReloadValue = ticks;
-}
-
-TimerTime_t TimerGetCurrentTime( void )
-{
-    uint32_t now = RtcGetTimerValue( );
-    return  RtcTick2Ms( now );
-}
-
-TimerTime_t TimerGetElapsedTime( TimerTime_t past )
-{
-    if ( past == 0 )
-    {
-        return 0;
-    }
-    uint32_t nowInTicks = RtcGetTimerValue( );
-    uint32_t pastInTicks = RtcMs2Tick( past );
-
-    // Intentional wrap around. Works Ok if tick duration below 1ms
-    return RtcTick2Ms( nowInTicks - pastInTicks );
-}
-
-static void TimerSetTimeout( TimerEvent_t *obj )
-{
-    int32_t minTicks= RtcGetMinimumTimeout( );
-    obj->IsNext2Expire = true;
-
-    // In case deadline too soon
-    if( obj->Timestamp  < ( RtcGetTimerElapsedTime( ) + minTicks ) )
-    {
-        obj->Timestamp = RtcGetTimerElapsedTime( ) + minTicks;
-    }
-    RtcSetAlarm( obj->Timestamp );
-}
-
-TimerTime_t TimerTempCompensation( TimerTime_t period, float temperature )
-{
-    return RtcTempCompensation( period, temperature );
-}
-
-void TimerProcess( void )
-{
-    RtcProcess( );
-}
diff --git a/system/timer.h b/system/timer.h
deleted file mode 100644
index def64d2..0000000
--- a/system/timer.h
+++ /dev/null
@@ -1,159 +0,0 @@
-/*!
- * \file      timer.h
- *
- * \brief     Timer objects and scheduling management implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __TIMER_H__
-#define __TIMER_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include <stddef.h>
-#include <stdbool.h>
-#include <stdint.h>
-
-#define TIMER_FUNC_LOCATION __attribute__ ((section(".ramfunc")))
-
-/*!
- * \brief Timer object description
- */
-typedef struct TimerEvent_s
-{
-    uint32_t Timestamp;                  //! Current timer value
-    uint32_t ReloadValue;                //! Timer delay value
-    bool IsStarted;                      //! Is the timer currently running
-    bool IsNext2Expire;                  //! Is the next timer to expire
-    void ( *Callback )( void* context ); //! Timer IRQ callback function
-    void *Context;                       //! User defined data object pointer to pass back
-    struct TimerEvent_s *Next;           //! Pointer to the next Timer object.
-}TimerEvent_t;
-
-/*!
- * \brief Timer time variable definition
- */
-#ifndef TimerTime_t
-typedef uint32_t TimerTime_t;
-#define TIMERTIME_T_MAX                             ( ( uint32_t )~0 )
-#endif
-
-/*!
- * \brief Initializes the timer object
- *
- * \remark TimerSetValue function must be called before starting the timer.
- *         this function initializes timestamp and reload value at 0.
- *
- * \param [IN] obj          Structure containing the timer object parameters
- * \param [IN] callback     Function callback called at the end of the timeout
- */
-void TimerInit( TimerEvent_t *obj, void ( *callback )( void *context ) );
-
-/*!
- * \brief Sets a user defined object pointer
- *
- * \param [IN] context User defined data object pointer to pass back
- *                     on IRQ handler callback
- */
-void TimerSetContext( TimerEvent_t *obj, void* context );
-
-/*!
- * Timer IRQ event handler
- */
-void TimerIrqHandler( void ) TIMER_FUNC_LOCATION;
-
-/*!
- * \brief Starts and adds the timer object to the list of timer events
- *
- * \param [IN] obj Structure containing the timer object parameters
- */
-void TimerStart( TimerEvent_t *obj ) TIMER_FUNC_LOCATION;
-
-/*!
- * \brief Checks if the provided timer is running
- *
- * \param [IN] obj Structure containing the timer object parameters
- *
- * \retval status  returns the timer activity status [true: Started,
- *                                                    false: Stopped]
- */
-bool TimerIsStarted( TimerEvent_t *obj );
-
-/*!
- * \brief Stops and removes the timer object from the list of timer events
- *
- * \param [IN] obj Structure containing the timer object parameters
- */
-void TimerStop( TimerEvent_t *obj ) TIMER_FUNC_LOCATION;
-
-/*!
- * \brief Resets the timer object
- *
- * \param [IN] obj Structure containing the timer object parameters
- */
-void TimerReset( TimerEvent_t *obj );
-
-/*!
- * \brief Set timer new timeout value
- *
- * \param [IN] obj   Structure containing the timer object parameters
- * \param [IN] value New timer timeout value
- */
-void TimerSetValue( TimerEvent_t *obj, uint32_t value ) TIMER_FUNC_LOCATION;
-
-/*!
- * \brief Read the current time
- *
- * \retval time returns current time
- */
-TimerTime_t TimerGetCurrentTime( void );
-
-/*!
- * \brief Return the Time elapsed since a fix moment in Time
- *
- * \remark TimerGetElapsedTime will return 0 for argument 0.
- *
- * \param [IN] past         fix moment in Time
- * \retval time             returns elapsed time
- */
-TimerTime_t TimerGetElapsedTime( TimerTime_t past );
-
-/*!
- * \brief Computes the temperature compensation for a period of time on a
- *        specific temperature.
- *
- * \param [IN] period Time period to compensate
- * \param [IN] temperature Current temperature
- *
- * \retval Compensated time period
- */
-TimerTime_t TimerTempCompensation( TimerTime_t period, float temperature );
-
-/*!
- * \brief Processes pending timer events
- */
-void TimerProcess( void );
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __TIMER_H__
diff --git a/system/uart.c b/system/uart.c
deleted file mode 100644
index 9bfe0ba..0000000
--- a/system/uart.c
+++ /dev/null
@@ -1,64 +0,0 @@
-/*!
- * \file      uart.c
- *
- * \brief     UART driver implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#include "uart-board.h"
-#include "uart.h"
-
-void UartInit( Uart_t *obj, UartId_t uartId, PinNames tx, PinNames rx )
-{
-    if( obj->IsInitialized == false )
-    {
-        obj->IsInitialized = true;
-        UartMcuInit( obj, uartId, tx, rx );
-    }
-}
-
-void UartConfig( Uart_t *obj, UartMode_t mode, uint32_t baudrate, WordLength_t wordLength, StopBits_t stopBits, Parity_t parity, FlowCtrl_t flowCtrl )
-{
-    UartMcuConfig( obj, mode, baudrate, wordLength, stopBits, parity, flowCtrl );
-}
-
-void UartDeInit( Uart_t *obj )
-{
-    obj->IsInitialized = false;
-    UartMcuDeInit( obj );
-}
-
-uint8_t UartPutChar( Uart_t *obj, uint8_t data )
-{
-     return UartMcuPutChar( obj, data );
-}
-
-uint8_t UartGetChar( Uart_t *obj, uint8_t *data )
-{
-    return UartMcuGetChar( obj, data );
-}
-
-uint8_t UartPutBuffer( Uart_t *obj, uint8_t *buffer, uint16_t size )
-{
-    return UartMcuPutBuffer( obj, buffer, size );
-}
-
-uint8_t UartGetBuffer( Uart_t *obj, uint8_t *buffer, uint16_t size, uint16_t *nbReadBytes )
-{
-    return UartMcuGetBuffer( obj, buffer, size, nbReadBytes );
-}
diff --git a/system/uart.h b/system/uart.h
deleted file mode 100644
index 7796a21..0000000
--- a/system/uart.h
+++ /dev/null
@@ -1,195 +0,0 @@
-/*!
- * \file      uart.h
- *
- * \brief     UART driver implementation
- *
- * \copyright Revised BSD License, see section \ref LICENSE.
- *
- * \code
- *                ______                              _
- *               / _____)             _              | |
- *              ( (____  _____ ____ _| |_ _____  ____| |__
- *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
- *               _____) ) ____| | | || |_| ____( (___| | | |
- *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
- *              (C)2013-2017 Semtech
- *
- * \endcode
- *
- * \author    Miguel Luis ( Semtech )
- *
- * \author    Gregory Cristian ( Semtech )
- */
-#ifndef __UART_H__
-#define __UART_H__
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-#include "fifo.h"
-#include "gpio.h"
-
-/*!
- * UART peripheral ID
- */
-typedef enum
-{
-    UART_1,
-    UART_2,
-    UART_USB_CDC = 255,
-}UartId_t;
-
-/*!
- * UART notification identifier
- */
-typedef enum
-{
-    UART_NOTIFY_TX,
-    UART_NOTIFY_RX
-}UartNotifyId_t;
-
-/*!
- * UART object type definition
- */
-typedef struct
-{
-    UartId_t UartId;
-    bool IsInitialized;
-    Gpio_t Tx;
-    Gpio_t Rx;
-    Fifo_t FifoTx;
-    Fifo_t FifoRx;
-    /*!
-     * IRQ user notification callback prototype.
-     */
-    void ( *IrqNotify )( UartNotifyId_t id );
-}Uart_t;
-
-/*!
- * Operation Mode for the UART
- */
-typedef enum
-{
-    TX_ONLY = 0,
-    RX_ONLY,
-    RX_TX
-}UartMode_t;
-
-/*!
- * UART word length
- */
-typedef enum
-{
-    UART_8_BIT = 0,
-    UART_9_BIT
-}WordLength_t;
-
-/*!
- * UART stop bits
- */
-typedef enum
-{
-    UART_1_STOP_BIT = 0,
-    UART_0_5_STOP_BIT,
-    UART_2_STOP_BIT,
-    UART_1_5_STOP_BIT
-}StopBits_t;
-
-/*!
- * UART parity
- */
-typedef enum
-{
-    NO_PARITY = 0,
-    EVEN_PARITY,
-    ODD_PARITY
-}Parity_t;
-
-/*!
- * UART flow control
- */
-typedef enum
-{
-    NO_FLOW_CTRL = 0,
-    RTS_FLOW_CTRL,
-    CTS_FLOW_CTRL,
-    RTS_CTS_FLOW_CTRL
-}FlowCtrl_t;
-
-/*!
- * \brief Initializes the UART object and MCU peripheral
- *
- * \param [IN] obj  UART object
- * \param [IN] tx   UART Tx pin name to be used
- * \param [IN] rx   UART Rx pin name to be used
- */
-void UartInit( Uart_t *obj, UartId_t uartId, PinNames tx, PinNames rx );
-
-/*!
- * \brief Configures the UART object and MCU peripheral
- *
- * \remark UartInit function must be called first.
- *
- * \param [IN] obj          UART object
- * \param [IN] mode         Mode of operation for the UART
- * \param [IN] baudrate     UART baudrate
- * \param [IN] wordLength   packet length
- * \param [IN] stopBits     stop bits setup
- * \param [IN] parity       packet parity
- * \param [IN] flowCtrl     UART flow control
- */
-void UartConfig( Uart_t *obj, UartMode_t mode, uint32_t baudrate, WordLength_t wordLength, StopBits_t stopBits, Parity_t parity, FlowCtrl_t flowCtrl );
-
-/*!
- * \brief DeInitializes the UART object and MCU pins
- *
- * \param [IN] obj  UART object
- */
-void UartDeInit( Uart_t *obj );
-
-/*!
- * \brief Sends a character to the UART
- *
- * \param [IN] obj   UART object
- * \param [IN] data  Character to be sent
- * \retval status    [0: OK, 1: Busy]
- */
-uint8_t UartPutChar( Uart_t *obj, uint8_t data );
-
-/*!
- * \brief Sends a buffer to the UART
- *
- * \param [IN] obj    UART object
- * \param [IN] buffer Buffer to be sent
- * \param [IN] size   Buffer size
- * \retval status     [0: OK, 1: Busy]
- */
-uint8_t UartPutBuffer( Uart_t *obj, uint8_t *buffer, uint16_t size );
-
-/*!
- * \brief Gets a character from the UART
- *
- * \param [IN] obj   UART object
- * \param [IN] data  Received character
- * \retval status    [0: OK, 1: Busy]
- */
-uint8_t UartGetChar( Uart_t *obj, uint8_t *data );
-
-/*!
- * \brief Gets a character from the UART
- *
- * \param [IN] obj          UART object
- * \param [IN] buffer       Received buffer
- * \param [IN] size         Number of bytes to be received
- * \param [OUT] nbReadBytes Number of bytes really read
- * \retval status           [0: OK, 1: Busy]
- */
-uint8_t UartGetBuffer( Uart_t *obj, uint8_t *buffer, uint16_t size, uint16_t *nbReadBytes );
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // __UART_H__
-- 
2.31.1.windows.1

